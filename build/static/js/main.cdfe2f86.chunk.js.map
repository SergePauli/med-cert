{"version":3,"sources":["pages/NoMatchPage.tsx","utils/consts.ts","components/layouts/FooterLayout.tsx","images/favicon.png","components/menus/SideBarMenu.tsx","http/index.ts","models/responses/ITimeEvent.ts","components/layouts/SideBarLayout.tsx","images/ava.png","components/menus/ProfileMenu.tsx","components/menus/NotificationsMenu.tsx","services/UsersService.ts","components/layouts/TopBarLayout.tsx","services/AuditService.ts","store/certificateStore.ts","components/layouts/RightSideBarLayout.tsx","components/layouts/ActionButtonLayout.tsx","components/layouts/MainLayout.tsx","NSI/1.2.643.5.1.13.13.99.2.19.ts","components/c_sections/section_0.tsx","utils/defaults.ts","components/NullFlavorWrapper.tsx","models/INullFlavor.ts","models/FormsData/Identity.ts","models/FormsData/Person.ts","models/IPersonName.ts","components/inputs/PersonName.tsx","components/c_sections/section_1.tsx","components/inputs/inputsIdentity.tsx","components/c_sections/section_2.tsx","components/dialogs/AddressDialog.tsx","services/FiasService.ts","models/FormsData/Address.ts","models/requests/IAddressR.ts","components/inputs/InputAddress.tsx","components/inputs/AreaType.tsx","components/c_sections/section_3.tsx","NSI/1.2.643.5.1.13.13.99.2.20.ts","NSI/1.2.643.5.1.13.13.99.2.15.ts","NSI/1.2.643.5.1.13.13.99.2.16.ts","NSI/1.2.643.5.1.13.13.11.1038.ts","NSI/1.2.643.5.1.13.13.99.2.18.ts","models/FormsData/RelatedSubject.ts","models/FormsData/ChildInfo.ts","components/MotherInfo.tsx","components/c_sections/section_5.tsx","NSI/1.2.643.5.1.13.13.99.2.21.ts","NSI/1.2.643.5.1.13.13.99.2.22.ts","NSI/1.2.643.5.1.13.13.99.2.23.ts","components/c_sections/section_6.tsx","models/FormsData/Procedure.ts","models/FormsData/DeathReason.ts","services/DiagnosisService.ts","components/inputs/Reason.tsx","services/ACME_Service.ts","utils/acme.ts","components/c_sections/section_7.tsx","components/c_sections/section_8.tsx","NSI/1.2.643.5.1.13.13.99.2.24.ts","NSI/1.2.643.5.1.13.13.99.2.25.ts","utils/functions.ts","models/FormsData/DoctorRequest.ts","services/DoctorService.ts","models/FormsData/Authenticator.ts","components/c_sections/section_9.tsx","models/FormsData/Participant.ts","components/c_sections/section_10.tsx","pages/CertificatePage.tsx","models/FormsData/Doctor.ts","pages/DoctorsPage.tsx","NSI/1.2.643.5.1.13.13.11.1040.ts","services/OrganizationService.ts","models/FormsData/Patient.ts","models/FormsData/Certificate.ts","models/render_options/default.ts","models/render_options/address.ts","models/render_options/Authenticator.ts","models/render_options/lettered_reason.ts","services/CertificateService.ts","models/render_options/patient.ts","models/render_options/external_death_reason.ts","models/render_options/other_reason.ts","models/render_options/procedure.ts","models/render_options/child_info.ts","models/render_options/related_subject.ts","models/render_options/person.ts","models/render_options/Doctor.ts","models/render_options/Participant.ts","pages/ListPage.tsx","images/security.png","static/LoginImageDiv.js","pages/LoginPage.tsx","pages/MainPage.tsx","images/ava.jpg","images/hospital.jpg","pages/SettingsPage.tsx","routes.js","pages/AdminPage.tsx","pages/ProfilePage.tsx","pages/RegistrationPage.tsx","pages/PasswordRecoveryPage.tsx","pages/MessagePage.tsx","pages/ErrorPage.tsx","components/AppRouter.tsx","App.tsx","store/addressStore.ts","store/layoutStore.ts","store/suggestionsStore.ts","store/temporaryIDStore.ts","services/AuthService.ts","index.tsx","store/userStore.ts"],"names":["NoMatchPage","className","href","HOME_ROUTE","LOGIN_ROUTE","LIST_ROUTE","CERTIFICATE_ROUTE","DOCTORS_ROUTE","USER_ROUTE","MO_SETTINGS_ROUTE","DIRECTION","ROLES","USER","ADMIN","STATS","RunsackFilterMatchMode","startsWith","contains","notContains","endsWith","equals","notEquals","in","lt","lte","gt","gte","between","dateIs","dateIsNot","dateBefore","dateAfter","custom","DESTROY_OPTION","_destroy","TIME_FORMAT","year","month","day","hour","minute","DATE_FORMAT","FooterLayout","props","orgName","userInfo","organization","name","profile","roles","split","SideBarMenu","userStore","useContext","Context","useState","activeItem","setActiveItem","onItemClick","event","item","disabled","preventDefault","url","history","push","command","originalEvent","classNames","id","style","menu","items","label","role","length","map","index","separator","renderSeparator","iconClassName","icon","linkClassName","undefined","submenuIcon","content","type","onClick","e","target","includes","submenu","UniqueComponentId","renderMenuItem","renderItem","renderMenu","model","API_URL","FIAS_URL","ACME_URL","$api","axios","create","withCredentials","baseURL","$fias","$acme","headers","Accept","interceptors","request","use","config","Authorization","localStorage","getItem","response","error","a","originalRequest","status","_isRetry","get","setItem","data","tokens","access","Error","errors","message","reduce","result","element","JSON","stringify","Severity","SideBarLayout","observer","certificateStore","cert_id","cert","toString","cert_route_id","issueDate","logout","activeUrl","findActive","isActive","forEach","to","src","avatar","alt","ProfileMenu","useHistory","NotificationsMenu","summary","detail","UsersService","post","render_options","only","include","detail_templ","TopBarLayout","layoutStore","isTOM","useMediaQuery","query","profileMenuClassName","profileMenuActive","notificationsMenuClassName","notificationsMenuActive","userActivity","setUserActivity","useEffect","getUserActivity","then","catch","reason","console","log","notif_items","created","logged","updated","replaced","issued","userName","person_name","family","given_1","given_2","charAt","tabletOrMobile","setTabletOrMobile","sideBarToggle","title","setNotificationsMenuActive","count","setProfileMenuActive","ava","setRightSideBarActive","ACTIONS","Map","color","OperationType","TIME_EVENT_OPTIONS","user","AuditService","rightSideBarActive","timeEvents","setTimeEvents","q","setQ","sorts","user_organization_id_eq","getAudits","limit","ACTION_ATTRIBUTES","action","timeStr","Date","created_at","toLocaleString","backgroundColor","email","ActionButtonLayout","position","radius","direction","layoutStaticInactive","wrapperClass","setUserInfo","userId","isLoading","addLocale","noFilter","clear","apply","matchAll","matchAny","addRule","removeRule","accept","reject","closeText","prevText","nextText","currentText","monthNames","monthNamesShort","dayNames","dayNamesShort","dayNamesMin","weekHeader","firstDay","isRTL","showMonthAfterYear","yearSuffix","week","timeOnlyTitle","timeText","hourText","minuteText","secondText","allDayText","actionItems","CERT_TYPES","code","s_name","header","htmlFor","value","series","placeholder","number","dateFormat","inputId","autoFocus","options","certType","filter","optionLabel","find","el","onChange","padding","fontWeight","numberPrev","seriesPrev","effTimePrev","borderLeft","borderLeftStyle","background","latestOne","HOME_REGION_CODE","DEFAULT_CERT_SUGGESTIONS","section","suggestion","done","NULL_FLAVORS","NULL_FLAVOR_IDX","NI","INV","DER","OTH","NINF","PINF","UNC","MSK","NA","UNK","ASKU","NAV","NASK","QS","TRC","ID_CARD_TYPES","s_mask","n_mask","c_mask","DEFAULT_ERROR_TOAST","severity","life","baseZIndex","NullFlavorWrapper","setValue","checked","setChecked","fieldStyle","paraNum","marginLeft","nullFlavors","field_name","parent_attr","nullFlavor","checkbox","lincked","setCheck","_nullFlavors","marginTop","checkboxLabel","dropdown","findIndex","idx","canNullFlavor","field","width","getCleanNullFlavor","old","_new","parent_guid","checkFieldNullFlavor","key","splice","Identity","_id","_identityCardType","_series","_number","_issueOrgName","_issueOrgCode","_issueOrgDate","_parentGUID","this","identity_card_type_id","issueOrgName","issueOrgCode","parentGUID","null_flavors","makeAutoObservable","deep","_identity","toDateString","null_flavors_attributes","ct","issueOrgDate","Person","_personName","_SNILS","_address","_contacts","_oldOne","SNILS","address","contacts","_person","state","streetAddressLine","address_attributes","contacts_attributes","person_name_attributes","fio","snils","getOneLinePersonName","trim","PersonName","personName","setFio","isErrorMessage","submitted","values","_result","suggestionsStore","certificate","patient","person","birth_year","yearBTChecked","setYearBTChecked","deathYear","yearDTChecked","setYearDTChecked","identified","optionCode","fromRelatives","isDeathTime","deathDatetime","identity","policyOMS","setBirthDay","birth_date","gender","locale","view","mask","showIcon","setDeathDay","timeOnly","hourFormat","inputsIdentity","dulValue","seriesProps","seriesField","numberProps","numberField","depCodeProps","docChecked","setDocChecked","identityCardType","setDulValue","nullFlavorOption","depCodeField","nf","cols","rows","paddingLeft","addressStore","regions","regionsOptions","searchStr","setSearchStr","region","setRegion","district","setDistrict","city","setCity","town","setTown","street","setStreet","housenum","house","setHouse","fiasOptions","addresses","setAddresses","toast","useRef","setAddress","parent","postalCode","aoGUID","AOGUID","houseGUID","HouseGUID","level","slice","buildnum","strucnum","fetchRegionOptions","onHide","dialogVisible","autocompleteOnChange","setter","getSuggestions","getChildItems","current","show","footer","manualMode","isNotStrictly","oldOne","onAddrComplete","onCancel","visible","breakpoints","modal","suggestions","completeMethod","replace","searchBar","filterBy","forceSelection","maxWidth","flat","ref","FiasService","regionID","parentOpt","Address","_streetAddressLine","_state","_district","_city","_town","_street","_aoGUID","_houseGUID","_housenum","_buildnum","_strucnum","_flat","_postalCode","_parent","house_number","building_number","struct_number","flat_number","fetchAddressHierarchy","fiasItem","shortname","parseFiasItem","DEFAULT_ADDRESS","invalid","strictly","bt_id","_addr","onClear","AreaType","addressLife","setAddressLife","deathAddr","addressDeath","setAddressDeath","checkedLifeArea","checkedDeathArea","onAddressCopy","deathAreaType","lifeAreaType","addressProps","DEAD_PLACE_TYPES","MARITAL_STATUSES","EDUCATION_LEVELS","SOCIAL_STATUSES","TERMS_PREGNANCY","RelatedSubject","_guid","_familyConnection","_fio","_birthTime","guid","uuidv4","family_connection","birthTime","addr","_rs","addr_attributes","toLocaleDateString","ChildInfo","_termPregnancy","_weight","_whichAccount","_relatedSubject","term_pregnancy","weight","which_account","related_subject","_chInfo","related_subject_attributes","getAttributes","MotherInfo","childInfo","relatedSubject","max","min","whichAccount","temp","age","hoursAge","isChildInfo","yearsAge","isMonthChild","daysAge","termPregnancy","ddStyle","minWidth","dDivStyle","paddingTop","deathPlace","chInf","maritalStatus","educationLevel","socialStatus","DEATH_KINDS","MEDICS","BASIS_DERMINING","isExtReason","deathKind","extReasonTime","panelStyle","extReasonDescription","establishedMedic","basisDetermining","Procedure","_medicalServ","_textValue","_effectiveTime","medical_serv","text_value","effective_time","_pr","medical_serv_id","getHours","getMinutes","DeathReason","_diagnosis","_years","_months","_weeks","_days","_hours","_minutes","_procedures","diagnosis","ext_diagnosis","days","hours","minutes","months","weeks","years","procedures","proc","textValue","medicalServ","effectiveTime","isExt","_dr","diagnosis_id","Number","parseInt","ext_diagnosis_id","procedures_attributes","_temp","pr","concat","DiagnosisService","offset","CSS_classes","diagnoses","setDiagnoses","diagnosisText","setDiagnosisText","diagnosisCode","setDiagnosisCode","cleanEffectiveTime","deathReason","deathTime","setDeathReason","upButton","onUp","downButton","onDown","diagnosisOptionTemplate","option","marginRight","ICD10","effTime","onTimeChecked","saveReasonEffTime","onDiagnosisChecked","fieldName","delay","s_name_cont","ICD10_start","fetchExtDiagnoses","fetchDiagnoses","itemTemplate","ACMEService","input","data_AIN","ACME_AIN","withOtherReasons","deathDate","X1X4","X7X12","padStart","X14X17","X19X21","X22X23","X24X25","X26X29","birthDay","deathDay","XYMD","X39X41","_diff","getFullYear","getMonth","getDate","X42","X45","reasonD","lastIndexOf","substring","reasonA","padEnd","reasonB","reasonC","reasons","deathReasons","reasons_in","X171","X174","pregnancyConnection","X176X177","X178X179","X180X183","X188","X219","X220X231","reason_a","reason_b","reason_c","ext_reason","_part_2","codogram","parse_ACME_TIN","xACME","_sb","x45","x54","x51_53","spX45","spX54","spX51_53","mainCSSClass","isACME","reasonBckecked","reasonCckecked","reasonDckecked","reasonIDExchange","first","second","reasonACME","height","changeReasonACME","onSucccess","onError","strACMEAIN1","isReasonD","strACMEAIN2","runACME","TINs","data_TIN","_res","_alter","doACME","temporaryIDStore","checkReason","lastDeathReasonID","newReason","setNewReason","medicalServs","setMedicalServs","medservText","setMedservText","medservCode","setMedservCode","procedure","setProcedure","dateETChecked","setDateETChecked","diagnosChecked","setDiagnosChecked","selectedProcedures","setSelectedProcedures","selectedReasons","setSelectedReasons","setMedServValue","lastProcedureID","s_code","medServOptionTemplate","_reasons","val","name_cont","s_code_start","fetchMedicalServs","inputStyle","showTime","margin","selection","responsiveLayout","dataKey","emptyMessage","onSelectionChange","selectionMode","headerStyle","body","rowData","_resultStr","procNames","TRAFFIC_ACCIDENT","PREGNANCY_CONNECTION","removeEmpty","obj","candidat","Array","prototype","isPrototypeOf","newObj","Object","keys","DOCTOR_RENDER_OPTIONS","DoctorService","doctor","Doctor","put","doctor_id","delete","Authenticator","_time","_doctorID","time","_authenticator","doctors","setDoctors","getDoctors","organization_id_eq","err","isTrafficAccident","trafficAccident","isPregnancyConnection","nullFlavorDropdnStyle","customDropdnStyle","customParagraphFieldStyle","fontSize","author","doctorID","showClear","legalAuthenticator","authenticator","Participant","_receiptDate","_description","_original","receipt_date","description","original","person_attributes","identity_attributes","participant","receiptDate","buttonDisabled","match","params","certID","setCertID","setMessage","_idx","cArray","certs","select","findById","location","search","clean","save","sm_code","createNew","sugCount","redSuggestionsCount","layoutParams","secton_router","shape","rowClassName","_position","_organization","_doctor","organization_id","position_id","emptyDoctor","setDoctor","doctorDialog","setDoctorDialog","deleteDoctorDialog","setDeleteDoctorDialog","deleteDoctorsDialog","setDeleteDoctorsDialog","selectedDoctors","setSelectedDoctors","setSubmitted","telcom_value","main","setEmail","phone","setPhone","setPosition","positions","setPositions","dt","openNew","hideDialog","hideDeleteDoctorDialog","hideDeleteDoctorsDialog","findIndexById","confirmDeleteSelected","onContactChange","contact","_contact","telcom_use","doctorDialogFooter","Fragment","_doctors","oldValue","newValue","_request","audits","createAudit","audit","_audits","before","after","_person_attributes","oldPerson","newPerson","_person_name_attributes","oldFIO","newFIO","oldAddress","newAddress","oldContacts","u","newContacts","oldNullFlavors","newNullFlavors","null_flavor_attributes","genUpdateDoctorRequest","updateDoctor","addDoctor","deleteDoctorDialogFooter","removeDoctor","deleteDoctorsDialogFooter","fioBodyTemplate","row","right","exportable","editDoctor","required","getPositions","test","GENDERS","ORGANIZATION_RENDER_OPTIONS","except","OrganizationService","Organization","Patient","_gender","_birth_date","_birth_year","_provider_organization","_addrType","addr_type","_patient","person_id","provider_organization","isYear","Certificate","_issueDate","_certType","_seriesPrev","_numberPrev","_effTimePrev","_lifeAreaType","_deathAreaType","_deathDatetime","_deathYear","_deathMonth","_deathPlace","_maritalStatus","_educationLevel","_socialStatus","_deathKind","_extReasonTime","_extReasonDescription","_reasonA","_reasonB","_reasonC","_reasonD","_deathReasons","_reasonACME","_deathAddr","_policyOMS","_childInfo","_establishedMedic","_basisDetermining","_trafficAccident","_pregnancyConnection","_author","_audithor","_legalAuthenticator","_custodian_id","_participant","_latestOne","disposers","latest_one","custodian","issue_date","cert_type","death_datetime","death_year","number_prev","series_prev","policy_OMS","life_area_type","death_area_type","death_addr","death_place","death_kind","education_level","marital_status","social_status","eff_time_prev","child_info","audithor","legal_authenticator","ext_reason_time","ext_reason_description","established_medic","basis_determining","traffic_accident","pregnancy_connection","a_reason","b_reason","c_reason","reason_ACME","d_reason","death_reasons","autorun","utc1","UTC","b","ms","milisecAge","Math","floor","dd","db","setMinutes","setHours","setDate","setMonth","setFullYear","_cert","audithor_attributes","author_attributes","legal_authenticator_attributes","child_info_attributes","death_addr_attributes","death_reasons_attributes","a_reason_attributes","b_reason_attributes","c_reason_attributes","d_reason_attributes","patient_attributes","custodian_id","participant_attributes","eff_time","lat","dat","disposer","DEFAULT_RENDER_OPTIONS","NULLFLAVORABLE_RENDER_OPTIONS","DEFAULT_AUTHENTICATOR_RENDER_OPTIONS","LETTERED_DEATH_REASON_RENDER_OPTIONS","CERTIFICATE_FULL_RENDER_OPTIONS","CertificateService","last","_options","certificate_id","Operation","WAITING","NONE","configure","enforceActions","CertificateStore","_submitted","_userInfo","_certs","_allCerts","_selected","_sorts","_sortField","_sortOrder","_sort","_filters","_filterStr","_first","_last","_rows","_count","_needScroll","_isLoading","_operation","is","LOADING","filterstr","FILTERING","_q","custodian_id_eq","getCount","from","sort","str","SORTING","getList","onSuccess","SAVING","patient_id","updateCertificate","nCert","finally","addCertificate","removeCertificate","num","dataLength","doAfter","getCertificates","_virtLoaded","rowNumber","id_eq","filters","setFilters","propsFilters","setPropsFilters","organizations","setOrganizations","isSuperUser","getOrganizations","useMemo","_params","param","pair","operation","PrimeReact","needScroll","resetScroll","selected","setSelected","matchMode","FilterMatchMode","IN","operator","constraints","STARTS_WITH","CONTAINS","GREATER_THAN_OR_EQUAL_TO","LESS_THAN_OR_EQUAL_TO","DATE_AFTER","DATE_BEFORE","filterClearTemplate","filterClearCallback","filterApplyTemplate","filterApplyCallback","cusName","filterField","showFilterMatchModes","filterClear","filterApply","filterElement","filterCallback","flexGrow","flexBasis","allCerts","scrollDirection","scrollable","scrollHeight","size","loading","lazy","filterDisplay","onFilter","_constraint","_codes","basis_determining_in","death_place_in","custodian_id_in","virtualScrollerOptions","onLazyLoad","SCROLLING","itemSize","showLoader","filterLocale","onRowDoubleClick","onSort","order","sortOrder","sortField","frozen","filterPlaceholder","dataType","showFilterOperator","sortable","acme","cr","ar","br","dr","birth","death","m","place","basis","iDate","LoginImageDiv","onSubmit","form","login","password","onPassordRecovery","renew_link","isFormFieldValid","meta","touched","getFormErrorMessage","logo","initialValues","validate","render","handleSubmit","autoComplete","toggleMask","marginBottom","version","record","setAudits","setOrganization","ID","setID","getOrganization","changesAudit","oid","textAlign","name_full","license","license_data","okpo","isSaveAvaible","updateOrganization","link","AUTH_ROUTES","path","Component","MainPage","ListPage","CertificatePage","DoctorsPage","setUser","getUser","user_name","user_team","SettingsPage","NON_AUTH_ROUTES","LoginPage","names","phone_number","password_confirmation","registration","PWD_RECOVERY_ROUTE","pwd_renew","activation_link","PUBLIC_ROUTES","MESSAGE_ROUTE","ERROR_ROUTE","AppRouter","token","isAuth","setHistory","checkAuth","chech_routes","component","exact","App","AddressStore","_isLoding","_history","_regionsOptions","_fiasOptions","_dialogVisible","_manualMode","_onAddrComplete","_regions","parse","defaultRegion","getRegions","substr","createNullFlavors","isLoding","LayoutStore","_isTabletOrMobile","_isLayoutStaticInactive","_isRightSidebarActive","_isProfileMenuActive","_isNotificationsMenuActive","_message","isLayoutStaticInactive","rightSidebarActive","SuggestionsStore","cStore","_cStore","_suggestions","_identified","_fromRelatives","isBirthDay","isDeathDay","isSNILS","oms","isOMS","isCODE","isIORGDate","isIORGName","isIDSeries","isIDNumber","isLifeArea","isDeathArea","isDeathAreaType","isLifeAreaType","isTERMS_PREGNANCY","isCHILD_WEIGHT","isNUMBER_PREGNANCY","isMOTHER_FIO","isMOTHER_BIRTHDAY","isMOTHER_ADDRESS","isPersonNameSug","TemporaryIDStore","_lastCertificateID","_lastDeathReasonID","_lastProcedureID","AuthService","_isAuth","_user","_token","access_token","setAuth","removeItem","setToken","setLoading","getUserInfo","createContext","ReactDOM","Provider","document","getElementById"],"mappings":"kdAIaA,EAAkB,WAE7B,OACE,mCACE,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,YAAd,8IACA,qBAAKA,UAAU,cAAf,4dACA,mBAAGA,UAAU,gBAAgBC,KAAK,MAAlC,qEAAsD,mBAAGD,UAAU,gBAAgBC,KAAK,MAAlC,wH,sCCTnDC,G,8BAAa,KACbC,EAAc,SAMdC,EAAa,QACbC,EAAoB,QAEpBC,EAAgB,WAChBC,EAAa,QACbC,EAAoB,gBACpBC,EAAY,CAAC,OAAQ,OACrBC,EAAqB,CAChCC,KAAM,2EACNC,MAAO,iFACPC,MAAO,0DAEIC,EAAyB,CACpCC,WAAY,SACZC,SAAU,QACVC,YAAa,YACbC,SAAU,OACVC,OAAQ,MACRC,UAAW,UACXC,GAAI,MACJC,GAAI,MACJC,IAAK,OACLC,GAAI,MACJC,IAAK,QACLC,QAAS,GACTC,OAAQ,MACRC,UAAW,UACXC,WAAY,MACZC,UAAW,MACXC,OAAQ,IAIGC,EAAiB,CAAEC,SAAU,KAG7BC,EAAc,CACzBC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,WAIGC,EAAc,CAAEL,KAAM,UAAWC,MAAO,QAASC,IAAK,WCtCpDI,EAbM,SAACC,GACpB,IAAMC,EAA2B,OAAjBD,EAAME,UAAmBF,EAAME,SAASC,aAAeH,EAAME,SAASC,aAAaC,KAAO,GACpGC,EAA2B,OAAjBL,EAAME,UAAmBF,EAAME,SAASI,MAAQtC,EAAMgC,EAAME,SAASI,MAAMC,MAAM,KAAK,IAAK,GAC3G,OACE,sBAAKjD,UAAU,gBAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,uBAAMA,UAAU,WAAhB,UAA4B2C,EAA5B,OACA,sBAAM3C,UAAU,cAAhB,SAA+B+C,OAEjC,sBAAM/C,UAAU,YAAhB,kGCbS,MAA0B,oC,OCQ5BkD,EAA6B,SAACR,GACzC,IAAQS,EAAcC,qBAAWC,IAAzBF,UACR,EAAoCG,mBAAmB,IAAvD,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAc,SAACC,EAAyBC,GACpCA,EAAKC,SACLF,EAAMG,kBAGLF,EAAKG,IAECH,EAAKG,IAAI/C,WAAWb,KAC5BiD,EAAUY,UAAUC,KAAKL,EAAKG,KAC9BJ,EAAMG,kBAHNH,EAAMG,iBAKLF,EAAKM,SAASN,EAAKM,QAAQ,CACzBC,cAAeR,EACfC,SAEFA,IAAOJ,GACLA,EAAWvD,YAAWuD,EAAWvD,UAAU,IAC/C2D,EAAK3D,UAAU,kBACfwD,EAAcG,KAEdA,EAAK3D,UAAU,GACfwD,EAAc,OAIhBxD,EAAYmE,YAAW,wBAAyBzB,EAAM1C,WAsD5D,OACE,qBAAKoE,GAAI1B,EAAM0B,IAAM,eAAgBpE,UAAWA,EAAWqE,MAAO3B,EAAM2B,MAAxE,SAtDW,SAAPC,EAAQC,EAAmBC,GA+C/B,OACE,oBAAgBxE,UAAU,cAAcyE,KAAK,OAA7C,SA/CiB,WACjB,GAAIF,EAAMG,OAAO,EAAG,CAsClB,OAAOH,EAAMI,KAAI,SAAChB,EAAMiB,GACtB,OAtCiB,SAACjB,EAAeiB,GAkCjC,OAAIjB,EAAKkB,UAjCe,SAACD,GAAD,OAAgB,oBAA+B5E,UAAU,iBAAiByE,KAAK,aAAtD,aAAeG,GAiCrCE,CAAgBF,GAhCrB,SAACjB,EAAeiB,GAAkB,IAAD,EAEjDG,EAAgBZ,YAAW,gCAAiCR,EAAKqB,MACjEC,EAAgBd,YAAW,WAAY,CAAE,cAAuBe,IAAbvB,EAAKG,KAC9D,CAAE,aAAcH,EAAKC,WACfuB,EAAcxB,EAAKY,OAAS,sBAAMvE,UAJX,kDAKvBgF,EAAOrB,EAAKqB,MAAQ,sBAAMhF,UAAW+E,IACrCP,EAAQb,EAAKa,OAAS,sBAAMxE,UAAU,uBAAhB,SAAwC2D,EAAKa,QACnEY,EAAUzB,EAAK3D,WAAa2D,EAAKY,MAAoB,CACvD,yBAA0Cc,KAAK,SAASC,QAAS,SAACC,GAAD,OAAsB9B,EAAY8B,EAAG5B,IAAO3D,UAAU,kBAAvH,UACGgF,EACAR,EACAW,IAHH,aAAmBxB,EAAKa,MAAxB,YAAiCI,KAK9B,CAAC,oBAAG3E,KAAM0D,EAAKG,IAAK0B,OAAQ7B,EAAK6B,OAE9BxF,UAAWiF,EACXK,QAAS,SAACC,GAAD,OAAsB9B,EAAY8B,EAAG5B,IAC9C,gBAAeA,EAAKC,SAJtB,UAKGoB,EAAMR,IALT,YACYb,EAAKC,SAAWY,EAAQI,MAK1C,UAAIjB,EAAK3D,iBAAT,aAAI,EAAgByF,SAAS,0BAC1BL,EAAQpB,KAAK,qBAAuChE,UAAW2D,EAAK3D,UAAvD,SAAkE,qBAAKA,UAAU,4BAAf,SAA4C2D,EAAKa,SAAnH,aAAgBb,EAAKa,MAArB,YAA8BI,KAC9C,IAAMc,EAAW/B,EAAKY,OAASZ,EAAK3D,WAAcsE,EAAKX,EAAKY,MAAqBZ,EAAKa,OAASmB,eAC/F,OACE,qBACE3F,UAAW2D,EAAK3D,UAAWqE,MAAOV,EAAKU,MACvCI,KAAK,WAFP,UAGGW,EACAM,IAJH,aAAed,EAAf,YAAwBjB,EAAK3D,YASrB4F,CAAejC,EAAMiB,GAG1BiB,CAAWlC,EAAMiB,MAG5B,OAAO,KAKJkB,IADMtB,GAORF,CAAK5B,EAAMqD,OAAS,GAAI,a,yCCvFlBC,EAAU,iDAEVC,EAAW,oCAEXC,EAAW,gCAElBC,EAAOC,IAAMC,OAAO,CACxBC,iBAAiB,EACjBC,QAASP,IAGEQ,EAAQJ,IAAMC,OAAO,CAChCE,QAASN,IAGEQ,EAAQL,IAAMC,OAAO,CAChCK,QAAS,CACPC,OAAQ,mBACR,eAAgB,kCAChB,mBAAoB,kBAEtBJ,QAASL,IAGXC,EAAKS,aAAaC,QAAQC,KAAI,SAACC,GAE7B,OADAA,EAAOL,QAAQM,cAAf,iBAAyCC,aAAaC,QAAQ,UACvDH,KAGTZ,EAAKS,aAAaO,SAASL,KACzB,SAACC,GAAD,OAAYA,IADd,uCAEE,WAAOK,GAAP,mBAAAC,EAAA,yDACQC,EAAkBF,EAAML,QAC1BK,EAAMD,UAAsC,MAA1BC,EAAMD,SAASI,SAAkBH,EAAML,QAAWK,EAAML,OAAOS,SAFvF,wBAGIF,EAAgBE,UAAW,EAH/B,kBAK6BpB,IAAMqB,IAAN,UAA2BzB,EAA3B,gBAAkD,CAAEM,iBAAiB,IALlG,cAKYa,EALZ,OAMMF,aAAaS,QAAQ,QAASP,EAASQ,KAAKC,OAAOC,QANzD,kBAOa1B,EAAKU,QAAQS,IAP1B,wCASY,IAAIQ,MAAM,iIATtB,oCAWaV,EAAMD,WAAY,CAAC,IAAK,KAAK1B,SAAS2B,EAAMD,SAASI,QAXlE,qBAYQH,EAAMD,SAASQ,OAAQP,EAAMD,SAASQ,KAAKI,OAZnD,uBAaUC,EAAUZ,EAAMD,SAASQ,KAAKI,OAAOE,QAAO,SAACC,EAAgBC,GAE/D,OADAD,EAAM,UAAMA,EAAN,aAAiBC,KADX,oBAGEf,EAAMD,SAASI,SACzB,IAAIO,MAAME,GAjBtB,cAkBiB,IAAIF,MAAJ,oBAAuBM,KAAKC,UAAUjB,KAlBvD,cAoBQA,EApBR,0DAFF,uDA0BAZ,EAAMI,aAAaO,SAASL,KAC1B,SAACC,GAAD,OAAYA,IADd,uCAEE,WAAOK,GAAP,eAAAC,EAAA,2DACMD,EAAMD,UAAYC,EAAMD,SAASI,QAAU,CAAC,IAAK,KAAK9B,SAAS2B,EAAMD,SAASI,SADpF,oBAEQH,EAAMD,SAASQ,OAAQP,EAAMD,SAASQ,KAAKI,OAFnD,sBAGUC,EAAUZ,EAAMD,SAASQ,KAAKI,OAAOE,QAAO,SAACC,EAAgBC,GAE/D,OADAD,EAAM,UAAMA,EAAN,aAAiBC,KADX,oBAGEf,EAAMD,SAASI,SACzB,IAAIO,MAAME,GAPtB,aAQiB,IAAIF,MAAJ,oBAAuBV,EAAMD,SAASI,SARvD,8BASaH,EAAMY,QAAQvC,SAAS,kBAAkB,IAAIqC,MAAM,uQAThE,cAUQV,EAVR,4CAFF,uDAeejB,IC9DHmC,ED8DGnC,IEnBAoC,EA9COC,aAAS,SAAC9F,GAA+B,IAAD,EAC3D,EAAsCU,qBAAWC,IAA1CF,EAAP,EAAOA,UAAWsF,EAAlB,EAAkBA,iBACZC,GAAW,UAAAD,EAAiBE,KAAKvE,UAAtB,eAA0BwE,aAAc,MACnDC,EAAa,UAAMxI,EAAN,YAA2BqI,GACxCnE,EAAmB,CACtB,CAAEC,MAAO,iFAAiBxE,UAAW,uBACnCuE,MAAM,CAAC,CAACC,MAAM,uCAAUQ,KAAK,UAAWT,MAAM,CAC5C,CAACC,MAAM,iHACPV,IAAI,GAAD,OAAI+E,EAAJ,SACH,CAACrE,MAAM,qDAAmBV,IAAI,GAAD,OAAI+E,EAAJ,SAAyB,CAACrE,MAAM,qEAAoBV,IAAI,GAAD,OAAI+E,EAAJ,SAAyB,CAACrE,MAAM,qDAAmBV,IAAI,GAAD,OAAI+E,EAAJ,SAAyB,CAACrE,MAAM,eAAWV,IAAI,GAAD,OAAI+E,EAAJ,SAAyB,CAACrE,MAAM,eAAWV,IAAI,GAAD,OAAI+E,EAAJ,SAAyB,CAACrE,MAAM,2DAAoBV,IAAI,GAAD,OAAI+E,EAAJ,SAAyB,CAACrE,MAAM,sDAAoBV,IAAI,GAAD,OAAI+E,EAAJ,SAAyB,CAACrE,MAAM,eAAWV,IAAI,GAAD,OAAI+E,EAAJ,SAAyB,CAACrE,MAAM,+DAAcV,IAAI,GAAD,OAAI+E,EAAJ,YACrb,CAAErE,MAAO,uCAAUZ,UAAW6E,EAAiBE,KAAKG,UAAY9D,KAAK,WAAYT,MAAO,CAAC,CAACC,MAAM,6CAAWQ,KAAK,UAAWQ,OAAO,SAAU1B,IAAI,GAAD,OAAIkC,EAAJ,sBAAyB0C,IAAW,CAAElE,MAAM,yDAAaQ,KAAK,UAAWQ,OAAO,SAAU1B,IAAI,GAAD,OAAIkC,EAAJ,sBAAyB0C,MACrQ,CAAElE,MAAO,uCAAWQ,KAAK,UAAWT,MAAO,CAAC,CAACC,MAAM,iFAAiBQ,KAAK,aAAclB,IAAI1D,GAAY,CAACoE,MAAM,uCAAUQ,KAAK,gBAAiBlB,IAAI,UACpJ,CAACe,WAAW,GACZ,CAAEL,MAAO,iCAASxE,UAAW,uBAC3BuE,MAAO,CAAC,CAACC,MAAM,6CAAWQ,KAAK,UAAWlB,IAAI5D,GAAY,CAACsE,MAAM,iFAAiBQ,KAAK,UAAWlB,IAAI1D,GAAY,CAACoE,MAAM,iCAASQ,KAAK,cAAef,QAAQ,WAAKd,EAAU4F,cAG7KjF,EAAMpB,EAAMsG,UAmBlB,OAlBmB,SAAbC,EAAc1E,GAClB,IAAI2E,GAAW,EAcf,OAbA3E,EAAM4E,SAAQ,SAACxF,GAKb,GAJIA,EAAKG,MAAQA,IACfH,EAAK3D,UAAU,kBACfkJ,GAAW,GAETA,EAAU,OAAO,EACjBvF,EAAKY,OACH0E,EAAWtF,EAAKY,SAClBZ,EAAK3D,UAAY2D,EAAK3D,WAAa,kBACnCkJ,GAAW,MAIVA,EAETD,CAAW1E,GAET,sBAAKvE,UAAU,iBAAf,UACI,eAAC,IAAD,CAAMA,UAAU,OAAOoJ,GAAG,KAA1B,UACE,qBAAKhF,GAAG,WAAWpE,UAAU,aAAaqJ,IAAKC,EAAQC,IAAI,wCAC3D,sBAAMvJ,UAAU,WAAhB,+CAEF,cAAC,EAAD,CAAa+F,MAAOxB,U,QCpDb,MAA0B,gCCO5BiF,EAA8B,SAAC9G,GAC1C,IAAMqB,EAAU0F,cA4ChB,OACE,oBAAIzJ,UA5BY,0BA4BhB,SA3BiB,SAACuE,GAClB,IAAMsB,EAAa,SAAClC,EAAeiB,GAgB/B,OAAIjB,EAAKkB,UAfe,SAACD,GAAD,OAAgB,oBAA+B5E,UAAU,iBAAiByE,KAAK,aAAtD,aAAeG,GAerCE,CAAgBF,GAdrB,SAACjB,EAAeiB,GACpC,IAAMG,EAAgBZ,YAAW,KAAMR,EAAKqB,MACtCA,EAAOrB,EAAKqB,MAAQ,mBAAGhF,UAAW+E,IAClCP,EAAQb,EAAKa,OAAS,+BAAOb,EAAKa,QAClCY,EAAU,yBACZC,KAAK,SACLC,QAAS,SAACC,GAAD,OA1BD,SAAC7B,EAAyBC,GACxCA,EAAKC,SACPF,EAAMG,kBAGHF,EAAKG,IAECH,EAAKG,IAAI/C,WAAWb,KAC7B6D,EAAQC,KAAKL,EAAKG,KAClBJ,EAAMG,kBAHNH,EAAMG,iBAKJF,EAAKM,SAASN,EAAKM,QAAQ,CAC7BC,cAAeR,EACfC,UAauCF,CAAY8B,EAAG5B,IAC9C3D,UAAU,SAHE,UAITgF,EACAR,IALS,aAAmBb,EAAKa,MAAxB,YAAiCI,IAOjD,OAAO,6BAA0BQ,GAA1B,cAAgBR,IAIbgB,CAAejC,EAAMiB,IAErC,OAAIL,EAAMG,OAAS,EACVH,EAAMI,KAAI,SAAChB,EAAMiB,GACpB,OAAOiB,EAAWlC,EAAMiB,MAEhB,KAITkB,CAAWpD,EAAMqD,OAAS,OC/CtB2D,EAAgD,SAAChH,GAC5D,IAAMqB,EAAU0F,cAkDhB,OACE,oBAAIzJ,UAlCY,gCAkChB,SAjCiB,SAACuE,GAClB,IAAMsB,EAAa,SAAClC,EAAkBiB,GAsBlC,OAAIjB,EAAKkB,UArBe,SAACD,GAAD,OAAgB,oBAA+B5E,UAAU,iBAAiByE,KAAK,aAAtD,aAAeG,GAqBrCE,CAAgBF,GApBrB,SAACjB,EAAkBiB,GACvC,IAAM5E,EAAamE,YAAW,oBAAqBR,EAAK3D,UAAW2D,EAAKC,UAAY,cAC9EmB,EAAgBZ,YAAW,KAAMR,EAAKqB,KAAMrB,EAAK3D,WACjDgF,EAAOrB,EAAKqB,MAAQ,mBAAGhF,UAAW+E,IAClC4E,EAAUhG,EAAKgG,SAAW,qBAAK3J,UAAU,uBAAf,SAAuC2D,EAAKgG,UACtEnF,EAASb,EAAKa,OAASb,EAAKa,MAAMvB,MAAM,WAAY,CAAC,GAAG,IACxDmC,EAAU,yBACZC,KAAK,SAASrF,UAAU,SACxBsF,QAAS,SAACC,GAAD,OA5BD,SAAC7B,EAAyBC,GACxCA,EAAKC,SACPF,EAAMG,kBAGHF,EAAKG,IAECH,EAAKG,IAAI/C,WAAWb,KAC7B6D,EAAQC,KAAKL,EAAKG,KAClBJ,EAAMG,kBAHNH,EAAMG,iBAKJF,EAAKM,SAASN,EAAKM,QAAQ,CAC7BC,cAAeR,EACfC,UAeuCF,CAAY8B,EAAG5B,IAFlC,UAGTqB,EACH,sBAAKhF,UAAWA,EAAhB,UACG2J,EACD,sBAAK3J,UAAU,sBAAf,UACGwE,EAAM,GADT,IACa,4BAAIb,EAAKiG,SADtB,IACmCpF,EAAM,WAP/B,aAAmBb,EAAKgG,QAAxB,YAAmC/E,IAWnD,OAAO,6BAA0BQ,GAA1B,cAAgBR,IAIbgB,CAAejC,EAAMiB,IAErC,OAAIL,EAAMG,OAAS,EACVH,EAAMI,KAAI,SAAChB,EAAMiB,GACpB,OAAOiB,EAAWlC,EAAMiB,MAEhB,KAITkB,CAAWpD,EAAMqD,OAAS,O,gBCrDd8D,G,sIACnB,uGACS1D,EAAK2D,KAAL,UAAa9D,EAAb,eAAmC,CACxC+D,eAAgB,CAAEC,KAAM,CAAC,KAAM,QAAS,QAAS,kBAAmB,iBAFxE,2C,kHAKA,WAAqB5F,GAArB,0FACS+B,EAAK2D,KAAL,UAAa9D,EAAb,4BAAwC5B,GAAM,CACnD2F,eAAgB,CAAEC,KAAM,CAAC,KAAM,SAAUC,QAAS,CAAC,cAAe,eAAgB,aAClFxE,SAAU,CAAC,cAAe,eAAgB,YAC1C5C,aAAc,CAAEmH,KAAM,CAAC,KAAM,OAAQ,eAJzC,2C,2HAOA,uGACS7D,EAAKsB,IAAL,UAAYzB,EAAZ,UADT,2C,6DCLIkE,GAAc,SACPC,GAAe3B,aAAS,SAAC9F,GAA6B,IAAD,YAChE,EAAiCU,qBAAWC,IAArC+G,EAAP,EAAOA,YAAajH,EAApB,EAAoBA,UACdkH,EAAQC,wBAAc,CAAEC,MAAO,uBAC/BC,EAAuBrG,YAAW,eAAe,CAAC,6BAA6BiG,EAAYK,sBAC3FC,EAA6BvG,YAAW,qBAAsB,CAAC,kBAAkBiG,EAAYO,4BAMnG,EAAwCrH,qBAAxC,mBAAOsH,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,gBACW5F,IAAf0F,GACFf,GAAakB,kBAAkBC,MAAK,SAACrD,GACnCkD,EAAgB,eAAIlD,EAAKA,UAG1BsD,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAOlD,SACnB6C,EAAgB,WAGpB,CAACD,IACH,IAAMrG,EAAmB,CACrB,CAACC,MAAM,2EAAgBQ,KAAK,UAAWlB,IAAI,GAAD,OAAIvD,EAAJ,sBAAkB4C,EAAUP,gBAA5B,aAAkB,EAAoBwB,KAChF,CAACI,MAAM,uFAAkBQ,KAAK,cAAelB,IAAI,GAAD,OAAItD,EAAJ,sBAAyB2C,EAAUP,gBAAnC,aAAyB,EAAoBC,aAAauB,KAC1G,CAACI,MAAM,iCAASQ,KAAK,WAAYlB,IAAI,GAAD,OAAIxD,IACxC,CAACkE,MAAM,iCAASQ,KAAK,eAAgBf,QAAQ,WAAKd,EAAU4F,YAE1DsC,EAA4B,CAC9B,CAAC7G,MAAM,8CAAD,OAAY0F,GAAZ,6EAAyCP,QAAQ,iCAAS3J,UAAU,YAAagF,KAAK,UAAW4E,QAAmB,OAAZgB,QAAY,IAAZA,OAAA,EAAAA,EAAcU,UAAW,EAAGxH,IAAI,GAAD,OAAI1D,EAAJ,iCAAgCwK,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAcW,OAA9C,uBAA2E3H,UAAWgH,GAAuC,IAAvBA,EAAaU,SAChQ,CAAC9G,MAAM,oDAAD,OAAa0F,GAAb,6EAA0CP,QAAQ,+DAAc3J,UAAU,SAAUgF,KAAK,YAAa4E,QAAmB,OAAZgB,QAAY,IAAZA,OAAA,EAAAA,EAAcY,UAAW,EAAG1H,IAAI,GAAD,OAAI1D,EAAJ,iCAAgCwK,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAcW,QAAU3H,UAAWgH,GAAuC,IAAvBA,EAAaY,SAClP,CAAChH,MAAM,oDAAD,OAAa0F,GAAb,6EAA0CP,QAAQ,uCAAU3J,UAAU,SAAUgF,KAAK,UAAW4E,QAAmB,OAAZgB,QAAY,IAAZA,OAAA,EAAAA,EAAca,WAAY,EAAG3H,IAAI,GAAD,OAAI1D,EAAJ,iCAAgCwK,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAcW,OAA9C,yBAA6E3H,UAAWgH,GAAwC,IAAxBA,EAAaa,UAClQ,CAACjH,MAAM,uHAAD,OAAyB0F,GAAzB,6EAAsDP,QAAQ,6CAAW3E,KAAK,WAAY4E,QAAmB,OAAZgB,QAAY,IAAZA,OAAA,EAAAA,EAAcc,SAAU,EAAG5H,IAAI,GAAD,OAAI1D,EAAJ,iCAAgCwK,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAcW,QAAU3H,UAAWgH,GAAsC,IAAtBA,EAAac,QACrO,CAAClH,MAAM,6EAAD,OAAkB0F,GAAlB,6EAA+ClK,UAAU,WAAY2J,QAAQ,yDAAa3E,KAAK,aAAc4E,OAAO,EAAG9F,IAAI,KAAMF,UAAU,GACjJ,CAACY,MAAM,0DAAD,OAAc0F,GAAd,6EAA2CP,QAAQ,+DAAe3J,UAAU,YAAagF,KAAK,kBAAmB4E,OAAO,EAAG9F,IAAI,KAAMF,UAAU,GACrJ,CAACY,MAAM,sGAAD,OAAuB0F,IAAgBP,QAAQ,+DAAc3J,UAAU,YAAagF,KAAK,cAAe4E,OAAO,EAAG9F,IAAI,KAAMF,UAAU,IAIzI+H,EAA4B,OAAjBjJ,EAAME,UAAmBF,EAAME,SAASgJ,YAAxC,oBACdlJ,EAAME,SAASgJ,mBADD,aACd,EAA4BC,OADd,sBACwBnJ,EAAME,SAASgJ,mBADvC,aACwB,EAA4BE,QAAQ,GAD5D,aACkE,UAAApJ,EAAME,SAASgJ,mBAAf,mBAA4BG,eAA5B,eAAqCC,OAAO,KAAK,IAAO,GAC5I,OACE,sBAAKhM,UAAU,gBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,wBAAQqF,KAAK,SAASrF,UAAU,qBAAqBsF,QAAS,WAxC9D+E,GAASD,EAAY6B,iBAAkB7B,EAAY8B,mBAAkB,GAChE7B,IAAUD,EAAY6B,iBAAkB7B,EAAY8B,mBAAkB,GAC1E9B,EAAY+B,iBAsCb,SACE,mBAAGnM,UAAU,qBAAb,iBAEF,sBAAMA,UAAU,qBAChB,qBAAKA,UAAU,6BAAf,SACE,+BAAO0C,EAAM0J,aAGjB,qBAAKpM,UAAU,eAAf,SACE,qBAAIA,UAAU,cAAd,UACE,qBAAIA,UAAW0K,EAAf,UACE,yBAAQrF,KAAK,SAASrF,UAAU,SAChCsF,QAAS,kBAAI8E,EAAYiC,4BAA2B,IADpD,UAEE,mBAAGrM,UAAU,eACb,sBAAMA,UAAU,eAAhB,UAA4C,OAAZ4K,QAAY,IAAZA,OAAA,EAAAA,EAAc0B,QAAS,OAEzD,cAAC,EAAD,CAAmBvG,MAAOsF,OAE5B,qBAAIrL,UAAWwK,EAAf,UACE,yBAAQnF,KAAK,SAASrF,UAAU,SAASsF,QAAS,kBAAI8E,EAAYmC,sBAAqB,IAAvF,UACE,qBAAKlD,IAAKmD,EAAKjD,IAAI,GAAGvJ,UAAU,kBAChC,sBAAMA,UAAU,eAAhB,SAAgC2L,OAElC,cAAC,EAAD,CAAa5F,MAAOxB,OAEtB,oBAAIvE,UAAU,qBAAd,SACE,wBAAQqF,KAAK,SAASrF,UAAU,SAASsF,QAAS,kBAAI8E,EAAYqC,uBAAsB,IAAxF,SACE,mBAAGzM,UAAU,qCNvFd0M,GAAU,IAAIC,IAA8B,CACvD,CAAC,QAAS,CAAEP,MAAO,0DAAcpH,KAAM,aAAc4H,MAAO,sBAC5D,CAAC,UAAW,CAAER,MAAO,oDAAapH,KAAM,eAAgB4H,MAAO,qBAC/D,CAAC,UAAW,CAAER,MAAO,8CAAYpH,KAAM,cAAe4H,MAAO,sBAC7D,CAAC,WAAY,CAAER,MAAO,4EAAiBpH,KAAM,cAAe4H,MAAO,sBACnE,CAAC,YAAa,CAAER,MAAO,sEAAgBpH,KAAM,gBAAiB4H,MAAO,sBACrE,CAAC,WAAY,CAAER,MAAO,wCAAWpH,KAAM,iBAAkB4H,MAAO,sBAChE,CAAC,WAAY,CAAER,MAAO,8CAAYpH,KAAM,eAAgB4H,MAAO,sBAC/D,CAAC,YAAa,CAAER,MAAO,0DAAcpH,KAAM,kBAAmB4H,MAAO,sBACrE,CAAC,aAAc,CAAER,MAAO,oDAAapH,KAAM,mBAAoB4H,MAAO,yB,SAE5DtE,O,qBAAAA,I,eAAAA,I,qBAAAA,I,kBAAAA,M,KORL,ICOKuE,GDPCC,GAAqB,CAChC/C,eAAgB,CACdC,KAAM,CAAC,KAAM,UAAW,QAAS,SAAU,SAAU,cACrDC,QAAS,CAAC,OAAQ,iBAEpBxE,SAAU,CAAC,OAAQ,gBACnBsH,KAAM,CAAE/C,KAAM,CAAC,KAAM,SAAUC,QAAS,CAAC,gBACzCpH,aAAc,CAAEmH,KAAM,CAAC,KAAM,UAEVgD,G,qIAEnB,WAAuBzC,GAAvB,0FACSpE,EAAK2D,KAAL,UAAa9D,EAAb,2CAAyCuE,GAAUuC,MAD5D,2C,8DEyCatE,gBA9CyC,SAAC9F,GAAmC,IAAD,EACzF,EAAiCU,qBAAWC,IAArC+G,EAAP,EAAOA,YAAajH,EAApB,EAAoBA,UACdnD,EAAYmE,YAAW,uBAAwB,CAAC,8BAA+BiG,EAAY6C,uBACjG,EAAoC3J,mBAA8B,MAAlE,mBAAO4J,EAAP,KAAmBC,EAAnB,KACA,EAAmB7J,mBAAqB,MAAxC,mBAAO8J,EAAP,KAAWC,EAAX,KAiBA,OAhBAvC,qBAAU,WAC+B,IAAD,EAA5B,OAANsC,GAAcjK,EAAUP,WACtBO,EAAUP,SAASI,MAAMyC,SAAS,SACpC4H,EAAK,CAAEC,MAAO,CAAE,qBAEhBD,EAAK,CAACE,wBAAuB,UAAEpK,EAAUP,gBAAZ,aAAE,EAAoBC,aAAauB,GAAIkJ,MAAO,CAAE,wBAEhF,CAACF,EAAGjK,EAAUP,SAAd,UAAwBO,EAAUP,gBAAlC,aAAwB,EAAoBC,eAE/CiI,qBAAU,WACS,OAAboC,GAAyB,OAAJE,GAAUJ,GAAaQ,UAAU,CAACJ,EAAEA,EAAGK,MAAO,MACtEzC,MAAK,SAAA7D,GAAQ,OAAEgG,EAAchG,EAASQ,SACtCsD,OAAM,kBAAIkC,EAAc,SACzB,CAACD,EAAYE,IAIf,sBAAKpN,UAAWA,EAAhB,UACE,8FACA,qBAAKA,UAAU,kBAAf,SACiB,OAAbkN,GAAyC,IAApBA,EAAWxI,OAAa,qGAAuBwI,EAAWvI,KAAI,SAAAhB,GACnF,IAAM+J,EAAoBhB,GAAQjF,IAAI9D,EAAKgK,QAC3C,QAA0BzI,IAAtBwI,EAAiC,MAAM5F,MAAM,2DACjD,IAAM8F,EAAU,IAAIC,KAAKlK,EAAKmK,YAAYC,eAC5C,KAAM7L,GACJ,OACF,sBAAKlC,UAAU,iBAAf,UACE,sBAAMA,UAAU,sBAAsBqE,MAAO,CAAE2J,gBAAiBN,EAAkBd,OAAlF,SACQ,mBAAG5M,UAAW0N,EAAkB1I,SAExC,sBAAKhF,UAAU,uBAAf,UAAuC4N,EAAvC,IAAiDF,EAAkBtB,SACnE,sBAAKpM,UAAU,wBAAf,UACG2D,EAAKgG,QAAU,qCAAE,qDAAF,IAAe,6BAAKhG,EAAKgG,aAAmB,GAC3DhG,EAAKiG,OAAS,8BAAG,qDAAajG,EAAKiG,UAAc,GAClD,qDAHF,IAGe,6BAAKjG,EAAKoJ,KAAKkB,aARKtK,EAAKS,e,kCC3BnC8J,GAAkD,SAACxL,GAC9D,OAAIA,EAAM6B,MAEV,sBAAKvE,UAAU,gBAAf,UACE,cAAC,KAAD,CAASwF,OAAO,yFAAyF2I,SAAS,SAClH,cAAC,KAAD,CAAWpI,MAAOrD,EAAM6B,MAAO6J,OAAQ,GAAKC,UAAU,OAAOhJ,KAAK,mBAEzD,8B,iBCqFEmD,gBAvFuB,SAAC9F,GACrC,MAAiCU,qBAAWC,IAArC+G,EAAP,EAAOA,YAAajH,EAApB,EAAoBA,UACd8J,EAAqB7C,EAAY6C,qBACjCqB,EAAuBlE,EAAYkE,uBACnC7D,EAAoBL,EAAYK,oBAChCE,EAA0BP,EAAYO,0BAMtC4D,EAAepK,YAAW,8DAA8D,CAAC,yBAA0BmK,GAAuB,CAAC,uBAAwBlE,EAAY6B,mBACrL,EAAgC3I,mBAA2B,MAA3D,mBAAOV,EAAP,KAAiB4L,EAAjB,KACMC,EAAStL,EAAU4J,OAAO3I,GAChC0G,qBAAU,gBACO5F,IAAVuJ,GAAoC,OAAb7L,GAC3B4L,EAAYrL,EAAUP,YACrB,CAAC6L,EAAQ7L,EAAUO,EAAUP,WAEjC,IAAMwC,EAAWgF,EAAYsE,UAAY,cAAC,KAAD,IAAqBhM,EAAM0C,QAoDpE,OAnDAuJ,aAAU,KAAM,CACd5N,WAAY,sEACZC,SAAU,mDACVC,YAAa,gEACbC,SAAU,wFACVC,OAAQ,iCACRC,UAAW,8CACXwN,SAAU,iCACVtN,GAAI,0DACJC,IAAK,yFACLC,GAAI,uCACJC,IAAK,+FACLE,OAAQ,iCACRC,UAAW,8CACXC,WAAY,oDACZC,UAAW,oDACXC,OAAQ,2BACR8M,MAAO,mDACPC,MAAO,yDACPC,SAAU,sDACVC,SAAU,kEACVC,QAAS,+CACTC,WAAY,gDACZC,OAAQ,eACRC,OAAQ,qBACRC,UAAW,6CACXC,SAAU,iCACVC,SAAU,uCACVC,YAAa,6CACbC,WAAY,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BACvD,2BAAQ,uCAAU,mDAAY,6CAAW,uCAAU,8CACvDC,gBAAiB,CAAC,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBACjD,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBACvCC,SAAU,CAAC,qEAAe,qEAAe,6CAAW,iCAAS,6CAAW,6CAAW,8CACnFC,cAAe,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBACpDC,YAAa,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAClDC,WAAY,qBACZC,SAAU,EACVC,OAAO,EACPC,oBAAoB,EACpBC,WAAY,GACZ9N,MAAO,qBACP+N,KAAM,uCACN9N,IAAK,2BACL+N,cAAe,4EACfC,SAAU,iCACVC,SAAU,2BACVC,WAAY,uCACZC,WAAY,6CACZC,WAAY,kEAGd,sBAAKzQ,UAAWuO,EAAc,aAAW,QAAzC,UACE,sBAAKvO,UAAU,yBAAyBsF,QAAS,WAlE7C2H,EAAoB7C,EAAYqC,uBAAsB,GACjDhC,EAAmBL,EAAYmC,sBAAqB,GACpD5B,GAAyBP,EAAYiC,4BAA2B,IAgEzE,UACE,cAAClC,GAAD,CAAeiC,MAAS1J,EAAM0J,MAAQxJ,SAAUA,IAChD,sBAAK5C,UAAU,iBAAf,UAAiCoF,EAC/B,cAAC,GAAD,CAAoBb,MAAO7B,EAAMgO,iBAEnC,cAAC,EAAD,CAAc9N,SAAUA,OAE1B,cAAC,EAAD,CAAgBoG,UAAWtG,EAAMoB,MACjC,cAAC,GAAD,IACA,qBAAK9D,UAAU,kBACf,qBAAKA,UAAU,uBAAuBsF,QAAS,WAAK8E,EAAY8B,mBAAkB,Y,sDCrGzEyE,GAAa,CACxB,CAAEC,KAAM,EAAG9N,KAAM,iFAAiB+N,OAAQ,sBAC1C,CAAED,KAAM,EAAG9N,KAAM,6FAAmB+N,OAAQ,sBAC5C,CAAED,KAAM,EAAG9N,KAAM,wIAA2B+N,OAAQ,gBACpD,CAAED,KAAM,EAAG9N,KAAM,4HAAyB+N,OAAQ,YCkDnCrI,gBA7CK,WAAO,IAAD,EACjBC,EAAqBrF,qBAAWC,IAAhCoF,iBACFE,EAAQF,EAAiBE,KAIhC,OAAQ,mCACJ,eAAC,IAAD,CAAM3I,UAAU,0BAA0B8Q,OAJ9B,WACZ,OAAO,mJAGP,UACE,sBAAK9Q,UAAU,4BAAf,UACE,sBAAKA,UAAU,yBAAf,UACE,uBAAO+Q,QAAQ,SAAf,4CACA,cAAC,KAAD,CAAW3M,GAAG,SAAS4M,MAAOrI,EAAKsI,OAAQ5L,KAAK,OAC9C6L,YAAY,oJAA4BtN,UAAQ,OAEpD,sBAAK5D,UAAU,yBAAf,UACE,uBAAO+Q,QAAQ,SAAf,4CACA,cAAC,KAAD,CAAW3M,GAAG,SAAS4M,MAAOrI,EAAKwI,OAAQvN,UAAQ,EAACyB,KAAK,OAAO6L,YAAY,yJAE9E,sBAAKlR,UAAU,0BAAf,UACE,uBAAO+Q,QAAQ,OAAf,sCACA,cAAC,KAAD,CAAU3M,GAAG,OAAQgN,WAAW,WAAWJ,MAAOrI,EAAKG,UAAWlF,UAAQ,OAE5E,sBAAK5D,UAAU,0BAAf,UACE,uBAAO+Q,QAAQ,YAAf,+GACA,cAAC,KAAD,CAAUM,QAAQ,YAAaH,YAAY,6CAAUI,WAAS,EAC5DC,QAAS5I,EAAK6I,SAAY,CAAC,EAAG,GAAG/L,SAASkD,EAAK6I,UAAYb,GAAWc,QAAO,SAAC9N,GAAD,MAAQ,CAAC,EAAE,EAAE,GAAG8B,SAAS9B,EAAKiN,SAASD,GAAcA,GAAWc,QAAO,SAAC9N,GAAD,MAAQ,CAAC,EAAE,GAAG8B,SAAS9B,EAAKiN,SAASc,YAAY,OACrMV,MAAOL,GAAWgB,MAAK,SAAAC,GAAE,OAAEA,EAAGhB,OAAOjI,EAAK6I,YAAWK,SAAU,SAACtM,GAAD,OAAMkD,EAAiBE,KAAK6I,SAAWjM,EAAEyL,MAAMJ,MAAMhN,SAAU+E,EAAKvE,IAAM,UAI/I,cAAC,KAAD,IACA,sBAAKpE,UAAU,gBAAf,UACE,sBAAKA,UAAU,iFAAf,UACE,qBAAKA,UAAU,gCAAgCqE,MAAO,CAACyN,QAAQ,UAA/D,oGACC,qBAAK9R,UAAU,iCAAiCqE,MAAO,CAAC0N,WAAW,IAAID,QAAQ,UAA/E,SAA6FnJ,EAAKqJ,WAAP,UAAuBrJ,EAAKsJ,WAA5B,YAA0CtJ,EAAKqJ,WAA/C,mCAAgErJ,EAAKuJ,mBAArE,aAAgE,EAAkBnE,eAAe,KAAMvL,IAAiB,0BAEtN,sBAAKxC,UAAU,iFACbqE,MAAO,CAAC8N,WAAW,cAAeC,gBAAgB,SADpD,UAEE,qBAAKpS,UAAU,gCAAgCqE,MAAO,CAACyN,QAAQ,UAA/D,mDACA,qBAAK9R,UAAU,iCAAgCqE,MAAO,CAAC0N,WAAW,IAAIM,WAAY1J,EAAK2J,UAAY,uBAAwB,UAAW1F,MAAOjE,EAAK2J,UAAY,iBAAmB,UAAWR,QAAQ,UAApM,SAAgNnJ,EAAK2J,UAAY,mDAAa,yEAhCrL7J,EAAiBE,KAAKvE,S,kBClB9EmO,I,MAAmB,MACnBC,GAA2B,CACtC,CAAEC,QAAS,IAAK7B,KAAM,IAAK8B,WAAY,4MAAwCC,MAAM,GACrF,CACEF,QAAS,IACT7B,KAAM,WACN8B,WAAY,mUACZC,MAAM,GAER,CAAEF,QAAS,IAAK7B,KAAM,WAAO8B,WAAY,uUAA+DC,MAAM,GAC9G,CACEF,QAAS,IACT7B,KAAM,WACN8B,WAAY,0ZACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,WACN8B,WAAY,8YACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,aACN8B,WAAY,ybACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,aACN8B,WAAY,+bACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,aACN8B,WAAY,sfACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,aACN8B,WAAY,wdACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,aACN8B,WAAY,kgBACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,WACN8B,WAAY,6YACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,WACN8B,WAAY,8YACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,WACN8B,WAAY,iYACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,WACN8B,WAAY,oZACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,YACN8B,WAAY,4XACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,YACN8B,WAAY,4XACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,YACN8B,WAAY,uTACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,YACN8B,WAAY,sZACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,cACN8B,WAAY,wVACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,cACN8B,WACE,+gBACFC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,cACN8B,WAAY,iXACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,cACN8B,WAAY,waACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,cACN8B,WAAY,gcACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,YACN8B,WAAY,sTACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,YACN8B,WAAY,2QACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,YACN8B,WAAY,+PACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,YACN8B,WAAY,iTACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,YACN8B,WACE,2pBACFC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,YACN8B,WAAY,igBACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,YACN8B,WAAY,wZACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,eACN8B,WAAY,2PACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,qBACN8B,WAAY,8eACZC,MAAM,GAER,CACEF,QAAS,IACT7B,KAAM,oBACN8B,WAAY,w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","file":"static/js/main.cdfe2f86.chunk.js","sourcesContent":["\r\nimport { FC } from 'react'\r\nimport '../styles/simplePage.css'\r\nimport '../styles/root.css'\r\nexport const NoMatchPage: FC = () => {  \r\n\r\n  return (\r\n    <>\r\n      <div className=\"exception-body\">\r\n        <div className=\"nopage-block\">\r\n          <h1 className=\"nopage_h1\">Неверный адрес страницы</h1>\r\n          <div className=\"nopage_text\">Проверьте, правильно ли вы ввели его. Если данные верны, пожалуйста, сообщите нам об ошибке.</div>\r\n          <a className=\"nopage-button\" href=\"../\">На главную</a><a className=\"nopage-button\" href=\"../\">Сообщить об ошибке</a>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","export interface IObjectKeys {\r\n  [key: string]: string | number | undefined\r\n}\r\nexport const HOME_ROUTE = \"/\"\r\nexport const LOGIN_ROUTE = \"/login\"\r\nexport const REGISTRATION_ROUTE = \"/registration\"\r\nexport const PWD_RECOVERY_ROUTE = \"/pwd_recovery\"\r\nexport const MESSAGE_ROUTE = \"/message\"\r\nexport const ERROR_ROUTE = \"/error\"\r\nexport const ADMIN_ROUTE = \"/admin\"\r\nexport const LIST_ROUTE = \"/list\"\r\nexport const CERTIFICATE_ROUTE = \"/cert\"\r\nexport const REPORT_ROUTE = \"/report\"\r\nexport const DOCTORS_ROUTE = \"/doctors\"\r\nexport const USER_ROUTE = \"/user\"\r\nexport const MO_SETTINGS_ROUTE = \"/organization\"\r\nexport const DIRECTION = [\"desc\", \"asc\"]\r\nexport const ROLES: IObjectKeys = {\r\n  USER: \"ПОЛЬЗОВАТЕЛЬ\",\r\n  ADMIN: \"АДМИНИСТРАТОР\",\r\n  STATS: \"СТАТИСТИК\",\r\n}\r\nexport const RunsackFilterMatchMode = {\r\n  startsWith: \"_start\",\r\n  contains: \"_cont\",\r\n  notContains: \"_not_cont\",\r\n  endsWith: \"_end\",\r\n  equals: \"_eq\",\r\n  notEquals: \"_not_eq\",\r\n  in: \"_in\",\r\n  lt: \"_lt\",\r\n  lte: \"lteq\",\r\n  gt: \"_gt\",\r\n  gte: \"_gteq\",\r\n  between: \"\",\r\n  dateIs: \"_eq\",\r\n  dateIsNot: \"_not_eq\",\r\n  dateBefore: \"_lt\",\r\n  dateAfter: \"_gt\",\r\n  custom: \"\",\r\n}\r\n// маркер удаления для использования в запросах на обновление\r\n// destroy-marker for using in nested_attributes\r\nexport const DESTROY_OPTION = { _destroy: \"1\" }\r\n\r\n//формат дата & время\r\nexport const TIME_FORMAT = {\r\n  year: \"2-digit\",\r\n  month: \"2-digit\",\r\n  day: \"2-digit\",\r\n  hour: \"2-digit\",\r\n  minute: \"2-digit\",\r\n} as Intl.DateTimeFormatOptions\r\n\r\n// формат даты\r\nexport const DATE_FORMAT = { year: \"2-digit\", month: \"short\", day: \"2-digit\" } as Intl.DateTimeFormatOptions\r\n","import { IUserInfo } from \"../../models/responses/IUserInfo\"\r\nimport {ROLES}  from \"../../utils/consts\"\r\n\r\ntype FooterLayoutProps = {userInfo: IUserInfo | null}\r\nconst FooterLayout = (props: FooterLayoutProps) => {\r\n  const orgName = props.userInfo!==null && props.userInfo.organization ? props.userInfo.organization.name : ''\r\n  const profile = props.userInfo!==null && props.userInfo.roles ? ROLES[props.userInfo.roles.split(' ')[0]]: ''  \r\n  return (\r\n    <div className=\"layout-footer\">\r\n      <div className=\"footer-logo-container\">\r\n        <span className=\"app-name\">{orgName}:</span>\r\n        <span className=\"app-profile\">{profile}</span>\r\n      </div>\r\n      <span className=\"copyright\">2022 © ГБУЗ АО \"АМИАЦ\"</span>\r\n    </div>       \r\n  )\r\n}\r\nexport default FooterLayout","export default __webpack_public_path__ + \"static/media/favicon.b5c775a4.png\";","import React, { FC,  useContext,  useState } from 'react'\r\nimport { MenuItem } from 'primereact/menuitem'\r\nimport { classNames, UniqueComponentId } from 'primereact/utils'\r\nimport { IMenuProps } from './IMenuProps'\r\nimport { HOME_ROUTE } from '../../utils/consts'\r\nimport { Context } from '../..'\r\n\r\n\r\nexport const SideBarMenu:FC<IMenuProps> = (props: IMenuProps) =>{ \r\n  const { userStore } = useContext(Context)\r\n  const [activeItem, setActiveItem] = useState<MenuItem>({})\r\n  const onItemClick = (event: React.MouseEvent, item:MenuItem)=> {\r\n        if (item.disabled) {\r\n            event.preventDefault()\r\n            return\r\n        }\r\n        if (!item.url) {\r\n           event.preventDefault()\r\n        } else if (item.url.startsWith(HOME_ROUTE)) {\r\n           userStore.history().push(item.url) \r\n           event.preventDefault()          \r\n        }\r\n        if (item.command) item.command({           \r\n              originalEvent: event,\r\n              item,\r\n            })        \r\n        if (item!==activeItem) {\r\n          if (activeItem.className) activeItem.className=''\r\n          item.className='active-menuitem'\r\n          setActiveItem(item)\r\n        } else {\r\n          item.className=''\r\n          setActiveItem({})\r\n        }\r\n  }\r\n\r\n  const className = classNames(\"layout-menu-container\", props.className)\r\n  const menu = (items: MenuItem[], label: string)=> {\r\n    const renderMenu = ()=> {\r\n      if (items.length>0) {\r\n        const renderItem = (item:MenuItem, index:number) => {\r\n          const renderSeparator = (index:number)=><li key={\"separator_\" + index} className='menu-separator' role='separator'></li>\r\n          const renderMenuItem =(item:MenuItem, index:number) => {\r\n          const submenuIconClassName = \"pi pi-fw pi-angle-down layout-submenu-toggler\"\r\n          const iconClassName = classNames(\"layout-menuitem-icon pi pi-fw\", item.icon)\r\n          const linkClassName = classNames(\"p-ripple\", { \"p-link\": item.url === undefined }, \r\n          { \"p-disabled\": item.disabled })\r\n          const submenuIcon = item.items && <span className={submenuIconClassName}></span>\r\n          const icon = item.icon && <span className={iconClassName}></span>\r\n          const label = item.label && <span className='layout-menuitem-text'>{item.label}</span>\r\n          const content = item.className || item.items ?             [\r\n              <button key={`bt_${item.label}_${index}`} type='button' onClick={(e:React.MouseEvent)=>onItemClick(e, item)} className=\"p-ripple p-link\">\r\n                {icon}\r\n                {label}\r\n                {submenuIcon}                                \r\n              </button>,              \r\n            ] :  [<a href={item.url} target={item.target}\r\n                    key={`a_${item.disabled ? label : index}`}  \r\n                    className={linkClassName} \r\n                    onClick={(e:React.MouseEvent)=>onItemClick(e, item)} \r\n                    aria-disabled={item.disabled}>\r\n                    {icon}{label}</a>,]\r\n            if (item.className?.includes('layout-root-menuitem')) \r\n               content.push(<div key={`dv_${item.label}_${index}`} className={item.className}><div className='layout-menuitem-root-text'>{item.label}</div></div>)\r\n            const submenu = (item.items && item.className) && menu(item.items as MenuItem[], item.label || UniqueComponentId())      \r\n            return (\r\n              <li key={`li_${index}_${item.className}`} \r\n                className={item.className} style={item.style}       \r\n                role='menuitem'>\r\n                {content}\r\n                {submenu}\r\n              </li>\r\n            )\r\n          }\r\n          if (item.separator) return renderSeparator(index)\r\n          else return renderMenuItem(item, index) \r\n        }\r\n        return items.map((item, index) => {\r\n          return renderItem(item, index)\r\n        })\r\n      }\r\n      return null\r\n    }\r\n    \r\n    return (\r\n      <ul key={label} className=\"layout-menu\" role=\"menu\">\r\n        {renderMenu()}\r\n      </ul>\r\n    )\r\n  }  \r\n  return (\r\n    <div id={props.id || \"sidebar_menu\"} className={className} style={props.style}>\r\n      {menu(props.model || [], \"global\")}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import axios, { AxiosRequestConfig } from \"axios\"\r\nimport { AuthResponse } from \"../models/responses/AuthResponse\"\r\n\r\n// настройки на back-end\r\n//Main API service (Основной API) URL\r\nexport const API_URL = \"http://api-medss.int.amurzdrav.ru/REST_API/v1/\"\r\n//FIAS service (Сервис адресов ФИАС) URL\r\nexport const FIAS_URL = \"http://fias.int.amurzdrav.ru/fias\"\r\n//АСМЕ service (Сервис взаимодействия с АСМЕ) URL\r\nexport const ACME_URL = \"http://acme.int.amurzdrav.ru/\"\r\n\r\nconst $api = axios.create({\r\n  withCredentials: true,\r\n  baseURL: API_URL,\r\n})\r\n\r\nexport const $fias = axios.create({\r\n  baseURL: FIAS_URL,\r\n})\r\n\r\nexport const $acme = axios.create({\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json; charset=utf-8\",\r\n    \"X-Requested-With\": \"XMLHttpRequest\",\r\n  },\r\n  baseURL: ACME_URL,\r\n})\r\n\r\n$api.interceptors.request.use((config: AxiosRequestConfig) => {\r\n  config.headers.Authorization = `Bearer ${localStorage.getItem(\"token\")}`\r\n  return config\r\n})\r\n\r\n$api.interceptors.response.use(\r\n  (config) => config,\r\n  async (error) => {\r\n    const originalRequest = error.config\r\n    if (error.response && error.response.status === 401 && error.config && !error.config._isRetry) {\r\n      originalRequest._isRetry = true\r\n      try {\r\n        const response = await axios.get<AuthResponse>(`${API_URL}auth/refresh`, { withCredentials: true })\r\n        localStorage.setItem(\"token\", response.data.tokens.access)\r\n        return $api.request(originalRequest)\r\n      } catch (e) {\r\n        throw new Error(\"API error 401, Сеанс не авторизован\")\r\n      }\r\n    } else if (error.response && [406, 422].includes(error.response.status)) {\r\n      if (error.response.data && error.response.data.errors) {\r\n        let message = error.response.data.errors.reduce((result: string, element: string) => {\r\n          result = `${result}, ${element}`\r\n          return result\r\n        }, `API error ${error.response.status}`)\r\n        throw new Error(message)\r\n      } else throw new Error(`API error ${JSON.stringify(error)}`)\r\n    }\r\n    throw error\r\n  }\r\n)\r\n\r\n$fias.interceptors.response.use(\r\n  (config) => config,\r\n  async (error) => {\r\n    if (error.response && error.response.status && [406, 422].includes(error.response.status)) {\r\n      if (error.response.data && error.response.data.errors) {\r\n        let message = error.response.data.errors.reduce((result: string, element: string) => {\r\n          result = `${result}, ${element}`\r\n          return result\r\n        }, `API error ${error.response.status}`)\r\n        throw new Error(message)\r\n      } else throw new Error(`API error ${error.response.status}`)\r\n    } else if (error.message.includes(\"Network Error\")) new Error(\"Ошибка сети: соединение не может быть установлено\")\r\n    throw error\r\n  }\r\n)\r\nexport default $api\r\n","import { IPersonName } from \"../IPersonName\"\r\n\r\nexport const ACTIONS = new Map<string, IActionAttribute>([\r\n  [\"added\", { title: \"Добавлено:\", icon: \"pi pi-plus\", color: \"rgb(104, 159, 56)\" }],\r\n  [\"updated\", { title: \"Изменено:\", icon: \"pi pi-pencil\", color: \"rgb(2, 136, 209)\" }],\r\n  [\"removed\", { title: \"Удалено:\", icon: \"pi pi-trash\", color: \"rgb(251, 192, 45)\" }],\r\n  [\"archived\", { title: \"Архивировано:\", icon: \"pi pi-inbox\", color: \"rgb(96, 125, 139)\" }],\r\n  [\"commented\", { title: \"Комментарий:\", icon: \"pi pi-comment\", color: \"rgb(96, 125, 139)\" }],\r\n  [\"imported\", { title: \"Импорт:\", icon: \"pi pi-download\", color: \"rgb(156, 39, 176)\" }],\r\n  [\"exported\", { title: \"Экспорт:\", icon: \"pi pi-upload\", color: \"rgb(156, 39, 176)\" }],\r\n  [\"signed_in\", { title: \"Подписано:\", icon: \"pi pi-user-edit\", color: \"rgb(104, 159, 56)\" }],\r\n  [\"signed_out\", { title: \"Отозвано:\", icon: \"pi pi-user-minus\", color: \"rgb(251, 192, 45)\" }],\r\n])\r\nexport enum Severity {\r\n  success,\r\n  info,\r\n  warning,\r\n  error,\r\n}\r\nexport interface IActionAttribute {\r\n  title: string\r\n  icon: string\r\n  color: string\r\n}\r\n\r\nexport interface ITimeEvent {\r\n  id: number\r\n  action: string\r\n  severity: Severity\r\n  detail: string\r\n  table?: string\r\n  summary?: string\r\n  user: { id: number; email: string; person_name: IPersonName }\r\n  organization: { id: number; name: string }\r\n  created_at: string\r\n}\r\n","import avatar from \"../../images/favicon.png\"\r\nimport { useContext } from \"react\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { Context } from \"../..\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { CERTIFICATE_ROUTE, HOME_ROUTE, LIST_ROUTE } from \"../../utils/consts\"\r\nimport { SideBarMenu } from \"../menus/SideBarMenu\"\r\nimport { MenuItem } from \"primereact/menuitem\"\r\nimport { API_URL } from \"../../http\"\r\ntype SideBarLayoutProps = {activeUrl: string}\r\nconst SideBarLayout = observer((props: SideBarLayoutProps) => {\r\n   const {userStore, certificateStore} = useContext(Context)\r\n   const cert_id =  certificateStore.cert.id?.toString() || 'new'\r\n   const cert_route_id = `${CERTIFICATE_ROUTE}/${cert_id}`\r\n   const items:MenuItem[] = [    \r\n      { label: \"Свидетельство\", className: \"layout-root-menuitem\",     \r\n        items:[{label:\"Секции\", icon:\"pi-file\", items:[\r\n          {label:\"Сведения о документе\", \r\n          url:`${cert_route_id}?q=0`}, \r\n          {label:\"Начало(п.1-3,7)\", url:`${cert_route_id}?q=1`},{label:\"Документы(п.4-6)\", url:`${cert_route_id}?q=2`},{label:\"Адреса.(п.8-11)\", url:`${cert_route_id}?q=3`},{label:\"п.12-17\", url:`${cert_route_id}?q=5`},{label:\"п.18-21\", url:`${cert_route_id}?q=6`},{label:\"Причины (п.22 I)\", url:`${cert_route_id}?q=7`},{label:\"Прочие (п.22 II)\", url:`${cert_route_id}?q=8`},{label:\"п.23-26\", url:`${cert_route_id}?q=9`},{label:\"Получатель\", url:`${cert_route_id}?q=10`}]},\r\n        { label: \"Печать\", disabled: !certificateStore.cert.issueDate,  icon:\"pi-print\", items: [{label:\"Лицевая\", icon:\"pi-file\", target:\"_blank\", url:`${API_URL}print/face/${cert_id}`},{ label:\"Оборотная\", icon:\"pi-file\", target:\"_blank\", url:`${API_URL}print/back/${cert_id}`}]},  \r\n        { label: \"Списки\",  icon:\"pi-list\", items: [{label:\"Свидетельства\", icon:\"pi-id-card\", url:LIST_ROUTE},{label:\"Журнал\", icon:\"pi-align-left\", url:\"/#\"}]},]}, \r\n      {separator: true},\r\n      { label: \"Сеанс\", className: \"layout-root-menuitem\",      \r\n        items: [{label:\"Главная\", icon:\"pi-home\", url:HOME_ROUTE},{label:\"Свидетельства\", icon:\"pi-list\", url:LIST_ROUTE},{label:\"Выход\", icon:\"pi-sign-out\", command:()=>{userStore.logout()}}]     \r\n      },     \r\n   ]   \r\n  const url = props.activeUrl\r\n  const findActive = (items: MenuItem[])=>{\r\n    let isActive = false    \r\n    items.forEach((item)=>{        \r\n      if (item.url === url)  { \r\n        item.className='active-menuitem' \r\n        isActive = true \r\n      }\r\n      if (isActive) return true\r\n      if (item.items) {         \r\n        if (findActive(item.items as MenuItem[])) { \r\n          item.className = item.className || 'active-menuitem'\r\n          isActive = true  \r\n        }  \r\n      } \r\n    })      \r\n    return isActive\r\n  }\r\n  findActive(items)  \r\n  return (\r\n    <div className='layout-sidebar'>      \r\n        <Link className='logo' to='#/'>\r\n          <img id='app-logo' className='logo-image' src={avatar} alt='РРМСС V3.0' />\r\n          <span className='app-name'>МедСС</span>\r\n        </Link>       \r\n        <SideBarMenu model={items} />  \r\n    </div>      \r\n  )\r\n})\r\nexport default SideBarLayout","export default __webpack_public_path__ + \"static/media/ava.0f62058a.png\";","import { MenuItem } from 'primereact/menuitem'\r\nimport { classNames } from 'primereact/utils'\r\nimport { FC } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { HOME_ROUTE } from '../../utils/consts'\r\nimport { IMenuProps } from './IMenuProps'\r\n\r\nexport const ProfileMenu: FC<IMenuProps> = (props: IMenuProps)=> { \r\n  const history = useHistory()  \r\n  const onItemClick = (event: React.MouseEvent, item:MenuItem)=> {\r\n    if (item.disabled) {\r\n      event.preventDefault()\r\n      return\r\n    }\r\n    if (!item.url) {\r\n      event.preventDefault()\r\n    } else if (item.url.startsWith(HOME_ROUTE)) {\r\n      history.push(item.url)\r\n      event.preventDefault()\r\n    }\r\n    if (item.command) item.command({           \r\n      originalEvent: event,\r\n      item,\r\n    })  \r\n  }\r\n  const className = \"profile-menu fade-in-up\"\r\n  const renderMenu = (items:MenuItem[]) => {\r\n    const renderItem = (item:MenuItem, index:number) => {\r\n        const renderSeparator = (index:number)=><li key={\"separator_\" + index} className='menu-separator' role='separator'></li>\r\n        const renderMenuItem =(item:MenuItem, index:number) => {          \r\n          const iconClassName = classNames(\"pi\", item.icon)          \r\n          const icon = item.icon && <i className={iconClassName}></i>\r\n          const label = item.label && <span>{item.label}</span>\r\n          const content = <button key={`bt_${item.label}_${index}`} \r\n              type='button' \r\n              onClick={(e:React.MouseEvent)=>onItemClick(e, item)} \r\n              className=\"p-link\">\r\n                {icon}\r\n                {label}                                                \r\n            </button> \r\n          return <li key={`pfi_${index}`}>{content}</li> \r\n            \r\n        }\r\n        if (item.separator) return renderSeparator(index)\r\n        else return renderMenuItem(item, index) \r\n      }\r\n    if (items.length > 0) {\r\n      return items.map((item, index) => {\r\n          return renderItem(item, index)\r\n      })\r\n    } else return null\r\n  }\r\n  return (\r\n    <ul className={className}>\r\n        {renderMenu(props.model || [])}\r\n    </ul>\r\n  )\r\n}","\r\nimport { classNames } from 'primereact/utils'\r\nimport { FC } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { HOME_ROUTE } from '../../utils/consts'\r\nimport { ExtMenuItem, INotificationMenuProps } from './IMenuProps'\r\n\r\nexport const NotificationsMenu: FC<INotificationMenuProps> = (props: INotificationMenuProps)=> {\r\n  const history = useHistory()   \r\n  const onItemClick = (event: React.MouseEvent, item:ExtMenuItem)=> {\r\n    if (item.disabled) {\r\n      event.preventDefault()\r\n      return\r\n    }\r\n    if (!item.url) {\r\n      event.preventDefault()\r\n    } else if (item.url.startsWith(HOME_ROUTE)) {\r\n      history.push(item.url)\r\n      event.preventDefault()\r\n    }\r\n    if (item.command) item.command({           \r\n      originalEvent: event,\r\n      item,\r\n    })  \r\n  }\r\n  const className = \"notifications-menu fade-in-up\"\r\n  const renderMenu = (items:ExtMenuItem[]) => {\r\n    const renderItem = (item:ExtMenuItem, index:number) => {\r\n        const renderSeparator = (index:number)=><li key={\"separator_\" + index} className='menu-separator' role='separator'></li>\r\n        const renderMenuItem =(item:ExtMenuItem, index:number) => { \r\n          const className =  classNames(\"notification-item\", item.className, item.disabled && \"p-disabled\")                           \r\n          const iconClassName = classNames(\"pi\", item.icon, item.className)          \r\n          const icon = item.icon && <i className={iconClassName}></i>\r\n          const summary = item.summary && <div className=\"notification-summary\">{item.summary}</div>\r\n          const label = (item.label && item.label.split('detail'))||[\"\",\"\"]\r\n          const content = <button key={`bt_${item.summary}_${index}`} \r\n              type='button' className=\"p-link\" \r\n              onClick={(e:React.MouseEvent)=>onItemClick(e, item)}>\r\n                {icon}\r\n              <div className={className}>\r\n                {summary}\r\n                <div className=\"notification-detail\">\r\n                  {label[0]} <b>{item.detail}</b> {label[1]}  \r\n                </div>\r\n              </div>                                                               \r\n            </button> \r\n          return <li key={`nmi_${index}`}>{content}</li> \r\n            \r\n        }\r\n        if (item.separator) return renderSeparator(index)\r\n        else return renderMenuItem(item, index) \r\n      }\r\n    if (items.length > 0) {\r\n      return items.map((item, index) => {\r\n          return renderItem(item, index)\r\n      })\r\n    } else return null\r\n  }\r\n  return (\r\n    <ul className={className}>\r\n        {renderMenu(props.model || [])}\r\n    </ul>\r\n  )\r\n}","import $api, { API_URL } from \"../http\"\r\nimport { AxiosResponse } from \"axios\"\r\nimport { IUser } from \"../models/IUser\"\r\nimport { IUserInfo } from \"../models/responses/IUserInfo\"\r\nimport { IActivityInfo } from \"../models/responses/IActivityInfo\"\r\n\r\n// сервис получения данных пользователя\r\nexport default class UsersService {\r\n  static async fetchUsers(): Promise<AxiosResponse<IUser[]>> {\r\n    return $api.post(`${API_URL}model/User/`, {\r\n      render_options: { only: [\"id\", \"email\", \"roles\", \"organization_id\", \"activated\"] },\r\n    })\r\n  }\r\n  static async getUser(id: number): Promise<AxiosResponse<IUserInfo>> {\r\n    return $api.post(`${API_URL}/show/model/User/${id}`, {\r\n      render_options: { only: [\"id\", \"roles\"], include: [\"person_name\", \"organization\", \"contacts\"] },\r\n      includes: [\"person_name\", \"organization\", \"contacts\"],\r\n      organization: { only: [\"id\", \"name\", \"sm_code\"] },\r\n    })\r\n  }\r\n  static async getUserActivity(): Promise<AxiosResponse<IActivityInfo>> {\r\n    return $api.get(`${API_URL}stat`)\r\n  }\r\n}\r\n","import { observer } from 'mobx-react-lite'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { Context } from '../..'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport ava from \"../../images/ava.png\"\r\nimport { classNames } from 'primereact/utils'\r\nimport { MenuItem } from 'primereact/menuitem'\r\nimport { ProfileMenu } from '../menus/ProfileMenu'\r\nimport { ExtMenuItem } from '../menus/IMenuProps'\r\nimport { NotificationsMenu } from '../menus/NotificationsMenu'\r\nimport { IUserInfo } from '../../models/responses/IUserInfo'\r\nimport { DOCTORS_ROUTE, LIST_ROUTE, MO_SETTINGS_ROUTE, USER_ROUTE } from '../../utils/consts'\r\nimport { IActivityInfo } from '../../models/responses/IActivityInfo'\r\nimport UsersService from '../../services/UsersService'\r\ntype TopBarLayoutProps = {title: string,  userInfo: IUserInfo | null }\r\nconst detail_templ =\"detail\"\r\nexport const TopBarLayout = observer((props: TopBarLayoutProps) =>{\r\n  const {layoutStore, userStore} = useContext(Context)\r\n  const isTOM = useMediaQuery({ query: \"(max-width: 991px)\" })\r\n  const profileMenuClassName = classNames(\"profile-item\",{\"active-menuitem fadeInDown\":layoutStore.profileMenuActive()})\r\n  const notificationsMenuClassName = classNames(\"notifications-item\", {\"active-menuitem\":layoutStore.notificationsMenuActive()})\r\n  const menuToggle=()=>{    \r\n    if (isTOM && layoutStore.tabletOrMobile()) layoutStore.setTabletOrMobile(false) \r\n    else if (isTOM && !layoutStore.tabletOrMobile()) layoutStore.setTabletOrMobile(true)\r\n    else layoutStore.sideBarToggle()          \r\n  } \r\n  const [userActivity, setUserActivity] = useState<IActivityInfo | null | undefined>()\r\n  \r\n  useEffect(()=>{\r\n    if (userActivity===undefined) {\r\n      UsersService.getUserActivity().then((data)=>{        \r\n        setUserActivity({...data.data})\r\n\r\n      })\r\n      .catch((reason)=>{\r\n        console.log(reason.message)\r\n        setUserActivity(null)\r\n      })\r\n    }\r\n  },[userActivity])\r\n  const items:MenuItem[] = [    \r\n      {label:\"Пользователь\", icon:\"pi-user\", url:`${USER_ROUTE}/${userStore.userInfo?.id}`},\r\n      {label:\"Медорганизация\", icon:\"pi-building\", url:`${MO_SETTINGS_ROUTE}/${userStore.userInfo?.organization.id}`}, \r\n      {label:\"Врачи\", icon:\"pi-users\", url:`${DOCTORS_ROUTE}`},     \r\n      {label:\"Выход\", icon:\"pi-power-off\", command:()=>{userStore.logout()}},       \r\n   ]\r\n  const notif_items:ExtMenuItem[] = [    \r\n      {label:`Создано ${detail_templ} свидетельств`, summary:\"Новых\", className:'p-success', icon:\"pi-user\", detail:userActivity?.created || 0, url:`${LIST_ROUTE}?created_at_gt=${userActivity?.logged}&issue_date_eq=null`, disabled: !userActivity || userActivity.created===0},\r\n      {label:`Изменено ${detail_templ} свидетельств`, summary:\"Измененных\", className:'p-info', icon:\"pi-pencil\", detail:userActivity?.updated || 0, url:`${LIST_ROUTE}?updated_at_gt=${userActivity?.logged}`, disabled: !userActivity || userActivity.updated===0},\r\n      {label:`Заменено ${detail_templ} свидетельств`, summary:\"Замены\", className:'p-info', icon:\"pi-sync\", detail:userActivity?.replaced || 0, url:`${LIST_ROUTE}?created_at_gt=${userActivity?.logged}&number_prev_neq=null`, disabled: !userActivity || userActivity.replaced===0},      \r\n      {label:`Выданы родственникам ${detail_templ} свидетельств`, summary:\"Выданно\", icon:\"pi-check\", detail:userActivity?.issued || 0, url:`${LIST_ROUTE}?issue_date_gt=${userActivity?.logged}`, disabled: !userActivity || userActivity.issued===0}, \r\n      {label:`С замечаниями ${detail_templ} свидетельств`, className:'p-danger', summary:\"Замечаний\", icon:\"pi-comment\", detail:0, url:\"/#\", disabled: true},\r\n      {label:`Проверены ${detail_templ} свидетельств`, summary:\"Проверенно\",  className:'p-success', icon:\"pi-check-circle\", detail:0, url:\"/#\", disabled: true},  \r\n      {label:`Отправлены в ФРМСИ ${detail_templ}`, summary:\"Отправлено\", className:'p-success', icon:\"pi-envelope\", detail:0, url:\"/#\", disabled: true},\r\n   ]\r\n   \r\n   \r\n   const userName = props.userInfo!==null && props.userInfo.person_name ? \r\n   `${props.userInfo.person_name?.family} ${props.userInfo.person_name?.given_1[0]} ${props.userInfo.person_name?.given_2?.charAt(0) ||''}` : ''     \r\n  return (\r\n    <div className=\"layout-topbar\">\r\n      <div className=\"topbar-left\">\r\n        <button type=\"button\" className=\"menu-button p-link\" onClick={()=>menuToggle()}>\r\n          <i className=\"pi pi-chevron-left\"> </i>\r\n        </button>\r\n        <span className=\"topbar-separator\"></span>\r\n        <div className=\"layout-breadcrumb viewname\">\r\n          <span>{props.title}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"topbar-right\">\r\n        <ul className=\"topbar-menu\">          \r\n          <li className={notificationsMenuClassName}>\r\n            <button type=\"button\" className=\"p-link\"\r\n            onClick={()=>layoutStore.setNotificationsMenuActive(true)}>\r\n              <i className=\"pi pi-bell\"></i>\r\n              <span className=\"topbar-badge\">{userActivity?.count || 0}</span>\r\n            </button>\r\n            <NotificationsMenu model={notif_items}/>\r\n          </li>\r\n          <li className={profileMenuClassName}>\r\n            <button type=\"button\" className=\"p-link\" onClick={()=>layoutStore.setProfileMenuActive(true)}>\r\n              <img src={ava} alt=\"\" className=\"profile-image\"/>\r\n              <span className=\"profile-name\">{userName}</span>\r\n            </button>\r\n            <ProfileMenu model={items}/>\r\n          </li> \r\n          <li className=\"right-sidebar-item\">\r\n            <button type=\"button\" className=\"p-link\" onClick={()=>layoutStore.setRightSideBarActive(true)}>\r\n              <i className=\"pi pi-align-right\"></i>\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n})","import { AxiosResponse } from \"axios\"\r\nimport $api, { API_URL } from \"../http\"\r\nimport { ITimeEvent } from \"../models/responses/ITimeEvent\"\r\n\r\n//Стандартные настройки JSON рендеринга модели timeEvent\r\nexport const TIME_EVENT_OPTIONS = {\r\n  render_options: {\r\n    only: [\"id\", \"summary\", \"table\", \"action\", \"detail\", \"created_at\"],\r\n    include: [\"user\", \"organization\"],\r\n  },\r\n  includes: [\"user\", \"organization\"],\r\n  user: { only: [\"id\", \"email\"], include: [\"person_name\"] },\r\n  organization: { only: [\"id\", \"name\"] },\r\n}\r\nexport default class AuditService {\r\n  //POST request for get audit's list\r\n  static async getAudits(query: any): Promise<AxiosResponse<ITimeEvent[]>> {\r\n    return $api.post(`${API_URL}model/Audit/`, { ...query, ...TIME_EVENT_OPTIONS })\r\n  }\r\n}\r\n","import { autorun, configure, makeAutoObservable } from \"mobx\"\r\nimport Certificate from \"../models/FormsData/Certificate\"\r\nimport { IPatient } from \"../models/IPatient\"\r\nimport { ICertificate } from \"../models/responses/ICertificate\"\r\nimport { IUserInfo } from \"../models/responses/IUserInfo\"\r\nimport CertificateService from \"../services/CertificateService\"\r\nimport { ID_CARD_TYPES, NULL_FLAVOR_IDX, PASSPORT_RF } from \"../utils/defaults\"\r\nimport { DeathReason } from \"../models/FormsData/DeathReason\"\r\nimport { IDeathReason } from \"../models/responses/IDeathReason\"\r\nimport { IAddressR } from \"../models/requests/IAddressR\"\r\nimport { INullFlavorR } from \"../models/INullFlavor\"\r\n\r\nexport enum OperationType {\r\n  NONE = 0x0,\r\n  SCROLLING = 0x1,\r\n  FILTERING = 0x2,\r\n  SORTING = 0x3,\r\n  SAVING = 0x4,\r\n  LOADING = SCROLLING | FILTERING | SORTING | SAVING,\r\n}\r\n\r\nexport class Operation {\r\n  type: number\r\n\r\n  constructor(type: OperationType) {\r\n    this.type = type\r\n    makeAutoObservable(this)\r\n  }\r\n  getType() {\r\n    return this.type\r\n  }\r\n  is(type: OperationType) {\r\n    return !!(this.type & type)\r\n  }\r\n}\r\n\r\nexport const WAITING = new Operation(OperationType.NONE)\r\n\r\nconfigure({\r\n  enforceActions: \"never\",\r\n})\r\n\r\nexport default class CertificateStore {\r\n  private _cert: Certificate\r\n  private _submitted: boolean\r\n  private _userInfo?: IUserInfo | undefined\r\n  private _certs: ICertificate[]\r\n  private _allCerts: ICertificate[]\r\n  private _selected: number\r\n  private _sorts: string[] | undefined\r\n  private _sortField: string | undefined\r\n  private _sortOrder: -1 | 1\r\n  private _sort: string | undefined\r\n  private _filters: any | undefined\r\n  private _filterStr: string | undefined\r\n  private _first: number\r\n  private _last: number\r\n  private _rows: number\r\n  private _count: number\r\n  private _needScroll: boolean\r\n  private _isLoading: boolean\r\n  private _operation: Operation\r\n\r\n  disposers: (() => void)[]\r\n  constructor() {\r\n    this._submitted = false\r\n    this.disposers = []\r\n    this._certs = []\r\n    this._allCerts = []\r\n    this._first = 0\r\n    this._last = 0\r\n    this._rows = 0\r\n    this._count = 0\r\n    this._needScroll = false\r\n    this._isLoading = false\r\n    this._sortOrder = 1\r\n    this._operation = WAITING\r\n    this._cert = new Certificate({\r\n      custodian: this._userInfo?.organization,\r\n      patient: {\r\n        organization_id: this._userInfo?.organization.id,\r\n        identity: {\r\n          identity_card_type_id: ID_CARD_TYPES[PASSPORT_RF].code,\r\n        },\r\n        person: { person_name: { family: \"\", given_1: \"\", given_2: \"\" } },\r\n      } as IPatient,\r\n    } as ICertificate)\r\n    this._selected = 0\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n\r\n    // реакции на изменение данных\r\n\r\n    // определяем статус загрузки\r\n    this.disposers[0] = autorun(() => {\r\n      this._isLoading = this._operation.is(OperationType.LOADING)\r\n    })\r\n\r\n    this.disposers[1] = autorun(() => {\r\n      const filterstr = this._filters && JSON.stringify(this._filters)\r\n      const filters = filterstr !== this._filterStr\r\n      if (filters) {\r\n        this._count = 0\r\n        this._operation = new Operation(OperationType.FILTERING)\r\n        //console.log(\"filters -\", filters, \" waiting-\", this._operation.getType())\r\n        this._filterStr = filterstr\r\n        let _q = { ...this._filters, sorts: this._sorts }\r\n        if (this._userInfo && !this._userInfo.roles.includes(\"MIAC\"))\r\n          _q.custodian_id_eq = this._userInfo?.organization.id\r\n        CertificateService.getCount({ q: _q })\r\n          .then((value) => {\r\n            this._count = value.data\r\n            if (this._count === 0) {\r\n              this._certs = []\r\n              this._allCerts = []\r\n              this._operation = WAITING\r\n            } else {\r\n              this._allCerts = Array.from<ICertificate>({ length: this._count })\r\n            }\r\n            //console.log(\"filter apply-\", this._count)\r\n          })\r\n          .catch((reason) => console.log(reason))\r\n      }\r\n    })\r\n    this.disposers[2] = autorun(() => {\r\n      let sort: string | undefined = \"\"\r\n      if (this._sorts) {\r\n        this._sorts.forEach((str) => (sort += str))\r\n      } else sort = undefined\r\n      if (this._sort !== sort && this._operation.is(OperationType.SORTING)) {\r\n        this._sort = sort\r\n        //console.log(\"sort\", this._sorts)\r\n        this.getList(() => {}, this._first, this._last)\r\n      }\r\n    })\r\n  }\r\n\r\n  //#region setters-getters\r\n  get cert() {\r\n    return this._cert\r\n  }\r\n  set cert(value: Certificate) {\r\n    this._cert = value\r\n  }\r\n  get needScroll(): boolean {\r\n    return this._needScroll\r\n  }\r\n  get allCerts() {\r\n    return this._allCerts\r\n  }\r\n\r\n  get submitted(): boolean {\r\n    return this._submitted\r\n  }\r\n  set submitted(value: boolean) {\r\n    this._submitted = value\r\n  }\r\n  get certs(): ICertificate[] {\r\n    return this._certs.map((el) => {\r\n      return { ...el }\r\n    })\r\n  }\r\n  get userInfo(): IUserInfo | undefined {\r\n    return this._userInfo\r\n  }\r\n  set userInfo(value: IUserInfo | undefined) {\r\n    this._userInfo = value\r\n  }\r\n  get sorts(): string[] | undefined {\r\n    return this._sorts\r\n  }\r\n  set sorts(value: string[] | undefined) {\r\n    this._sorts = value\r\n  }\r\n\r\n  get sortField(): string | undefined {\r\n    return this._sortField\r\n  }\r\n  set sortField(value: string | undefined) {\r\n    this._sortField = value\r\n  }\r\n  public get sortOrder(): -1 | 1 {\r\n    return this._sortOrder\r\n  }\r\n  public set sortOrder(value: -1 | 1) {\r\n    this._sortOrder = value\r\n  }\r\n  get filters(): any {\r\n    return this._filters\r\n  }\r\n  set filters(value: any) {\r\n    this._filters = value\r\n  }\r\n  get first(): number {\r\n    return this._first\r\n  }\r\n  set first(value: number) {\r\n    this._first = value\r\n  }\r\n  get rows(): number {\r\n    return this._rows\r\n  }\r\n  set rows(value: number) {\r\n    this._rows = value\r\n  }\r\n  get count(): number {\r\n    return this._count\r\n  }\r\n  set count(value: number) {\r\n    this._count = value\r\n  }\r\n  get isLoading(): boolean {\r\n    return this._isLoading\r\n  }\r\n  set isLoading(value: boolean) {\r\n    this._isLoading = value\r\n  }\r\n\r\n  get operation(): Operation {\r\n    return this._operation\r\n  }\r\n  set operation(value: Operation) {\r\n    this._operation = value\r\n  }\r\n  //#endregion\r\n  createNew(id = -1) {\r\n    this._cert = new Certificate({\r\n      id: id,\r\n      custodian: this._userInfo?.organization,\r\n      patient: {\r\n        organization_id: this._userInfo?.organization.id,\r\n        identity: {\r\n          identity_card_type_id: ID_CARD_TYPES[PASSPORT_RF].code,\r\n        },\r\n        person: { person_name: { family: \"\", given_1: \"\", given_2: \"\" } },\r\n      } as IPatient,\r\n    } as ICertificate)\r\n  }\r\n  replace() {\r\n    const old = this._certs.find((cert) => cert.id === this._cert.id)\r\n    if (!old) return\r\n    this._cert = new Certificate({\r\n      id: -1,\r\n      custodian: old.custodian,\r\n      patient: old.patient,\r\n      basis_determining: old.basis_determining,\r\n      cert_type: old.cert_type === 1 ? 4 : 3,\r\n      death_area_type: old.death_area_type,\r\n      death_kind: old.death_kind,\r\n      death_datetime: old.death_datetime,\r\n      death_place: old.death_place,\r\n      death_year: old.death_year,\r\n      education_level: old.education_level,\r\n      eff_time_prev: old.issue_date,\r\n      established_medic: old.established_medic,\r\n      ext_reason_description: old.ext_reason_description,\r\n      ext_reason_time: old.ext_reason_time,\r\n      life_area_type: old.life_area_type,\r\n      marital_status: old.marital_status,\r\n      number_prev: old.number,\r\n      policy_OMS: old.policy_OMS,\r\n      pregnancy_connection: old.pregnancy_connection,\r\n      reason_ACME: old.reason_ACME,\r\n      series_prev: old.series,\r\n      social_status: old.social_status,\r\n      traffic_accident: old.traffic_accident,\r\n    } as ICertificate)\r\n    if (old.a_reason)\r\n      this._cert.reasonA = new DeathReason({\r\n        days: old.a_reason.days,\r\n        diagnosis: old.a_reason.diagnosis,\r\n        effective_time: old.a_reason.effective_time,\r\n        hours: old.a_reason.hours,\r\n        null_flavors: old.a_reason.null_flavors?.map((item) => {\r\n          return { code: item.code, parent_attr: item.parent_attr }\r\n        }),\r\n        minutes: old.a_reason.minutes,\r\n        months: old.a_reason.months,\r\n        years: old.a_reason.years,\r\n        weeks: old.a_reason.weeks,\r\n      } as IDeathReason)\r\n    else this._cert.reasonA = new DeathReason({} as IDeathReason)\r\n    if (old.b_reason)\r\n      this._cert.reasonB = new DeathReason({\r\n        days: old.b_reason.days,\r\n        diagnosis: old.b_reason.diagnosis,\r\n        effective_time: old.b_reason.effective_time,\r\n        hours: old.b_reason.hours,\r\n        null_flavors: old.b_reason.null_flavors?.map((item) => {\r\n          return { code: item.code, parent_attr: item.parent_attr }\r\n        }),\r\n        minutes: old.b_reason.minutes,\r\n        months: old.b_reason.months,\r\n        years: old.b_reason.years,\r\n        weeks: old.b_reason.weeks,\r\n      } as IDeathReason)\r\n    if (old.c_reason)\r\n      this._cert.reasonC = new DeathReason({\r\n        days: old.c_reason.days,\r\n        diagnosis: old.c_reason.diagnosis,\r\n        effective_time: old.c_reason.effective_time,\r\n        hours: old.c_reason.hours,\r\n        null_flavors: old.c_reason.null_flavors?.map((item) => {\r\n          return { code: item.code, parent_attr: item.parent_attr }\r\n        }),\r\n        minutes: old.c_reason.minutes,\r\n        months: old.c_reason.months,\r\n        years: old.c_reason.years,\r\n        weeks: old.c_reason.weeks,\r\n      } as IDeathReason)\r\n    if (old.d_reason)\r\n      this._cert.reasonD = new DeathReason({\r\n        days: old.d_reason.days,\r\n        diagnosis: old.d_reason.ext_diagnosis,\r\n        effective_time: old.d_reason.effective_time,\r\n        hours: old.d_reason.hours,\r\n        null_flavors: old.d_reason.null_flavors?.map((item) => {\r\n          return { code: item.code, parent_attr: item.parent_attr }\r\n        }),\r\n        minutes: old.d_reason.minutes,\r\n        months: old.d_reason.months,\r\n        years: old.d_reason.years,\r\n        weeks: old.d_reason.weeks,\r\n      } as IDeathReason)\r\n    if (old.death_reasons)\r\n      this._cert.deathReasons = old.death_reasons.map(\r\n        (reason) =>\r\n          new DeathReason({\r\n            days: reason.days,\r\n            diagnosis: reason.diagnosis,\r\n            effective_time: reason.effective_time,\r\n            hours: reason.hours,\r\n            null_flavors: reason.null_flavors?.map((item) => {\r\n              return { code: item.code, parent_attr: item.parent_attr }\r\n            }),\r\n            minutes: reason.minutes,\r\n            months: reason.months,\r\n            years: reason.years,\r\n            weeks: reason.weeks,\r\n            procedures: reason.procedures?.map((item) => {\r\n              return {\r\n                effective_time: item.effective_time,\r\n                medical_serv: item.medical_serv,\r\n                text_value: item.text_value,\r\n                null_flavors: item.null_flavors?.map((item) => {\r\n                  return { code: item.code, parent_attr: item.parent_attr }\r\n                }),\r\n              }\r\n            }),\r\n          } as IDeathReason)\r\n      )\r\n    else this._cert.deathReasons = []\r\n    if (old.death_addr)\r\n      this._cert.deathAddr = {\r\n        ...old.death_addr,\r\n        null_flavors_attributes:\r\n          old.death_addr?.null_flavors?.map((item) => {\r\n            return { parent_attr: item.parent_attr, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n          }) || [],\r\n        id: undefined,\r\n        parent_guid: undefined,\r\n        null_flavors: null,\r\n      } as IAddressR\r\n\r\n    old.latest_one = this._cert.oldOne\r\n  }\r\n\r\n  save(onSuccess?: (data: ICertificate) => void, onError?: (message: string) => void, sm_code?: string) {\r\n    this._operation = new Operation(OperationType.SAVING)\r\n    if (!this._userInfo) return false\r\n    if (!this._cert.patient.provider_organization)\r\n      this._cert.patient.provider_organization = this.userInfo?.organization.id\r\n    const request = this._cert.getAttributes()\r\n    if (!request.id && sm_code) {\r\n      request.number = sm_code\r\n      if (request.patient_attributes?.id) {\r\n        request.patient_id = request.patient_attributes?.id\r\n        request.patient_attributes = undefined\r\n      }\r\n    }\r\n    //console.log(\"request\", request)\r\n    return !request.id\r\n      ? CertificateService.addCertificate(request)\r\n          .then((response) => {\r\n            const nCert = response.data\r\n            if (nCert) {\r\n              const idx = this._certs.length\r\n              this._certs.push(nCert)\r\n              this.select(idx)\r\n              if (onSuccess) onSuccess(nCert)\r\n              //console.log(\"nCert-\", nCert)\r\n            } else {\r\n              if (onError)\r\n                onError(\"Cвидетельство сохранено, но сервер не вернул результат. Необходим повторный вход в систему\")\r\n            }\r\n          })\r\n          .catch((reason) => {\r\n            if (onError) onError(reason)\r\n          })\r\n          .finally(() => (this._operation = WAITING))\r\n      : CertificateService.updateCertificate({ Certificate: request })\r\n          .then((response) => {\r\n            const nCert = response.data\r\n            if (nCert) {\r\n              const idx = this._certs.findIndex((cert) => cert.id === nCert.id)\r\n              this._certs[idx] = nCert\r\n              //console.log(\"nCert\", nCert)\r\n              this.select(idx)\r\n              if (onSuccess) onSuccess(nCert)\r\n            } else {\r\n              if (onError)\r\n                onError(\"Свидетельство сохранено, но сервер не вернул результат. Необходим повторный вход в систему\")\r\n            }\r\n          })\r\n          .catch((reason) => {\r\n            if (onError) onError(reason)\r\n          })\r\n          .finally(() => (this._operation = WAITING))\r\n  }\r\n  delete() {\r\n    if (this._cert.id === -1) return false\r\n    else return CertificateService.removeCertificate(this._cert.id)\r\n  }\r\n\r\n  clean(num = this._selected) {\r\n    try {\r\n      this._certs.splice(num)\r\n      this._count = this._count - 1\r\n      const dataLength = this._certs.length\r\n      if (dataLength > 0) {\r\n        this.select(this._selected < dataLength ? this._selected : dataLength - 1)\r\n      } else {\r\n        this.createNew(-1)\r\n        this._selected = 0\r\n      }\r\n    } catch {\r\n      throw Error(\"Not valid certificate number\")\r\n    }\r\n  }\r\n\r\n  select(num: number) {\r\n    try {\r\n      this._cert = new Certificate(this._certs[num])\r\n      this._selected = num\r\n    } catch (e) {\r\n      console.log(\"num\", num, e)\r\n    }\r\n  }\r\n\r\n  getList(doAfter?: () => void, first = this._first, last?: number) {\r\n    if (last && first > last) {\r\n      this._needScroll = true\r\n      return false\r\n    }\r\n    let _q = { ...this._filters, sorts: this._sorts }\r\n\r\n    if (this._userInfo && !this._userInfo.roles.includes(\"MIAC\")) _q.custodian_id_eq = this._userInfo?.organization.id\r\n    CertificateService.getCertificates({ q: _q }, first, last)\r\n      .then((response) => {\r\n        let _virtLoaded = Array.from<ICertificate>({ length: this._count })\r\n        let num = first\r\n        let _certs = response.data.map((cert) => {\r\n          return { ...cert, rowNumber: ++num }\r\n        })\r\n        const dataLength = response.data.length\r\n        this._first = first\r\n        this._last = last || first + dataLength - 1\r\n\r\n        //populate page of virtual cars\r\n        Array.prototype.splice.apply(_virtLoaded, [first, dataLength, ..._certs])\r\n        this._certs = _certs\r\n        this._allCerts = _virtLoaded\r\n        //console.log(\"this._count-\", this._count, \" this._first-\", this._first, \" this._last-\", this._last)\r\n        if (dataLength > 0) {\r\n          this._rows = this._certs.length\r\n          this.select(this._selected < dataLength ? this._selected : dataLength - 1)\r\n        }\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(() => {\r\n        if (doAfter) doAfter()\r\n        if (this._needScroll) this._needScroll = false\r\n        this._operation = WAITING\r\n      })\r\n  }\r\n\r\n  findById(certificate_id: number, doAfter?: () => void) {\r\n    if (!this._userInfo) return false\r\n    CertificateService.getCertificates({\r\n      q: { custodian_id_eq: this._userInfo.organization.id, id_eq: certificate_id },\r\n    })\r\n      .then((response) => {\r\n        if (response.data && response.data.length > 0) this._cert = new Certificate(response.data[0])\r\n        if (response.data) {\r\n          this.certs.push(response.data[0])\r\n          this.select(0)\r\n        }\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(() => {\r\n        if (doAfter) doAfter()\r\n        this._operation = WAITING\r\n      })\r\n  }\r\n  dispose() {\r\n    // So, to avoid subtle memory issues, always call the\r\n    // disposers when the reactions are no longer needed.\r\n    this.disposers.forEach((disposer) => disposer())\r\n  }\r\n}\r\n","import { observer } from 'mobx-react-lite'\r\nimport { classNames } from 'primereact/utils'\r\nimport { FC, useContext, useEffect, useState } from 'react'\r\nimport { Context } from '../..'\r\nimport { ACTIONS,  ITimeEvent } from '../../models/responses/ITimeEvent'\r\nimport {  TIME_FORMAT } from '../../utils/consts'\r\nimport AuditService from '../../services/AuditService'\r\n\r\n\r\ntype RightSideBarLayoutProps = {}\r\n\r\nconst RightSideBarLayout: FC<RightSideBarLayoutProps> = (props: RightSideBarLayoutProps) =>{ \r\n  const {layoutStore, userStore} = useContext(Context)\r\n  const className = classNames(\"layout-sidebar-right\", {\"layout-sidebar-right-active\": layoutStore.rightSideBarActive() }) \r\n  const [timeEvents, setTimeEvents] = useState<ITimeEvent[] | null>(null)\r\n  const [q , setQ] = useState<any | null>(null) \r\n  useEffect(()=>{\r\n    if (q === null && userStore.userInfo) {      \r\n      if (userStore.userInfo.roles.includes('ADMIN'))\r\n        setQ({ sorts: [ 'created_at desc']})\r\n      else \r\n        setQ({user_organization_id_eq: userStore.userInfo?.organization.id, sorts: [ 'created_at desc']})\r\n    }  \r\n  }, [q, userStore.userInfo, userStore.userInfo?.organization] ) \r\n  \r\n  useEffect(()=>{\r\n    if (timeEvents===null && q!==null) AuditService.getAudits({q:q, limit: 200})\r\n    .then(response=>setTimeEvents(response.data))\r\n    .catch(()=>setTimeEvents([]))\r\n  },[timeEvents, q]) \r\n    \r\n   \r\n  return (  \r\n  <div className={className}>\r\n    <h5>Активность</h5>\r\n    <div className=\"widget-timeline\">\r\n      { timeEvents===null || timeEvents.length===0 ? 'Событий не найдено' : timeEvents.map(item=>{        \r\n        const ACTION_ATTRIBUTES = ACTIONS.get(item.action)\r\n        if (ACTION_ATTRIBUTES === undefined) throw Error('неверный action')\r\n        const timeStr = new Date(item.created_at).toLocaleString(\r\n      \"ru\", TIME_FORMAT)\r\n        return (\r\n      <div className=\"timeline-event\" key={item.id}>\r\n        <span className=\"timeline-event-icon\" style={{ backgroundColor: ACTION_ATTRIBUTES.color }}>\r\n                <i className={ACTION_ATTRIBUTES.icon}></i>\r\n        </span>\r\n        <div className='timeline-event-title'>{timeStr} {ACTION_ATTRIBUTES.title}</div>\r\n        <div className='timeline-event-detail'>\r\n          {item.summary ? <><b>где: </b> <em>{item.summary}</em></> : ''}\r\n          {item.detail ? <p><b>что: </b>{item.detail}</p> : ''}          \r\n          <b>кем: </b> <em>{item.user.email}</em>         \r\n        </div>\r\n      </div>)})}\r\n    </div> \r\n        \r\n  </div>\r\n)}\r\nexport default observer(RightSideBarLayout)\r\n\r\n","\r\nimport  { FC } from 'react'\r\nimport '../../styles/components/ActionButtonLayout.css'\r\nimport '../../styles/components/Tooltip.css'\r\nimport { SpeedDial } from 'primereact/speeddial'\r\nimport { Tooltip } from 'primereact/tooltip'\r\n\r\nexport interface IActionItem {\r\n  label: string\r\n  icon: string\r\n  command: ()=>void\r\n}\r\n\r\ntype ActionButtonLayoutProps = {items?: IActionItem[]}\r\n\r\nexport const ActionButtonLayout: FC<ActionButtonLayoutProps> = (props: ActionButtonLayoutProps) =>{   \r\n  if (props.items)\r\n  return (\r\n  <div className=\"layout-action\"> \r\n    <Tooltip target=\".layout-action .p-speeddial-semi-circle.p-speeddial-direction-left .p-speeddial-action\" position=\"left\"  />   \r\n    <SpeedDial model={props.items} radius={80}  direction=\"left\" type=\"semi-circle\" />\r\n  </div>)\r\n  else return<></> \r\n}","import React, { FC, useContext, useEffect, useState } from 'react'\r\nimport '../../styles/layout.css'\r\nimport { Context } from '../..'\r\nimport FooterLayout from './FooterLayout'\r\nimport SideBarLayout from './SideBarLayout'\r\nimport { TopBarLayout } from './TopBarLayout'\r\nimport { classNames } from 'primereact/utils'\r\nimport { observer } from 'mobx-react-lite'\r\nimport RightSideBarLayout  from './RightSideBarLayout'\r\nimport { IUserInfo } from '../../models/responses/IUserInfo'\r\nimport { ActionButtonLayout, IActionItem } from './ActionButtonLayout'\r\nimport { ProgressSpinner } from 'primereact/progressspinner'\r\nimport { addLocale } from 'primereact/api'\r\ntype MainLayoutProps = {\r\n  title: string,\r\n  url:string, \r\n  content:React.ReactElement\r\n  actionItems?: IActionItem[]\r\n }\r\n\r\nconst MainLayout: FC<MainLayoutProps>=(props: MainLayoutProps) => { \r\n  const {layoutStore, userStore} = useContext(Context)\r\n  const rightSideBarActive = layoutStore.rightSideBarActive()\r\n  const layoutStaticInactive = layoutStore.layoutStaticInactive()\r\n  const profileMenuActive = layoutStore.profileMenuActive()\r\n  const notificationsMenuActive = layoutStore.notificationsMenuActive()  \r\n  const onClickOutside = ()=>{\r\n    if (rightSideBarActive) layoutStore.setRightSideBarActive(false)\r\n    else if (profileMenuActive) layoutStore.setProfileMenuActive(false)\r\n    else if (notificationsMenuActive) layoutStore.setNotificationsMenuActive(false)\r\n  } \r\n  const wrapperClass = classNames(\"layout-wrapper layout-static p-ripple layout-sidebar-indigo\",{\"layout-static-inactive\": layoutStaticInactive}, {\"layout-mobile-active\": layoutStore.tabletOrMobile()})\r\n  const [userInfo, setUserInfo] = useState<IUserInfo | null>(null)   \r\n  const userId = userStore.user().id   \r\n  useEffect(()=>{ \r\n     if (userId!== undefined && userInfo === null) \r\n     setUserInfo(userStore.userInfo)     \r\n    },[userId, userInfo, userStore.userInfo]\r\n  )\r\n  const content =  layoutStore.isLoading ? <ProgressSpinner/> : props.content \r\n  addLocale('ru', {\r\n    startsWith: 'Начинается с',\r\n    contains: 'Содержит',\r\n    notContains: 'Не содержит',\r\n    endsWith: 'Оканчивается на',\r\n    equals: 'Равно',\r\n    notEquals: 'Не равно',\r\n    noFilter: 'Любое',\r\n    lt: 'Меньше чем',\r\n    lte: 'Меньше или равно',\r\n    gt: 'Больше',\r\n    gte: 'Больше либо равно',\r\n    dateIs: 'Равна',\r\n    dateIsNot: 'Не равна',\r\n    dateBefore: 'Ранее чем',\r\n    dateAfter: 'Позже чем',\r\n    custom: 'Свое',\r\n    clear: 'Очистить',\r\n    apply: 'Применить',\r\n    matchAll: 'условия (И)',\r\n    matchAny: 'условия (ИЛИ)' ,\r\n    addRule: '+ условие',\r\n    removeRule: ' - условие',\r\n    accept: 'ДА',\r\n    reject: 'НЕТ',\r\n    closeText: 'закрыть',\r\n    prevText: 'назад',\r\n    nextText: 'вперед',\r\n    currentText: 'текущий',\r\n    monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь',\r\n        'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\r\n    monthNamesShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн',\r\n        'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\r\n    dayNames: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\r\n    dayNamesShort: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\r\n    dayNamesMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\r\n    weekHeader: 'Нед',\r\n    firstDay: 1,\r\n    isRTL: false,\r\n    showMonthAfterYear: false,\r\n    yearSuffix: '',\r\n    month: 'Мес',\r\n    week: 'Неделя',\r\n    day: 'День',\r\n    timeOnlyTitle: 'Выбор времени',\r\n    timeText: 'Время',\r\n    hourText: 'Часы',\r\n    minuteText: 'Минуты',\r\n    secondText: 'Секунды',\r\n    allDayText: 'Полный день',      \r\n  })\r\n  return (\r\n  <div className={wrapperClass} data-theme='light'>    \r\n    <div className='layout-content-wrapper' onClick={()=>onClickOutside()}>  \r\n      <TopBarLayout  title = {props.title}  userInfo={userInfo} />        \r\n      <div className='layout-content'>{content}\r\n        <ActionButtonLayout items={props.actionItems}/>\r\n      </div>\r\n      <FooterLayout userInfo={userInfo} />\r\n    </div>\r\n    <SideBarLayout  activeUrl={props.url} /> \r\n    <RightSideBarLayout />     \r\n    <div className=\"layout-search\"></div>        \r\n    <div className='layout-mask modal-in' onClick={()=>{layoutStore.setTabletOrMobile(false)}}></div>\r\n  </div>  \r\n  ) \r\n}\r\nexport default observer(MainLayout)\r\n\r\n","//\"Вид медицинского свидетельства о смерти\r\n//OID: 1.2.643.5.1.13.13.99.2.19 Версия: 1.1\r\nexport const CERT_TYPES = [\r\n  { code: 1, name: \"окончательное\", s_name: \"ОКН\" },\r\n  { code: 2, name: \"предварительное\", s_name: \"ПРВ\" },\r\n  { code: 3, name: \"взамен предварительного\", s_name: \"ВП\" },\r\n  { code: 4, name: \"взамен окончательного\", s_name: \"ВO\" },\r\n]\r\n","import { observer } from 'mobx-react-lite'\r\nimport { FC, useContext } from 'react'\r\nimport { Context } from '../..'\r\nimport { Dropdown } from 'primereact/dropdown'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { Calendar } from 'primereact/calendar'\r\nimport { Divider } from 'primereact/divider'\r\nimport { Card } from 'primereact/card'\r\nimport '../../styles/pages/CertificatePage.css'\r\nimport { CERT_TYPES } from '../../NSI/1.2.643.5.1.13.13.99.2.19'\r\nimport { DATE_FORMAT } from '../../utils/consts'\r\n const Section0: FC = () => {\r\n   const { certificateStore } = useContext(Context)\r\n   const cert =  certificateStore.cert  \r\n   const header = () => {\r\n      return <span>Сведения о документе</span>\r\n    }\r\n  return (<>    \r\n      <Card className=\"c-section p-mr-2 p-mb-2\" header={header} key={certificateStore.cert.id}>\r\n        <div className=\"p-fluid p-formgrid p-grid\">\r\n          <div className=\"p-field p-col-6 p-md-2\">\r\n            <label htmlFor=\"series\">Серия</label>\r\n            <InputText id=\"series\" value={cert.series} type=\"text\" \r\n              placeholder='Заполняется автоматически' disabled/>\r\n          </div>\r\n          <div className=\"p-field p-col-6 p-md-4\">\r\n            <label htmlFor=\"number\">Номер</label>\r\n            <InputText id=\"number\" value={cert.number} disabled type=\"text\" placeholder='Заполняется автоматически'/>\r\n          </div>\r\n          <div className=\"p-field p-col-12 p-md-6\">                    \r\n            <label htmlFor=\"icon\">Дата</label>\r\n            <Calendar id=\"icon\"  dateFormat=\"dd.mm.yy\" value={cert.issueDate} disabled />\r\n          </div>\r\n          <div className=\"p-field p-col-12 p-md-6\">\r\n            <label htmlFor=\"cert_type\">Вид свидетельства</label>\r\n            <Dropdown inputId=\"cert_type\"  placeholder=\"Выбрать\" autoFocus \r\n              options={cert.certType ? ([3, 4].includes(cert.certType) ? CERT_TYPES.filter((item)=>[4,3,1].includes(item.code)) : CERT_TYPES) : CERT_TYPES.filter((item)=>[1,2].includes(item.code)) } optionLabel=\"name\"\r\n              value={CERT_TYPES.find(el=>el.code===cert.certType)} onChange={(e) =>certificateStore.cert.certType = e.value.code} disabled={cert.id > -1} />\r\n          </div>\r\n          \r\n        </div>\r\n        <Divider/>\r\n        <div className=\"p-grid p-mt-2\">              \r\n          <div className=\"p-col-6 p-d-flex p-flex-column p-jc-left p-ai-center p-flex-md-row p-flex-wrap\">\r\n            <div className=\"overview-number p-mr-1 p-mb-1\" style={{padding:'0.1rem'}}>РАНЕЕ ВЫДАННОГО:</div>\r\n             <div className=\"overview-subtext p-mr-1 p-mb-1\" style={{fontWeight:600,padding:'0.2rem'}}>{!!cert.numberPrev ? `${cert.seriesPrev} ${cert.numberPrev} от ${cert.effTimePrev?.toLocaleString('ru', DATE_FORMAT)}` : 'НЕТ'}</div>\r\n          </div>\r\n          <div className=\"p-col-6 p-d-flex p-flex-column p-jc-left p-ai-center p-flex-md-row p-flex-wrap\"\r\n            style={{borderLeft:'1px #dee2e6', borderLeftStyle:'solid'}}>\r\n            <div className=\"overview-number p-mr-1 p-mb-1\" style={{padding:'0.1rem'}}>Статус:</div>\r\n            <div className=\"overview-subtext p-mr-1 p-mb-1\"style={{fontWeight:600,background: cert.latestOne ? 'rgb(211 47 47 / 22%)': '#c8e6c9', color: cert.latestOne ? 'rgb(211 47 47)' : '#256029', padding:'0.2rem'}}>{cert.latestOne ? 'ЗАМЕНЕНО' : 'АКТУАЛЬНОЕ'}</div>\r\n          </div>              \r\n        </div>\r\n      </Card>  \r\n    </>)\r\n  }\r\n  export default observer(Section0) ","export const HOME_REGION_CODE = \"28\"\r\nexport const DEFAULT_CERT_SUGGESTIONS = [\r\n  { section: \"0\", code: \"0\", suggestion: \"Необходимо выбрать тип свидетельства\", done: false },\r\n  {\r\n    section: \"1\",\r\n    code: \"п.1\",\r\n    suggestion: \"Поля ФИО должны быть заполнены, если умерший идентифицирован\",\r\n    done: false,\r\n  },\r\n  { section: \"1\", code: \"п.2\", suggestion: \"Указание пола умершего является обязательным для заполнения\", done: false },\r\n  {\r\n    section: \"1\",\r\n    code: \"п.3\",\r\n    suggestion: \"Указание даты рождения или причины ее отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"1\",\r\n    code: \"п.7\",\r\n    suggestion: \"Указание даты смерти или причины ее отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"2\",\r\n    code: \"п.4.1\",\r\n    suggestion: \"Указание серии ДУЛ умершего или причины его отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"2\",\r\n    code: \"п.4.2\",\r\n    suggestion: \"Указание номера ДУЛ умершего или причины его отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"2\",\r\n    code: \"п.4.3\",\r\n    suggestion: \"Указание органа выдавшего ДУЛ умершего или причины его отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"2\",\r\n    code: \"п.4.4\",\r\n    suggestion: \"Указание даты выдачи ДУЛ умершего или причины его отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"2\",\r\n    code: \"п.4.5\",\r\n    suggestion: \"Указание кода подразделения ДУЛ умершего или причины его отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"2\",\r\n    code: \"п.5\",\r\n    suggestion: \"Указание SNILS умершего или причины его отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"2\",\r\n    code: \"п.6\",\r\n    suggestion: \"Указание полиса ОМС или причины его отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"3\",\r\n    code: \"п.8\",\r\n    suggestion: \"Место жительства или причина его отсутствия - обязательны для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"3\",\r\n    code: \"п.9\",\r\n    suggestion: \"Вид места жительства или причина его отсутствия - обязательны для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"3\",\r\n    code: \"п.10\",\r\n    suggestion: \"Вид места смерти или причина его отсутствия - обязательны для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"3\",\r\n    code: \"п.11\",\r\n    suggestion: \"Вид места смерти или причина его отсутствия - обязательны для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.12\",\r\n    suggestion: \"Выбор места наступления смерти - обязателен для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.13\",\r\n    suggestion: \"Выбор срока береммености для детей от 168 ч до 1месяца  - обязателен для заполнения\",\r\n    done: true,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.14.1\",\r\n    suggestion: \"Внесение весса для детей от 168 ч до года  - обязательно для заполнения\",\r\n    done: true,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.14.2\",\r\n    suggestion:\r\n      \"Внесение порядкового номера беременности матери для детей от 168 ч до года  - обязательно для заполнения\",\r\n    done: true,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.14.3\",\r\n    suggestion: \"Внесение ФИО матери для детей от 168 ч до года  - обязательно для заполнения\",\r\n    done: true,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.14.4\",\r\n    suggestion: \"Внесение даты рождения матери для детей от 168 ч до года  - обязательно для заполнения\",\r\n    done: true,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.14.5\",\r\n    suggestion: \"Внесение адреса жительства матери для детей от 168 ч до года  - обязательно для заполнения\",\r\n    done: true,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.15\",\r\n    suggestion: \"Указание семейного положения - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.16\",\r\n    suggestion: \"Указание образования - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.17\",\r\n    suggestion: \"Указание занятости - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"6\",\r\n    code: \"п.18\",\r\n    suggestion: \"Указание рода причины смерти - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"6\",\r\n    code: \"п.19\",\r\n    suggestion:\r\n      \"Указание указать дату, время и обстоятельства травмы (отравления), в случае смерти не от заболевания - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"6\",\r\n    code: \"п.20\",\r\n    suggestion: \"Указание типа медицинского работника, установившего причины смерти - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"6\",\r\n    code: \"п.21\",\r\n    suggestion: \"Указание основание установления причины смерти - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"7\",\r\n    code: \"п.22.a)\",\r\n    suggestion: \"Указание причины а) - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"7\",\r\n    code: \"п.22.a)т\",\r\n    suggestion: \"Период времени между началом патол. состояния и смертью в причине а) - обязателен для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"7\",\r\n    code: \"п.22.б)\",\r\n    suggestion: \"Указание причины б) или ее отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"7\",\r\n    code: \"п.22.б)т\",\r\n    suggestion:\r\n      \"Период времени между началом патол. состояния и смертью в причине б) или его отсутствие - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"7\",\r\n    code: \"п.22.в)\",\r\n    suggestion: \"Указание причины в) или ее отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"7\",\r\n    code: \"п.22.в)т\",\r\n    suggestion:\r\n      \"Период времени между началом патол. состояния и смертью в причине в) или его отсутствие - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"7\",\r\n    code: \"п.22.г)\",\r\n    suggestion: \"Указание причины г) или ее отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"7\",\r\n    code: \"п.22.г)т\",\r\n    suggestion:\r\n      \"Период времени между началом патол. состояния и смертью в причине г) или его отсутствие - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"8\",\r\n    code: \"п.22.II.1\",\r\n    suggestion: \"Указание кода прочего состояния или причины его отсутствия - обязательно для заполнения\",\r\n    done: true,\r\n  },\r\n  {\r\n    section: \"8\",\r\n    code: \"п.22.II.2\",\r\n    suggestion:\r\n      \"Указание периода времени между началом патол. состояния и смертью или причины его отсутствия - обязательно для заполнения\",\r\n    done: true,\r\n  },\r\n  {\r\n    section: \"9\",\r\n    code: \"п.23\",\r\n    suggestion: \"Указание периода наступления смерти в случае ДТП  - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"9\",\r\n    code: \"п.24\",\r\n    suggestion: \"Указание срока в случае наступления смерти при беременности  - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"9\",\r\n    code: \"п.25.1\",\r\n    suggestion:\r\n      \"Указание данных о враче (судебно-медицинском эксперте, фельдшере, акушерке), заполнившем свидетельство - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"9\",\r\n    code: \"п.25.2\",\r\n    suggestion: \"Указание данных о руководителе медицинской организации - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"9\",\r\n    code: \"п.26\",\r\n    suggestion:\r\n      \"Указание данных об ответственном за проверку медицинских свидетельств лице - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"10\",\r\n    code: \"*A\",\r\n    suggestion: \"Указание ФИО получателя - обязательно для печати\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"10\",\r\n    code: \"*B\",\r\n    suggestion: \"Указание даты выдачи - обязательно для печати\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"10\",\r\n    code: \"*С\",\r\n    suggestion: \"Указание СНИЛС или иного документа удостоверения личности - обязательно для печати\",\r\n    done: false,\r\n  },\r\n]\r\nexport const CERT_TYPE_SUG = 0\r\nexport const PERSON_NAME_SUG = 1\r\nexport const PATIENT_GENDER_SUG = 2\r\nexport const PATIENT_BIRTHDAY_SUG = 3\r\nexport const CERT_DEATH_THIME_SUG = 4\r\nexport const IDSERIES_SUG = 5\r\nexport const IDNUMBER_SUG = 6\r\nexport const IORGNAME_SUG = 7\r\nexport const IORGDATE_SUG = 8\r\nexport const IORGCODE_SUG = 9\r\nexport const SNILS_SUG = 10\r\nexport const OMS_SUG = 11\r\nexport const LIFE_AREA_SUG = 13\r\nexport const LIFE_PLACE_SUG = 12\r\nexport const DEATH_PLACE_SUG = 14\r\nexport const DEATH_AREA_SUG = 15\r\nexport const DEATH_PLACE_TYPE_SUG = 16\r\nexport const TERMS_PREGNANCY_SUG = 17\r\nexport const CHILD_WEIGHT_SUG = 18\r\nexport const NUMBER_PREGNANCY_SUG = 19\r\nexport const MOTHER_FIO_SUG = 20\r\nexport const MOTHER_BIRTHDAY_SUG = 21\r\nexport const MOTHER_ADDRESS_SUG = 22\r\nexport const MARITAL_STATUS_SUG = 23\r\nexport const EDUCATION_LEVEL_SUG = 24\r\nexport const SOCIAL_STATUS_SUG = 25\r\nexport const DEATH_KINDS_SUG = 26\r\nexport const KIND_DEATH_REASON_SUG = 27\r\nexport const EST_MEDIC_SUG = 28\r\nexport const BASIS_DERMINING_SUG = 29\r\nexport const REASON_A_SUG = 30\r\nexport const REASON_A_TIME_SUG = 31\r\nexport const REASON_B_SUG = 32\r\nexport const REASON_B_TIME_SUG = 33\r\nexport const REASON_C_SUG = 34\r\nexport const REASON_C_TIME_SUG = 35\r\nexport const REASON_D_SUG = 36\r\nexport const REASON_D_TIME_SUG = 37\r\nexport const EXT_REASON_SUG = 38\r\nexport const EXT_REASON_TIME_SUG = 39\r\nexport const TRAFFFIC_ACCIDENT_SUG = 40\r\nexport const PREGNANCY_CONNECTION_SUG = 41\r\nexport const AUTHOR_SUG = 42\r\nexport const AUTHENTICATOR_SUG = 44\r\nexport const LEGAL_AUTHENTICATOR_SUG = 43\r\nexport const PARTIPICIPANT_FIO_SUG = 45\r\nexport const PARTIPICIPANT_DATE_SUG = 46\r\nexport const PARTIPICIPANT_IDENTITY_SUG = 47\r\n\r\nexport const changeSuggestion = (code: string, suggestions: any[], done: boolean) => {\r\n  const suggestion = suggestions.find((item) => item.code === code)\r\n  if (suggestion) suggestion.done = done\r\n}\r\n\r\nexport const NULL_FLAVORS = [\r\n  { code: \"NI\", name: \"Нет информации\" },\r\n  { code: \"INV\", name: \"Недопустимое значение\" },\r\n  { code: \"DER\", name: \"Извлекаемое значение\" },\r\n  { code: \"OTH\", name: \"Другое\" },\r\n  { code: \"NINF\", name: \"Минус бесконечность\" },\r\n  { code: \"PINF\", name: \"Плюс бесконечность\" },\r\n  { code: \"UNC\", name: \"Кодирование не проводилось\" },\r\n  { code: \"MSK\", name: \"Скрыто\" },\r\n  { code: \"NA\", name: \"Неприменимо\" },\r\n  { code: \"UNK\", name: \"Неизвестно\" },\r\n  { code: \"ASKU\", name: \"Запрошено, но неизвестно\" },\r\n  { code: \"NAV\", name: \"Временно недоступно\" },\r\n  { code: \"NASK\", name: \"Не запрашивалось\" },\r\n  { code: \"QS\", name: \"Достаточное количество\" },\r\n  { code: \"TRC\", name: \"Трудноразличимо\" },\r\n]\r\nexport type NULL_FLAVOR_CODES =\r\n  | \"NI\"\r\n  | \"INV\"\r\n  | \"DER\"\r\n  | \"OTH\"\r\n  | \"NINF\"\r\n  | \"PINF\"\r\n  | \"UNC\"\r\n  | \"MSK\"\r\n  | \"NA\"\r\n  | \"UNK\"\r\n  | \"ASKU\"\r\n  | \"NAV\"\r\n  | \"NASK\"\r\n  | \"QS\"\r\n  | \"TRC\"\r\n\r\nexport type INullFlavorIdx = {\r\n  [index in NULL_FLAVOR_CODES]: number\r\n}\r\nexport const NULL_FLAVOR_IDX: INullFlavorIdx = {\r\n  NI: 0,\r\n  INV: 1,\r\n  DER: 2,\r\n  OTH: 3,\r\n  NINF: 4,\r\n  PINF: 5,\r\n  UNC: 6,\r\n  MSK: 7,\r\n  NA: 8,\r\n  UNK: 9,\r\n  ASKU: 10,\r\n  NAV: 11,\r\n  NASK: 12,\r\n  QS: 13,\r\n  TRC: 14,\r\n}\r\nexport const ASKU = 10\r\nexport const NA = 8\r\nexport const UNK = 9\r\n\r\nexport const MALE = 1\r\nexport const FEMALE = 2\r\nexport const NOGENDER = 4\r\n\r\nexport const URBAN_AREA_TYPE = 1\r\nexport const VILAGE_AREA_TYPE = 2\r\nexport interface ID_CARD_TYPE {\r\n  code: number\r\n  name: string\r\n  s_mask?: string\r\n  n_mask?: string\r\n  c_mask?: string\r\n}\r\nexport const ID_CARD_TYPES: Array<ID_CARD_TYPE> = [\r\n  { code: 1, name: \"Паспорт гр. РФ\", s_mask: \"99 99\", n_mask: \"999999\", c_mask: \"999-999\" },\r\n  { code: 2, name: \"Заграничный паспорт гр. РФ\", s_mask: \"99\", n_mask: \"9999999\", c_mask: \"ФМС 99999\" },\r\n  { code: 3, name: \"Служебный паспорт\" },\r\n  { code: 4, name: \"Врем. уд. личности(форма № 2П)\" },\r\n  { code: 6, name: \"Свидетельство о рождении\", n_mask: \"999999\" },\r\n  { code: 8, name: \"Удостоверение личности военнослужащего\" },\r\n  { code: 9, name: \"Военный билет\" },\r\n  { code: 10, name: \"Паспорт иностранного гражданина\" },\r\n  { code: 11, name: \"Вид на жительство\" },\r\n  { code: 17, name: \"Разрешение на временное проживание в РФ\" },\r\n  { code: 25, name: \"Справка об освобождении из места лишения свободы\" },\r\n  { code: 36, name: \"Водительское удостоверение\" },\r\n  { code: 38, name: \"Охотничий билет\" },\r\n]\r\n\r\nexport const PASSPORT_RF = 0\r\nexport const REGION = { code: \"28\", name: \"Амурская область\" }\r\nexport const REGION_OKATO = \"10\"\r\nexport const DEFAULT_ERROR_TOAST = {\r\n  severity: \"error\",\r\n  summary: \"Сбой\",\r\n  detail: \"Что-то пошло не так, по-пробуйте позднее\",\r\n  life: 3000,\r\n  baseZIndex: 999,\r\n}\r\n","import React, {FC} from 'react'\r\nimport { IReference } from '../models/IReference'\r\nimport { Checkbox, CheckboxChangeParams } from \"primereact/checkbox\"\r\nimport { Dropdown, DropdownChangeParams } from \"primereact/dropdown\"\r\nimport { useState } from 'react'\r\nimport { NULL_FLAVORS } from '../utils/defaults'\r\nimport { INullFlavorR } from '../models/INullFlavor'\r\nimport { useEffect } from 'react'\r\n\r\ntype NullFlavorWrapperProps = {\r\n  paraNum?: boolean,  \r\n  label: React.ReactElement,  \r\n  checked?: boolean, \r\n  setCheck?: ((e: CheckboxChangeParams, nullFlavors?: INullFlavorR[]) => void), \r\n  disabled?: boolean,\r\n  field: React.ReactElement,\r\n  field_name?: string,\r\n  options: IReference[],\r\n  nullFlavors?: INullFlavorR[], \r\n  value?: number,  \r\n  onChange?: ((e: IReference, nullFlavors: INullFlavorR[] | undefined) => void),\r\n  lincked?: boolean\r\n}\r\n\r\nconst NullFlavorWrapper: FC<NullFlavorWrapperProps>=(props: NullFlavorWrapperProps) => {   \r\n  const [value, setValue] = useState<IReference | null>(props.value? NULL_FLAVORS[props.value] : null)\r\n  const [checked, setChecked] = useState<boolean>(props.checked || false) \r\n  const fieldStyle = props.paraNum ? {marginLeft: '-0.76rem'} : {}\r\n  const ddStyle = {width: '200px'}\r\n  const nullFlavors = (props.nullFlavors && props.nullFlavors.length>0 && props.field_name ) ? props.nullFlavors.filter((element: INullFlavorR)=>element.parent_attr!==props.field_name) : []\r\n  const nullFlavor = (props.nullFlavors && props.nullFlavors.length>0 && props.field_name ) ? props.nullFlavors.find((element: INullFlavorR)=>element.parent_attr===props.field_name) : false\r\n  useEffect(()=>{   \r\n    if (props.nullFlavors) {\r\n      const nullFlavor = props.nullFlavors.find(item=>item.parent_attr===props.field_name && !item._destroy)\r\n      if (nullFlavor) {\r\n        setValue(NULL_FLAVORS[nullFlavor.code])\r\n        if (props.checked!==true) setChecked(false)\r\n      } else if (props.checked!==false) setChecked(true)\r\n    }    \r\n  },[props.nullFlavors, props.field_name, props.checked])   \r\n  \r\n  const checkbox  = !props.lincked && <Checkbox        \r\n        style={{ marginLeft: \"0.4rem\" }}\r\n        checked={checked}\r\n        disabled={props.disabled} \r\n        onChange={(e)=>{\r\n            setChecked(e.checked)\r\n            if (props.nullFlavors) {\r\n              if (props.setCheck && e.checked ) { \r\n                if (nullFlavor && nullFlavor.id) {\r\n                  props.nullFlavors.forEach(el=>{\r\n                    if (el.parent_attr===props.field_name) el._destroy=\"1\"\r\n                  })\r\n                  props.setCheck(e)\r\n                } else  props.setCheck(e, nullFlavors)\r\n              } else if (props.setCheck && props.value && props.field_name) { \r\n                let _nullFlavors = nullFlavors               \r\n                _nullFlavors.push({parent_attr: props.field_name, code: props.value })                                 \r\n                props.setCheck(e, _nullFlavors)                            \r\n              } else if (props.setCheck) props.setCheck(e)             \r\n            } else if (props.setCheck) props.setCheck(e)            \r\n          }\r\n        }        \r\n      />  \r\n       \r\n  const style =  props.lincked ? {marginTop:'0.4rem'} : {}  \r\n  const checkboxLabel = props.lincked && !props.checked ? (<></>) : (\r\n    <div className='p-checkbox-right p-field-checkbox'\r\n     key={`nf_${props.checked}_${props.paraNum}`} style={style}>            \r\n      {props.label}     \r\n      {checkbox}\r\n     </div>\r\n  )\r\n  const dropdown = !props.lincked && <Dropdown       \r\n      id={\"p\" + props.field_name}       \r\n      key={`dd_${props.field_name}_${props.checked}`}\r\n      style={fieldStyle}\r\n      value={value}      \r\n      options={props.options}\r\n      onChange={(e: DropdownChangeParams)=>{   \r\n        setValue(e.value)                \r\n        if (props.onChange) { // for not in MobX nullflavors\r\n          const nullFlavor = {parent_attr: props.field_name, code: NULL_FLAVORS.findIndex((element)=>element.code===e.value.code)}\r\n          let _nullFlavors = nullFlavors\r\n          _nullFlavors.push(nullFlavor as INullFlavorR)\r\n          props.onChange(e.value, _nullFlavors)\r\n        } else if (!!props.nullFlavors) { //standart case nullFlavor\r\n            const idx = props.nullFlavors.findIndex(item=>item.parent_attr===props.field_name)\r\n            if (idx > -1) props.nullFlavors[idx].code = NULL_FLAVORS.findIndex((element)=>element.code===e.value.code)\r\n            else throw new Error(`Error change nullFlavor: invalid field name:  ${props.field_name}`)            \r\n        }                                    \r\n      }}\r\n      optionLabel='name'      \r\n      placeholder='Причина отсутствия'\r\n    />    \r\n  const canNullFlavor = checked ? (\r\n    <div style={fieldStyle}>{props.field}</div>\r\n  ) : (\r\n    <div style={ddStyle}>{dropdown}</div>\r\n  )  \r\n  return (<>{checkboxLabel}{canNullFlavor}</>)\r\n}\r\nexport default NullFlavorWrapper","import { NULL_FLAVOR_CODES, UNK } from \"../utils/defaults\"\r\nimport { IDestroyble } from \"./IDestroyble\"\r\nexport interface INullFlavor {\r\n  id?: number\r\n  parent_guid?: string\r\n  parent_attr: string\r\n  code: NULL_FLAVOR_CODES\r\n}\r\n\r\nexport interface INullFlavorR extends IDestroyble {\r\n  id?: number\r\n  parent_guid?: string\r\n  parent_attr: string\r\n  code: number\r\n}\r\n\r\n//получаем чистый NullFlavor без метки удаления\r\nexport const getCleanNullFlavor = (old: INullFlavorR): INullFlavorR | undefined => {\r\n  if (old === undefined) return\r\n  let _new = { code: old.code, parent_attr: old.parent_attr } as INullFlavorR\r\n  if (old.id) _new.id = old.id\r\n  if (old.parent_guid) _new.parent_guid = old.parent_guid\r\n  return _new\r\n}\r\n\r\n//генерируем заполнитель UNK автоматически,\r\n//проверяя значение field\r\n//и массив заполнителей до внесения изменений: original\r\nexport const checkFieldNullFlavor = (\r\n  key: string,\r\n  field: any | null | undefined,\r\n  nullFlavors: INullFlavorR[],\r\n  code = UNK\r\n) => {\r\n  let idx = nullFlavors.findIndex((item) => item.parent_attr === key)\r\n  if (field && idx !== -1 && nullFlavors[idx].id) {\r\n    do {\r\n      nullFlavors[idx]._destroy = \"1\"\r\n      idx = nullFlavors.findIndex((item) => item.parent_attr === key && !item._destroy && item.id)\r\n    } while (idx !== -1)\r\n  } else if (field && idx !== -1) nullFlavors.splice(idx, 1)\r\n  else if (!field && idx !== -1 && nullFlavors[idx]._destroy === \"1\") {\r\n    nullFlavors[idx] = { ...getCleanNullFlavor(nullFlavors[idx]) } as INullFlavorR\r\n  } else if (!field && idx === -1) nullFlavors.push({ code: code, parent_attr: key })\r\n}\r\n\r\n//генерируем заполнители UNK автоматически,\r\n//проверяя карту fields<имя поля, значение>\r\n//и массив заполнителей до внесения изменений: original\r\nexport const createNullFlavors = (fields: Map<string, any | null | undefined>, original: INullFlavorR[]) => {\r\n  fields.forEach((value, key) => {\r\n    checkFieldNullFlavor(key, value, original)\r\n  })\r\n}\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport { NULL_FLAVOR_IDX } from \"../../utils/defaults\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport IIdentity from \"../IIdentity\"\r\nimport { INullFlavorR } from \"../INullFlavor\"\r\nimport IIdentityR from \"../requests/IIdentityR\"\r\n\r\nexport default class Identity implements ISerializable {\r\n  private _id?: string\r\n  private _identityCardType: number\r\n  private _series?: string\r\n  private _number: string | undefined\r\n  private _issueOrgName: string | undefined\r\n  private _issueOrgCode?: string | undefined\r\n  private _issueOrgDate: Date | undefined\r\n  private _parentGUID: string\r\n  private _nullFlavors: INullFlavorR[]\r\n  constructor(props: IIdentity) {\r\n    this._id = props.id\r\n    this._identityCardType = props.identity_card_type_id\r\n    if (props.series) this._series = props.series\r\n    this._number = props.number\r\n    this._issueOrgName = props.issueOrgName\r\n    if (props.issueOrgCode) this._issueOrgCode = props.issueOrgCode\r\n    if (props.issueDate) this._issueOrgDate = new Date(props.issueDate)\r\n    this._parentGUID = props.parentGUID\r\n    this._nullFlavors =\r\n      props.null_flavors?.map((item) => {\r\n        return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n      }) || []\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n  getAttributes(): IIdentityR {\r\n    let _identity = {} as IIdentityR\r\n    if (this._id) _identity.id = this._id\r\n    if (this._identityCardType) _identity.identity_card_type_id = this._identityCardType\r\n    if (this._issueOrgCode) _identity.issueOrgCode = this._issueOrgCode\r\n    if (this._issueOrgDate) _identity.issueDate = this._issueOrgDate.toDateString()\r\n    if (this._issueOrgName) _identity.issueOrgName = this._issueOrgName\r\n    if (this._nullFlavors.length > 0) _identity.null_flavors_attributes = this.null_flavors_attributes()\r\n    if (this._number) _identity.number = this._number\r\n    if (this._parentGUID) _identity.parentGUID = this._parentGUID\r\n    if (this._series) _identity.series = this._series\r\n    return _identity\r\n  }\r\n  get identityCardType() {\r\n    return this._identityCardType\r\n  }\r\n  set identityCardType(ct: number) {\r\n    this._identityCardType = ct\r\n  }\r\n  get series() {\r\n    return this._series ? this._series : \"\"\r\n  }\r\n  set series(series: string | undefined) {\r\n    this._series = series\r\n  }\r\n  get number() {\r\n    return this._number\r\n  }\r\n  set number(number: string | undefined) {\r\n    this._number = number\r\n  }\r\n  get issueOrgName() {\r\n    return this._issueOrgName\r\n  }\r\n  set issueOrgName(issueOrgName: string | undefined) {\r\n    this._issueOrgName = issueOrgName\r\n  }\r\n  get issueOrgDate() {\r\n    return this._issueOrgDate\r\n  }\r\n  set issueOrgDate(issueOrgDate: Date | undefined) {\r\n    this._issueOrgDate = issueOrgDate\r\n  }\r\n  get issueOrgCode() {\r\n    return this._issueOrgCode ? this._issueOrgCode : \"\"\r\n  }\r\n  set issueOrgCode(issueOrgCode: string | undefined) {\r\n    this._issueOrgCode = issueOrgCode\r\n  }\r\n  get parentGUID() {\r\n    return this._parentGUID\r\n  }\r\n  get nullFlavors() {\r\n    return this._nullFlavors\r\n  }\r\n  set nullFlavors(nullFlavors: INullFlavorR[]) {\r\n    this._nullFlavors = nullFlavors\r\n  }\r\n  // получение копии массива заполнителей из Observable.array\r\n  null_flavors_attributes() {\r\n    return this._nullFlavors.map((el) => {\r\n      return { ...el }\r\n    })\r\n  }\r\n}\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport { NULL_FLAVOR_IDX } from \"../../utils/defaults\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { IContact } from \"../IContact\"\r\nimport { INullFlavorR } from \"../INullFlavor\"\r\nimport { IPerson } from \"../IPerson\"\r\nimport { IPersonName } from \"../IPersonName\"\r\nimport { IAddressR } from \"../requests/IAddressR\"\r\nimport { IPersonR } from \"../requests/IPersonR\"\r\n\r\nexport default class Person implements ISerializable {\r\n  private _id?: string\r\n  private _personName?: IPersonName\r\n  private _SNILS?: string | undefined\r\n  private _nullFlavors: INullFlavorR[]\r\n  private _address?: IAddressR | undefined\r\n  private _contacts: IContact[]\r\n  private _oldOne?: IPerson\r\n\r\n  constructor(props = {} as IPerson) {\r\n    this._oldOne = props\r\n    this._personName = props.person_name\r\n    this._SNILS = props.SNILS\r\n    this._id = props.id\r\n    this._address = {\r\n      ...props.address,\r\n      null_flavors_attributes:\r\n        props.address?.null_flavors?.map((item) => {\r\n          return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n        }) || [],\r\n    } as IAddressR\r\n    this._nullFlavors =\r\n      props.null_flavors?.map((item) => {\r\n        return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n      }) || []\r\n    this._contacts = props.contacts || []\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n\r\n  getAttributes(): IPersonR {\r\n    let _person = {} as IPersonR\r\n    if (this._id) _person.id = this._id\r\n    if (this._SNILS) _person.SNILS = this._SNILS\r\n    if (this._address && !!this._address.state && !!this._address.streetAddressLine)\r\n      _person.address_attributes = { ...this._address }\r\n    else if (this._oldOne && this._oldOne.address?.id)\r\n      _person.address_attributes = { id: this._oldOne.address.id, _destroy: \"1\" } as IAddressR\r\n    if (this._contacts.length > 0) _person.contacts_attributes = [...this._contacts]\r\n    if (this._nullFlavors.length > 0) _person.null_flavors_attributes = this.null_flavors_attributes()\r\n    if (this._personName) _person.person_name_attributes = { ...this._personName }\r\n    return _person\r\n  }\r\n\r\n  get fio() {\r\n    return this._personName\r\n  }\r\n\r\n  set fio(fio: IPersonName | undefined) {\r\n    this._personName = fio\r\n  }\r\n\r\n  get nullFlavors() {\r\n    return this._nullFlavors\r\n  }\r\n  set nullFlavors(nullFlavors: INullFlavorR[]) {\r\n    this._nullFlavors = nullFlavors\r\n  }\r\n\r\n  // получение копии массива заполнителей из Observable.array\r\n  null_flavors_attributes() {\r\n    return this._nullFlavors.map((el) => {\r\n      return { ...el }\r\n    })\r\n  }\r\n\r\n  get SNILS() {\r\n    return this._SNILS\r\n  }\r\n\r\n  set SNILS(snils: string | undefined) {\r\n    this._SNILS = snils\r\n  }\r\n\r\n  get id() {\r\n    return this._id\r\n  }\r\n  get address(): IAddressR | undefined {\r\n    return this._address\r\n  }\r\n  set address(value: IAddressR | undefined) {\r\n    this._address = value\r\n  }\r\n  get contacts(): IContact[] {\r\n    return this._contacts\r\n  }\r\n  set contacts(value: IContact[]) {\r\n    this._contacts = value\r\n  }\r\n\r\n  fullName(): string {\r\n    const fio = this._personName\r\n    return !!fio ? `${fio.family} ${fio.given_1} ${!!fio.given_2 ? fio.given_2 : \"\"}` : \"\"\r\n  }\r\n}\r\n","export interface IPersonName {\r\n  id?: number\r\n  family: string // фамилия\r\n  given_1: string // имя\r\n  given_2?: string // отчество\r\n}\r\nexport const getOneLinePersonName = (person_name: IPersonName | undefined | null): string => {\r\n  if (!person_name) return \"\"\r\n  else return `${person_name.family} ${person_name.given_1} ${person_name.given_2 ? person_name.given_2 : \"\"}`.trim()\r\n}\r\n","import { InputText } from 'primereact/inputtext'\r\nimport { classNames } from 'primereact/utils'\r\nimport { FC, useState } from 'react'\r\nimport { getOneLinePersonName, IPersonName } from '../../models/IPersonName'\r\n\r\ntype PersonNameProps = {\r\n  personName?: IPersonName\r\n  submitted?:boolean\r\n  onChange:(personName: IPersonName)=>void\r\n}\r\nexport const PersonName:FC<PersonNameProps> = (props:PersonNameProps) =>{\r\n  const [fio, setFio] = useState(getOneLinePersonName(props.personName)) \r\n  const isErrorMessage = props.submitted && (!props.personName || !props.personName.family || !props.personName.given_1)\r\n  return (<>\r\n    <InputText  id=\"fio\" type=\"text\" \r\n      value={fio}                    \r\n      onChange={(e)=>{\r\n        setFio(e.target.value)               \r\n        const values = e.target.value.trim().split(\" \")\r\n        let _result = {} as IPersonName\r\n        if (props.personName?.id) _result.id = props.personName?.id\r\n        if (values && values.length > 1) {\r\n          _result = {..._result, family: values[0], given_1: values[1]} as IPersonName\r\n          if (values[2]) _result.given_2 = values[2]                      \r\n        } else  _result = {..._result, family: '', given_1: ''} as IPersonName\r\n        props.onChange(_result)                                      \r\n      }}\r\n      className={classNames({ 'p-invalid': isErrorMessage})}\r\n    />\r\n    {isErrorMessage && <small className=\"p-error\">Фамилия, имя обязательны</small>}\r\n  </>)\r\n} ","import { observer } from 'mobx-react-lite'\r\nimport { FC, useContext, useState } from 'react'\r\nimport { Context } from '../..'\r\nimport { Card } from 'primereact/card'\r\nimport { Checkbox, CheckboxChangeParams } from 'primereact/checkbox'\r\nimport { RadioButton } from 'primereact/radiobutton'\r\nimport '../../styles/components/RadioButton.css'\r\nimport '../../styles/components/Calendar.css'\r\nimport '../../styles/pages/CertificatePage.css'\r\nimport NullFlavorWrapper from '../NullFlavorWrapper'\r\nimport { ASKU, FEMALE, ID_CARD_TYPES, MALE, NOGENDER, NULL_FLAVORS, PASSPORT_RF, UNK } from '../../utils/defaults'\r\nimport { IReference } from '../../models/IReference'\r\nimport { Calendar } from 'primereact/calendar'\r\nimport { checkFieldNullFlavor, INullFlavorR } from '../../models/INullFlavor'\r\nimport { IPersonName } from '../../models/IPersonName'\r\nimport IIdentity from '../../models/IIdentity'\r\nimport Identity from '../../models/FormsData/Identity'\r\nimport Person from '../../models/FormsData/Person'\r\nimport { PersonName } from '../inputs/PersonName'\r\n\r\n\r\n const Section1: FC = () => {   \r\n  const { certificateStore, suggestionsStore, layoutStore } = useContext(Context) \r\n  const certificate = certificateStore.cert   \r\n  const patient = certificate.patient\r\n  const person =  patient.person     \r\n  const [yearBTChecked, setYearBTChecked] = useState<boolean>(!!patient.birth_year)   \r\n  const [yearDTChecked, setYearDTChecked] = useState<boolean>(!!certificate.deathYear) \r\n  \r\n  const header = () => {\r\n      return <span>Данные умершего</span>\r\n    }\r\n    \r\n  const identified = suggestionsStore.identified   \r\n  const optionCode = suggestionsStore.fromRelatives ? 'ASKU' : 'NA UNK'\r\n  const isDeathTime = certificate.deathDatetime!==undefined \r\n        && certificate.nullFlavors.findIndex((item)=>item.parent_attr===\"death_time\")===-1\r\n  return (<>    \r\n      <Card className=\"c-section p-mr-2 p-mb-2\" header={header}>        \r\n          <div className=\"p-fluid p-formgrid p-grid\">\r\n            <div className=\"p-field-checkbox p-col-12 p-lg-6\">              \r\n              <Checkbox inputId=\"notIdentified\" checked={!suggestionsStore.identified} onChange={e =>{                \r\n                if (e.checked) {\r\n                  patient.person = undefined\r\n                  patient.identity = undefined\r\n                  certificate.policyOMS = undefined\r\n                } else { \r\n                  patient.person = new Person()\r\n                  if (yearBTChecked) { setYearBTChecked(false) \r\n                    patient.setBirthDay(patient.birth_date as Date | undefined, false)\r\n                  }      \r\n                }  \r\n                checkFieldNullFlavor('person', patient.person, patient.nullFlavors, UNK) \r\n                checkFieldNullFlavor('identity', patient.identity, patient.nullFlavors, UNK)  \r\n                checkFieldNullFlavor('policy_OMS', certificate.policyOMS, certificate.nullFlavors, UNK)           \r\n                suggestionsStore.identified = !e.checked  \r\n                }} \r\n              />\r\n              <label htmlFor=\"notIdentified\">Умерший не идентифицирован</label>\r\n            </div>\r\n            <div className=\"p-field-checkbox p-col-12 p-lg-6\">              \r\n              <Checkbox inputId=\"fromRelatives\" checked={suggestionsStore.fromRelatives} \r\n              onChange={e =>{       \r\n                suggestionsStore.fromRelatives = e.checked\r\n                if (e.checked) { \r\n                  if (!patient.person) {\r\n                    patient.person = new Person()\r\n                    checkFieldNullFlavor('person', patient.person, patient.nullFlavors)\r\n                  }  \r\n                  if (yearBTChecked) { \r\n                    setYearBTChecked(false) \r\n                    patient.setBirthDay(patient.birth_date as Date | undefined, false)\r\n                  }\r\n                  patient.identity = undefined  \r\n                  checkFieldNullFlavor('identity', patient.identity, patient.nullFlavors, ASKU)                                  \r\n                } else \r\n                  patient.identity = new Identity({identity_card_type_id: ID_CARD_TYPES[PASSPORT_RF].code} as IIdentity)                \r\n                }}/>\r\n              <label htmlFor=\"fromRelatives\">Внесено со слов родственников</label>\r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">\r\n              <div className='paragraph p-mr-1'> 1. </div>\r\n              <div className='p-paragraph-field p-mr-2 p-mb-2' \r\n                key={`pdiv1_${identified}`} >\r\n                <NullFlavorWrapper \r\n                  disabled={!suggestionsStore.fromRelatives}               \r\n                  checked={identified} \r\n                  paraNum                                \r\n                  label={<label htmlFor=\"family\">Фамилия, имя, отчество(при наличии)</label>}\r\n                  field={<PersonName personName={person?.fio}                                     \r\n                    onChange={(value: IPersonName | undefined)=>{     \r\n                      if (!person) return                          \r\n                      if (value?.family !== \"\" && (!person.fio || person.fio.family ===\"\")) layoutStore.message = { severity: 'success', summary: 'Успешно', detail: 'ФИО умершего изменены, чтобы сохранить изменения, введите причину А в п.22', life: 3000 }                                        \r\n                      person.fio = value || {family:'',given_1:''}\r\n                      checkFieldNullFlavor('fio.given_2', person.fio.given_2, person.nullFlavors, UNK)     \r\n                                                  \r\n                  }}/>}                  \r\n                  options={NULL_FLAVORS.filter((item:IReference)=>optionCode.includes(item.code))} \r\n                  value={suggestionsStore.fromRelatives ? ASKU : UNK} \r\n                  nullFlavors={patient.nullFlavors}  \r\n                  field_name=\"person\"                                 \r\n                />             \r\n              </div>\r\n            </div>  \r\n            <div className=\"p-d-flex p-jc-center\">\r\n              <div className='paragraph p-mr-1' > 2. </div>\r\n              <div className='p-paragraph-field'>\r\n                <div className=\"p-formgroup-inline\">\r\n                  <div className='p-field-radiobutton p-radiobutton'>Пол</div>\r\n                  <div className='p-field-radiobutton'>                  \r\n                    <RadioButton name='undef' checked={patient.gender === NOGENDER}\r\n                      onChange={(e)=>{\r\n                        if (e.checked) patient.gender = NOGENDER  \r\n                        else patient.gender = undefined\r\n                      }}/>\r\n                    <label htmlFor='undef'> Неопределенный </label>\r\n                  </div>\r\n                  <div className='p-field-radiobutton'>                  \r\n                    <RadioButton name='female' checked={patient.gender === FEMALE}\r\n                      onChange={(e)=>{\r\n                      if (e.checked) patient.gender = FEMALE  \r\n                      else patient.gender = undefined\r\n                      }}\r\n                    />\r\n                    <label htmlFor='female'> Женский</label>\r\n                  </div>                \r\n                  <div className='p-field-radiobutton'>                  \r\n                    <RadioButton name='male' checked={patient.gender === MALE}\r\n                      onChange={(e)=>{\r\n                        if (e.checked) patient.gender = MALE  \r\n                        else patient.gender = undefined\r\n                      }}\r\n                    />\r\n                    <label htmlFor='male'>Мужской</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-field p-d-flex p-jc-center\">\r\n              <div className='paragraph p-mr-1'> 3. </div>\r\n              <div className='p-paragraph-field' key={`pdiv5_${identified}`}>                    \r\n                <NullFlavorWrapper paraNum\r\n                    disabled={suggestionsStore.identified}                    \r\n                    label={<label htmlFor=\"dateBirth\">Дата рождения</label>}\r\n                    checked={suggestionsStore.identified || yearBTChecked } setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{                      \r\n                      if (!e.checked) {                        \r\n                        patient.birth_date = undefined\r\n                        patient.birth_year = undefined \r\n                      } \r\n                      if (nullFlavors) patient.nullFlavors = nullFlavors \r\n                    }} \r\n                    onChange={(e:IReference,  nullFlavors: INullFlavorR[] | undefined)=>{if (nullFlavors) patient.nullFlavors = nullFlavors}}\r\n                    field={<div className=\"p-d-flex p-jc-start p-ai-center\">              \r\n                      <Calendar id=\"dateBirth\" className=\"p-mr-2\" locale=\"ru\"\r\n                        dateFormat={yearBTChecked ? \"yy\" : \"dd.mm.yy\"}  \r\n                        view={yearBTChecked ? \"year\" : \"date\"} \r\n                        mask={yearBTChecked ? \"9999\" : \"99.99.9999\"}                         \r\n                        value={patient.birth_date} \r\n                        onChange={(e)=>{\r\n                          console.log('e',e)\r\n                          patient.setBirthDay(e.target.value as Date | undefined, yearBTChecked)\r\n                        }                          \r\n                        }\r\n                        showIcon />\r\n                      <div className=\"p-field-checkbox\">              \r\n                        <Checkbox checked={yearBTChecked} \r\n                          inputId=\"bd_year\" \r\n                          onChange={e=>{\r\n                            setYearBTChecked(e.checked)\r\n                            patient.setBirthDay(patient.birth_date as Date | undefined, e.checked) }}/>\r\n                        <label htmlFor=\"bd_year\">Только год</label>\r\n                      </div>\r\n                    </div>}\r\n                    options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n                    value={suggestionsStore.fromRelatives ? ASKU : UNK}\r\n                    field_name=\"birth_date\"\r\n                    nullFlavors={patient.nullFlavors}\r\n                />                               \r\n              </div>              \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-jc-center\">\r\n              <div className='paragraph p-mr-1'> 7. </div>\r\n              <div className='p-paragraph-field p-mr-3 p-mb-2'>\r\n                <NullFlavorWrapper paraNum                   \r\n                  label={<label htmlFor=\"dateDeath\">Дата смерти</label>}                  \r\n                  checked={certificate.deathDatetime!==undefined} setCheck={(e:CheckboxChangeParams, nullFlavors:      INullFlavorR[] | undefined)=>{                   \r\n                    if (!e.checked) certificate.setDeathDay(undefined, false)                      \r\n                    else certificate.setDeathDay(new Date(), false)                         \r\n                    if (nullFlavors) certificate.nullFlavors = nullFlavors  \r\n                  }} \r\n                  onChange={(e:IReference,  nullFlavors: INullFlavorR[] | undefined)=>{if (nullFlavors) certificate.nullFlavors = nullFlavors}}\r\n                  field={<div className=\"p-d-flex p-jc-start p-ai-center\">              \r\n                      <Calendar id=\"dateDeath\" className=\"p-mr-2\" locale=\"ru\"\r\n                        dateFormat={yearDTChecked ? \"yy\" : \"dd.mm.yy\"} \r\n                        mask={yearDTChecked ? \"9999\" : \"99.99.9999\"}\r\n                        view={yearDTChecked ? \"year\" : \"date\"}\r\n                        value={certificate.deathDatetime}\r\n                        onChange={(e)=>certificate.setDeathDay(e.target.value as Date | undefined, yearDTChecked) \r\n                        } \r\n                        showIcon />\r\n                      <div className=\"p-field-checkbox\">              \r\n                        <Checkbox checked={yearDTChecked} \r\n                          inputId=\"bd_year\" \r\n                          onChange={e=>{ setYearDTChecked(e.checked)\r\n                            certificate.setDeathDay(certificate.deathDatetime as Date | undefined, e.checked)}}/>\r\n                        <label htmlFor=\"bd_year\">Только год</label>\r\n                      </div>\r\n                    </div>}\r\n                    options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n                    value={UNK}\r\n                    field_name=\"death_datetime\"                    \r\n                    nullFlavors={certificate.nullFlavors}\r\n                 />\r\n              </div>     \r\n              <div className='p-paragraph-field' key={`pdivdt_${yearDTChecked}_${isDeathTime}`}>                \r\n                <NullFlavorWrapper \r\n                  disabled={yearDTChecked}                   \r\n                  label={<label htmlFor=\"timeDeath\">Время смерти</label>}\r\n                  checked={isDeathTime && !yearDTChecked} \r\n                  setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{                   \r\n                    if (nullFlavors) certificate.nullFlavors = nullFlavors  \r\n                  }}\r\n                  onChange={(e:IReference,  nullFlavors: INullFlavorR[] | undefined)=>{if (nullFlavors) certificate.nullFlavors = nullFlavors}} \r\n                  field={ <Calendar id=\"timeDeath\"  \r\n                    timeOnly hourFormat=\"24\" locale=\"ru\"                                                   \r\n                    value={certificate.deathDatetime} \r\n                    showIcon />}\r\n                  options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n                  value={UNK}\r\n                  field_name=\"death_time\"\r\n                  nullFlavors={certificate.nullFlavors}                  \r\n                />\r\n              </div>\r\n            </div>            \r\n          </div>          \r\n      </Card>  \r\n    </>)\r\n  }\r\n  export default observer(Section1) ","import { InputMask, InputMaskProps } from 'primereact/inputmask'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport Identity from '../../models/FormsData/Identity'\r\nimport { ID_CARD_TYPE } from '../../utils/defaults'\r\n\r\ntype InputsIdentityProps = {\r\n  dulValue?: ID_CARD_TYPE\r\n  identity?:Identity  \r\n}\r\nexport const inputsIdentity = (props:InputsIdentityProps) =>{\r\n  const identity = props.identity\r\n  const dulValue = props.dulValue\r\n  const seriesProps = {type:\"text\", id:\"series\", value:identity?.series,                  \r\n      onChange:(e:any)=>{if (identity) identity.series = e.target.value }}  \r\n  const seriesField = dulValue?.s_mask ? <InputMask {...{mask:dulValue?.s_mask,...seriesProps} as InputMaskProps }/>\r\n    : <InputText {...seriesProps}/>   \r\n  const numberProps = {type:\"text\", id:\"docNumber\", value:identity?.number,                  \r\n      onChange:(e:any)=>{if (identity) identity.number = e.target.value }}  \r\n  const numberField = dulValue?.n_mask ? <InputMask {...{mask:dulValue?.n_mask,...numberProps} as InputMaskProps }/>\r\n    : <InputText {...numberProps}/> \r\n  const depCodeProps = {type:\"text\", id:\"depCode\", value:identity?.issueOrgCode,                  \r\n      onChange:(e:any)=>{if (identity) identity.issueOrgCode = e.target.value}}  \r\n  const depCodeField = dulValue?.c_mask ? <InputMask {...{mask:dulValue?.c_mask,...depCodeProps} as InputMaskProps }/>\r\n    : <InputText {...depCodeProps}/> \r\n  return [seriesField, numberField,  depCodeField]\r\n}","import { observer } from 'mobx-react-lite'\r\nimport React, { FC, useContext, useState } from 'react'\r\nimport { Context } from '../..'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { Card } from 'primereact/card'\r\nimport { CheckboxChangeParams } from 'primereact/checkbox'\r\nimport '../../styles/components/RadioButton.css'\r\nimport '../../styles/components/Calendar.css'\r\nimport '../../styles/pages/CertificatePage.css'\r\nimport NullFlavorWrapper from '../NullFlavorWrapper'\r\nimport { ASKU, ID_CARD_TYPES, NA, NULL_FLAVORS, PASSPORT_RF, UNK } from '../../utils/defaults'\r\nimport { IReference } from '../../models/IReference'\r\nimport { Calendar } from 'primereact/calendar'\r\nimport { checkFieldNullFlavor, INullFlavorR } from '../../models/INullFlavor'\r\nimport { Dropdown } from 'primereact/dropdown'\r\nimport { InputMask } from 'primereact/inputmask'\r\nimport { InputTextarea } from 'primereact/inputtextarea'\r\nimport Identity from '../../models/FormsData/Identity'\r\nimport IIdentity from '../../models/IIdentity'\r\nimport { inputsIdentity } from '../inputs/inputsIdentity'\r\n\r\n\r\n\r\n const Section2: FC = () => {\r\n  const { certificateStore, suggestionsStore } = useContext(Context)   \r\n  const identified = suggestionsStore.identified  \r\n  const header = () => {\r\n      return <span>Документы умершего</span>\r\n    }    \r\n  const certificate = certificateStore.cert   \r\n  const patient = certificate.patient\r\n  const identity = patient.identity \r\n  const [docChecked, setDocChecked] = useState(identified && patient.nullFlavors.findIndex(item=>!item._destroy && item.parent_attr==='identity')===-1)    \r\n  const [dulValue, setDulValue]  = useState(ID_CARD_TYPES.find((item)=>item.code === identity?.identityCardType))\r\n  const person =  patient.person   \r\n  const nullFlavorOption =  docChecked ? \"UNK\" : \"UNK ASKU NA\" \r\n  const [seriesField, numberField, depCodeField] = inputsIdentity({dulValue, identity})    \r\n  return (<>    \r\n      <Card className=\"c-section p-mr-2 p-mb-2\" header={header}>        \r\n          <div className=\"p-fluid p-formgrid p-grid\">            \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">\r\n              <div className='paragraph p-mr-1'>4. </div>\r\n              <div className='p-paragraph-field p-mr-2 p-mb-2'>\r\n                <NullFlavorWrapper \r\n                  disabled={!identified} paraNum                              \r\n                  checked={docChecked} setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>\r\n                    { if (e.checked) {\r\n                      patient.identity = new Identity({\r\n                        identity_card_type_id: ID_CARD_TYPES[PASSPORT_RF].code,                                  \r\n                          } as IIdentity)\r\n                        if (!identified) suggestionsStore.identified = true\r\n                      } else patient.identity = undefined \r\n                      if (nullFlavors) patient.nullFlavors = nullFlavors\r\n                      setDocChecked(e.checked)\r\n                    }}\r\n                  nullFlavors={patient.nullFlavors}\r\n                  field_name=\"identity\"\r\n                  label={<label htmlFor=\"identity_card_type\">Документ, удостоверяющей личность умершего: </label>}\r\n                  field={<Dropdown  id=\"identity_card_type\" value={dulValue} \r\n                  autoFocus options={ID_CARD_TYPES} optionLabel='name'\r\n                  onChange={(e)=>{\r\n                    if (identity) identity.identityCardType = e.value.code\r\n                    else {\r\n                      patient.identity = new Identity({identity_card_type_id: e.value.code} as IIdentity)\r\n                      checkFieldNullFlavor(\"identity\", patient.identity, patient.nullFlavors)\r\n                    }  \r\n                    setDulValue(ID_CARD_TYPES.find((item)=>item.code === e.value.code))\r\n                  }}\r\n                  />}                  \r\n                  options={NULL_FLAVORS.filter((item:IReference)=>nullFlavorOption.includes(item.code))} \r\n                  value={docChecked ? UNK : ASKU}                                    \r\n                />             \r\n              </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" key={`ser_${docChecked}`} \r\n                style={{marginLeft:'1.5rem'}}>\r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"series\">Серия</label>}\r\n                  checked={docChecked && patient.identity?.nullFlavors.findIndex(nf=>nf.parent_attr==='series')===-1} setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                    if (e.checked && patient.identity) patient.identity.series = ''\r\n                    else if (patient.identity) patient.identity.series = undefined                                    \r\n                  }}                 \r\n                  field={seriesField}\r\n                  field_name='series'\r\n                  options={identified ? [NULL_FLAVORS[NA]] : [NULL_FLAVORS[ASKU]]}\r\n                  value={NA}\r\n                  nullFlavors={patient.identity?.nullFlavors}\r\n                  lincked={!docChecked}                                   \r\n                />  \r\n              </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" key={`num_${docChecked}`}\r\n                style={{marginLeft:'1.5rem'}} >\r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"docNumber\">Номер</label>}\r\n                  checked={docChecked}                 \r\n                  field={numberField}\r\n                  options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n                  value={identified ? UNK : ASKU} \r\n                  lincked                                      \r\n                />                    \r\n              </div>\r\n              <div className=\"p-paragraph-field p-mr-3 p-mb-2\" key={`org_${docChecked}`} style={{marginLeft:'1.5rem'}} >\r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"issueOrgName\">Кем выдан</label>}\r\n                  checked={docChecked}                   \r\n                  field={\r\n                    <InputTextarea id=\"issueOrgName\" value={identity?.issueOrgName} \r\n                    cols={65} rows={2}   disabled={!identified}\r\n                    onChange={(e)=>{if (identity) identity.issueOrgName = e.target.value }}/>}\r\n                  options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n                  value={identified ? UNK : ASKU} \r\n                  lincked                                      \r\n                />                    \r\n              </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={{marginLeft:'1.5rem'}} key={`pdiv5_${docChecked}`}>\r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"issueDate\">Когда выдан</label>}\r\n                  checked={docChecked}                   \r\n                  field={<Calendar  id=\"issueDate\" className=\"p-mr-2\" \r\n                    dateFormat={\"dd.mm.yy\"} \r\n                    locale=\"ru\" mask=\"99.99.9999\"                    \r\n                    value={identity?.issueOrgDate}\r\n                    onChange={(e)=>{if (identity) identity.issueOrgDate = e.target.value as Date | undefined}}\r\n                    showIcon />\r\n                  }\r\n                  options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n                  value={identified ? UNK : ASKU}\r\n                  field_name=\"issueDate\"\r\n                  lincked                                       \r\n                /> \r\n              </div>  \r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" key={`code_${docChecked}`} style={{marginLeft:'1.5rem'}}> \r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"depCode\">Код подразделения</label>}\r\n                  checked={docChecked && patient.identity?.nullFlavors.findIndex(nf=>nf.parent_attr==='issueOrgCode')===-1} \r\n                  setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                    if (e.checked && patient.identity) patient.identity.issueOrgCode = ''\r\n                    else if (patient.identity) patient.identity.issueOrgCode = undefined  \r\n                    if (nullFlavors && patient.identity) patient.identity.nullFlavors =  nullFlavors            \r\n                  }}                   \r\n                  field={depCodeField}\r\n                  options={identified ? [NULL_FLAVORS[NA]] : [NULL_FLAVORS[ASKU]]}\r\n                  value={identified ? NA : ASKU} \r\n                  nullFlavors={patient.identity?.nullFlavors} \r\n                  lincked={!docChecked}\r\n                  field_name=\"issueOrgCode\"                                     \r\n                />                    \r\n              </div>              \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-jc-center\">\r\n              <div className='paragraph p-mr-1'> 5. </div>\r\n              <div className='p-paragraph-field'>                    \r\n                <NullFlavorWrapper paraNum                    \r\n                    label={<label htmlFor=\"snils\">СНИЛС</label>}\r\n                    disabled={!identified} \r\n                    checked={person && person.nullFlavors.findIndex(item=>item.parent_attr === 'SNILS' && !item._destroy)===-1} setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                      if (!person) return\r\n                      if (nullFlavors) person.nullFlavors = nullFlavors\r\n                      if (!e.checked) person.SNILS = undefined                                       \r\n                    }}                    \r\n                    field={<InputMask id=\"snils\"  \r\n                      type=\"text\" mask=\"999-999-999 99\"\r\n                      value={person?.SNILS} \r\n                      onChange={(e)=>{\r\n                        if (!person) return\r\n                        person.SNILS = e.target.value}}/>            \r\n                    }\r\n                    options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK NA\".includes(item.code))} \r\n                    value={docChecked ? UNK : ASKU}\r\n                    field_name=\"SNILS\"\r\n                    nullFlavors={person?.nullFlavors}\r\n                />                               \r\n              </div>              \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-jc-center\">\r\n              <div className='paragraph p-mr-1'>6.* </div>\r\n              <div className='p-paragraph-field p-mr-3 p-mb-2'>\r\n                <NullFlavorWrapper  paraNum                   \r\n                    label={<label htmlFor=\"policyOMS\">Серия и номер полиса ОМС</label>}\r\n                    checked={identified && certificate.nullFlavors.findIndex(item=>item.parent_attr === 'policy_OMS' && !item._destroy)===-1} setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                      if (nullFlavors) certificate.nullFlavors = nullFlavors\r\n                      if (!e.checked) certificate.policyOMS = undefined                                           \r\n                    }}                     \r\n                    field={<InputText id=\"policyOMS\"  \r\n                      type=\"text\" \r\n                      value={certificate.policyOMS} \r\n                      onChange={(e)=>{certificate.policyOMS = e.target.value}}/>            \r\n                    }\r\n                    options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK NA\".includes(item.code))} \r\n                    value={docChecked ? UNK : ASKU}\r\n                    field_name=\"policy_OMS\"\r\n                    nullFlavors={certificate.nullFlavors}\r\n                />\r\n              </div>                   \r\n            </div>  \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%', paddingLeft:'0.5rem'}} >\r\n              <em>* В случае смерти ребенка до года заполняется в отношении матери</em>\r\n            </div>          \r\n          </div>          \r\n      </Card>  \r\n    </>)\r\n  }\r\n  export default observer(Section2) ","/*\r\n* ADDRESS SEARCH DIALOG COMPONENT\r\n* функционал ввода адреса посредством поиска в ФИАС\r\n* параметры:\r\n* ID - ID существующей записи адреса в СУБД \r\n* address - полное представление записи адреса в СУБД  \r\n*/\r\nimport { observer } from 'mobx-react-lite'\r\nimport { AutoComplete, AutoCompleteChangeParams } from 'primereact/autocomplete'\r\nimport { Button } from 'primereact/button'\r\nimport { Dialog } from 'primereact/dialog'\r\nimport { Dropdown } from 'primereact/dropdown'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { Toast } from 'primereact/toast'\r\nimport { FC, useContext, useEffect, useRef, useState } from 'react'\r\nimport { Context } from '../..'\r\nimport { IReference } from '../../models/IReference'\r\nimport { IFiasItem } from '../../models/responses/IFiasItem'\r\nimport { DEFAULT_ERROR_TOAST, HOME_REGION_CODE } from '../../utils/defaults'\r\n\r\ntype AddressDialogProps = {  \r\n  onCancel?: ()=>void \r\n}\r\n\r\nconst AddressDialog: FC<AddressDialogProps> = (props: AddressDialogProps) =>{ \r\n  const { addressStore } = useContext(Context)  \r\n  const [isLoading] = useState(addressStore.isLoading)  \r\n  const value = addressStore.address  \r\n  const streetAddressLine = value.streetAddressLine\r\n  const regions = addressStore.regionsOptions\r\n  const [searchStr, setSearchStr] = useState<string>('')   \r\n  useEffect(()=>setSearchStr(streetAddressLine)    \r\n  , [streetAddressLine])  \r\n  const [region, setRegion] = useState<IReference>()\r\n  useEffect(()=>setRegion(regions?.find((item)=>item.code === value.state?.code))      \r\n   , [regions, value.state])   \r\n  const [district, setDistrict] = useState<string>('')\r\n  useEffect(()=>setDistrict(value.district?.name || ''), [value.district?.name])\r\n  const [city, setCity] = useState<string>(value.city?.name || '')\r\n  useEffect(()=>setCity(value.city?.name || ''), [value.city?.name])\r\n  const [town, setTown] = useState<string>(value.town?.name || '')\r\n  useEffect(()=>setTown(value.town?.name || ''), [value.town?.name])\r\n  const [street, setStreet] = useState<string>(value.street?.name || '')\r\n  useEffect(()=>setStreet(value.street?.name || ''), [value.street?.name])\r\n  const [house, setHouse] = useState<string>(value.housenum || '')\r\n  useEffect(()=>setHouse(value.housenum || ''), [value.housenum])\r\n  const [addresses, setAddresses] = useState(addressStore.fiasOptions)   \r\n  const toast = useRef<Toast>(null)\r\n  const setAddress = (e:IFiasItem)=>{ \r\n    if (e === null) return      \r\n    if (e.parent) setAddress(e.parent)\r\n    if (e.postalCode && e.postalCode.length>0) value.postalCode = e.postalCode\r\n    value.aoGUID = e.AOGUID\r\n    value.houseGUID = e.HouseGUID \r\n    value.streetAddressLine = e.streetAddressLine\r\n    switch (e.level) {\r\n      case 'Region' : if (e.code) value.state = {code: e.code.slice(0,2), name: e.name}      \r\n        setRegion(regions?.find((item)=>item.code === value.state?.code))\r\n        break\r\n      case 'City': value.city = {code: e.AOGUID, name: e.name}\r\n        setCity(e.name) \r\n        break\r\n      case 'District': value.district = {code: e.AOGUID, name: e.name}\r\n        setDistrict(e.name)\r\n        break\r\n      case \"RailWayObject\":  \r\n      case 'Town': value.town = {code: e.AOGUID, name: e.name}\r\n        setTown(e.name)\r\n        break\r\n      case 'building': value.housenum = e.housenum; \r\n        value.buildnum = e.buildnum;\r\n        value.strucnum = e.strucnum;\r\n      break\r\n      case 'Street': \r\n        setStreet(e.name)\r\n        value.street = {code: e.AOGUID, name: e.name}\r\n      break\r\n    }         \r\n  }  \r\n  useEffect( () => {     \r\n    if (regions===undefined) {\r\n      addressStore.fetchRegionOptions()          \r\n    } else if (value.state===undefined || value.state===null)  {      \r\n      setRegion(regions?.find((region)=>region.code===HOME_REGION_CODE)) \r\n      value.state = region\r\n    } else if (value.state?.code) {\r\n      setRegion(regions?.find((region)=>region.code===value.state?.code))\r\n    }    \r\n  }, [regions, value, addressStore, region])  \r\n  \r\n  \r\n  const onHide = ()=>{ \r\n    addressStore.dialogVisible = false\r\n  }\r\n\r\n  const autocompleteOnChange = (e: AutoCompleteChangeParams, setter: (value: string)=>void) => {\r\n    if(e.value && e.value?.AOGUID) { \r\n      addressStore.clear()                                        \r\n      setAddress(e.value)\r\n    } else setter(e.value)\r\n  }\r\n\r\n  const getSuggestions = (parent:string, level: string, query:string)=>{\r\n   addressStore.getChildItems(parent, level, query)\r\n    .then(response=>setAddresses(response))\r\n    .catch(reason => {  \r\n       if (toast.current) toast.current.show({...DEFAULT_ERROR_TOAST, detail:`ошибка запроса к ФИАС: ${reason.message}`})\r\n       setAddresses([])\r\n    })    \r\n  }\r\n\r\n  const cantSaveChanges = ()=> {    \r\n    if ((!addressStore.manualMode && addressStore.isNotStrictly()) \r\n      || addressStore.address.oldOne.streetAddressLine === addressStore.streetAddressLine()) return true\r\n    else  return false  \r\n  }\r\n  const footer = (\r\n    <div>\r\n      <Button label=\"Применить\" icon=\"pi pi-check\" disabled={cantSaveChanges()}\r\n        onClick={()=>{          \r\n          if (addressStore.isNotStrictly() && addressStore.manualMode) {  \r\n            value.housenum = house          \r\n            if (value.houseGUID === null && !!house ) \r\n              addressStore.address.streetAddressLine = `${searchStr}${value.housenum.length>0 ? ', '+value.housenum : ''}`\r\n            else addressStore.address.streetAddressLine = searchStr\r\n          }  \r\n          if (addressStore.onAddrComplete) addressStore.onAddrComplete()          \r\n          onHide()\r\n        }} className=\"p-button-text p-button-success\"/>        \r\n      <Button label=\"Отмена\" icon=\"pi pi-times\" onClick={()=>{\r\n        if (props.onCancel) props.onCancel()\r\n        onHide()}} className=\"p-button-text\"/>\r\n    </div>\r\n)\r\n  return (\r\n  <Dialog footer={footer} header='Ввод адреса посредством ФИАС' visible={addressStore.dialogVisible} onHide={onHide} \r\n    breakpoints={{'960px': '75vw', '640px': '100vw'}} \r\n    style={{width: '50vw'}} modal>\r\n    <div className=\"p-grid p-fluid\">  \r\n    <div className='p-field p-col-12'>        \r\n      <div className='p-inputgroup'>\r\n        <span className='p-inputgroup-addon'>Строка поиска:</span> \r\n        <AutoComplete id='searchFIAS' disabled={isLoading}  \r\n            value={searchStr} \r\n            suggestions={addresses}\r\n            completeMethod={(e) =>{\r\n              const query = value.state?.name ? e.query.replace(value.state?.name+',', '') : e.query\r\n              if (query.trim().length>1) { \r\n                addressStore.searchBar(query.trim(), value.state?.code)\r\n                setAddresses(addressStore.fiasOptions)\r\n              }\r\n            }}\r\n          field='streetAddressLine'\r\n          onChange={(e) => {                                  \r\n            if(e.value && e.value?.AOGUID) { \r\n              addressStore.clear()                                        \r\n              setAddress(e.value)\r\n              setSearchStr(e.value.streetAddressLine)\r\n            } else setSearchStr(e.target.value)\r\n          }}\r\n          placeholder='Регион, Город(Район),(Нас.пункт), Улица, Дом'\r\n        />\r\n      </div> \r\n    </div>       \r\n    <div className=\"p-field p-col-12 p-md-6\">      \r\n      <label htmlFor=\"region\">субъект Российской Федерации</label>\r\n      <Dropdown id='region' value={region} filter filterBy='name'\r\n          onChange={(e)=>{                \r\n            value.state = e.value \r\n            addressStore.clear() \r\n            setRegion(e.value)\r\n          }}\r\n          options={regions}\r\n          optionLabel='name'                                           \r\n      />\r\n    </div> \r\n    <div className=\"p-field p-col-12 p-md-6\">\r\n      <label htmlFor=\"district\">район</label>\r\n      <AutoComplete id='district' dropdown              \r\n          value={district}  forceSelection                    \r\n          field='name' disabled={isLoading}\r\n          onChange={e=>autocompleteOnChange(e, setDistrict)}                       \r\n          suggestions={addresses}\r\n          completeMethod={e=>{\r\n            if (value.state?.code) \r\n            getSuggestions(value.state?.code, 'district', e.query)\r\n          }}                                                           \r\n        />\r\n      </div>\r\n      <div className=\"p-field p-col-12 p-md-6\">\r\n        <label htmlFor=\"city\">город</label>         \r\n        <AutoComplete id='city' dropdown              \r\n          value={city}  forceSelection                    \r\n          field='name' \r\n          onChange={e=>autocompleteOnChange(e,setCity)}                       \r\n          suggestions={addresses}\r\n          completeMethod={e=>{                \r\n            if (value.state?.code) getSuggestions(value.state?.code,'city', e.query)\r\n          }}               \r\n        />              \r\n      </div>\r\n      <div className=\"p-field p-col-12 p-md-6\">\r\n        <label htmlFor=\"town\">населенный пункт</label>\r\n        <AutoComplete id='town' dropdown value={town}  \r\n          forceSelection field='name' \r\n          onChange={e=>autocompleteOnChange(e, setTown)}                       \r\n          suggestions={addresses}\r\n          completeMethod={async (e) =>{\r\n            let parent = value.state?.code               \r\n            if (value.city?.code) parent = value.city?.code  \r\n            if (value.district?.code) parent = value.district?.code                \r\n            if (parent) getSuggestions(parent, 'town', e.query)                \r\n          }}                                                   \r\n        />        \r\n      </div>\r\n      <div className=\"p-field p-col-12 p-md-6\">\r\n        <label htmlFor=\"street\">улица</label>\r\n        <AutoComplete id='street' forceSelection              \r\n          value={street} field='name' dropdown                 \r\n          onChange={e=>autocompleteOnChange(e, setStreet)}                       \r\n          suggestions={addresses}\r\n          completeMethod={async (e) =>{\r\n            let parent = value.state?.code \r\n            if (value.district?.code) parent = value.district?.code              \r\n            if (value.city?.code) parent = value.city?.code                 \r\n            if (value.town?.code) parent = value.town?.code               \r\n            if (parent) getSuggestions(parent, 'street', e.query)                 \r\n          }}                                                   \r\n        />\r\n      </div>\r\n      <div className=\"p-field p-col-12 p-md-4\" style={{ maxWidth:'7rem'}}>\r\n        <label htmlFor=\"housenum\">дом</label>\r\n        <AutoComplete id='housenum' dropdown value={house} field='name'            \r\n          onChange={(e)=>{\r\n            if(e.value && e.value?.AOGUID) { \r\n              addressStore.clear()                                        \r\n              setAddress(e.value)\r\n              setHouse(e.value.name)\r\n            } else {\r\n              setHouse(e.value)              \r\n              value.housenum = e.value                               \r\n              value.houseGUID = null\r\n            }\r\n          }}                       \r\n          suggestions={addresses}\r\n          completeMethod={async (e) =>{\r\n            let parent = value.state?.code \r\n            if (value.district?.code) parent = value.district?.code              \r\n            if (value.city?.code) parent = value.city?.code                 \r\n            if (value.town?.code) parent = value.town?.code\r\n            if (value.street?.code) parent = value.street?.code               \r\n            if (parent) getSuggestions(parent, 'building', e.query)                \r\n          }}                                                   \r\n        />         \r\n      </div>\r\n      <div className=\"p-field p-col-12 p-md-4\" style={{ maxWidth:'7rem'}}> \r\n        <label htmlFor=\"strucnum\">стр.</label>\r\n        <InputText id='strucnum'              \r\n          value={value.strucnum || ''}                \r\n          onChange={(e)=>{\r\n            if (e.target.value.trim().length>0) value.strucnum=e.target.value\r\n          }}\r\n        />        \r\n      </div>\r\n      <div className=\"p-field p-col-12 p-md-4\" style={{ maxWidth:'7rem'}}>\r\n        <label htmlFor=\"buildnum\">корп.</label>\r\n        <InputText id='buildnum' value={value.buildnum || ''}                \r\n          onChange={(e)=>{\r\n            if (e.target.value.trim().length>0) value.buildnum=e.target.value                \r\n          }}                  \r\n        />        \r\n      </div>\r\n      <div className=\"p-field p-col-12 p-md-4\" style={{ maxWidth:'9rem'}}>\r\n        <label htmlFor=\"flat\">квартира(офис)</label>\r\n        <InputText id='flat' value={value.flat || ''}                  \r\n          onChange={(e)=>{\r\n            value.flat=e.target.value}\r\n          }                                               \r\n        />        \r\n      </div>\r\n      <div className=\"p-field p-col-12 p-md-4\">\r\n        <label htmlFor=\"postalCode\">почтовый код</label>\r\n        <InputText id='postalCode' disabled={value.aoGUID!==undefined}              \r\n          value={value.postalCode || \"\"}                  \r\n            onChange={(e)=>{\r\n              value.postalCode=e.target.value                \r\n            }}                                               \r\n        />        \r\n      </div>\r\n      <Toast ref={toast} />      \r\n    </div>  \r\n  </Dialog>)\r\n}\r\nexport default observer(AddressDialog)","import { AxiosResponse } from \"axios\"\r\nimport { $fias, FIAS_URL } from \"../http\"\r\nimport { IFiasResponse } from \"../models/responses/IFiasResponse\"\r\nimport { HOME_REGION_CODE } from \"../utils/defaults\"\r\n\r\nexport default class FiasService {\r\n  static async getRegions(): Promise<AxiosResponse<IFiasResponse>> {\r\n    return $fias.get(`${FIAS_URL}?level=region&limit=120`)\r\n  }\r\n  static async searchBar(query: string, regionID = HOME_REGION_CODE as string): Promise<AxiosResponse<IFiasResponse>> {\r\n    return $fias.get(`${FIAS_URL}?searchBar=1&withParent=1&regionID=${regionID}&total_found=1&query=${query}`)\r\n  }\r\n  static async getChildItems(\r\n    parent: string,\r\n    level: string,\r\n    query = \"\",\r\n    limit = \"120\"\r\n  ): Promise<AxiosResponse<IFiasResponse>> {\r\n    const parentOpt = parent.length === 2 ? `regionID=${parent}` : `parent=${parent}`\r\n    return $fias.get(`${FIAS_URL}?${parentOpt}&withParent=1&level=${level}&query=${query}&limit=${limit}`)\r\n  }\r\n}\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport FiasService from \"../../services/FiasService\"\r\nimport { INullFlavorR } from \"../INullFlavor\"\r\nimport { IReference } from \"../IReference\"\r\nimport { IAddressR } from \"../requests/IAddressR\"\r\nimport { IFiasItem } from \"../responses/IFiasItem\"\r\n\r\nexport default class Address {\r\n  private _oldOne: IAddressR\r\n  private _id?: string\r\n  private _streetAddressLine: string\r\n  private _state?: IReference\r\n  private _district?: IReference\r\n  private _city?: IReference\r\n  private _town?: IReference\r\n  private _street?: IReference\r\n  private _aoGUID?: string | null\r\n  private _houseGUID?: string | null\r\n  private _housenum?: string | null\r\n  private _buildnum?: string | null\r\n  private _strucnum?: string | null\r\n  private _flat?: string | null\r\n  private _postalCode?: string\r\n  private _nullFlavors: INullFlavorR[]\r\n  private _parent?: string\r\n  constructor(props: IAddressR) {\r\n    this._nullFlavors =\r\n      !!props.null_flavors_attributes && props.null_flavors_attributes.length > 0\r\n        ? [...props.null_flavors_attributes]\r\n        : []\r\n    if (props.id) this._id = props.id\r\n    this._oldOne = props\r\n    this._streetAddressLine = props.streetAddressLine\r\n    this._aoGUID = props.aoGUID\r\n    this._houseGUID = props.houseGUID\r\n    this._postalCode = props.postalCode\r\n    this._housenum = props.house_number\r\n    this._buildnum = props.building_number\r\n    this._strucnum = props.struct_number\r\n    this._flat = props.flat_number\r\n    this._parent = props.parent_guid\r\n    this.fetchAddressHierarchy()\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n\r\n  get oldOne(): IAddressR {\r\n    return this._oldOne\r\n  }\r\n\r\n  get id() {\r\n    return this._id\r\n  }\r\n  set id(id: string | undefined) {\r\n    this._id = id\r\n  }\r\n  get streetAddressLine() {\r\n    return this._streetAddressLine\r\n  }\r\n  set streetAddressLine(value: string) {\r\n    this._streetAddressLine = value\r\n  }\r\n  get state() {\r\n    return this._state\r\n  }\r\n  set state(value: IReference | undefined) {\r\n    this._state = value\r\n  }\r\n  get flat() {\r\n    return this._flat\r\n  }\r\n  set flat(value: string | undefined | null) {\r\n    this._flat = value\r\n  }\r\n\r\n  get postalCode() {\r\n    return this._postalCode\r\n  }\r\n  set postalCode(value: string | undefined) {\r\n    this._postalCode = value\r\n  }\r\n  get housenum() {\r\n    return this._housenum\r\n  }\r\n  set housenum(value: string | undefined | null) {\r\n    this._housenum = value\r\n  }\r\n  get buildnum() {\r\n    return this._buildnum\r\n  }\r\n  set buildnum(value: string | undefined | null) {\r\n    this._buildnum = value\r\n  }\r\n  get strucnum() {\r\n    return this._strucnum\r\n  }\r\n  set strucnum(value: string | undefined | null) {\r\n    this._strucnum = value\r\n  }\r\n\r\n  set street(value: IReference | undefined) {\r\n    this._street = value\r\n  }\r\n  get street() {\r\n    return this._street\r\n  }\r\n  set town(value: IReference | undefined) {\r\n    this._town = value\r\n  }\r\n  get town() {\r\n    return this._town\r\n  }\r\n  set aoGUID(value: string | undefined | null) {\r\n    this._aoGUID = value\r\n  }\r\n  get aoGUID() {\r\n    return this._aoGUID\r\n  }\r\n  set houseGUID(value: string | undefined | null) {\r\n    this._houseGUID = value\r\n  }\r\n  get houseGUID() {\r\n    return this._houseGUID\r\n  }\r\n  set district(value: IReference | undefined) {\r\n    this._district = value\r\n  }\r\n  get district() {\r\n    return this._district\r\n  }\r\n  set city(value: IReference | undefined) {\r\n    this._city = value\r\n  }\r\n  get city() {\r\n    return this._city\r\n  }\r\n\r\n  get parent() {\r\n    return this._parent\r\n  }\r\n  get nullFlavors() {\r\n    return this._nullFlavors\r\n  }\r\n\r\n  set nullFlavors(nullFlavors: INullFlavorR[]) {\r\n    this._nullFlavors = nullFlavors\r\n  }\r\n\r\n  // получение копии массива заполнителей из Observable.array\r\n  null_flavors_attributes(): INullFlavorR[] {\r\n    return this._nullFlavors.map((el) => {\r\n      return { ...el }\r\n    })\r\n  }\r\n\r\n  //рекурсивный парсинг структуры адресного объекта\r\n  parseFiasItem(fiasItem: IFiasItem) {\r\n    switch (fiasItem.level) {\r\n      case \"building\":\r\n        this._streetAddressLine = fiasItem.streetAddressLine\r\n        break\r\n      case \"Street\":\r\n        this._street = { code: fiasItem.AOGUID, name: `${fiasItem.name} ${fiasItem.shortname}` }\r\n        break\r\n      case \"Town\":\r\n      case \"RailWayObject\":\r\n        this._town = { code: fiasItem.AOGUID, name: `${fiasItem.name} ${fiasItem.shortname}` }\r\n        break\r\n      case \"City\":\r\n        this._city = { code: fiasItem.AOGUID, name: `${fiasItem.name} ${fiasItem.shortname}` }\r\n        break\r\n      case \"District\":\r\n        this._district = { code: fiasItem.AOGUID, name: `${fiasItem.name} ${fiasItem.shortname}` }\r\n        break\r\n      case \"Region\":\r\n        if (fiasItem.code) {\r\n          const code = fiasItem.code.slice(0, 2)\r\n          this._state = { code: code, name: `${fiasItem.name}` }\r\n        }\r\n        break\r\n      default:\r\n        console.log(\"invalid fiasItem.level\", fiasItem)\r\n        break\r\n    }\r\n    if (fiasItem.parent) this.parseFiasItem(fiasItem.parent)\r\n  }\r\n  // Получить всю ФИАС структуру адресного объекта по AOGUID\r\n  fetchAddressHierarchy() {\r\n    if (!this._aoGUID) return\r\n    FiasService.getChildItems(this._aoGUID, this._houseGUID ? \"building\" : \"\", \"\", \"1\")\r\n      .then((response) => {\r\n        if (response.data.data)\r\n          response.data.data.forEach((item) => {\r\n            this.parseFiasItem(item)\r\n          })\r\n      })\r\n      .catch((reason) => console.log(reason))\r\n  }\r\n}\r\n","import { HOME_REGION_CODE } from \"../../utils/defaults\"\r\nimport { IDestroyble } from \"../IDestroyble\"\r\nimport { INullFlavorableR } from \"./INullFlavorableR\"\r\n\r\nexport interface IAddressR extends INullFlavorableR, IDestroyble {\r\n  id?: string\r\n  state: string\r\n  streetAddressLine: string\r\n  aoGUID?: string | null\r\n  houseGUID?: string | null\r\n  postalCode?: string\r\n  code?: string\r\n  parent_guid?: string\r\n  actual?: boolean\r\n  house_number?: string | null\r\n  struct_number?: string | null\r\n  building_number?: string | null\r\n  flat_number?: string | null\r\n}\r\nexport const DEFAULT_ADDRESS = { state: HOME_REGION_CODE, streetAddressLine: \"\" } as IAddressR\r\n","import { observer } from 'mobx-react-lite'\r\nimport { Button } from 'primereact/button'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { classNames } from 'primereact/utils'\r\nimport { FC, useContext, useEffect } from 'react'\r\nimport { Context } from '../..'\r\nimport Address from '../../models/FormsData/Address'\r\nimport { DEFAULT_ADDRESS, IAddressR } from '../../models/requests/IAddressR'\r\n\r\n\r\ntype InputAddressProps = { \r\n  submitted: boolean // is it form submitted already\r\n  value: IAddressR // object, containing address\r\n  onClear: (value: IAddressR)=>void // setter to state value in the form>\r\n  onChange: ()=>void // setter to state new value from dialog to form \r\n  label?: string\r\n  strictly?: boolean // if address need to be all from FIAS\r\n  className?: string // styles for main div  \r\n  id?: string \r\n}\r\n\r\nconst InputAddress: FC<InputAddressProps> = (props: InputAddressProps) =>{ \r\n  const submitted = props.submitted\r\n  const value = props.value\r\n  const {addressStore} = useContext(Context)\r\n\r\n  const invalid = props.strictly ? !value || !value.houseGUID\r\n     : !value || (value.streetAddressLine && value.streetAddressLine.split(',').length < 3)\r\n  \r\n  const bt_id = `bt_addr_${props.id}`   \r\n  \r\n  //useEffect(()=>{addressStore.address = new Address(props.value || DEFAULT_ADDRESS)\r\n  //  console.log('props.value', props.value.streetAddressLine)\r\n  //},[addressStore, props.value])\r\n\r\n   useEffect(()=>{\r\n    if (addressStore.manualMode!== !props.strictly) {\r\n      addressStore.manualMode = !props.strictly \r\n    }\r\n  },[addressStore, props.strictly])\r\n\r\n  return (<div className={classNames({'p-field': !!props.label}, props.className)} >\r\n    {props.label && <label htmlFor={bt_id}>{props.label}</label>}\r\n    <div className='p-inputgroup'>\r\n      <Button id='bt_addr_dialog' label=\"Ввод\" onClick={()=>{\r\n        addressStore.address = new Address(props.value || DEFAULT_ADDRESS)\r\n        addressStore.dialogVisible = true\r\n        addressStore.onAddrComplete = props.onChange}} style={{width:'5rem'}}/>\r\n      <InputText \r\n        title={value?.streetAddressLine}\r\n        value={value?.streetAddressLine}\r\n        placeholder={'введите адрес вида: Амурская область, Н-ский район, село Тосево, улица Товарная, дом 13, кв. 9' } className={classNames({ 'p-invalid': submitted && invalid})} />\r\n      <Button icon=\"pi pi-times\" className=\"p-button-danger\" onClick={()=>{\r\n        if (!value) return        \r\n        let _addr = DEFAULT_ADDRESS\r\n        if (value.id) _addr.id = value.id\r\n        if (value.parent_guid) _addr.parent_guid = value.parent_guid\r\n        if (value.null_flavors_attributes) _addr.null_flavors_attributes = value.null_flavors_attributes       \r\n        props.onClear(_addr)\r\n        addressStore.address = new Address(_addr)}}\r\n      />\r\n    </div>\r\n    {submitted && invalid && <small className=\"p-error\">Адресс введен не полностью или отсутствует</small>}\r\n  </div>)  \r\n}\r\nexport default observer(InputAddress)","import { RadioButton } from \"primereact/radiobutton\"\r\nimport { useState } from \"react\"\r\nimport { URBAN_AREA_TYPE, VILAGE_AREA_TYPE } from \"../../utils/defaults\"\r\n\r\n\r\ntype AreaTypeProps = {\r\n  value: number | undefined\r\n  onChange: ((value: number | undefined)=>void)\r\n}\r\n\r\nexport const AreaType = (props: AreaTypeProps) =>{ \r\n  const [value, setValue] = useState<number | undefined>(props.value)\r\n  return (  \r\n  <div className=\"p-formgroup-inline\" key={`rbt_${value}`} style={{marginLeft: '-0.76rem'}}>              \r\n      <div className='p-field-radiobutton'>                  \r\n        <RadioButton name='urban' checked={value === URBAN_AREA_TYPE}\r\n          onChange={(e)=>{\r\n            if (e.checked) { \r\n              setValue(URBAN_AREA_TYPE) \r\n              props.onChange(URBAN_AREA_TYPE)\r\n            } else {\r\n              setValue(undefined)\r\n              props.onChange(undefined) \r\n            }\r\n          }}\r\n        />\r\n        <label htmlFor='undef'>Городская</label>\r\n      </div>\r\n      <div className='p-field-radiobutton'>                  \r\n        <RadioButton name='vilage' checked={value === VILAGE_AREA_TYPE}\r\n          onChange={(e)=>{\r\n            if (e.checked) { \r\n              setValue(VILAGE_AREA_TYPE) \r\n              props.onChange(VILAGE_AREA_TYPE)\r\n            } else {\r\n              setValue(undefined)\r\n              props.onChange(undefined) \r\n            }\r\n          }}/>\r\n        <label htmlFor='vilage'>Сельская</label>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { observer } from \"mobx-react-lite\"\r\nimport { Button } from \"primereact/button\"\r\nimport { Card } from \"primereact/card\"\r\nimport { CheckboxChangeParams } from \"primereact/checkbox\"\r\nimport { FC, useContext, useState} from \"react\"\r\nimport { Context } from \"../..\"\r\nimport { IReference } from \"../../models/IReference\"\r\nimport { ASKU, NULL_FLAVORS, UNK } from \"../../utils/defaults\"\r\nimport AddressDialog from \"../dialogs/AddressDialog\"\r\nimport InputAddress from \"../inputs/InputAddress\"\r\nimport { AreaType } from \"../inputs/AreaType\"\r\nimport NullFlavorWrapper from \"../NullFlavorWrapper\"\r\nimport { INullFlavorR } from \"../../models/INullFlavor\"\r\nimport { DEFAULT_ADDRESS, IAddressR } from \"../../models/requests/IAddressR\"\r\n\r\n\r\nconst Section3: FC = () => {\r\n  const { addressStore, certificateStore,suggestionsStore } = useContext(Context)\r\n  const certificate = certificateStore.cert  \r\n  const patient = certificate.patient\r\n  const [addressLife, setAddressLife] = useState(patient.person?.address) \r\n  const [addressDeath, setAddressDeath] = useState(certificate.deathAddr) \r\n  const identified = suggestionsStore.identified\r\n  const checkedLifeArea = !!patient.person && patient.person.nullFlavors.findIndex((item)=>item.parent_attr==='address' && !item._destroy)===-1\r\n  const checkedDeathArea = !!addressDeath || certificate.nullFlavors.findIndex((item)=>item.parent_attr==='death_addr')===-1  \r\n  const fromRelatives = suggestionsStore.fromRelatives\r\n  const submitted = certificateStore.submitted\r\n  \r\n  const header = () => {\r\n    return <><span>Адреса мест жительства и смерти</span><Button type=\"button\" onClick={onAddressCopy} label=\"СОВПАДАЮТ\" disabled={!checkedLifeArea} className=\"p-button-raised p-button-success\"  /></>\r\n  }\r\n\r\n  //copy info from life address to dead address objects\r\n  const onAddressCopy = () => {\r\n    if (!patient.person) return\r\n    certificate.deathAreaType = certificate.lifeAreaType    \r\n     \r\n    if (!patient.person.address) certificate.deathAddr = undefined      \r\n    else {\r\n      certificate.deathAddr = {\r\n        ...patient.person.address,\r\n        null_flavors_attributes:\r\n          patient.person.address?.null_flavors_attributes?.map((item) => {\r\n            return { parent_attr: item.parent_attr, code: item.code } as INullFlavorR\r\n          }) || [],\r\n        id: undefined,\r\n        parent_guid: undefined,\r\n      } as IAddressR              \r\n    }    \r\n    setAddressDeath(certificate.deathAddr)\r\n  }\r\n  return (<>    \r\n    <Card className=\"c-section p-mr-2 p-mb-2\" header={header}>        \r\n      <div className=\"p-fluid p-formgrid p-grid\">\r\n        <div className=\"p-field p-d-flex p-jc-start\" style={{width: '98%'}}>          \r\n          <div className='paragraph p-mr-1'>8.</div>          \r\n          <div className='p-paragraph-field' style={{width: '98%'}}>\r\n            <NullFlavorWrapper paraNum                     \r\n              label={<label htmlFor=\"addr\">Место постоянного жительства(регистрации)</label>}\r\n              checked={identified && checkedLifeArea}  \r\n              setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                if (!patient.person) return\r\n                if (nullFlavors) patient.person.nullFlavors = nullFlavors\r\n                if (!e.checked) patient.person.address = undefined                \r\n              }}               \r\n              field={<InputAddress  submitted={submitted} \r\n                      id='person_addr'            \r\n                      value={addressLife || DEFAULT_ADDRESS} \r\n                      onClear={(value: IAddressR)=>{  \r\n                        if (!patient.person) return                                             \r\n                        patient.person.address = value\r\n                        setAddressLife(patient.person.address)\r\n                      }}\r\n                      onChange={()=>{\r\n                        if (!patient.person) return\r\n                        patient.person.address = addressStore.addressProps()                        \r\n                        setAddressLife(patient.person.address)\r\n                      }}  \r\n                    />}\r\n              options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n              value={fromRelatives ? ASKU : UNK}\r\n              field_name=\"address\"\r\n              nullFlavors={patient.person?.nullFlavors}\r\n            />                  \r\n          </div>\r\n        </div>\r\n        <div className=\"p-d-flex p-jc-center\">          \r\n          <div className='paragraph p-mr-1'>9.</div>          \r\n          <div className='p-paragraph-field'>\r\n            <NullFlavorWrapper                     \r\n              label={<label htmlFor=\"urban\">Местность</label>}\r\n              checked={identified && !!certificate.lifeAreaType}  setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                if (nullFlavors) certificate.nullFlavors = nullFlavors\r\n                if (!e.checked) certificate.lifeAreaType = undefined                \r\n              }} \r\n              onChange={(e:IReference,  nullFlavors: INullFlavorR[] | undefined)=>{if (nullFlavors) certificate.nullFlavors = nullFlavors}}\r\n              field={<AreaType value={certificate.lifeAreaType} onChange={(value: number | undefined)=>{\r\n                certificate.lifeAreaType = value                \r\n              }}/>}\r\n              options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n              value={fromRelatives ? ASKU : UNK}\r\n              field_name=\"life_area_type\"\r\n              nullFlavors={certificate.nullFlavors}\r\n            />                  \r\n          </div>\r\n        </div>\r\n        <div className=\"p-field p-d-flex p-jc-start\" style={{width: '98%'}}>          \r\n          <div className='paragraph p-mr-1'>10.</div>          \r\n          <div className='p-paragraph-field' style={{width: '98%'}}>\r\n            <NullFlavorWrapper paraNum                     \r\n              label={<label htmlFor=\"death_addr\">Адрес места смерти</label>}\r\n              checked={checkedDeathArea}  \r\n              setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                if (nullFlavors) certificate.nullFlavors = nullFlavors\r\n                if (!e.checked) certificate.deathAddr = undefined                \r\n              }}               \r\n              field={<InputAddress  submitted={submitted} \r\n                      id='death_addr'            \r\n                      value={addressDeath || DEFAULT_ADDRESS} \r\n                      onClear={(value: IAddressR)=>{                                               \r\n                        certificate.deathAddr = value \r\n                        setAddressDeath(certificate.deathAddr)                       \r\n                      }}\r\n                      onChange={()=>{\r\n                        certificate.deathAddr = addressStore.addressProps()  \r\n                        setAddressDeath(certificate.deathAddr)                      \r\n                      }}  \r\n                    />}\r\n              options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n              value={fromRelatives ? ASKU : UNK}\r\n              field_name=\"death_addr\"\r\n              nullFlavors={certificate.nullFlavors}\r\n            />                  \r\n          </div>\r\n        </div>\r\n        <div className=\"p-d-flex p-jc-center\">          \r\n          <div className='paragraph p-mr-1'>11.</div>          \r\n          <div className='p-paragraph-field' key={`dArea_${certificate.deathAreaType}`}>\r\n            <NullFlavorWrapper                     \r\n              label={<label htmlFor=\"urban\">Местность</label>}\r\n              checked={!!certificate.deathAreaType && certificate.nullFlavors.findIndex(item=>item.parent_attr==='death_area_type' && !item._destroy\r\n              )===-1}  \r\n              setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                if (nullFlavors) certificate.nullFlavors = nullFlavors\r\n                if (!e.checked) certificate.deathAreaType = undefined\r\n              }} \r\n              onChange={(e:IReference,  nullFlavors: INullFlavorR[] | undefined)=>{if (nullFlavors) certificate.nullFlavors = nullFlavors}}\r\n              field={<AreaType value={certificate.deathAreaType} onChange={(value: number | undefined)=>{\r\n                certificate.deathAreaType = value\r\n              }}/>}\r\n              options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n              value={fromRelatives ? ASKU : UNK}\r\n              field_name=\"death_area_type\"\r\n              nullFlavors={certificate.nullFlavors}\r\n            />                  \r\n          </div>\r\n        </div>        \r\n      </div>\r\n    </Card>\r\n    <AddressDialog /> \r\n  </>)\r\n}\r\n export default observer(Section3)  ","//Типы мест наступления смерти\r\n//OID: 1.2.643.5.1.13.13.99.2.20 Версия: 3.1\r\nexport const DEAD_PLACE_TYPES = [\r\n  { code: 1, name: \"на месте происшествия\" },\r\n  { code: 2, name: \"в машине скорой помощи\" },\r\n  { code: 3, name: \"в стационаре\" },\r\n  { code: 4, name: \"дома\" },\r\n  { code: 5, name: \"в другом месте\" },\r\n  { code: 7, name: \"в образовательной организации\" },\r\n]\r\n","//\"Семейное положение\"\r\n//OID: 1.2.643.5.1.13.13.99.2.15  Версия: 3.1\r\nexport const MARITAL_STATUSES = [\r\n  { code: 4, name: \"состоял(а) в зарегистрированном браке\" },\r\n  { code: 5, name: \" не состоял(а) в зарегистрированном браке\" },\r\n  { code: 3, name: \" неизвестно\" },\r\n]\r\n","//\"Классификатор образования для медицинских свидетельств\"\r\n// OID: 1.2.643.5.1.13.13.99.2.16 Версия: 2.1\r\nexport const EDUCATION_LEVELS = [\r\n  { code: 1, name: \"профессиональное: высшее\" },\r\n  { code: 2, name: \"профессиональное: неполное высшее\" },\r\n  { code: 3, name: \"профессиональное: среднее профессиональное\" },\r\n  { code: 5, name: \"общее: среднее\" },\r\n  { code: 6, name: \"общее: основное\" },\r\n  { code: 7, name: \"общее: начальное\" },\r\n  { code: 10, name: \"общее: дошкольное\" },\r\n  { code: 11, name: \"не имеет начального образования\" },\r\n  { code: 9, name: \"неизвестно\" },\r\n]\r\n","//Социальные группы населения в учетной медицинской документации\r\n//OID: 1.2.643.5.1.13.13.11.1038 Версия: 5.1\r\nexport const SOCIAL_STATUSES = [\r\n  { code: 5, name: \"Работал(а)\" },\r\n  { code: 6, name: \"Проходил(а) военную службу или приравненную к ней службу\" },\r\n  { code: 4, name: \"Студент(ка)\" },\r\n  { code: 7, name: \"Пенсионер(ка)\" },\r\n  { code: 8, name: \"Не работал(а)\" },\r\n  { code: 10, name: \"Прочие\" },\r\n  { code: 22, name: \"неизвестно\" },\r\n]\r\n","// \"Доношенность новорожденного\"\r\n// OID: 1.2.643.5.1.13.13.99.2.18 Версия: 1.1\r\nexport const TERMS_PREGNANCY = [\r\n  { code: 1, name: \" доношенный (37-41 недели)\" },\r\n  { code: 2, name: \" недоношенный (менее 37 недель)\" },\r\n  { code: 3, name: \" переношенный (42 недели и более)\" },\r\n]\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { NULL_FLAVOR_IDX } from \"../../utils/defaults\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { INullFlavorR } from \"../INullFlavor\"\r\nimport { IPersonName } from \"../IPersonName\"\r\nimport { IRelatedSubject } from \"../IRelatedSubject\"\r\nimport { IAddressR } from \"../requests/IAddressR\"\r\nimport { IRelatedSubjectR } from \"../requests/IRelatedSubjectR\"\r\n\r\nconst MATHER = 1\r\n\r\nexport default class RelatedSubject implements ISerializable {\r\n  private _id?: number\r\n  private _guid: string\r\n  private _familyConnection: number\r\n  private _addr?: IAddressR | undefined\r\n  private _fio?: IPersonName | undefined\r\n  private _birthTime?: Date | undefined\r\n  private _nullFlavors: INullFlavorR[]\r\n\r\n  constructor(props: IRelatedSubject) {\r\n    this._guid = props.guid || uuidv4()\r\n    this._nullFlavors =\r\n      props.null_flavors?.map((item) => {\r\n        return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n      }) || []\r\n    this._id = props.id\r\n    this._familyConnection = props.family_connection || MATHER\r\n    this._fio = props.person_name\r\n    if (props.birthTime) this._birthTime = new Date(props.birthTime)\r\n    this._addr = {\r\n      ...props.addr,\r\n      null_flavors_attributes:\r\n        props.addr?.null_flavors?.map((item) => {\r\n          return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n        }) || [],\r\n    } as IAddressR\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n\r\n  get addr(): IAddressR | undefined {\r\n    return this._addr\r\n  }\r\n  set addr(value: IAddressR | undefined) {\r\n    this._addr = value\r\n  }\r\n  get fio(): IPersonName | undefined {\r\n    return this._fio\r\n  }\r\n  set fio(value: IPersonName | undefined) {\r\n    this._fio = value\r\n  }\r\n\r\n  get birthTime(): Date | undefined {\r\n    return this._birthTime\r\n  }\r\n  set birthTime(value: Date | undefined) {\r\n    this._birthTime = value\r\n  }\r\n  get nullFlavors(): INullFlavorR[] {\r\n    return this._nullFlavors\r\n  }\r\n  set nullFlavors(value: INullFlavorR[]) {\r\n    this._nullFlavors = value\r\n  }\r\n\r\n  // получение копии массива заполнителей из Observable.array\r\n  null_flavors_attributes() {\r\n    return this._nullFlavors.map((el) => {\r\n      return { ...el }\r\n    })\r\n  }\r\n\r\n  getAttributes(): IRelatedSubjectR {\r\n    let _rs = { family_connection: this._familyConnection, guid: this._guid } as IRelatedSubjectR\r\n    if (this._nullFlavors.length > 0) _rs.null_flavors_attributes = this.null_flavors_attributes()\r\n    if (this._addr) _rs.addr_attributes = { ...this._addr }\r\n    if (this._birthTime) _rs.birthTime = this._birthTime.toLocaleDateString()\r\n    else _rs.birthTime = null\r\n    if (this._fio) _rs.person_name_attributes = { ...this._fio }\r\n    if (this._id) _rs.id = this._id\r\n    return _rs\r\n  }\r\n}\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { NULL_FLAVOR_IDX } from \"../../utils/defaults\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { IChildInfo } from \"../IChildInfo\"\r\nimport { INullFlavorR } from \"../INullFlavor\"\r\nimport { IAddressR } from \"../requests/IAddressR\"\r\nimport { IChildInfoR } from \"../requests/IChildInfoR\"\r\nimport RelatedSubject from \"./RelatedSubject\"\r\n\r\nexport class ChildInfo implements ISerializable {\r\n  private _id?: number\r\n  private _guid: string\r\n  private _termPregnancy?: number | undefined\r\n  private _weight?: number | undefined\r\n  private _whichAccount?: number | undefined\r\n  private _relatedSubject?: RelatedSubject | undefined\r\n  private _address?: IAddressR | undefined\r\n  private _nullFlavors: INullFlavorR[]\r\n\r\n  constructor(props: IChildInfo | undefined = undefined) {\r\n    if (props) {\r\n      this._id = props.id\r\n      this._guid = props.guid || uuidv4()\r\n      this._termPregnancy = props.term_pregnancy\r\n      this._weight = props.weight\r\n      this._whichAccount = props.which_account\r\n      this._address = {\r\n        ...props.address,\r\n        null_flavors_attributes:\r\n          props.address?.null_flavors?.map((item) => {\r\n            return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n          }) || [],\r\n      } as IAddressR\r\n      if (props.null_flavors && props.null_flavors.length > 0)\r\n        this._nullFlavors = props.null_flavors.map((item) => {\r\n          return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n        })\r\n      else this._nullFlavors = []\r\n      if (props.related_subject) this._relatedSubject = new RelatedSubject(props.related_subject)\r\n    } else {\r\n      this._nullFlavors = []\r\n      this._guid = uuidv4()\r\n    }\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n\r\n  get termPregnancy(): number | undefined {\r\n    return this._termPregnancy\r\n  }\r\n  set termPregnancy(value: number | undefined) {\r\n    this._termPregnancy = value\r\n  }\r\n  get weight(): number | undefined {\r\n    return this._weight\r\n  }\r\n  set weight(value: number | undefined) {\r\n    this._weight = value\r\n  }\r\n  get whichAccount(): number | undefined {\r\n    return this._whichAccount\r\n  }\r\n  set whichAccount(value: number | undefined) {\r\n    this._whichAccount = value\r\n  }\r\n  get relatedSubject(): RelatedSubject | undefined {\r\n    return this._relatedSubject\r\n  }\r\n  set relatedSubject(value: RelatedSubject | undefined) {\r\n    this._relatedSubject = value\r\n  }\r\n  get nullFlavors(): INullFlavorR[] {\r\n    return this._nullFlavors\r\n  }\r\n  set nullFlavors(value: INullFlavorR[]) {\r\n    this._nullFlavors = value\r\n  }\r\n  get address(): IAddressR | undefined {\r\n    return this._address\r\n  }\r\n  set address(value: IAddressR | undefined) {\r\n    this._address = value\r\n  }\r\n  // получение копии массива заполнителей из Observable.array\r\n  null_flavors_attributes() {\r\n    return this._nullFlavors.map((el) => {\r\n      return { ...el }\r\n    })\r\n  }\r\n\r\n  getAttributes(): IChildInfoR {\r\n    let _chInfo = { guid: this._guid } as IChildInfoR\r\n    if (this._nullFlavors.length > 0) _chInfo.null_flavors_attributes = this.null_flavors_attributes()\r\n    if (this._relatedSubject) _chInfo.related_subject_attributes = this._relatedSubject.getAttributes()\r\n    if (this._termPregnancy) _chInfo.term_pregnancy = this._termPregnancy\r\n    else _chInfo.term_pregnancy = null\r\n    if (this._weight) _chInfo.weight = this._weight\r\n    else _chInfo.weight = null\r\n    if (this._whichAccount) _chInfo.which_account = this._whichAccount\r\n    else _chInfo.which_account = null\r\n    if (this._id) _chInfo.id = this._id\r\n    if (this._address && !!this._address.state && !!this._address.streetAddressLine)\r\n      _chInfo.address_attributes = { ...this._address }\r\n    return _chInfo\r\n  }\r\n}\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport { InputNumber } from 'primereact/inputnumber'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport NullFlavorWrapper from './NullFlavorWrapper'\r\nimport { ChildInfo } from '../models/FormsData/ChildInfo'\r\nimport RelatedSubject from '../models/FormsData/RelatedSubject'\r\nimport { IChildInfo } from '../models/IChildInfo'\r\nimport {  checkFieldNullFlavor, INullFlavorR } from '../models/INullFlavor'\r\nimport { IPersonName } from '../models/IPersonName'\r\nimport { IReference } from '../models/IReference'\r\nimport { IRelatedSubject } from '../models/IRelatedSubject'\r\nimport { CheckboxChangeParams } from 'primereact/checkbox'\r\nimport { Calendar } from 'primereact/calendar'\r\nimport { Context } from '..'\r\nimport AddressFC2 from './inputs/InputAddress'\r\nimport { NA, NULL_FLAVORS, UNK } from '../utils/defaults'\r\nimport AddressDialog from './dialogs/AddressDialog'\r\nimport { DEFAULT_ADDRESS, IAddressR } from '../models/requests/IAddressR'\r\n\r\ntype MotherInfoProps = {\r\n  childInfo?: ChildInfo\r\n  onChange: ((childInfo: ChildInfo) => void)  \r\n}\r\n\r\nexport const MotherInfo = (props: MotherInfoProps) => {\r\n  const { addressStore, certificateStore} = useContext(Context)  \r\n  const [fio, setFio] = useState('')\r\n  const submitted = certificateStore.submitted\r\n  const [childInfo] = useState(props.childInfo || new ChildInfo({} as IChildInfo))\r\n  const [relatedSubject] = useState(childInfo.relatedSubject || new RelatedSubject({} as IRelatedSubject))\r\n  const [address, setAddress] = useState(relatedSubject.addr)\r\n  useEffect(()=>{    \r\n      setFio(relatedSubject.fio ? `${relatedSubject.fio.family} ${relatedSubject.fio.given_1} ${relatedSubject.fio?.given_2}` : '')         \r\n      if (childInfo.relatedSubject!==relatedSubject) childInfo.relatedSubject = relatedSubject         \r\n      if (!props.childInfo) props.onChange(childInfo)   \r\n    },[props, childInfo, relatedSubject])         \r\n    const options = NULL_FLAVORS.filter((item:IReference)=>\"UNK\".includes(item.code))       \r\n    const checked = relatedSubject.nullFlavors.findIndex((item)=>item.parent_attr==='addr')===-1\r\n        \r\n    \r\n    return ( <>\r\n      <div className=\"p-field p-grid\" style={{width:'90%'}}>\r\n        <label htmlFor=\"weight\" \r\n          className=\"p-col-fixed\" style={{width:'85%'}} >масса тела ребенка при рождении (грамм)</label>\r\n        <div className=\"p-col\">\r\n          <InputNumber  id=\"weight\" value={childInfo.weight} max={9999} min={10} \r\n            onChange={(e)=>{              \r\n             if (!!e.value) childInfo.weight=e.value \r\n             else childInfo.weight= undefined             \r\n            }}\r\n          type=\"text\"/>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-field p-grid\" style={{width:'90%'}}>\r\n        <label htmlFor=\"which_account\" className=\"p-col-fixed\" style={{width:'85%'}} >каким по счету был ребенок у матери (считая умерших и не считая мертворожденных)</label>\r\n        <div className=\"p-col\">\r\n          <InputNumber  id=\"which_account\" max={99} min={1}\r\n            onChange={(e)=>{\r\n             if (!!e.value) childInfo.whichAccount=e.value    \r\n             else  childInfo.whichAccount=undefined         \r\n            }} \r\n            value={childInfo.whichAccount} type=\"text\"/>\r\n        </div>\r\n      </div> \r\n      <div className='p-paragraph-field p-mr-2 p-mb-2'>\r\n        <NullFlavorWrapper                           \r\n          setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>\r\n            { if (e.checked)  { \r\n              } else { \r\n                relatedSubject.fio = undefined                \r\n                props.onChange(childInfo) \r\n              }\r\n              if (nullFlavors) relatedSubject.nullFlavors = nullFlavors              \r\n            }}                 \r\n          label={<label htmlFor=\"fio\">Фамилия матери, имя, отчество(при наличии)</label>}\r\n          field={<InputText  id=\"fio\" type=\"text\" \r\n                  value={fio}                    \r\n                  onChange={(e)=>{     \r\n                    setFio(e.target.value)               \r\n                    const values = e.target.value.trim().split(\" \")\r\n                    if (values && values.length > 1) {\r\n                      const temp = {family: values[0], given_1: values[1]} as IPersonName\r\n                      if (values[2]) temp.given_2 = values[2]\r\n                      else checkFieldNullFlavor('given_2',temp.given_2,relatedSubject.nullFlavors, NA)\r\n                      relatedSubject.fio = temp\r\n                      props.onChange(childInfo)                     \r\n                    }                                        \r\n                  }}/>}                  \r\n          options={options} \r\n          value={UNK} \r\n          nullFlavors={relatedSubject.nullFlavors}  \r\n          field_name=\"person_name\"                                 \r\n        />             \r\n      </div>\r\n      <div className='p-paragraph-field p-mr-2 p-mb-2'>                     \r\n        <NullFlavorWrapper                                       \r\n          label={<label htmlFor=\"dateBirth\">Дата рождения матери</label>}\r\n          setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{                      \r\n                      if (!e.checked) {                        \r\n                        relatedSubject.birthTime = undefined                        \r\n                      } \r\n                      if (nullFlavors) relatedSubject.nullFlavors = nullFlavors\r\n                    }} \r\n          onChange={(e:IReference,  nullFlavors: INullFlavorR[] | undefined)=>{\r\n            if (nullFlavors) relatedSubject.nullFlavors = nullFlavors}}\r\n          field={<Calendar id=\"dateBirth\" showIcon dateFormat='dd.mm.yy'\r\n                  locale='ru' mask='99.99.9999'                                          \r\n                  value={relatedSubject.birthTime} \r\n                  onChange={(e)=>{\r\n                    relatedSubject.birthTime = e.target.value as Date | undefined\r\n                  }}                         \r\n                />}\r\n          options={options} \r\n          value={UNK} \r\n          nullFlavors={relatedSubject.nullFlavors}  \r\n          field_name=\"birthTime\"\r\n        />                               \r\n      </div> \r\n      <div className=\"p-field\" style={{width: '98%'}}>\r\n        <NullFlavorWrapper                      \r\n              label={<label htmlFor=\"mother_addr\">Место жительства матери</label>}\r\n              checked={checked}  \r\n              setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                if (nullFlavors) relatedSubject.nullFlavors = nullFlavors\r\n                if (!e.checked) relatedSubject.addr = undefined                \r\n              }}               \r\n              field={<AddressFC2  submitted={submitted} \r\n                      id='mother_addr'            \r\n                      value={address || DEFAULT_ADDRESS} \r\n                      onClear={(value: IAddressR)=>{                                               \r\n                        relatedSubject.addr = value\r\n                        setAddress(relatedSubject.addr)\r\n                      }}\r\n                      onChange={()=>{\r\n                        relatedSubject.addr = addressStore.addressProps()\r\n                        setAddress(relatedSubject.addr)\r\n                      }}  \r\n                    />}\r\n              options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n              value={UNK}\r\n              field_name=\"addr\"\r\n              nullFlavors={relatedSubject.nullFlavors}\r\n            />\r\n      </div>  \r\n      <AddressDialog />        \r\n    </>)\r\n}","import { observer } from 'mobx-react-lite'\r\nimport { FC, useContext, useEffect, useState} from 'react'\r\nimport { Context } from '../..'\r\nimport { Card } from 'primereact/card'\r\nimport { CheckboxChangeParams } from 'primereact/checkbox'\r\nimport '../../styles/components/RadioButton.css'\r\nimport '../../styles/components/Calendar.css'\r\nimport '../../styles/pages/CertificatePage.css'\r\nimport NullFlavorWrapper from '../NullFlavorWrapper'\r\nimport { NA, NULL_FLAVORS } from '../../utils/defaults'\r\nimport { IReference } from '../../models/IReference'\r\n\r\nimport { Dropdown } from 'primereact/dropdown'\r\n\r\nimport { DEAD_PLACE_TYPES } from '../../NSI/1.2.643.5.1.13.13.99.2.20'\r\nimport { MARITAL_STATUSES } from '../../NSI/1.2.643.5.1.13.13.99.2.15'\r\nimport { EDUCATION_LEVELS } from '../../NSI/1.2.643.5.1.13.13.99.2.16'\r\nimport { SOCIAL_STATUSES } from '../../NSI/1.2.643.5.1.13.13.11.1038'\r\nimport { checkFieldNullFlavor, INullFlavorR } from '../../models/INullFlavor'\r\nimport { TERMS_PREGNANCY } from '../../NSI/1.2.643.5.1.13.13.99.2.18'\r\nimport { ChildInfo } from '../../models/FormsData/ChildInfo'\r\nimport { MotherInfo } from '../MotherInfo'\r\nimport InputAddress from '../inputs/InputAddress'\r\nimport { DEFAULT_ADDRESS, IAddressR } from '../../models/requests/IAddressR'\r\n\r\n const Section5: FC = () => {\r\n  const { certificateStore, addressStore } = useContext(Context)\r\n   \r\n  const optionCode = 'NA'\r\n  const options = NULL_FLAVORS.filter((item:IReference)=>optionCode.includes(item.code))  \r\n  const defaultCode = NA \r\n  const header = () => {\r\n      return <span>Прочие данные умершего</span>\r\n    }\r\n  const certificate = certificateStore.cert\r\n  const age = certificate.hoursAge()  \r\n  const isChildInfo = !!age && (age > 168) && certificate.yearsAge() < 1      \r\n  const isMonthChild = isChildInfo && certificate.daysAge() < 30 \r\n  const [address, setAddress] = useState(certificate.childInfo?.address)\r\n  \r\n  useEffect(()=>{\r\n    if (isChildInfo && certificate.childInfo===undefined) \r\n     certificate.childInfo = new ChildInfo()\r\n    else if (!isChildInfo && certificate.childInfo!==undefined) certificate.childInfo = undefined\r\n  },[isChildInfo, certificate]) \r\n  \r\n  const childInfo = certificate.childInfo \r\n  useEffect(()=>{    \r\n    if (!isMonthChild && childInfo) {\r\n        childInfo.termPregnancy = undefined\r\n        checkFieldNullFlavor('term_pregnancy',childInfo.termPregnancy, childInfo.nullFlavors, NA)\r\n    }    \r\n  },[isMonthChild, childInfo]) \r\n  useEffect(()=>{       \r\n    if (!isChildInfo && !!certificate.childInfo) {\r\n      certificate.childInfo = undefined\r\n      checkFieldNullFlavor('related_subject', certificate.childInfo, certificate.nullFlavors, NA)\r\n    }    \r\n  }, [ isChildInfo, certificate ])\r\n  const ddStyle = {minWidth:'210px', maxWidth:'500px', marginTop: '0.5rem', marginLeft: '-0.75rem'}\r\n  const dDivStyle = {paddingTop: '0.1rem'}\r\n      \r\n  return (<>    \r\n      <Card className=\"c-section p-mr-2 p-mb-2\" header={header}>        \r\n          <div className=\"p-fluid p-formgrid p-grid\">            \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">\r\n              <div className='paragraph p-mr-1'>12. </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={dDivStyle}>\r\n                <label htmlFor=\"deathPlaceType\">Смерть наступила</label>\r\n                <Dropdown inputId=\"deathPlaceType\" style={ddStyle} placeholder=\"Выбрать\"  \r\n                  options={DEAD_PLACE_TYPES} optionLabel=\"name\" autoFocus\r\n                  value={DEAD_PLACE_TYPES.find((item)=>item.code === certificate.deathPlace)} \r\n                  onChange={(e) =>{\r\n                    certificate.deathPlace = e.value.code                    \r\n                  }} />\r\n              </div>  \r\n            </div> \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%'}}>\r\n              <div className='paragraph p-mr-1'>13.</div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={{width: '90%'}}>\r\n                <NullFlavorWrapper  checked={isMonthChild}  key={`MonthChild_${isMonthChild}`} \r\n                  disabled\r\n                  setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                            if (nullFlavors && certificate.childInfo) certificate.childInfo.nullFlavors = nullFlavors                  \r\n                            if (!e.checked)  certificate.childInfo = undefined                              \r\n                            }}            \r\n                  label={<label htmlFor=\"MonthChild\">Для детей, умерших в возрасте от 168 час. до 1 месяца</label>}\r\n                  field={<Dropdown inputId=\"MonthChild\"  placeholder=\"Выбрать\" autoFocus \r\n                    style={{minWidth:'210px', maxWidth:'300px'}}        \r\n                    options={TERMS_PREGNANCY} optionLabel=\"name\"\r\n                    value={TERMS_PREGNANCY.find((item)=>item.code === certificate.childInfo?.termPregnancy)} \r\n                    onChange={(e) =>{                      \r\n                      if (certificate.childInfo) certificate.childInfo.termPregnancy = e.value.code                                          \r\n                    }} />}\r\n                  options={options} \r\n                  value={defaultCode} \r\n                  nullFlavors={certificate.childInfo?.nullFlavors}  \r\n                  field_name=\"term_pregnancy\" paraNum \r\n                />    \r\n              </div>  \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%'}} >\r\n              <div className='paragraph p-mr-1'>14.</div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={{width: '90%'}}>\r\n                <NullFlavorWrapper  checked={isChildInfo}  key={`YearChild_${isChildInfo}`} \r\n                  disabled\r\n                  setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                            if (nullFlavors) certificate.nullFlavors = nullFlavors                  \r\n                              certificate.childInfo = undefined\r\n                            }}            \r\n                  label={<label htmlFor=\"YearChild\">Для детей, умерших в возрасте от 168 час. до 1 года</label>}\r\n                  field={<MotherInfo childInfo={childInfo} onChange={(chInf: ChildInfo)=>{\r\n                    if (certificate.childInfo !== chInf) certificate.childInfo = chInf  \r\n                  }} />}\r\n                  options={options} \r\n                  value={defaultCode} \r\n                  nullFlavors={certificate.nullFlavors}  \r\n                  field_name=\"related_subject\" paraNum \r\n                />    \r\n              </div>  \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%'}} >\r\n              <div className='paragraph p-mr-1'>8K.</div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={{width: '90%'}}>\r\n                <NullFlavorWrapper  checked={isChildInfo}  key={`YearChild_BP_${isChildInfo}`} \r\n                  disabled\r\n                  setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                              if (!certificate.childInfo) return\r\n                              if (nullFlavors) certificate.childInfo.nullFlavors = nullFlavors\r\n                              if (!e.checked) certificate.childInfo.address = undefined  \r\n                            }}            \r\n                  label={<label htmlFor=\"child_birth_addr\">Место рождения ребенка</label>}\r\n                  field={<InputAddress submitted={false} \r\n                      id='child_birth_addr'            \r\n                      value={address || DEFAULT_ADDRESS} \r\n                      onClear={(value: IAddressR)=>{ \r\n                        if (!certificate.childInfo) return                                             \r\n                        certificate.childInfo.address = value\r\n                        setAddress(certificate.childInfo.address)\r\n                      }}\r\n                      onChange={()=>{\r\n                        if (!certificate.childInfo) return\r\n                        certificate.childInfo.address = addressStore.addressProps()\r\n                        setAddress(certificate.childInfo.address)\r\n                      }}  \r\n                    />}\r\n                  options={options} \r\n                  value={defaultCode} \r\n                  nullFlavors={certificate.childInfo?.nullFlavors}  \r\n                  field_name=\"address\" paraNum \r\n                />    \r\n              </div>  \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">\r\n              <div className='paragraph p-mr-1'>15.*</div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={dDivStyle}>\r\n                <label htmlFor=\"marital_status\">Семейное положение</label>\r\n                <Dropdown inputId=\"marital_status\" style={ddStyle}\r\n                  placeholder=\"Выбрать\" autoFocus \r\n                  options={MARITAL_STATUSES} optionLabel=\"name\"\r\n                  value={MARITAL_STATUSES.find((item)=>item.code === certificate.maritalStatus)} \r\n                  onChange={(e) =>{certificate.maritalStatus= e.value.code}} \r\n                />                    \r\n              </div>  \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">\r\n              <div className='paragraph p-mr-1'>16.* </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={dDivStyle}>\r\n                <label htmlFor=\"education_level\">Образование</label>\r\n                <Dropdown inputId=\"education_level\" style={ddStyle}\r\n                  placeholder=\"Выбрать\" autoFocus \r\n                  options={EDUCATION_LEVELS} optionLabel=\"name\"\r\n                  value={EDUCATION_LEVELS.find((item)=>item.code === certificate.educationLevel)} \r\n                  onChange={(e) =>{certificate.educationLevel = e.value.code}} \r\n                />   \r\n              </div>  \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">\r\n              <div className='paragraph p-mr-1'>17.*</div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={dDivStyle}>\r\n                <label htmlFor=\"social_status\">Занятость</label>\r\n                <Dropdown inputId=\"social_status\" style={ddStyle}\r\n                  placeholder=\"Выбрать\" autoFocus \r\n                  options={SOCIAL_STATUSES} optionLabel=\"name\"\r\n                  value={SOCIAL_STATUSES.find((item)=>item.code === certificate.socialStatus)} \r\n                  onChange={(e) => {certificate.socialStatus = e.value.code}} \r\n                />    \r\n              </div>  \r\n            </div> \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%', paddingLeft:'0.5rem'}} >\r\n              <em>* В случае смерти ребенка до года заполняется в отношении матери</em>\r\n            </div>            \r\n          </div>          \r\n      </Card>  \r\n    </>)\r\n  }\r\n  export default observer(Section5) ","//Род причины смерти\r\n//OID: 1.2.643.5.1.13.13.99.2.21 Версия: 2.1\r\nexport const DISEASE_DEADTH_KIND = 1\r\nexport const DEATH_KINDS = [\r\n  { code: 1, name: \"от заболевания\" },\r\n  { code: 2, name: \"от несчастного случая, не связанного с производством\" },\r\n  { code: 3, name: \"от несчастного случая, связанного с производством\" },\r\n  { code: 4, name: \"убийства\" },\r\n  { code: 5, name: \"самоубийства\" },\r\n  { code: 6, name: \"в ходе военных действий\" },\r\n  { code: 7, name: \"в ходе террористических действий\" },\r\n  { code: 8, name: \"род смерти не установлен\" },\r\n]\r\n","//Тип медицинского работника, установившего причины смерти\r\n//OID: 1.2.643.5.1.13.13.99.2.22 Версия: 3.1\r\nexport const MEDICS = [\r\n  { code: 1, name: \"врач, только установивший смерть\" },\r\n  { code: 2, name: \"лечащий врач\" },\r\n  { code: 3, name: \"фельдшер, акушерка\" },\r\n  { code: 4, name: \"врач-патологоанатом\" },\r\n  { code: 5, name: \"врач-судебно-медицинский эксперт\" },\r\n]\r\n","//Основания для установления причины смерти\r\n//OID: 1.2.643.5.1.13.13.99.2.23  Версия: 2.1\r\nexport const BASIS_DERMINING = [\r\n  { code: 1, name: \"осмотр трупа\" },\r\n  { code: 2, name: \"записи в медицинской документации\" },\r\n  { code: 3, name: \"предшествующее наблюдение за пациентом\" },\r\n  { code: 4, name: \"вскрытие\" },\r\n]\r\n","import { observer } from 'mobx-react-lite'\r\nimport { FC, useContext} from 'react'\r\nimport { Context } from '../..'\r\nimport { Card } from 'primereact/card'\r\nimport { CheckboxChangeParams } from 'primereact/checkbox'\r\nimport '../../styles/components/RadioButton.css'\r\nimport '../../styles/components/Calendar.css'\r\nimport '../../styles/pages/CertificatePage.css'\r\nimport NullFlavorWrapper from '../NullFlavorWrapper'\r\nimport { NA, NULL_FLAVORS } from '../../utils/defaults'\r\nimport { IReference } from '../../models/IReference'\r\nimport { Dropdown } from 'primereact/dropdown'\r\n\r\nimport { INullFlavorR } from '../../models/INullFlavor'\r\nimport { DEATH_KINDS, DISEASE_DEADTH_KIND } from '../../NSI/1.2.643.5.1.13.13.99.2.21'\r\nimport { Calendar } from 'primereact/calendar'\r\nimport { InputTextarea } from 'primereact/inputtextarea'\r\nimport { MEDICS } from '../../NSI/1.2.643.5.1.13.13.99.2.22'\r\nimport { BASIS_DERMINING } from '../../NSI/1.2.643.5.1.13.13.99.2.23'\r\n\r\n const Section6: FC = () => {\r\n  const { certificateStore } = useContext(Context)\r\n   \r\n  const optionCode = 'NA'\r\n  const options = NULL_FLAVORS.filter((item:IReference)=>optionCode.includes(item.code))  \r\n  \r\n  const header = () => {\r\n      return <span>Характеристика причины смерти</span>\r\n    }\r\n  const certificate = certificateStore.cert  \r\n  const isExtReason = certificate.deathKind !== undefined && certificate.deathKind !== DISEASE_DEADTH_KIND \r\n  \r\n  \r\n  \r\n  const ddStyle = {minWidth:'210px', maxWidth:'500px', marginTop: '0.5rem', marginLeft: '-0.75rem'}\r\n  const dDivStyle = {paddingTop: '0.1rem'}\r\n      \r\n  return (<>    \r\n      <Card className=\"c-section p-mr-2 p-mb-2\" header={header}>        \r\n          <div className=\"p-fluid p-formgrid p-grid\">            \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">\r\n              <div className='paragraph p-mr-1'>18. </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={dDivStyle}>\r\n                <label htmlFor=\"deathPlaceType\">Смерть произошла</label>\r\n                <Dropdown inputId=\"deathPlaceType\" style={ddStyle} placeholder=\"Выбрать\"  \r\n                  options={DEATH_KINDS} optionLabel=\"name\" autoFocus\r\n                  value={DEATH_KINDS.find((item)=>item.code === certificate.deathKind)} \r\n                  onChange={(e) =>{\r\n                    certificate.deathKind = e.value.code                    \r\n                  }} />\r\n              </div>  \r\n            </div>            \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%'}} >\r\n              <div className='paragraph p-mr-1'>19.</div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" key={`pdivdt_${isExtReason}`} style={{width: '90%'}}>                                  \r\n                <NullFlavorWrapper paraNum disabled checked={isExtReason}                                      \r\n                  label={<label htmlFor=\"extReasonTime\"> В случае смерти от несчастного случая, убийства, самоубийства, от военных и террористических действий, при неустановленном роде смерти - указать дату, время и обстоятельства травмы (отравления)</label>}\r\n                  setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{                      \r\n                      if (!e.checked) {                        \r\n                        certificate.extReasonTime = undefined                        \r\n                      } \r\n                      if (nullFlavors) certificate.nullFlavors = nullFlavors\r\n                    }} \r\n                  onChange={(e:IReference,  nullFlavors: INullFlavorR[] | undefined)=>{\r\n                      if (nullFlavors) certificate.nullFlavors = nullFlavors}}\r\n                  field={<div className=\"p-d-flex p-flex-wrap p-jc-start\">\r\n                          <Calendar id=\"extReasonTime\" showIcon className=\"p-mr-3 p-mb-2\"\r\n                            placeholder='дата' dateFormat={\"dd.mm.yy\"} \r\n                            locale=\"ru\" mask=\"99.99.9999\" panelStyle={{marginLeft:'12rem'}}                                         \r\n                            value={certificate.extReasonTime} \r\n                            onChange={(e)=>{\r\n                              certificate.extReasonTime = e.target.value as Date | undefined\r\n                            }}                         \r\n                          />\r\n                         <Calendar id=\"timereason\" className=\"p-mr-3 p-mb-2\" timeOnly \r\n                         hourFormat=\"24\" placeholder='время' locale=\"ru\"           \r\n                         value={certificate.extReasonTime}                            \r\n                            onChange={(e)=>{\r\n                              certificate.extReasonTime = e.target.value as Date | undefined\r\n                            }}\r\n                          showIcon /> \r\n                         <InputTextarea id=\"extReasonDescription\" value={certificate.extReasonDescription} \r\n                            cols={65} rows={2} placeholder='обстоятельства'  \r\n                            onChange={(e)=>{certificate.extReasonDescription = e.target.value }}\r\n                          /> \r\n                        </div> \r\n                  }\r\n                  options={options} \r\n                  value={NA} \r\n                  nullFlavors={certificate.nullFlavors}  \r\n                  field_name=\"ext_reason_time\"\r\n                />                               \r\n              </div>              \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">\r\n              <div className='paragraph p-mr-1'>20. </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={dDivStyle}>\r\n                <label htmlFor=\"establishedMedic\">Причины смерти установлены:</label>\r\n                <Dropdown inputId=\"establishedMedic\" style={ddStyle} placeholder=\"Выбрать\"  \r\n                  options={MEDICS} optionLabel=\"name\" autoFocus\r\n                  value={MEDICS.find((item)=>item.code === certificate.establishedMedic)} \r\n                  onChange={(e) =>{\r\n                    certificate.establishedMedic = e.value.code                    \r\n                  }} />\r\n              </div>  \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">\r\n              <div className='paragraph p-mr-1'>21. </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={dDivStyle}>\r\n                <label htmlFor=\"basisDetermining\">На основании:</label>\r\n                <Dropdown inputId=\"basisDetermining\" style={ddStyle} placeholder=\"Выбрать\"  \r\n                  options={BASIS_DERMINING} optionLabel=\"name\" autoFocus\r\n                  value={BASIS_DERMINING.find((item)=>item.code === certificate.basisDetermining)} \r\n                  onChange={(e) =>{\r\n                    certificate.basisDetermining = e.value.code                    \r\n                  }} />\r\n              </div>  \r\n            </div>     \r\n          </div>          \r\n      </Card>  \r\n    </>)\r\n  }\r\n  export default observer(Section6) ","import { makeAutoObservable } from \"mobx\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { DATE_FORMAT, TIME_FORMAT } from \"../../utils/consts\"\r\nimport { NULL_FLAVOR_IDX } from \"../../utils/defaults\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { INullFlavorR } from \"../INullFlavor\"\r\nimport { IProcedureR } from \"../requests/IProcedureR\"\r\nimport { IMedicalServs } from \"../responses/IMedservs\"\r\nimport { IProcedure } from \"../responses/IProcedure\"\r\n\r\nexport class Procedure implements ISerializable {\r\n  private _id?: number\r\n  private _medicalServ: IMedicalServs\r\n  private _guid: string\r\n  private _textValue?: string | undefined\r\n  private _effectiveTime?: Date\r\n  private _nullFlavors: INullFlavorR[]\r\n  constructor(props: IProcedure) {\r\n    this._id = props.id\r\n    this._guid = props.guid || uuidv4()\r\n    this._medicalServ = props.medical_serv\r\n    this._textValue = props.text_value\r\n    if (props.effective_time) this._effectiveTime = new Date(props.effective_time)\r\n    this._nullFlavors =\r\n      props.null_flavors?.map((item) => {\r\n        return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n      }) || []\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n  getAttributes(): IProcedureR {\r\n    let _pr = { guid: this._guid } as IProcedureR\r\n    if (this._id && this._id > -1) _pr.id = this._id\r\n    if (this._effectiveTime) _pr.effective_time = this._effectiveTime.toLocaleString()\r\n    if (this._medicalServ) _pr.medical_serv_id = this._medicalServ.id\r\n    if (this._textValue) _pr.text_value = this._textValue\r\n    if (this._nullFlavors.length > 0) _pr.null_flavors_attributes = this.null_flavors_attributes()\r\n    return _pr\r\n  }\r\n  get id(): number | undefined {\r\n    return this._id\r\n  }\r\n  set id(value: number | undefined) {\r\n    this._id = value\r\n  }\r\n  get effectiveTime(): Date | undefined {\r\n    return this._effectiveTime\r\n  }\r\n  set effectiveTime(value: Date | undefined) {\r\n    this._effectiveTime = value\r\n  }\r\n  get textValue(): string | undefined {\r\n    return this._textValue\r\n  }\r\n  set textValue(value: string | undefined) {\r\n    this._textValue = value\r\n  }\r\n  get medicalServ(): IMedicalServs {\r\n    return this._medicalServ\r\n  }\r\n  set medicalServ(value: IMedicalServs) {\r\n    this._medicalServ = value\r\n  }\r\n  // получение копии массива заполнителей из Observable.array\r\n  null_flavors_attributes() {\r\n    return this._nullFlavors.map((el) => {\r\n      return { ...el }\r\n    })\r\n  }\r\n\r\n  get guid(): string {\r\n    return this._guid\r\n  }\r\n\r\n  timeStr(): string {\r\n    if (this._effectiveTime === undefined) return \"\"\r\n    return this._effectiveTime?.toLocaleString(\r\n      \"ru\",\r\n      this._effectiveTime.getHours() === 0 && this._effectiveTime.getMinutes() === 0 ? DATE_FORMAT : TIME_FORMAT\r\n    )\r\n  }\r\n}\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport { INullFlavorR } from \"../INullFlavor\"\r\nimport { IDeathReason } from \"../responses/IDeathReason\"\r\nimport { IDiagnosis } from \"../responses/IDiagnosis\"\r\nimport { Procedure } from \"./Procedure\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { NULL_FLAVOR_IDX } from \"../../utils/defaults\"\r\nimport { IDeathReasonR } from \"../requests/IDeathReasonR\"\r\nimport { IProcedureR } from \"../requests/IProcedureR\"\r\nexport class DeathReason implements ISerializable {\r\n  private _oldOne: IDeathReason\r\n  private _id?: number\r\n  private _diagnosis?: IDiagnosis | undefined\r\n  private _effectiveTime?: Date | null\r\n  private _years?: number | null\r\n  private _months?: number | null\r\n  private _weeks?: number | null\r\n  private _days?: number | null\r\n  private _hours?: number | null\r\n  private _minutes?: number | null\r\n  private _guid: string\r\n  private _procedures: Procedure[]\r\n  private _nullFlavors: INullFlavorR[]\r\n\r\n  constructor(props = {} as IDeathReason) {\r\n    this._oldOne = { ...props }\r\n    this._id = props.id\r\n    this._guid = props.guid || uuidv4()\r\n    this._diagnosis = props.diagnosis || props.ext_diagnosis\r\n    if (props.effective_time) this._effectiveTime = new Date(props.effective_time)\r\n    this._days = props.days\r\n    this._hours = props.hours\r\n    this._minutes = props.minutes\r\n    this._months = props.months\r\n    this._weeks = props.weeks\r\n    this._years = props.years\r\n    this._procedures = props.procedures?.map((proc) => new Procedure(proc)) || []\r\n    this._nullFlavors =\r\n      props.null_flavors?.map((item) => {\r\n        return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n      }) || []\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n  get id(): number | undefined {\r\n    return this._id\r\n  }\r\n\r\n  set id(id: number | undefined) {\r\n    this._id = id\r\n  }\r\n\r\n  get diagnosis(): IDiagnosis | undefined {\r\n    return this._diagnosis\r\n  }\r\n  set diagnosis(value: IDiagnosis | undefined) {\r\n    this._diagnosis = value\r\n  }\r\n  get effectiveTime(): Date | null | undefined {\r\n    return this._effectiveTime\r\n  }\r\n  set effectiveTime(value: Date | undefined | null) {\r\n    this._effectiveTime = value\r\n  }\r\n  get years(): number | undefined | null {\r\n    return this._years\r\n  }\r\n  set years(value: number | undefined | null) {\r\n    this._years = value\r\n  }\r\n  get months(): number | undefined | null {\r\n    return this._months\r\n  }\r\n  set months(value: number | undefined | null) {\r\n    this._months = value\r\n  }\r\n  get weeks(): number | undefined | null {\r\n    return this._weeks\r\n  }\r\n  set weeks(value: number | undefined | null) {\r\n    this._weeks = value\r\n  }\r\n  get days(): number | undefined | null {\r\n    return this._days\r\n  }\r\n  set days(value: number | undefined | null) {\r\n    this._days = value\r\n  }\r\n  get hours(): number | undefined | null {\r\n    return this._hours\r\n  }\r\n  set hours(value: number | undefined | null) {\r\n    this._hours = value\r\n  }\r\n  get minutes(): number | undefined | null {\r\n    return this._minutes\r\n  }\r\n  set minutes(value: number | undefined | null) {\r\n    this._minutes = value\r\n  }\r\n  get procedures(): Procedure[] {\r\n    return this._procedures\r\n  }\r\n  set procedures(value: Procedure[]) {\r\n    this._procedures = value\r\n  }\r\n  get nullFlavors(): INullFlavorR[] {\r\n    return this._nullFlavors\r\n  }\r\n  set nullFlavors(value: INullFlavorR[]) {\r\n    this._nullFlavors = value\r\n  }\r\n\r\n  // получение копии массива заполнителей из Observable.array\r\n  null_flavors_attributes() {\r\n    let _result = this._nullFlavors.map((el) => {\r\n      return { ...el }\r\n    })\r\n    this._oldOne.null_flavors?.forEach((el) => {\r\n      if (_result.findIndex((nf) => nf.id === el.id) === -1)\r\n        _result.push({ id: el.id, parent_guid: el.parent_guid, _destroy: \"1\" } as INullFlavorR)\r\n    })\r\n    return _result\r\n  }\r\n  procNames(): string {\r\n    let _result = \"\"\r\n    this._procedures.forEach((proc) => {\r\n      _result += proc.textValue || proc.medicalServ.name\r\n      if (proc.effectiveTime) _result += \" от \" + proc.timeStr()\r\n      _result += \"; \"\r\n    })\r\n    return _result\r\n  }\r\n  getAttributes(isExt = false): IDeathReasonR {\r\n    let _dr = { guid: this._guid } as IDeathReasonR\r\n    if (this._id && this._id > -1) _dr.id = this._id\r\n    if (this._days || this._oldOne.days) _dr.days = this._days\r\n    if (this._hours || this._oldOne.hours) _dr.hours = this._hours\r\n    if (this._minutes || this._oldOne.minutes) _dr.minutes = this._minutes\r\n    if (this._months || this._oldOne.months) _dr.months = this._months\r\n    if (this._weeks || this._oldOne.weeks) _dr.weeks = this._weeks\r\n    if (this._years || this._oldOne.years) _dr.years = this._years\r\n    if (this._effectiveTime || this._oldOne.effective_time) _dr.effective_time = this._effectiveTime\r\n    if (this._diagnosis && !isExt) _dr.diagnosis_id = Number.parseInt(this._diagnosis.id)\r\n    else if (this._oldOne.diagnosis) _dr.diagnosis_id = null\r\n    if (this._diagnosis && isExt) _dr.ext_diagnosis_id = Number.parseInt(this._diagnosis.id)\r\n    else if (this._oldOne.diagnosis) _dr.ext_diagnosis_id = null\r\n    if (this._nullFlavors.length > 0) _dr.null_flavors_attributes = this.null_flavors_attributes()\r\n    if (this._procedures.length > 0) _dr.procedures_attributes = this._procedures.map((item) => item.getAttributes())\r\n    if (this._oldOne.procedures && this._oldOne.procedures.length > 0) {\r\n      let _temp = [] as IProcedureR[]\r\n      this._oldOne.procedures.forEach((item) => {\r\n        if (!_dr.procedures_attributes || _dr.procedures_attributes.findIndex((pr) => pr.id === item.id) === -1)\r\n          _temp.push({ id: item.id, _destroy: \"1\" } as IProcedureR)\r\n      })\r\n      if (_dr.procedures_attributes && _temp.length > 0)\r\n        _dr.procedures_attributes = _dr.procedures_attributes.concat(_temp)\r\n      else if (_temp.length > 0) _dr.procedures_attributes = _temp\r\n    }\r\n    return _dr\r\n  }\r\n}\r\n","import { AxiosResponse } from \"axios\"\r\nimport $api, { API_URL } from \"../http\"\r\nimport { IDiagnosis } from \"../models/responses/IDiagnosis\"\r\nimport { IMedicalServs } from \"../models/responses/IMedservs\"\r\n\r\nexport default class DiagnosisService {\r\n  static async fetchDiagnoses(query: any): Promise<AxiosResponse<IDiagnosis[]>> {\r\n    return $api.post(`${API_URL}model/Diagnosis/`, { q: query, offset: 0, limit: 200 })\r\n  }\r\n  static async fetchExtDiagnoses(query: any): Promise<AxiosResponse<IDiagnosis[]>> {\r\n    return $api.post(`${API_URL}model/ExtDiagnosis/`, { q: query, offset: 0, limit: 200 })\r\n  }\r\n  static async fetchMedicalServs(query: any): Promise<AxiosResponse<IMedicalServs[]>> {\r\n    return $api.post(`${API_URL}model/MedicalServ/`, { q: query, offset: 0, limit: 200 })\r\n  }\r\n}\r\n","\r\n\r\nimport { observer } from 'mobx-react-lite'\r\nimport { AutoComplete } from 'primereact/autocomplete'\r\nimport { Button } from 'primereact/button'\r\nimport { CheckboxChangeParams } from 'primereact/checkbox'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { FC, useState } from 'react'\r\nimport Certificate from '../../models/FormsData/Certificate'\r\nimport { DeathReason } from '../../models/FormsData/DeathReason'\r\nimport { INullFlavorR } from '../../models/INullFlavor'\r\nimport { IReference } from '../../models/IReference'\r\nimport { IDiagnosis } from '../../models/responses/IDiagnosis'\r\nimport DiagnosisService from '../../services/DiagnosisService'\r\nimport { NA, NULL_FLAVORS, UNK } from '../../utils/defaults'\r\nimport NullFlavorWrapper from '../NullFlavorWrapper'\r\n\r\ntype ReasonProps = {\r\n  disabled?:boolean\r\n  checked?:boolean\r\n  isExt?:boolean\r\n  deathReason?: DeathReason\r\n  label: string \r\n  certificate: Certificate\r\n  fieldName?: string\r\n  onChange: (reason: DeathReason | undefined)=>void\r\n  onUp?: ()=>void\r\n  onDown?: ()=>void\r\n  onTimeChecked?: (checked: boolean)=>void \r\n  onDiagnosisChecked?: (checked: boolean, nullFlavors: INullFlavorR[] | undefined)=>void\r\n}\r\n\r\nconst Reason: FC<ReasonProps> = (props: ReasonProps) => { \r\n  const options = NULL_FLAVORS.filter((item:IReference)=>\"ASKU NA UNK\".includes(item.code))\r\n  const style = {width:'86px'}\r\n  const CSS_classes = \"p-field p-inputgroup p-mr-1\"\r\n  const [checked, setChecked] = useState(props.checked || false)   \r\n  const [diagnoses, setDiagnoses] = useState<IDiagnosis[]>([]) \r\n  const [diagnosisText, setDiagnosisText] = useState('')\r\n  const [diagnosisCode, setDiagnosisCode] = useState('')\r\n  const cleanEffectiveTime = () => {\r\n    if (!deathReason) return\r\n    if (deathReason.days) deathReason.days =null \r\n    if (deathReason.effectiveTime) deathReason.effectiveTime = null\r\n    if (deathReason.hours) deathReason.hours =null \r\n    if (deathReason.minutes) deathReason.minutes = null\r\n    if (deathReason.months) deathReason.months = null\r\n    if (deathReason.weeks) deathReason.weeks = null\r\n    if (deathReason.years) deathReason.years = null\r\n  }\r\n  const  getDiagnoses = (event: { query: string })=>{\r\n  const option = {} as any\r\n  if (event.query.trim().length>0) option.s_name_cont = event.query.trim()\r\n  if (!!diagnosisCode && diagnosisCode.trim().length>0) option.ICD10_start =  diagnosisCode    \r\n  if (props.isExt) DiagnosisService.fetchExtDiagnoses(option).then(response=>{\r\n        if (response.data.length>0) setDiagnoses(response.data)\r\n        else setDiagnoses([])        \r\n      }).catch((reason)=>console.log(reason)) \r\n  else DiagnosisService.fetchDiagnoses(option).then(response=>{\r\n        if (response.data.length>0) setDiagnoses(response.data)\r\n        else setDiagnoses([])        \r\n      }).catch((reason)=>console.log(reason))    \r\n  }\r\n  const  getCodes = (event: { query: string })=>{    \r\n    if (event.query.trim().length>0) {\r\n      if (props.isExt) DiagnosisService.fetchExtDiagnoses({'ICD10_start': event.query.trim()}).then(response=>{        \r\n        if (response.data.length>0) setDiagnoses(response.data)\r\n        else setDiagnoses([])        \r\n      }).catch((reason)=>console.log(reason))\r\n      else DiagnosisService.fetchDiagnoses({'ICD10_start': event.query.trim()}).then(response=>{                \r\n        if (response.data.length>0) setDiagnoses(response.data)\r\n        else setDiagnoses([])        \r\n      }).catch((reason)=>console.log(reason)) \r\n    } \r\n  }\r\n  const deathTime = props.certificate.deathDatetime  \r\n  const [deathReason, setDeathReason] = useState<DeathReason | null | undefined>(props.deathReason)  \r\n  const upButton = props.onUp === undefined ? <></> : <Button icon=\"pi pi-angle-up\" onClick={props.onUp} className=\"p-button-rounded p-button-secondary p-mr-1\" />\r\n  const downButton = props.onDown === undefined ? <></> : <Button icon=\"pi pi-angle-down\" onClick={props.onDown} className=\"p-button-rounded p-button-secondary\" />\r\n  const diagnosisOptionTemplate = (option: IDiagnosis) => {\r\n        return (\r\n          <span>\r\n            <span style={{marginRight:'4px'}}>{option.ICD10}</span>\r\n            <span>{option.s_name}</span>\r\n          </span>\r\n        )\r\n    }\r\n  const effTime = checked && !!deathReason && !!deathTime ? (<NullFlavorWrapper  \r\n      checked={checked && (!!deathReason.effectiveTime || deathReason.nullFlavors.findIndex(el=>el.parent_attr==='effective_time')===-1)} \r\n      key={`et_${deathReason.effectiveTime}`} \r\n      label={<label>Период времени между началом патол. состояния и смертью</label>} \r\n      options={options}  paraNum value={UNK}\r\n      nullFlavors={deathReason.nullFlavors}\r\n      setCheck={(e: CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n        if (!e.checked) cleanEffectiveTime() \r\n        //console.log('deathReason.nullFlavors',deathReason.nullFlavors)\r\n        if (nullFlavors) deathReason.nullFlavors = nullFlavors\r\n        //console.log('nullFlavors', nullFlavors)\r\n        props.onChange(deathReason)\r\n        if (props.onTimeChecked) props.onTimeChecked(e.checked)\r\n      }}\r\n      onChange={(e: IReference, nullFlavors: INullFlavorR[] | undefined)=>{        \r\n        if (nullFlavors) deathReason.nullFlavors = nullFlavors}}\r\n      field_name=\"effective_time\"\r\n      field={\r\n        <div className=\"p-fluid p-formgrid p-grid\" style={{marginLeft:'0'}}>           \r\n          <div className={CSS_classes} style={style} key={`rt_${deathTime}`}>  \r\n            <span className=\"p-inputgroup-addon\">лет</span>          \r\n            <InputText id=\"year\" type=\"number\" min={0} max={99}\r\n                onChange={(e)=>{  \r\n                const value = Number.parseInt(e.target.value)                             \r\n                deathReason.years = value === 0 ? undefined : value\r\n                props.certificate.saveReasonEffTime(deathReason)\r\n                props.onChange(deathReason)              \r\n              }}\r\n             value={deathReason.years || ''} />         \r\n          </div>\r\n          <div className={CSS_classes} style={style}>\r\n            <span className=\"p-inputgroup-addon\">мес</span>            \r\n            <InputText id=\"month\" type=\"number\" \r\n              min={0} max={12} onChange={(e)=>{\r\n              const value = Number.parseInt(e.target.value)  \r\n              deathReason.months = value === 0 ? undefined : value\r\n              props.certificate.saveReasonEffTime(deathReason) \r\n              props.onChange(deathReason)\r\n            }}\r\n            value={deathReason.months || ''}/>\r\n          </div>\r\n          <div className={CSS_classes} style={style}> \r\n            <span className=\"p-inputgroup-addon\">нед</span>           \r\n            <InputText id=\"ned\" type=\"number\" \r\n            min={0} max={4} onChange={(e)=>{\r\n              const value = Number.parseInt(e.target.value)\r\n              deathReason.weeks = value === 0 ? undefined : value\r\n              props.certificate.saveReasonEffTime(deathReason)\r\n              props.onChange(deathReason)\r\n            }}\r\n            value={deathReason.weeks || ''}/>         \r\n          </div>\r\n          <div className={CSS_classes} style={style}>\r\n            <span className=\"p-inputgroup-addon\">сут</span>            \r\n            <InputText id=\"dne\" type=\"number\" \r\n            min={0} max={7} onChange={(e)=>{\r\n              const value = Number.parseInt(e.target.value)\r\n              deathReason.days = value === 0 ? undefined : value\r\n              if (props.certificate.saveReasonEffTime(deathReason)) props.onChange(deathReason)\r\n            }}\r\n            value={deathReason.days || ''}/>\r\n          </div>\r\n          <div className={CSS_classes} style={style}>\r\n            <span className=\"p-inputgroup-addon\">час</span>            \r\n            <InputText id=\"hours\" type=\"number\"\r\n             min={0} max={23} onChange={(e)=>{\r\n              const value = Number.parseInt(e.target.value) \r\n              deathReason.hours = value === 0 ? undefined : value\r\n              if (props.certificate.saveReasonEffTime(deathReason)) props.onChange(deathReason)\r\n            }}\r\n             value={deathReason.hours || ''}/>          \r\n          </div>\r\n          <div className={CSS_classes} style={style}>\r\n            <span className=\"p-inputgroup-addon\">мин</span>            \r\n            <InputText id=\"minut\" type=\"number\"\r\n              min={0} max={59} onChange={(e)=>{\r\n              const value = Number.parseInt(e.target.value)  \r\n              deathReason.minutes = value === 0 ? undefined : value\r\n              props.certificate.saveReasonEffTime(deathReason) \r\n              props.onChange(deathReason)\r\n            }}\r\n             value={deathReason.minutes || ''}/>\r\n          </div>\r\n        </div>\r\n      }\r\n    />) : <></>        \r\n  return (<div className=\"p-paragraph-field\"  style={{width: '100%'}}>  \r\n    <NullFlavorWrapper disabled={props.disabled} checked={checked} key={`rs2_${deathReason?.id}_${deathReason?.diagnosis}`}\r\n      setCheck={(e: CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n        setChecked(e.checked)        \r\n        if (e.checked) {\r\n          const reason = new DeathReason()\r\n          props.onChange(reason)\r\n          setDeathReason(reason)\r\n        } else {           \r\n          if (!!deathReason) {             \r\n            deathReason.nullFlavors = []\r\n            cleanEffectiveTime()  \r\n            deathReason.diagnosis = undefined\r\n            deathReason.nullFlavors.push({parent_attr:'effective_time', code: NA} as INullFlavorR)   \r\n            deathReason.nullFlavors.push({parent_attr:'diagnosis', code: NA} as INullFlavorR)       \r\n          } \r\n          props.onChange(undefined)   \r\n        }\r\n        if (props.onDiagnosisChecked) props.onDiagnosisChecked(e.checked, nullFlavors)        \r\n      }}  \r\n      label={<label>{props.label}</label>} \r\n      options={options} \r\n      nullFlavors={!props.fieldName ? deathReason?.nullFlavors : props.certificate.nullFlavors}       \r\n      paraNum      \r\n      field_name={props.fieldName || 'diagnosis'}\r\n      value={NA}\r\n      field={\r\n        <div className=\"p-fluid p-formgrid p-grid\">     \r\n          <div className={`p-field p-col-12 ${props.isExt ? 'p-md-10' : 'p-md-8'}`}>             \r\n            <AutoComplete id=\"reason_text\" placeholder=\"Диагноз\"\r\n              suggestions={diagnoses} delay={1000} dropdown\r\n              completeMethod={getDiagnoses} itemTemplate={diagnosisOptionTemplate}\r\n              field=\"s_name\" onChange={(e) =>{ \r\n                if (!!deathReason && !!e.value.s_name) { \r\n                  deathReason.diagnosis = e.value\r\n                  if (!!deathReason.diagnosis) setDiagnosisCode(deathReason.diagnosis?.ICD10)\r\n                } else if(e.value) {\r\n                  if (!!deathReason) deathReason.diagnosis = undefined\r\n                  setDiagnosisText(e.value)                  \r\n                } else {\r\n                  if (deathReason) deathReason.diagnosis = undefined\r\n                  setDiagnosisText('')                  \r\n                }  \r\n                if (deathReason!=null) props.onChange(deathReason)\r\n              }}\r\n              value={props.deathReason?.diagnosis || diagnosisText}/>          \r\n          </div>\r\n          <div className=\"p-field p-col-12 p-md-2\">\r\n            <AutoComplete id=\"reason_code\" placeholder=\"Код\"\r\n              suggestions={diagnoses} delay={1000} field=\"ICD10\"\r\n              itemTemplate={diagnosisOptionTemplate}\r\n              completeMethod={getCodes} onChange={(e) =>{ \r\n                if (!!deathReason && !!e.value.s_name) {\r\n                    deathReason.diagnosis = e.value\r\n                    if (!!deathReason.diagnosis) setDiagnosisCode(deathReason.diagnosis?.ICD10)\r\n                } else if(e.value) {\r\n                    if (!!deathReason) deathReason.diagnosis = undefined\r\n                  setDiagnosisCode(e.value)                \r\n                } else {\r\n                  if (!!deathReason) deathReason.diagnosis = undefined               \r\n                  setDiagnosisCode('')\r\n                }  \r\n                if (!!deathReason) props.onChange(deathReason)\r\n              }}\r\n              value={props.deathReason?.diagnosis || diagnosisCode}/>          \r\n          </div>\r\n          <div className={`p-field ${props.isExt ? '' : 'p-col-12 p-md-2'}`}>\r\n            {upButton}\r\n            {downButton}            \r\n          </div>\r\n        </div>\r\n      }\r\n    />  \r\n    {effTime}\r\n  </div>)\r\n}\r\nexport default observer(Reason)","import { AxiosResponse } from \"axios\"\r\nimport { $acme, ACME_URL } from \"../http\"\r\n\r\nexport default class ACMEService {\r\n  //POST request for run ACME and get result\r\n  static async runACME(input: string): Promise<AxiosResponse<string>> {\r\n    return $acme.post(`${ACME_URL}useACME`, { data_AIN: input })\r\n  }\r\n}\r\n","import Certificate from \"../models/FormsData/Certificate\"\r\nimport ACMEService from \"../services/ACME_Service\"\r\n\r\n/**\r\n * Преобразование массива причин в строку заданного формата: Позиции\r\n * соответствуют кодам МКБ-10 причин смерти, записанных без точки (4\r\n * знакоместа) и разделенные знаком / внутри раздела 1 пункта 22 нашего\r\n * свидетельства о смерти, знаком * между разделами, пробелом внутри раздела\r\n * 2 и с размещением кода внешней причины (первые 3 знака) в конце\r\n * кодограммы с добавленным знаком & впереди.\r\n *\r\n * @return результирующая строка\r\n */\r\nconst codogram = (\r\n  reason_a: string,\r\n  reason_b: string | undefined,\r\n  reason_c: string | undefined,\r\n  ext_reason: string | undefined,\r\n  reasons: Array<string | undefined>\r\n): string => {\r\n  let _result = \"\"\r\n  let _part_2 = \"\"\r\n  reasons.forEach((code) => {\r\n    if (!!code) _part_2 += \" \" + code\r\n  })\r\n  if (!reason_b && !ext_reason && !reasons[0]) {\r\n    _result = reason_a\r\n  } else if (!!reason_b && !reason_c && !ext_reason && !reasons[0]) {\r\n    _result = reason_a + \"/\" + reason_b\r\n  } else if (!!reason_b && !!reason_c && !ext_reason && !reasons[0]) {\r\n    _result = reason_a + \"/\" + reason_b + \"/\" + reason_c\r\n  } else if (!reason_b && !ext_reason && !!reasons[0]) {\r\n    _result = reason_a + \"*\" + _part_2\r\n  } else if (!!reason_b && !reason_c && !ext_reason && !!reasons[0]) {\r\n    _result = reason_a + \"/\" + reason_b + \"*\" + _part_2\r\n  } else if (!!reason_b && !!reason_c && !ext_reason && !!reasons[0]) {\r\n    _result = reason_a + \"/\" + reason_b + \"/\" + reason_c + \"*\" + _part_2\r\n  } else if (!reason_b && !!ext_reason && !reasons[0]) {\r\n    _result = reason_a + \" \" + ext_reason\r\n  } else if (!!reason_b && !reason_c && !!ext_reason && !reasons[0]) {\r\n    _result = reason_a + \"/\" + reason_b + \" \" + ext_reason\r\n  } else if (!!reason_b && !!reason_c && !!ext_reason && !reasons[0]) {\r\n    _result = reason_a + \"/\" + reason_b + \"/\" + reason_c + \" \" + ext_reason\r\n  } else if (!reason_b && !!ext_reason && !!reasons[0]) {\r\n    _result = reason_a + \"*\" + _part_2 + \" \" + ext_reason\r\n  } else if (!!reason_b && !reason_c && !!ext_reason && !!reasons[0]) {\r\n    _result = reason_a + \"/\" + reason_b + \"*\" + _part_2 + \" \" + ext_reason\r\n  } else if (!!reason_b && !!reason_c && !!ext_reason && !!reasons[0]) {\r\n    _result = reason_a + \"/\" + reason_b + \"/\" + reason_c + \"*\" + _part_2 + \" \" + ext_reason\r\n  }\r\n  return _result.padEnd(120, \" \")\r\n}\r\n\r\n/**\r\n * экспорт массива причин в строку\r\n *\r\n * @param withOtherReasons определяет есть ли прочие причины\r\n * @return входную кодограмму для внешнего модуля АСМЕ\r\n * (файл с расширением ain)\r\n */\r\nconst ACME_AIN = (withOtherReasons: boolean, certificate: Certificate) => {\r\n  const deathDatetime = certificate.deathDatetime?.toDateString()\r\n  const deathDate = certificate.deathDatetime?.toLocaleDateString()\r\n  //Позиции 1-4 соответствуют году смерти\r\n  const X1X4 = !deathDatetime ? \"0000\" : deathDatetime.slice(-4)\r\n  //Позиции 5-6 соответствуют месту смерти, которая обозначена NC\r\n\r\n  //Позиции 7-12 соответствуют номеру сертификата, вместо которого для\r\n  //идентификации записи после ее возврата от АСМЕ\r\n  //заполнены левой частью форматированного до 10 знаков незначащими нулями\r\n  //значения счетчика (6 знакомест)\r\n  const X7X12 = certificate.number?.slice(-4).padStart(6, \"0\") || \"000000\"\r\n\r\n  //Позиция 13 соответствует номеру кодировщика, который обозначен как 1\r\n\r\n  //Позиции 14-17 соответствуют лоту, вместо которого для идентификации записи после\r\n  //ее возврата от АСМЕ заполнены правой частью форматированного до 10 знаков\r\n  //незначащими нулями значения счетчика (4 знакоместа)\r\n  const X14X17 = withOtherReasons ? \"0000\" : \"0001\"\r\n\r\n  //Позиция 18 соответствует номеру секции, который обозначен как 1\r\n  //Позиции 19-21 соответствуют первым трем буквам месяца смерти\r\n  const X19X21 = !deathDatetime ? \"000\" : deathDatetime.slice(4, 7)\r\n  //Позиции 22-23 соответствуют месяцу смерти\r\n  const X22X23 = !deathDate ? \"  \" : deathDate.slice(3, 5)\r\n  //Позиции 24-25 соответствуют дню смерти\r\n  const X24X25 = !deathDate ? \"  \" : deathDate.slice(0, 2)\r\n  // Позиции 26-29 соответствуют Х26Х29 (году смерти), отсутствие заполняется пробелами\r\n  const X26X29 = !deathDate ? \"    \" : deathDate.slice(-4)\r\n  // Позиции 30-33 соответствуют году версии программы SuperMICAR\r\n  // Позиции 34-37 соответствуют году версии программы MICAR200\r\n  const birthDay = certificate.patient.birth_date\r\n  const deathDay = certificate.deathDatetime\r\n  //Позиция 38 соответствует: 1 - год, 2 - месяц, 4 - день\r\n  //Позиции 39 - 41 числу годов или месяцев или дней (в зависимости от позиции 38)\r\n  let XYMD = \"9\"\r\n  let X39X41 = \"999\"\r\n  if (deathDay && birthDay) {\r\n    let _diff = deathDay.getFullYear() - birthDay.getFullYear()\r\n    if (_diff > 1) {\r\n      XYMD = \"1\"\r\n      X39X41 = _diff.toString().padStart(3, \"0\")\r\n    } else if (_diff === 1) {\r\n      _diff = deathDay.getMonth() - birthDay.getMonth()\r\n      if (_diff > 0) {\r\n        XYMD = \"1\"\r\n        X39X41 = \"001\"\r\n      } else {\r\n        XYMD = \"2\"\r\n        _diff = deathDay.getMonth() + 12 - birthDay.getMonth()\r\n        X39X41 = _diff.toString().padStart(3, \"0\")\r\n      }\r\n    } else {\r\n      _diff = deathDay.getMonth() - birthDay.getMonth()\r\n      if (_diff > 1) {\r\n        XYMD = \"2\"\r\n        X39X41 = _diff.toString().padStart(3, \"0\")\r\n      } else if (_diff === 1) {\r\n        _diff = deathDay.getDate() - birthDay.getDate()\r\n        if (_diff > 0) {\r\n          XYMD = \"1\"\r\n          X39X41 = \"001\"\r\n        } else {\r\n          XYMD = \"3\"\r\n          _diff = deathDay.getDate() + 30 - birthDay.getDate()\r\n          X39X41 = _diff.toString().padStart(3, \"0\")\r\n        }\r\n      } else {\r\n        _diff = deathDay.getDate() - birthDay.getDate()\r\n        if (_diff > 0) {\r\n          XYMD = \"3\"\r\n          X39X41 = _diff.toString().padStart(3, \"0\")\r\n        } else {\r\n          XYMD = \"3\"\r\n          X39X41 = \"000\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //Позиция 42 соответствует пункту 14 нашего свидетельства: от чего умер.\r\n  //Значению deathKind=1 (заболевание) соответствует в АСМЕ код N\r\n  //Значению deathKind=2 или 3 (несчастный случай) соответствует в АСМЕ код A\r\n  //Значению deathKind=4 (убийство) соответствует в АСМЕ код H\r\n  //Значению deathKind=5 (самоубийство) соответствует в АСМЕ код S\r\n  //Значению deathKind=6 (в ходе военных действий) соответствует в АСМЕ код A\r\n  //Значению deathKind=7 (в ходе террористических действий) соответствует в АСМЕ код A\r\n  //Значению deathKind=8 (род смерти не установлен) соответствует в АСМЕ код C\r\n  let X42 = \" \"\r\n  if (!!certificate.deathKind && certificate.deathKind > 0)\r\n    X42 = [\"N\", \"A\", \"A\", \"H\", \"S\", \"A\", \"A\", \"C\"][certificate.deathKind - 1]\r\n  //Позиция 43 соответствует одному пробелу (\" \")\r\n  //Позиция 44 - кем отвергнута запись (принимается пробел, т.е. не отвергнута)\r\n\r\n  //X45 - четвертый знак кода четвертой строки при условии, что он\r\n  //находится в пределах W00-Y34.X, кроме Y06._ и Y07._\r\n  let X45 = certificate.reasonD?.diagnosis?.ICD10\r\n  X45 =\r\n    !X45 ||\r\n    !(X45 >= \"W00\" && X45 <= \"Y34.X\") ||\r\n    X45.lastIndexOf(\"X\") > 1 ||\r\n    X45.includes(\"Y06.\") ||\r\n    X45.includes(\"Y07.\") ||\r\n    X45.length < 4\r\n      ? \" \"\r\n      : X45.substring(4, 5)\r\n\r\n  //Позиции 51-170 соответствуют кодам МКБ-10 причин смерти, записанных\r\n  //без точки (4 знакоместа) и разделенные знаком / внутри раздела 1\r\n  //пункта 18 нашего свидетельства о смерти, знаком * между разделами,\r\n  //пробелом внутри раздела 2 и с размещением кода внешней причины (первые 3 знака) в конце\r\n  //кодограммы с добавленным знаком & впереди.\r\n  let reasonA = certificate.reasonA?.diagnosis?.ICD10\r\n  reasonA = reasonA && reasonA.replace(\".\", \"\").padEnd(4, \" \")\r\n  let reasonB = certificate.reasonB?.diagnosis?.ICD10\r\n  reasonB = reasonB && reasonB.replace(\".\", \"\").padEnd(4, \" \")\r\n  let reasonC = certificate.reasonC?.diagnosis?.ICD10\r\n  reasonC = reasonC && reasonC.replace(\".\", \"\").padEnd(4, \" \")\r\n  let reasonD = certificate.reasonD?.diagnosis?.ICD10\r\n  reasonD = reasonD && reasonD.replace(\".\", \"\")\r\n  if (X45 !== \" \" && !!reasonD) {\r\n    reasonD = \"&\" + reasonD\r\n    if (reasonD.length > 4) reasonD = reasonD.slice(0, 4)\r\n  } else if (!!reasonD && X45 === \" \") reasonD = (\"&\" + reasonD).padEnd(5, \" \")\r\n  if (reasonD && reasonD.length < 4) reasonD = reasonD.padEnd(4, \" \")\r\n  const reasons = []\r\n  reasons[0] =\r\n    certificate.deathReasons.length < 1 || !withOtherReasons\r\n      ? undefined\r\n      : certificate.deathReasons[0].diagnosis?.ICD10.replace(\".\", \"\").padEnd(4, \" \")\r\n  reasons[1] =\r\n    certificate.deathReasons.length < 2 || !withOtherReasons\r\n      ? undefined\r\n      : certificate.deathReasons[1].diagnosis?.ICD10.replace(\".\", \"\").padEnd(4, \" \")\r\n  reasons[2] =\r\n    certificate.deathReasons.length < 3 || !withOtherReasons\r\n      ? undefined\r\n      : certificate.deathReasons[2].diagnosis?.ICD10.replace(\".\", \"\").padEnd(4, \" \")\r\n  reasons[3] =\r\n    certificate.deathReasons.length < 4 || !withOtherReasons\r\n      ? undefined\r\n      : certificate.deathReasons[3].diagnosis?.ICD10.replace(\".\", \"\").padEnd(4, \" \")\r\n\r\n  reasonA = reasonA && reasonA.lastIndexOf(\"X\") > 1 ? reasonA.slice(0, 3) + \" \" : reasonA\r\n  reasonB = reasonB && reasonB.lastIndexOf(\"X\") > 1 ? reasonB.slice(0, 3) + \" \" : reasonB\r\n  reasonC = reasonC && reasonC.lastIndexOf(\"X\") > 1 ? reasonC.slice(0, 3) + \" \" : reasonC\r\n\r\n  const reasons_in = reasons.map((reason) => {\r\n    return reason && reason.lastIndexOf(\"X\") > 1 ? reason.substring(0, 3) + \" \" : reason\r\n  })\r\n\r\n  //Далее позиции 90 - 170 заняты пробелами, т.е. Space(81)\r\n\r\n  //Позиция 171 - вскрытие (Y - да, N - нет, U - поле не заполнено)\r\n  //В базе код вскрытия 4, а не 1!!!!!!\r\n\r\n  const X171 = !certificate.basisDetermining ? \"U\" : certificate.basisDetermining === 4 ? \"Y\" : \"N\"\r\n  //Позиции 172-173 заняты пробелами\r\n  //Позиция 174 в случае смерти беременной (21п.)\r\n  let X174 = \"3\"\r\n  if (certificate.pregnancyConnection) X174 = [\"9\", \"3\", \"4\", \"1\"][certificate.pregnancyConnection]\r\n\r\n  //Позиция 175 занята пробелом\r\n  //Позиции 176-177 - месяц даты травмы (пункт 15 нашего свитетельства), отсутствие обозначено 99\r\n  const extReasonTime = certificate.extReasonTime?.toLocaleString()\r\n  const X176X177 = !extReasonTime ? \"99\" : extReasonTime.substring(3, 5)\r\n  //Позиции 178-179 - день даты травмы (пункт 15 нашего свитетельства), отсутствие обозначено 99\r\n  const X178X179 = !extReasonTime ? \"99\" : extReasonTime.substring(0, 2)\r\n  //Позиции 180-183 - год даты травмы (пункт 15 нашего свитетельства), отсутствие обозначено 9999\r\n  const X180X183 = !extReasonTime ? \"9999\" : extReasonTime.substring(6, 10)\r\n\r\n  //Позиции 184-187 (время травмы) заполнены 9999\r\n  //Позиция 188 (смерть от травмирования)\r\n\r\n  const X188 = !certificate.deathKind || certificate.deathKind !== 3 ? \" \" : \"Y\"\r\n\r\n  //Позиции 189 - 218 заполнены 30 пробелами, т.е. Space(30)\r\n  //Позиция 219 соответствует пятому знаку кода внешней причины (не считая точки)\r\n  let X219 = certificate.reasonD?.diagnosis?.ICD10\r\n  X219 = X219 && X219.length > 5 ? X219.substring(5, 6) : \" \"\r\n  //Позиции 220 - 231 могут быть заполнены кодом территории (п.7 свидетельства - республика, область, край)\r\n  let X220X231 = certificate.patient.person?.address?.state\r\n  X220X231 = !X220X231 ? \"            \" : X220X231.padStart(12, \" \")\r\n\r\n  //Позиции 232 - 261 для дополнительной информации заполнены пробелами, т.е. Space(30) с буквой q на конце\r\n  //ACMEAIN - объединяющая строка, формирующая входную кодограмму для внешнего модуля АСМЕ (файл с расширением ain)\r\n  const ACMEAIN =\r\n    X1X4 +\r\n    \"NC\" +\r\n    X7X12 +\r\n    \"1\" +\r\n    X14X17 +\r\n    \"1\" +\r\n    X19X21 +\r\n    X22X23 +\r\n    X24X25 +\r\n    X26X29 +\r\n    \"20042004\" +\r\n    XYMD +\r\n    X39X41 +\r\n    X42 +\r\n    \"  \" +\r\n    X45 +\r\n    \"     \" +\r\n    codogram(reasonA || \"    \", reasonB, reasonC, reasonD, reasons_in) +\r\n    X171 +\r\n    \"  \" +\r\n    X174 +\r\n    \" \" +\r\n    X176X177 +\r\n    X178X179 +\r\n    X180X183 +\r\n    \"9999\" +\r\n    X188 +\r\n    \"                              \" +\r\n    X219 +\r\n    X220X231\r\n  return ACMEAIN.padEnd(260, \" \") + \"q\"\r\n}\r\n/**\r\n * Достаем первоначальную причину смерти из кодограммы ACME Во входной\r\n * кодограмме позиции 51-54 соответствуют первоначальной причине смерти, а\r\n * позиция 45 - четвертому знаку внешней причины. При отсутствии четвертого\r\n * знака добавляется знак Х.\r\n *\r\n * @param xACME - входная кодограмма из файла *.TIN\r\n * @return первоначальную причину смерти или пустую строку\r\n */\r\nconst parse_ACME_TIN = (xACME: string) => {\r\n  let _sb = \"\"\r\n  const x45 = xACME.substring(44, 45)\r\n  const x54 = xACME.substring(53, 54)\r\n  const x51_53 = xACME.substring(50, 53)\r\n  const spX45 = \" \" === x45\r\n  const spX54 = \" \" === x54\r\n  const spX51_53 = \"   \" === x51_53\r\n  if (spX45 && !spX54) _sb = `${x51_53}.${x54}`\r\n  else if (spX45 && spX54 && !spX51_53) _sb = `${x51_53}.X`\r\n  else if (!spX45 && !spX51_53 && \"V01\" < x51_53 && \"Y98.X\" >= x51_53) _sb = `${x51_53}.${x45}`\r\n  else if (!spX45 && !spX51_53 && \"V\" > x51_53) _sb = `${x51_53}.${x54}`\r\n  return _sb\r\n}\r\n\r\n/**\r\n * экспорт массива причин в строку АСМЕAIN запрос сервиса ACME\r\n * чтение парсинг результата АСМЕTIN и его обработка.\r\n *\r\n * @return код результата операции\r\n */\r\nexport const doACME = (\r\n  certificate: Certificate,\r\n  onSucccess: (result: string) => void,\r\n  onError: (message: string) => void\r\n) => {\r\n  let _result = -1\r\n  try {\r\n    // Получаем строку входных параметров для внешнего модуля АСМЕ\r\n    const strACMEAIN1 = ACME_AIN(true, certificate)\r\n    _result = -2\r\n    const isReasonD = !!certificate.reasonD && !!certificate.reasonD.diagnosis && !!certificate.reasonD.diagnosis.ICD10\r\n    // Получаем дополнительную строку входных параметров\r\n    // без прочих причин на входе, если внешняя причина определена\r\n    const strACMEAIN2 = isReasonD ? ACME_AIN(false, certificate) : \"\"\r\n    _result = -3\r\n    // делаем запрос к сервису АСМЕ\r\n    ACMEService.runACME(strACMEAIN1 + strACMEAIN2)\r\n      .then((response) => {\r\n        if (response.data && response.data.length < 120) {\r\n          //Длина менее 120, что-то пошло не так\r\n          onError(`Сбой операции: получен некорректный ответ от АСМЕ: ${response.data}`)\r\n        } else {\r\n          // сервис вернул корректный результат\r\n          const TINs = (response.data as any).data_TIN.split(\"\\r\\n\")\r\n          console.log(\"response.data\", response.data)\r\n          if (!isReasonD) onSucccess(parse_ACME_TIN(TINs[0]))\r\n          else {\r\n            let _res = \"\"\r\n            let _alter = \"\"\r\n            if (Number.parseInt(TINs[0].slice(6, 12) + TINs[0].slice(13, 17)) === 1) {\r\n              _res = parse_ACME_TIN(TINs[0])\r\n              _alter = parse_ACME_TIN(TINs[1])\r\n            } else {\r\n              _res = parse_ACME_TIN(TINs[1])\r\n              _alter = parse_ACME_TIN(TINs[0])\r\n            }\r\n            if (_res < \"V00\" || _res > \"Y99.X\") _res = \"\"\r\n            if (\"\" === _res) _res = _alter\r\n            onSucccess(_res)\r\n          }\r\n        }\r\n      })\r\n      .catch((reason) => {\r\n        onError(`Сбой операции: код завершения - 0, подробности: ${reason.message}`)\r\n      })\r\n    _result = 0\r\n  } catch (error) {\r\n    onError(`Сбой операции: код завершения ${_result}, подробности: ${error}`)\r\n  }\r\n}\r\n","import { observer } from 'mobx-react-lite'\r\nimport { FC, useContext} from 'react'\r\nimport { Context } from '../..'\r\nimport { Card } from 'primereact/card'\r\nimport { DeathReason } from '../../models/FormsData/DeathReason'\r\nimport Reason from '../inputs/Reason'\r\nimport { Button } from 'primereact/button'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { doACME } from '../../utils/acme'\r\n\r\n\r\n const Section7: FC = () => {\r\n  const { certificateStore, layoutStore } = useContext(Context)   \r\n  \r\n  \r\n  const header = () => {\r\n      return <span> <span className='paragraph p-mr-1'>22(I).</span>  Причины смерти.</span>\r\n    }\r\n  const certificate = certificateStore.cert     \r\n  const mainCSSClass = (isACME: boolean) => isACME  ? \"p-fluid p-d-flex p-jc-start ACME-reason\" : \"p-fluid p-d-flex p-jc-start\"\r\n  const reasonBckecked = !!certificate.reasonB\r\n  const reasonCckecked = !!certificate.reasonC\r\n  const reasonDckecked = !!certificate.reasonD \r\n\r\n  const reasonIDExchange = (first: DeathReason, second: DeathReason) => {\r\n    if (!first.id && !second.id) return\r\n    let _id = first.id\r\n    first.id = second.id\r\n    second.id = _id      \r\n  }\r\n      \r\n  return (<>    \r\n    <Card className=\"c-section p-mr-2 p-mb-2\" header={header}>        \r\n      <div className={mainCSSClass(!!certificate.reasonA && certificate.reasonA===certificate.reasonACME)}\r\n       style={{width: '98%'}} key={`ra_${certificate.reasonA?.diagnosis?.ICD10}`}> \r\n        <div className='paragraph p-mr-1'>а) </div>           \r\n        <Reason label=\"Болезнь или состояние, непосредственно приведшее к смерти\" \r\n          deathReason={certificate.reasonA} certificate={certificate}\r\n           key={`ra2_${certificate.reasonA?.effectiveTime}`} \r\n          onChange={(reason: DeathReason | undefined)=>{ \r\n            if (reason!==certificate.reasonA ) { certificate.reasonA = reason\r\n            layoutStore.message = { severity: 'success', summary: 'Успешно', detail: 'Причина А изменена, рекомендуется сохранить изменения', life: 3000 }}\r\n           }}\r\n          disabled checked\r\n          fieldName='a_reason' \r\n          onDown={()=>{\r\n            if (!certificate.reasonA && !certificate.reasonB) return\r\n            reasonIDExchange(certificate.reasonA || new DeathReason(), \r\n            certificate.reasonB || new DeathReason())            \r\n            const reason = certificate.reasonA\r\n            certificate.reasonA = certificate.reasonB\r\n            certificate.reasonB = reason           \r\n          }}\r\n        />\r\n      </div>  \r\n      <div className={mainCSSClass(!!certificate.reasonB && certificate.reasonB===certificate.reasonACME)} style={{width: '98%'}} key={`rb_${certificate.reasonB?.diagnosis?.ICD10}`}>   \r\n        <div className='paragraph p-mr-1'>б) </div>\r\n        <Reason label=\"Патологическое состояние, которое привело к возникновению непос- редственной причины смерти\" \r\n          deathReason={certificate.reasonB} certificate={certificate}  key={`rb2_${certificate.reasonB?.id}`}\r\n          onChange={(reason: DeathReason | undefined)=>{ \r\n            if (reason!==certificate.reasonB ) \r\n            certificate.reasonB = reason \r\n          }}           \r\n          checked={reasonBckecked} \r\n          fieldName='b_reason' \r\n          onDown={()=>{\r\n            if (!certificate.reasonB && !certificate.reasonC) return\r\n            reasonIDExchange(certificate.reasonB || new DeathReason(), \r\n            certificate.reasonC || new DeathReason())\r\n            const reason = certificate.reasonB\r\n            certificate.reasonB = certificate.reasonC\r\n            certificate.reasonC = reason\r\n          }}  \r\n          onUp={()=>{\r\n            if (!certificate.reasonB && !certificate.reasonC) return\r\n            reasonIDExchange(certificate.reasonC || new DeathReason(),\r\n             certificate.reasonB || new DeathReason())\r\n            const reason = certificate.reasonB\r\n            certificate.reasonB = certificate.reasonA\r\n            certificate.reasonA = reason\r\n          }}            \r\n        />\r\n      </div>  \r\n      <div className={mainCSSClass(!!certificate.reasonC && certificate.reasonC===certificate.reasonACME)} \r\n      style={{width: '98%'}} key={`rc_${certificate.reasonC?.diagnosis?.ICD10}`}>  \r\n        <div className='paragraph p-mr-1'>в) </div>\r\n        <Reason label=\"Первоначальная причина смерти\" \r\n          deathReason={certificate.reasonC} certificate={certificate} \r\n          key={`rc2_${reasonCckecked}_${certificate.reasonC?.effectiveTime}`}\r\n          onChange={(reason: DeathReason | undefined)=>{ \r\n            if (reason !== certificate.reasonC) certificate.reasonC = reason            \r\n          }} fieldName='c_reason' checked={reasonCckecked}\r\n          onUp={()=>{\r\n            if (!certificate.reasonC && !certificate.reasonB) return\r\n            reasonIDExchange(certificate.reasonC || new DeathReason(),\r\n             certificate.reasonB || new DeathReason())\r\n            const reason = certificate.reasonC\r\n            certificate.reasonC = certificate.reasonB\r\n            certificate.reasonB = reason\r\n          }}        \r\n        />\r\n      </div>\r\n      <div className={mainCSSClass(false)}  style={{width: '98%'}} >  \r\n        <div className='paragraph p-mr-1'>г) </div>\r\n        <Reason label=\"Внешняя причина смерти при травмах и отравлениях\" \r\n          deathReason={certificate.reasonD} certificate={certificate} \r\n          key={`rd2_${reasonDckecked}_${certificate.reasonD?.effectiveTime}`}\r\n          onChange={(reason: DeathReason | undefined)=>{ if (reason!==certificate.reasonD ) certificate.reasonD = reason }} fieldName='d_reason'\r\n          checked={reasonDckecked}  \r\n          isExt       \r\n        />   \r\n      </div>  \r\n      <div className={mainCSSClass(false)+'p-fluid'}  style={{width: '98%',padding:'4px'}} >  \r\n        <Button type=\"button\" label=\"ACME\" \r\n          style={{width: '5rem', height: '2.4rem'}} \r\n          className='p-button-warning p-mr-2'\r\n          onClick={()=>{            \r\n            if (certificate.reasonA?.diagnosis?.ICD10) {\r\n              if (certificate.reasonC?.diagnosis?.ICD10 && certificate.reasonC.diagnosis.ICD10.includes('U07')) {\r\n                  certificate.changeReasonACME(certificate.reasonC.diagnosis.ICD10)\r\n                  layoutStore.message = { severity: 'success', summary: 'Успешно', detail: `${certificate.reasonC.diagnosis.ICD10}-первопричина определенная АСМЕ`, life: 3000 }\r\n              } else                 \r\n              doACME(certificate, result=>{\r\n                certificate.changeReasonACME(result)\r\n                layoutStore.message = { severity: 'success', summary: 'Успешно', detail: `${result}-первопричина определенная АСМЕ`, life: 3000 }           \r\n              },message=>{\r\n                layoutStore.message = { severity: 'error', summary: 'Сбой', detail: message, life: 7000 }\r\n              })\r\n            } else {\r\n              layoutStore.message = { severity: 'warn', summary: 'Oтклонено', detail: \"Причина а) отсутствует\", life: 7000 }\r\n            }\r\n          }}\r\n        />\r\n         <div className=\"p-field  p-grid\">       \r\n          <label htmlFor=\"ACME\" \r\n                 className=\"p-col-fixed\" \r\n                 style={{width:'226px'}}>Первоначальная причина по АСМЕ</label>   \r\n          <div className='p-col-12 p-md-2'>                  \r\n            <InputText id=\"ACME\" type=\"text\" \r\n              disabled value={certificate.reasonACME?.diagnosis?.ICD10 || ''}  \r\n            />\r\n          </div>\r\n         </div>            \r\n      </div>        \r\n    </Card>  \r\n  </>)\r\n  }\r\n  export default observer(Section7) ","import { observer } from 'mobx-react-lite'\r\nimport { FC, useContext, useEffect, useState } from 'react'\r\nimport { Context } from '../..'\r\nimport { Card } from 'primereact/card'\r\nimport '../../styles/components/Calendar.css'\r\nimport { DeathReason } from '../../models/FormsData/DeathReason'\r\nimport { IDeathReason } from '../../models/responses/IDeathReason'\r\nimport Reason from '../inputs/Reason'\r\nimport { Button } from 'primereact/button'\r\nimport { IMedicalServs } from '../../models/responses/IMedservs'\r\nimport DiagnosisService from '../../services/DiagnosisService'\r\nimport { AutoComplete } from 'primereact/autocomplete'\r\nimport { Procedure } from '../../models/FormsData/Procedure'\r\nimport { IProcedure } from '../../models/responses/IProcedure'\r\nimport { Calendar } from 'primereact/calendar'\r\nimport { Checkbox } from 'primereact/checkbox'\r\nimport { DataTable } from 'primereact/datatable'\r\nimport { Column } from 'primereact/column'\r\nimport { EXT_REASON_SUG, EXT_REASON_TIME_SUG } from '../../utils/defaults'\r\nimport { InputText } from 'primereact/inputtext'\r\n\r\n\r\n\r\n const Section8: FC = () => {\r\n  const { certificateStore, temporaryIDStore, suggestionsStore } = useContext(Context) \r\n  const checkReason = suggestionsStore.suggestions[EXT_REASON_SUG].done && suggestionsStore.suggestions[EXT_REASON_TIME_SUG].done\r\n  \r\n  \r\n  const certificate = certificateStore.cert   \r\n  const [newReason, setNewReason] = useState(new DeathReason({id: temporaryIDStore.lastDeathReasonID} as IDeathReason))\r\n  const [medicalServs, setMedicalServs] = useState<IMedicalServs[]>([]) \r\n  const [medservText, setMedservText] = useState('')  \r\n  const [medservCode, setMedservCode] = useState('')\r\n  const [procedure, setProcedure] = useState<Procedure | null>(null)  \r\n  const [dateETChecked, setDateETChecked] = useState(false)\r\n  const [diagnosChecked, setDiagnosChecked] = useState(true)\r\n  const [selectedProcedures, setSelectedProcedures] = useState<Procedure[]>([])\r\n  const [selectedReasons, setSelectedReasons] = useState<DeathReason[]>([])\r\n  useEffect(()=>{\r\n    suggestionsStore.suggestions[EXT_REASON_SUG].done = !(newReason.diagnosis === undefined && (newReason.nullFlavors.length===0 || newReason.nullFlavors.findIndex((item)=>item.parent_attr==='diagnosis')===-1))\r\n    suggestionsStore.suggestions[EXT_REASON_TIME_SUG].done = !(newReason.effectiveTime === undefined && newReason.nullFlavors.findIndex((item)=>item.parent_attr==='effective_time')===-1)\r\n  },[newReason.diagnosis, newReason.effectiveTime, suggestionsStore.suggestions, newReason.nullFlavors]) \r\n  const header = () => {\r\n      return <><span><span className='paragraph p-mr-1'>22(II).</span>Прочие состояния.</span> \r\n      <Button icon=\"pi pi-plus\" className=\"p-ml-auto p-mr-2 p-button-sm p-button-raised p-button-success\" label=\"Добавить состояние\" \r\n        disabled={!checkReason || (!newReason.diagnosis && newReason.procedures.length===0) || procedure!==null }\r\n        onClick={()=>{\r\n          if (!certificate.deathReasons.includes(newReason)) certificate.deathReasons.push(newReason)\r\n          setNewReason(new DeathReason({id: temporaryIDStore.lastDeathReasonID} as IDeathReason))                \r\n        }}\r\n      />\r\n      <Button icon=\"pi pi-minus\" className=\"p-button-sm p-button-raised p-button-danger\"  \r\n        title=\"Удалить состояние\" disabled={selectedReasons.length===0} \r\n        onClick={()=>{\r\n          let _reasons = certificate.deathReasons?.filter(val => !selectedReasons.includes(val));\r\n          certificate.deathReasons = _reasons\r\n          setSelectedReasons([])\r\n        }} />\r\n      </>\r\n    }\r\n    \r\n  const  getMedservs = (event: { query: string })=>{\r\n  const option = {} as any\r\n  if (event.query.trim().length>0) option.name_cont = event.query.trim()\r\n  if (medservCode.trim().length>0) option.s_code_start =  medservCode    \r\n  DiagnosisService.fetchMedicalServs(option).then(response=>{\r\n        if (response.data.length>0) setMedicalServs(response.data)\r\n        else setMedicalServs([])        \r\n      }).catch((reason)=>console.log(reason))    \r\n  }\r\n  const  getCodes = (event: { query: string })=>{    \r\n    if (event.query.trim().length>0) {\r\n      DiagnosisService.fetchMedicalServs({'s_code_start': event.query.trim()}).then(response=>{        \r\n        if (response.data.length>0) setMedicalServs(response.data)\r\n        else setMedicalServs([])        \r\n      }).catch((reason)=>console.log(reason))       \r\n    } \r\n  }\r\n\r\n  const setMedServValue = (e:any)=>{\r\n    if (procedure) procedure.medicalServ = e.value\r\n    else  setProcedure(new Procedure({id: temporaryIDStore.lastProcedureID, medical_serv: e.value} as IProcedure))    \r\n    setMedservText(e.value.name)\r\n    setMedservCode(e.value.s_code)              \r\n  } \r\n  const medServOptionTemplate = (option: IMedicalServs) => {\r\n        return (\r\n          <span>\r\n            <span style={{marginRight:'4px'}}>{option.s_code}</span>\r\n            <span>{option.name}</span>\r\n          </span>\r\n        )\r\n    }\r\n\r\n  const mainCSSClass = (isACME: boolean) => isACME  ? \"p-fluid p-d-flex p-jc-start ACME-reason\" : \"p-fluid p-d-flex p-jc-start\"\r\n  \r\n  const procTimeBodyTemplate = (rowData: Procedure) => {\r\n    return rowData.timeStr()\r\n  }\r\n  const reasonTimeBodyTemplate = (rowData: DeathReason) => {\r\n    let _resultStr = ''\r\n    if (rowData.effectiveTime === undefined) return _resultStr\r\n    if (rowData.years && rowData.years > 0) _resultStr += `лет:${rowData.years} `\r\n    if (rowData.months && rowData.months > 0) _resultStr += `мес: ${rowData.months}`\r\n    if (rowData.weeks && rowData.weeks > 0) _resultStr += `нед: ${rowData.weeks}`\r\n    if (rowData.days && rowData.days > 0) _resultStr += `дн: ${rowData.days}`\r\n    if (rowData.hours && rowData.hours > 0) _resultStr += `час: ${rowData.hours}`\r\n    if (rowData.minutes && rowData.minutes > 0) _resultStr += `мин: ${rowData.minutes}`\r\n    return _resultStr\r\n  }\r\n  \r\n  const reasonTextBodyTemplate = (rowData: DeathReason) => {\r\n    let _resultStr = ''\r\n    if (rowData.diagnosis) _resultStr = rowData.diagnosis.s_name+';'\r\n    if (rowData.procedures.length>0) _resultStr += rowData.procNames()\r\n    return _resultStr\r\n  }  \r\n  return (<>    \r\n    <Card className=\"c-section p-mr-2 p-mb-2\" header={header}>\r\n      <div className={mainCSSClass(false)}\r\n       style={{width: '98%'}} key={`ra_${newReason.id}_${diagnosChecked}`}>      \r\n        <div className='paragraph p-mr-1'>*)</div>\r\n        <Reason label=\"способствовавшие смерти, но не связанные с болезнью или патологическим состоянием, приведшим к ней\" \r\n          deathReason={newReason} certificate={certificate}\r\n          key={`ra2_${newReason.effectiveTime}`}           \r\n          onChange={(reason: DeathReason | undefined)=>{  \r\n            if (reason) {              \r\n              if (reason!==newReason) {\r\n                if (!reason.id) reason.id = temporaryIDStore.lastDeathReasonID\r\n                setNewReason(reason)\r\n              }  \r\n            }           \r\n          }}\r\n          onDiagnosisChecked={(checked)=>setDiagnosChecked(checked)}\r\n          checked={diagnosChecked}                                   \r\n        />                   \r\n      </div>\r\n      <div className='p-fluid p-formgrid p-grid p-add-block' style={{marginLeft:'1rem'}}>   \r\n          <div className='p-field p-col-12 p-md-9'>             \r\n            <AutoComplete id=\"procedure_text\" placeholder=\"Наименование хирургической операции\"\r\n              suggestions={medicalServs} delay={1000} dropdown \r\n              completeMethod={getMedservs} itemTemplate={medServOptionTemplate}\r\n              field=\"name\" onChange={(e) =>{ \r\n                if (e.value.s_code) setMedServValue(e)\r\n                else setMedservText(e.value)\r\n              }}\r\n              value={medservText}/>          \r\n          </div>\r\n          <div className=\"p-field p-col-12 p-md-3\">\r\n            <AutoComplete id=\"procedure_code\" placeholder=\"Код\"\r\n              suggestions={medicalServs} delay={1000} field=\"s_code\"\r\n              itemTemplate={medServOptionTemplate}\r\n              completeMethod={getCodes} onChange={(e) =>{ \r\n                 if (e.value.s_code) setMedServValue(e)\r\n                 else setMedservCode(e.value)               \r\n              }}\r\n              value={medservCode}/>          \r\n          </div>  \r\n          <div className=\"p-field p-col-12\">\r\n            <InputText id=\"procedure_alterText\" disabled={!procedure}\r\n            placeholder=\"Свое наименование, если оно отличается от официального\"\r\n               onChange={e =>{ \r\n                if (procedure) procedure.textValue = e.target.value               \r\n              }}\r\n              value={procedure?.textValue || ''}/>          \r\n          </div>       \r\n          <div className=\"p-field p-col-12  p-d-flex p-ai-center\">                          \r\n            <Calendar id=\"effectiveDate\" key={`effectiveDate${dateETChecked}`} className=\"p-mr-3\" inputStyle={{width:'12.5rem'}} \r\n              showTime={!dateETChecked} dateFormat=\"dd.mm.yy\" locale=\"ru\"\r\n              mask={dateETChecked ? '99.99.9999' : '99.99.9999 99:99'} panelStyle={{margin:'10rem'}}                           \r\n              value={procedure?.effectiveTime} \r\n              onChange={(e)=>{ \r\n                if (procedure===null) return \r\n                if (e.target.value) {                  \r\n                  procedure.effectiveTime = e.target.value as Date\r\n                } else procedure.effectiveTime =  undefined               \r\n               }}\r\n              showIcon \r\n            />            \r\n            <div className=\"p-field-checkbox\">              \r\n              <Checkbox checked={dateETChecked} \r\n                inputId=\"et_date\" \r\n                onChange={e=>{setDateETChecked(e.checked)}}\r\n              />\r\n              <label htmlFor=\"et_date\">Только дата</label>\r\n            </div>                       \r\n            <Button icon=\"pi pi-plus\" className=\"p-ml-auto p-mr-2 p-button-sm p-button-raised p-button-success\"  title=\"Добавить хир.операцию\" disabled={procedure===null || (procedure.medicalServ===undefined && procedure.textValue === undefined)} onClick={()=>{\r\n              if (procedure) { \r\n                if (newReason.procedures.findIndex(pr=>pr.guid === procedure.guid)===-1) newReason.procedures.push(procedure)\r\n                setProcedure(null) \r\n                setMedservCode('')\r\n                setMedservText('')               \r\n              }  \r\n            }} />   \r\n            <Button icon=\"pi pi-minus\" className=\"p-button-sm p-button-raised p-button-danger\"  title=\"Удалить  хир.операцию\" disabled={selectedProcedures.length===0} onClick={()=>{\r\n              let _procedures = newReason.procedures.filter(val => !selectedProcedures.includes(val));\r\n              newReason.procedures = _procedures\r\n              setSelectedProcedures([])\r\n            }} />                    \r\n          </div>\r\n          <div className=\"p-field p-col-12\">\r\n            <DataTable value={newReason.procedures} selection={selectedProcedures}\r\n              responsiveLayout=\"scroll\" dataKey={\"id\"}\r\n              className=\"p-datatable-sm\" emptyMessage=\"Операции отсутствуют\" style={{width:'100%'}} \r\n              onSelectionChange={e =>{\r\n                setSelectedProcedures(e.value)                \r\n                if (e.value && e.value.length>0) {\r\n                  const pr = e.value[0] as Procedure\r\n                  setProcedure(pr)\r\n                  setDateETChecked(pr.effectiveTime?.getHours() === 0 && pr.effectiveTime.getMinutes()=== 0)\r\n                  setMedservCode(pr.medicalServ.s_code)\r\n                  setMedservText(pr.medicalServ.name)\r\n                } else {\r\n                  setProcedure(null) \r\n                  setMedservCode('')\r\n                  setMedservText('') \r\n                }\r\n              }}  >\r\n              <Column selectionMode=\"multiple\" headerStyle={{width: '3em'}}></Column>\r\n              <Column field=\"medicalServ.name\" header=\"Наименование\"></Column>\r\n              <Column header=\"Время\" body={procTimeBodyTemplate}></Column>                            \r\n            </DataTable>\r\n          </div>  \r\n        </div> \r\n        <DataTable value={certificate.deathReasons} style={{marginTop:'8px', marginLeft:'10px'}} \r\n          className=\"p-datatable-sm\" emptyMessage=\"Состояния отсутствуют\" selection={selectedReasons}  \r\n          responsiveLayout=\"scroll\" dataKey={\"id\"} onSelectionChange={e=>{            \r\n            setSelectedReasons(e.value)            \r\n            if (e.value && e.value.length>0) setNewReason(e.value[0])\r\n            else {\r\n              setNewReason(new DeathReason({id: temporaryIDStore.lastDeathReasonID} as IDeathReason)) \r\n            }\r\n          }}>\r\n          <Column selectionMode=\"multiple\" headerStyle={{width: '3em'}}></Column>\r\n          <Column header=\"Состояние\" body={reasonTextBodyTemplate}></Column>\r\n          <Column header=\"Период времени\" body={reasonTimeBodyTemplate}></Column>\r\n          <Column field=\"diagnosis.ICD10\" header=\"Kод МКБ10\"></Column>              \r\n        </DataTable>            \r\n    </Card>  \r\n  </>)\r\n  }\r\n  export default observer(Section8) ","//Связь смерти с ДТП\r\n//OID: 1.2.643.5.1.13.13.99.2.24  Версия: 1.1\r\nexport const TRAFFIC_ACCIDENT = [\r\n  { code: 1, name: \"в течение 30 суток\" },\r\n  { code: 2, name: \"из них в течение 7 суток\" },\r\n]\r\n","//Связь смерти с беременностью\r\n//OID: 1.2.643.5.1.13.13.99.2.25  Версия: 1.2\r\nexport const PREGNANCY_CONNECTION = [\r\n  { code: 1, name: \"смерть беременной (независимо от срока и локализации)\" },\r\n  { code: 2, name: \"в процессе родов\" },\r\n  { code: 3, name: \"в течение 42 дней после окончания беременности\" },\r\n  { code: 4, name: \"в течение 43-365 дней после окончания беременности\" },\r\n]\r\n","const SEC_IN_WEEK = 604800\r\nconst SEC_IN_DAY = 86400\r\nexport interface ITimeDiff {\r\n  years: number | undefined\r\n  months: number | undefined\r\n  weeks: number | undefined\r\n  days: number | undefined\r\n  hours: number | undefined\r\n  minutes: number | undefined\r\n}\r\nexport const timeDiff = (d1: Date, d2: Date) => {\r\n  if (d2 < d1) throw Error(\"invalid dates d1 > d2\")\r\n  let latest = d2\r\n  let yearDiff = d2.getFullYear() - d1.getFullYear()\r\n  const years = yearDiff > 0 ? yearDiff : undefined\r\n  if (years) {\r\n    latest = new Date(d1.getFullYear(), latest.getMonth(), latest.getDate(), latest.getHours(), latest.getMinutes())\r\n    if (d1 > latest)\r\n      latest = new Date(\r\n        d1.getFullYear() + 1,\r\n        latest.getMonth(),\r\n        latest.getDate(),\r\n        latest.getHours(),\r\n        latest.getMinutes()\r\n      )\r\n  }\r\n\r\n  const months =\r\n    latest.getMonth() < d1.getMonth() ? 12 + latest.getMonth() - d1.getMonth() : latest.getMonth() - d1.getMonth()\r\n  if (months > 0) {\r\n    latest = new Date(d1.getFullYear(), d1.getMonth(), latest.getDate(), latest.getHours(), latest.getMinutes())\r\n    if (d1 > latest) {\r\n      if (d1.getMonth() === 12) {\r\n        latest = new Date(d1.getFullYear() + 1, 1, latest.getDate(), latest.getHours(), latest.getMinutes())\r\n      } else\r\n        latest = new Date(d1.getFullYear(), d1.getMonth() + 1, latest.getDate(), latest.getHours(), latest.getMinutes())\r\n    }\r\n  }\r\n  let diff = (latest.getTime() - d1.getTime()) / 1000\r\n  diff = Math.floor(diff)\r\n  const weeks = Math.floor(diff / SEC_IN_WEEK)\r\n  diff = diff - weeks * SEC_IN_WEEK\r\n  const days = Math.floor(diff / SEC_IN_DAY)\r\n  diff = diff - days * SEC_IN_DAY\r\n  const hours = Math.floor(diff / 3600)\r\n  diff = diff - hours * 3600\r\n  const minutes = Math.floor(diff / 60)\r\n  return {\r\n    years,\r\n    months,\r\n    weeks,\r\n    days,\r\n    hours,\r\n    minutes,\r\n  } as ITimeDiff\r\n}\r\n// for API request params objects\r\n// to remove the indefined items from nested objects as well, using a recursive\r\n// используем рекурсивную функцию очистки объектов от undefined свойств\r\nexport const removeEmpty = (obj: any) => {\r\n  let candidat = obj as Object\r\n  if (Array.prototype.isPrototypeOf(candidat)) {\r\n    return obj\r\n  }\r\n  let newObj = {} as any\r\n  Object.keys(obj).forEach((key) => {\r\n    if (obj[key] === Object(obj[key])) newObj[key] = removeEmpty(obj[key])\r\n    else if (obj[key] !== undefined) newObj[key] = obj[key]\r\n  })\r\n  return newObj\r\n}\r\n","import { removeEmpty } from \"../../utils/functions\"\r\nimport { IAudit } from \"../IAudit\"\r\nimport { IDoctor } from \"../IDoctor\"\r\nimport Doctor from \"./Doctor\"\r\n\r\n//генерит API запрос на добавление врача\r\nexport const genCreateDoctorRequest = (doctor: IDoctor) => {\r\n  let _doctor = {\r\n    id: doctor.id,\r\n    guid: doctor.guid,\r\n    position_id: doctor.position?.id,\r\n    organization_id: doctor.organization?.id,\r\n    person_attributes: {\r\n      id: doctor.person?.id,\r\n      person_name_attributes: { ...doctor.person?.person_name },\r\n      SNILS: doctor.person?.SNILS,\r\n      address_attributes: doctor.person?.address ? { ...doctor.person?.address } : undefined,\r\n      contacts_attributes:\r\n        doctor.person?.contacts && doctor.person?.contacts?.length > 0\r\n          ? doctor.person?.contacts.map((item) => item)\r\n          : undefined,\r\n    },\r\n    null_flavor_attributes:\r\n      doctor.null_flavors && doctor.null_flavors?.length > 0 ? doctor.null_flavors.map((item) => item) : undefined,\r\n  }\r\n  _doctor = removeEmpty(_doctor)\r\n  return _doctor\r\n}\r\n\r\n//Стандартные настройки JSON рендеринга модели врача\r\nexport const DOCTOR_RENDER_OPTIONS = {\r\n  render_options: { only: [\"id\", \"guid\"], include: [\"position\", \"person\", \"organization\"] },\r\n  includes: [\"position\", \"person\", \"organization\"],\r\n  organization: { only: [\"id\", \"name\"] },\r\n  position: { only: [\"id\", \"name\"] },\r\n  person: { only: [\"id\", \"SNILS\"], include: [\"person_name\", \"address\", \"contacts\"] },\r\n}\r\n\r\n//генерит API запрос на обновление врача\r\nexport const genUpdateDoctorRequest = (oldValue: IDoctor, newValue: Doctor) => {\r\n  if (oldValue.id !== newValue.id) return false\r\n  let _request = { Doctor: {}, audits: [] as IAudit[] } as any\r\n  const createAudit = (audit: IAudit) => {\r\n    let _audits = _request.audits.filter((item: IAudit) => item.field !== audit.field)\r\n    if (_audits) {\r\n      _audits.push(audit)\r\n      _request.audits = _audits\r\n    } else _request.audits.push(audit) // keep only uniq changes\r\n  }\r\n  if (oldValue.position?.id !== newValue.position?.id) {\r\n    _request.Doctor.position_id = newValue.position?.id\r\n    createAudit({\r\n      field: \"position\",\r\n      before: oldValue.position?.id + \"\",\r\n      after: newValue.position?.id + \"\",\r\n      detail: `должность: ${oldValue.position?.name} -> ${newValue.position?.name}`,\r\n    } as IAudit)\r\n  }\r\n  let _person_attributes = {} as any\r\n  const oldPerson = oldValue.person\r\n  const newPerson = newValue.person\r\n  if (oldPerson?.SNILS !== newPerson?.SNILS) {\r\n    _person_attributes.SNILS = newPerson?.SNILS\r\n    createAudit({\r\n      field: \"person.SNILS\",\r\n      before: oldPerson?.SNILS,\r\n      after: newPerson?.SNILS,\r\n      detail: `СНИЛС: ${oldPerson?.SNILS} -> ${newPerson?.SNILS}`,\r\n    } as IAudit)\r\n  }\r\n  let _person_name_attributes = {} as any\r\n  const oldFIO = oldPerson?.person_name\r\n  const newFIO = newValue.person?.fio\r\n  if (!!oldFIO && !!newFIO) {\r\n    if (oldFIO.family !== newFIO.family) {\r\n      _person_name_attributes.family = newFIO.family\r\n      createAudit({\r\n        field: \"person.person_name.family\",\r\n        before: oldFIO.family,\r\n        after: newFIO.family,\r\n        detail: `фамилия: ${oldFIO.family} -> ${newFIO.family}`,\r\n      } as IAudit)\r\n    }\r\n    if (oldFIO.given_1 !== newFIO.given_1) {\r\n      _person_name_attributes.given_1 = newFIO.given_1\r\n      createAudit({\r\n        field: \"person.person_name.given_1\",\r\n        before: oldFIO.given_1,\r\n        after: newFIO.given_1,\r\n        detail: `имя: ${oldFIO.given_1} -> ${newFIO.given_1}`,\r\n      } as IAudit)\r\n    }\r\n    if (oldFIO.given_2 !== newFIO.given_2) {\r\n      _person_name_attributes.given_2 = newFIO.given_2\r\n      createAudit({\r\n        field: \"person.person_name.given_2\",\r\n        before: oldFIO.given_2,\r\n        after: newFIO.given_2,\r\n        detail: `Отчество: ${oldFIO.given_2} -> ${newFIO.given_2}`,\r\n      } as IAudit)\r\n    }\r\n  }\r\n  if (Object.keys(_person_name_attributes).length > 0)\r\n    if (newValue.person.fio)\r\n      _person_attributes.person_name_attributes = { id: newValue.person.fio.id, ..._person_name_attributes }\r\n  const oldAddress = oldPerson.address?.streetAddressLine\r\n  const newAddress = newPerson.address?.streetAddressLine\r\n  if (oldAddress !== newAddress) {\r\n    _person_attributes.address_attributes = newPerson.address\r\n    createAudit({\r\n      field: \"person.address\",\r\n      before: oldAddress,\r\n      after: newAddress,\r\n      detail: `адрес: ${oldAddress} -> ${newAddress}`,\r\n    } as IAudit)\r\n  }\r\n  const oldContacts = oldPerson.contacts?.reduce<string>((u, item) => `${u} ${item.telcom_value}`, \"\").trim()\r\n  const newContacts = newPerson.contacts?.reduce<string>((u, item) => `${u} ${item.telcom_value}`, \"\").trim()\r\n  if (oldContacts !== newContacts) {\r\n    _person_attributes.contacts_attributes = newPerson.contacts\r\n    createAudit({\r\n      field: \"person.contacts\",\r\n      before: oldContacts,\r\n      after: newContacts,\r\n      detail: `контакты: ${oldContacts} -> ${newContacts}`,\r\n    } as IAudit)\r\n  }\r\n  const oldNullFlavors = oldPerson.null_flavors\r\n    ?.reduce<string>((u, item) => `${u} ${item.parent_attr}${item.code}`, \"\")\r\n    .trim()\r\n  const newNullFlavors = newPerson.nullFlavors\r\n    ?.reduce<string>((u, item) => `${u} ${item.parent_attr}${item.code}`, \"\")\r\n    .trim()\r\n  if (oldNullFlavors !== newNullFlavors) {\r\n    _person_attributes.null_flavor_attributes = newPerson.null_flavors_attributes()\r\n    createAudit({\r\n      field: \"person.nullFlavors\",\r\n      before: oldNullFlavors,\r\n      after: newNullFlavors,\r\n      detail: `изменены причины отсутствия информации`,\r\n    } as IAudit)\r\n  }\r\n\r\n  if (Object.keys(_person_attributes).length > 0)\r\n    _request.Doctor.person_attributes = { id: oldPerson.id, ..._person_attributes }\r\n  if (Object.keys(_request.Doctor).length > 0) {\r\n    _request.Doctor.id = newValue.id\r\n    return _request\r\n  } else return false\r\n}\r\n","//All interactions with the API for working with the doctors model\r\n//Все взаимодействия с API для работы с моделью  врачей\r\n\r\nimport { AxiosResponse } from \"axios\"\r\nimport $api, { API_URL } from \"../http\"\r\nimport { IDoctor } from \"../models/IDoctor\"\r\nimport { IReferenceId } from \"../models/IReference\"\r\nimport { DOCTOR_RENDER_OPTIONS } from \"../models/FormsData/DoctorRequest\"\r\nimport { IDoctorR } from \"../models/requests/IDoctorR\"\r\n\r\nexport default class DoctorService {\r\n  //POST request for get doctor's list\r\n  static async getDoctors(query: any): Promise<AxiosResponse<IDoctor[]>> {\r\n    return $api.post(`${API_URL}model/Doctor/`, { ...query, offset: 0, limit: 100, ...DOCTOR_RENDER_OPTIONS })\r\n  }\r\n  //POST request for get list of pasible values for Doctor.position field\r\n  static async getPositions(query: any): Promise<AxiosResponse<IReferenceId[]>> {\r\n    return $api.post(`${API_URL}model/Position/`, { q: query, offset: 0, limit: 200 })\r\n  }\r\n  //POST request for add Doctor /REST_API/v1/model/Doctor/add\r\n  static async addDoctor(doctor: IDoctorR): Promise<AxiosResponse<IDoctor>> {\r\n    return $api.post(`${API_URL}model/Doctor/add`, {\r\n      Doctor: doctor,\r\n      ...DOCTOR_RENDER_OPTIONS,\r\n    })\r\n  }\r\n\r\n  //PUT request for update Doctor /REST_API/v1/model/Doctor/:id\r\n  static async updateDoctor(request: any): Promise<AxiosResponse<IDoctor>> {\r\n    return $api.put(`${API_URL}model/Doctor/${request.Doctor.id}`, {\r\n      ...request,\r\n      ...DOCTOR_RENDER_OPTIONS,\r\n    })\r\n  }\r\n  // DELETE request for remove Doctor /REST_API/v1/model/Doctor/:id\r\n  static async removeDoctor(doctor_id: number): Promise<AxiosResponse<IDoctor>> {\r\n    return $api.delete(`${API_URL}model/Doctor/${doctor_id}`)\r\n  }\r\n}\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { IAuthenticatorR } from \"../requests/IAuthenticatorR\"\r\nimport { IAuthenticator } from \"../responses/IAuthenticator\"\r\n\r\nexport default class Authenticator implements ISerializable {\r\n  private _id?: number | undefined\r\n  private _time?: Date | undefined\r\n  private _doctorID?: number | undefined\r\n  constructor(props: IAuthenticator) {\r\n    this._id = props.id\r\n    this._doctorID = props.doctor.id\r\n    if (props.time) this._time = new Date(props.time)\r\n    else this._time = new Date()\r\n    makeAutoObservable(this)\r\n  }\r\n  get time(): Date | undefined {\r\n    return this._time\r\n  }\r\n  set time(value: Date | undefined) {\r\n    this._time = value\r\n  }\r\n  get doctorID(): number | undefined {\r\n    return this._doctorID\r\n  }\r\n  set doctorID(value: number | undefined) {\r\n    this._doctorID = value\r\n  }\r\n  get id(): number | undefined {\r\n    return this._id\r\n  }\r\n\r\n  getAttributes(): IAuthenticatorR {\r\n    let _authenticator = { time: this._time } as IAuthenticatorR\r\n    if (this._id) _authenticator.id = this._id\r\n    if (this._doctorID) _authenticator.doctor_id = this._doctorID\r\n    return _authenticator\r\n  }\r\n}\r\n","import { observer } from 'mobx-react-lite'\r\nimport { FC, useContext, useEffect, useState} from 'react'\r\nimport { Context } from '../..'\r\nimport { Card } from 'primereact/card'\r\nimport { CheckboxChangeParams } from 'primereact/checkbox'\r\nimport NullFlavorWrapper from '../NullFlavorWrapper'\r\nimport { NA, NULL_FLAVORS } from '../../utils/defaults'\r\nimport { IReference, IReferenceId } from '../../models/IReference'\r\nimport { Dropdown } from 'primereact/dropdown'\r\nimport { INullFlavorR } from '../../models/INullFlavor'\r\nimport { TRAFFIC_ACCIDENT } from '../../NSI/1.2.643.5.1.13.13.99.2.24'\r\nimport { PREGNANCY_CONNECTION } from '../../NSI/1.2.643.5.1.13.13.99.2.25'\r\nimport DoctorService from '../../services/DoctorService'\r\nimport Authenticator from '../../models/FormsData/Authenticator'\r\nimport { IAuthenticator } from '../../models/responses/IAuthenticator'\r\n\r\n const Section9: FC = () => {\r\n  const { userStore, certificateStore, layoutStore } = useContext(Context)\r\n   const certificate = certificateStore.cert \r\n  const [doctors, setDoctors] = useState<IReferenceId[] | null>(null)  \r\n  useEffect(()=>{\r\n    if (doctors===null && userStore.userInfo) {\r\n      //layoutStore.isLoading = true\r\n      DoctorService.getDoctors({       \r\n        q:{organization_id_eq: userStore.userInfo.organization.id}        \r\n      }).then(response=>{\r\n        const data = response.data.map(doctor=>{\r\n          if (!doctor.person || !doctor.person.person_name) return {id: doctor.id, name: doctor.position?.name } as IReferenceId\r\n          return {id: doctor.id, name: `${doctor.person.person_name.family} ${doctor.person.person_name.given_1} ${doctor.person.person_name.given_2} ${doctor.position?.name}`} as IReferenceId})\r\n        if (data) setDoctors(data)\r\n      }).catch((err)=>console.log('ошибка загрузки списка врачей'))//.finally(()=>layoutStore.isLoading=false)\r\n    }\r\n  },[doctors, layoutStore, userStore.userInfo])\r\n   \r\n  const optionCode = 'NA'\r\n  const options = NULL_FLAVORS.filter((item:IReference)=>optionCode.includes(item.code))  \r\n  \r\n  const header = () => {\r\n      return <span>Прочие характеристики причины смерти</span>\r\n    }\r\n  \r\n  const isTrafficAccident = !!certificate.trafficAccident || certificate.nullFlavors.findIndex((item)=>item.parent_attr==='traffic_accident')===-1\r\n  const isPregnancyConnection = !!certificate.pregnancyConnection || certificate.nullFlavors.findIndex((item)=>item.parent_attr==='pregnancy_connection')===-1  \r\n  const nullFlavorDropdnStyle = {minWidth:'210px', maxWidth:'500px', marginTop: '0.5rem', marginLeft: '-0.75rem'}\r\n  const customDropdnStyle = {minWidth:'210px', maxWidth:'500px', marginTop: '0.5rem', marginLeft: '-1.25rem'}\r\n  const customParagraphFieldStyle = {paddingTop: '0.1rem', width: '80%'} \r\n     \r\n  return (<>    \r\n      <Card className=\"c-section p-mr-2 p-mb-2\" header={header}>        \r\n          <div className=\"p-fluid p-formgrid p-grid\">\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%'}} >\r\n              <div className='paragraph p-mr-1'>23.</div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={{width: '90%'}}>                                  \r\n                <NullFlavorWrapper paraNum  checked={isTrafficAccident}                                      \r\n                  label={<label htmlFor=\"trafficAccident\">В случае смерти в результате ДТП: смерть наступила –</label>}\r\n                  setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{                      \r\n                      if (!e.checked) certificate.trafficAccident = undefined                        \r\n                      if (nullFlavors) certificate.nullFlavors = nullFlavors\r\n                    }} \r\n                  field={\r\n                    <Dropdown inputId=\"trafficAccident\" style={nullFlavorDropdnStyle} placeholder=\"Выбрать\"  \r\n                      options={TRAFFIC_ACCIDENT} optionLabel=\"name\" \r\n                      value={TRAFFIC_ACCIDENT.find((item)=> item.code === certificate.trafficAccident)} \r\n                      onChange={(e) =>certificate.trafficAccident =  e.value.code}                       \r\n                    />             \r\n                  }\r\n                  options={options} \r\n                  value={NA} \r\n                  nullFlavors={certificate.nullFlavors}  \r\n                  field_name=\"traffic_accident\"\r\n                />                               \r\n              </div>              \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%'}} >\r\n              <div className='paragraph p-mr-1'>24.</div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\"  \r\n              style={{width: '90%'}}>                                  \r\n                <NullFlavorWrapper paraNum  checked={isPregnancyConnection}                                      \r\n                  label={<label htmlFor=\"pregnancyConnection\"> В случае смерти беременной (независимо от срока и локализации) </label>}\r\n                  setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{                      \r\n                      if (!e.checked) {                        \r\n                        certificate.pregnancyConnection = undefined                        \r\n                      } \r\n                      if (nullFlavors) certificate.nullFlavors = nullFlavors\r\n                    }} \r\n                  onChange={(e:IReference,  nullFlavors: INullFlavorR[] | undefined)=>{\r\n                      if (nullFlavors) certificate.nullFlavors = nullFlavors}}\r\n                  field={\r\n                    <Dropdown inputId=\"pregnancyConnection\" style={nullFlavorDropdnStyle} placeholder=\"Выбрать\"  \r\n                      options={PREGNANCY_CONNECTION} optionLabel=\"name\" \r\n                      value={PREGNANCY_CONNECTION.find((item)=> item.code === certificate.pregnancyConnection)} \r\n                      onChange={(e) =>{\r\n                        certificate.pregnancyConnection = e.value.code}\r\n                      } \r\n                    />             \r\n                  }\r\n                  options={options} \r\n                  value={NA} \r\n                  nullFlavors={certificate.nullFlavors}  \r\n                  field_name=\"pregnancy_connection\"\r\n                />                               \r\n              </div>              \r\n            </div> \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%', paddingLeft:'0.5rem',fontWeight:600, fontSize: 'larger'}} >\r\n              Подписи \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%'}}>\r\n              <div className='paragraph p-mr-1'>25. </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={customParagraphFieldStyle}>\r\n                <label htmlFor=\"author\">Врач (фельдшер, акушерка), заполнивший Медицинское свидетельство о смерти *</label>\r\n                <Dropdown inputId=\"author\"  placeholder=\"Выбрать\" style={customDropdnStyle}                   \r\n                  optionLabel=\"name\" autoFocus className=\"p-mb-2\"  options={doctors || []} \r\n                  value={doctors?.find(item=>item.id === certificate.author?.doctorID)} showClear             \r\n                  onChange={(e) =>{\r\n                    if (e.value) { \r\n                      certificate.author = new Authenticator({doctor: e.value} as IAuthenticator)                     \r\n                    } else certificate.author = undefined                       \r\n                  }} />\r\n                <label htmlFor=\"legalAuthenticator\">Руководитель медицинской организации *</label>\r\n                <Dropdown inputId=\"legalAuthenticator\"  placeholder=\"Выбрать\" style={customDropdnStyle} \r\n                  optionLabel=\"name\" options={doctors || []} showClear\r\n                  value={doctors?.find(item=>item.id === certificate.legalAuthenticator?.doctorID)}                \r\n                  onChange={(e) =>{\r\n                    if (e.value) { \r\n                      certificate.legalAuthenticator =  new Authenticator({doctor: e.value} as IAuthenticator)                     \r\n                    } else certificate.legalAuthenticator = undefined                   \r\n                  }} />  \r\n              </div>               \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%'}}>\r\n              <div className='paragraph p-mr-1'>26. </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={customParagraphFieldStyle}>\r\n                <label htmlFor=\"authenticator\">Свидетельство проверено ответственным *</label>\r\n                <Dropdown inputId=\"authenticator\" placeholder=\"Выбрать\" style={customDropdnStyle} \r\n                  optionLabel=\"name\"  options={doctors || []} showClear\r\n                  value={doctors?.find(item=>item.id===certificate.authenticator?.doctorID)}                \r\n                  onChange={e=>{\r\n                    if (e.value) {\r\n                      certificate.authenticator =  new Authenticator({doctor: e.value} as IAuthenticator)                      \r\n                    } else certificate.authenticator = undefined\r\n                  }} \r\n                />\r\n              </div>  \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%', paddingLeft:'0.5rem'}} >\r\n              <em>* Заполнить в день фактического подписания бумажного носителя</em>\r\n            </div>     \r\n          </div>          \r\n      </Card>  \r\n    </>)\r\n  }\r\n  export default observer(Section9) ","import { makeAutoObservable } from \"mobx\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { IParticipantR } from \"../requests/IParticipintR\"\r\nimport { IParticipant } from \"../responses/IParticipant\"\r\nimport Identity from \"./Identity\"\r\nimport Person from \"./Person\"\r\n\r\nexport default class Participant implements ISerializable {\r\n  private _id?: number | undefined\r\n  private _person: Person\r\n  private _receiptDate: Date\r\n  private _description?: string | undefined\r\n  private _identity?: Identity | undefined\r\n  private _original: boolean\r\n  private _oldOne?: IParticipant | undefined\r\n\r\n  constructor(props = {} as IParticipant) {\r\n    this._oldOne = { ...props }\r\n    if (props.person) this._person = new Person(props.person)\r\n    else this._person = new Person()\r\n    if (props.receipt_date) this._receiptDate = new Date(props.receipt_date)\r\n    else this._receiptDate = new Date()\r\n    if (props.identity) this._identity = new Identity(props.identity)\r\n    this._id = props.id\r\n    this._description = props.description\r\n    this._original = props.original === undefined ? true : props.original\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n  getAttributes() {\r\n    const _pr = {} as IParticipantR\r\n    if (this._id) _pr.id = this._id\r\n    _pr.description = this._description\r\n    _pr.original = this._original\r\n    _pr.receipt_date = this._receiptDate?.toDateString()\r\n    if (this._person) _pr.person_attributes = this._person.getAttributes()\r\n    if (this._identity) _pr.identity_attributes = this._identity.getAttributes()\r\n    return _pr\r\n  }\r\n  get oldOne(): IParticipant | undefined {\r\n    return this._oldOne\r\n  }\r\n  get original(): boolean {\r\n    return this._original\r\n  }\r\n  set original(value: boolean) {\r\n    this._original = value\r\n  }\r\n  get identity(): Identity | undefined {\r\n    return this._identity\r\n  }\r\n  set identity(value: Identity | undefined) {\r\n    this._identity = value\r\n  }\r\n  get description(): string | undefined {\r\n    return this._description\r\n  }\r\n  set description(value: string | undefined) {\r\n    this._description = value\r\n  }\r\n  get receiptDate(): Date {\r\n    return this._receiptDate\r\n  }\r\n  set receiptDate(value: Date) {\r\n    this._receiptDate = value\r\n  }\r\n  get person(): Person {\r\n    return this._person\r\n  }\r\n  set person(value: Person) {\r\n    this._person = value\r\n  }\r\n  get id(): number | undefined {\r\n    return this._id\r\n  }\r\n}\r\n","import { observer } from \"mobx-react-lite\"\r\nimport { Button } from \"primereact/button\"\r\nimport { Calendar } from \"primereact/calendar\"\r\nimport { Card } from \"primereact/card\"\r\nimport { CheckboxChangeParams } from \"primereact/checkbox\"\r\nimport { Dropdown } from \"primereact/dropdown\"\r\nimport { InputMask } from \"primereact/inputmask\"\r\nimport { InputText } from \"primereact/inputtext\"\r\nimport { InputTextarea } from \"primereact/inputtextarea\"\r\nimport { FC, useContext, useEffect, useState } from \"react\"\r\nimport { Context } from \"../..\"\r\nimport Identity from \"../../models/FormsData/Identity\"\r\nimport Participant from \"../../models/FormsData/Participant\"\r\nimport IIdentity from \"../../models/IIdentity\"\r\nimport { IPersonName } from \"../../models/IPersonName\"\r\nimport { ID_CARD_TYPES, NA, NULL_FLAVORS, PARTIPICIPANT_DATE_SUG, PARTIPICIPANT_FIO_SUG, PARTIPICIPANT_IDENTITY_SUG, PASSPORT_RF } from \"../../utils/defaults\"\r\nimport { inputsIdentity } from \"../inputs/inputsIdentity\"\r\nimport { PersonName } from \"../inputs/PersonName\"\r\nimport NullFlavorWrapper from \"../NullFlavorWrapper\"\r\n\r\nconst Section10: FC = () => {\r\n  const { certificateStore, suggestionsStore, layoutStore } = useContext(Context)\r\n  const certificate = certificateStore.cert \r\n  const [participant] = useState(certificate.participant || new Participant())\r\n  const person = participant.person \r\n  const identity = participant.identity\r\n  const [docChecked, setDocChecked] = useState(!!participant.identity)\r\n  const [dulValue, setDulValue]  = useState(ID_CARD_TYPES.find((item)=>item.code === identity?.identityCardType))\r\n  const header = () => {\r\n      return <span>Данные получателя свидетельства</span>\r\n  }  \r\n  useEffect(()=>{\r\n    if (!!participant.person.fio?.family && !!participant.person.fio?.given_1) \r\n    suggestionsStore.suggestions[PARTIPICIPANT_FIO_SUG].done = true\r\n  },[participant.person.fio?.family, participant.person.fio?.given_1, suggestionsStore.suggestions])\r\n  useEffect(()=>{\r\n    if (!!participant.receiptDate) \r\n    suggestionsStore.suggestions[PARTIPICIPANT_DATE_SUG].done = true\r\n  },[participant.receiptDate, suggestionsStore.suggestions])\r\n  useEffect(()=>{\r\n    if (!!participant.person.SNILS || !!participant.identity) \r\n    suggestionsStore.suggestions[PARTIPICIPANT_IDENTITY_SUG].done = true\r\n  },[participant.identity, participant.person.SNILS, suggestionsStore.suggestions])\r\n\r\n  const [seriesField, numberField, depCodeField] = inputsIdentity({dulValue, identity})\r\n  const buttonDisabled = !!certificate.participant || !(suggestionsStore.suggestions[PARTIPICIPANT_IDENTITY_SUG].done \r\n      && suggestionsStore.suggestions[PARTIPICIPANT_DATE_SUG].done\r\n      && suggestionsStore.suggestions[PARTIPICIPANT_FIO_SUG].done)\r\n  \r\n\r\n  return (<>    \r\n      <Card className=\"c-section p-mr-2 p-mb-2\" header={header} style={{paddingLeft:'1rem'}}>        \r\n          <div className=\"p-fluid p-formgrid p-grid\">   \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">              \r\n              <div className='p-paragraph-field p-col-6'>\r\n                <label htmlFor=\"fio\">Фамилия, Имя, Отчество(при наличии)</label>\r\n                <PersonName personName={participant.person?.fio} submitted={false}\r\n                  onChange={(value: IPersonName)=>{                       \r\n                    participant.person.fio  = value\r\n                  }}  \r\n                />                   \r\n              </div>\r\n              <div className='p-paragraph-field p-col-5'>\r\n                <label htmlFor=\"description\">Кем приходится</label>\r\n                <InputText value={participant.description} \r\n                  placeholder=\"родств./пр-ль\"\r\n                  onChange={e=>participant.description = e.target.value}  \r\n                />                   \r\n              </div>\r\n              <div className='p-paragraph-field p-col-6'>\r\n                <label htmlFor=\"description\">Дата выдачи</label>\r\n                <Calendar id=\"dateBirth\" showIcon dateFormat='dd.mm.yy'\r\n                  locale='ru' mask='99.99.9999'                                          \r\n                  value={participant.receiptDate} \r\n                  onChange={(e)=>{\r\n                    if (e.target.value) participant.receiptDate = e.target.value as Date\r\n                  }}                         \r\n                />                   \r\n              </div>\r\n              <div className='p-paragraph-field p-col-4'> \r\n                <label htmlFor=\"snils\">СНИЛС</label> \r\n                <InputMask id=\"snils\"  \r\n                  type=\"text\" mask=\"999-999-999 99\"\r\n                  value={person?.SNILS} \r\n                  onChange={(e)=>{                     \r\n                    person.SNILS = e.value\r\n                  }}\r\n                />                             \r\n              </div>              \r\n            </div>           \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">              \r\n              <div className='p-paragraph-field p-mr-2 p-mb-2'>\r\n                <NullFlavorWrapper\r\n                  checked={docChecked} setCheck={(e: CheckboxChangeParams) => {\r\n                    if (e.checked) {\r\n                      participant.identity = new Identity({\r\n                      identity_card_type_id: ID_CARD_TYPES[PASSPORT_RF].code,\r\n                    } as IIdentity)\r\n                    } else participant.identity = undefined\r\n                    setDocChecked(e.checked)\r\n                    } \r\n                  }\r\n                  label={<label htmlFor=\"identity_card_type\">Иной документ, удостоверяющей личность: </label>}\r\n                  field={<Dropdown id=\"identity_card_type\" value={dulValue}\r\n                    autoFocus options={ID_CARD_TYPES} optionLabel='name'\r\n                    onChange={(e) => {\r\n                      if (identity) identity.identityCardType = e.value.code\r\n                      else participant.identity = new Identity({ identity_card_type_id: e.value.code } as IIdentity)\r\n                      setDulValue(ID_CARD_TYPES.find((item) => item.code === e.value.code))\r\n                    }} />\r\n                  } \r\n                  options={[NULL_FLAVORS[NA]]}  value={NA}       \r\n                />             \r\n              </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" key={`ser_${docChecked}`} \r\n                style={{marginLeft:'1.5rem'}}>\r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"series\">Серия</label>}\r\n                  checked={docChecked && \r\n                    participant.identity?.nullFlavors.findIndex(nf=>nf.parent_attr==='series')===-1} \r\n                  setCheck={(e:CheckboxChangeParams)=>{\r\n                    if (e.checked && participant.identity) participant.identity.series = ''\r\n                    else if (participant.identity) participant.identity.series = undefined                                    \r\n                  }}                 \r\n                  field={seriesField}\r\n                  field_name='series'\r\n                  options={[NULL_FLAVORS[NA]]} value={NA}                  \r\n                  lincked={!docChecked}                                   \r\n                />  \r\n              </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" key={`num_${docChecked}`}\r\n                style={{marginLeft:'1.5rem'}} >\r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"docNumber\">Номер</label>}\r\n                  checked={docChecked}                 \r\n                  field={numberField}\r\n                  options={[NULL_FLAVORS[NA]]} value={NA} \r\n                  lincked                                      \r\n                />                    \r\n              </div>\r\n              <div className=\"p-paragraph-field p-mr-3 p-mb-2\" key={`org_${docChecked}`} style={{marginLeft:'1.5rem'}} >\r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"issueOrgName\">Кем выдан</label>}\r\n                  checked={docChecked}                   \r\n                  field={\r\n                    <InputTextarea id=\"issueOrgName\" value={identity?.issueOrgName} \r\n                      cols={65} rows={2}  \r\n                      onChange={(e)=>{if (identity) identity.issueOrgName = e.target.value }}\r\n                    />}\r\n                  options={[NULL_FLAVORS[NA]]} value={NA} \r\n                  lincked                                      \r\n                />                    \r\n              </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={{marginLeft:'1.5rem'}} key={`pdiv5_${docChecked}`}>\r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"issueDate\">Когда выдан</label>}\r\n                  checked={docChecked}                   \r\n                  field={<Calendar  id=\"issueDate\" className=\"p-mr-2\" \r\n                    dateFormat={\"dd.mm.yy\"} \r\n                    locale=\"ru\" mask=\"99.99.9999\"                    \r\n                    value={identity?.issueOrgDate}\r\n                    onChange={(e)=>{if (identity) identity.issueOrgDate = e.target.value as Date | undefined}}\r\n                    showIcon />\r\n                  }                  \r\n                  options={[NULL_FLAVORS[NA]]} value={NA} \r\n                  lincked                                       \r\n                /> \r\n              </div>  \r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" \r\n                key={`code_${docChecked}`} style={{marginLeft:'1.5rem'}}> \r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"depCode\">Код подразделения</label>}\r\n                  checked={docChecked} \r\n                  setCheck={(e:CheckboxChangeParams)=>{\r\n                    if (e.checked && participant.identity) participant.identity.issueOrgCode = ''\r\n                    else if (participant.identity) participant.identity.issueOrgCode = undefined                                  \r\n                  }}                   \r\n                  field={depCodeField}\r\n                  options={[NULL_FLAVORS[NA]]} value={NA}                   \r\n                  lincked={!docChecked}\r\n                  field_name=\"issueOrgCode\"                                     \r\n                />                    \r\n              </div> \r\n              <Button type=\"button\" label=\"ВЫДАТЬ\" style={{height:'2.4rem'}}\r\n                className=\"p-button-raised p-button-success\"\r\n                disabled={buttonDisabled}\r\n                onClick={()=>{\r\n                  certificate.participant = participant\r\n                  certificate.issueDate = participant.receiptDate\r\n                  layoutStore.message = { severity: 'success', summary: 'Успешно', detail: 'Данные получателя введены, сохраните изменения, после чего будет возможна печать.', life: 3000 }\r\n                }}   \r\n              />             \r\n            </div>           \r\n           </div>           \r\n          </Card>\r\n        </>)\r\n\r\n}\r\nexport default observer(Section10)    ","import { Card } from 'primereact/card'\r\nimport { Column } from 'primereact/column'\r\nimport { DataTable } from 'primereact/datatable'\r\n\r\nimport '../styles/components/Calendar.css'\r\nimport '../styles/components/Divider.css'\r\nimport '../styles/components/Button.css'\r\nimport '../styles/pages/CertificatePage.css'\r\n\r\nimport { useContext, FC, useEffect, useRef, useState } from 'react'\r\nimport MainLayout from '../components/layouts/MainLayout'\r\nimport { CERTIFICATE_ROUTE } from '../utils/consts'\r\nimport { Avatar } from 'primereact/avatar'\r\nimport { Badge } from 'primereact/badge'\r\nimport { IRouteMatch } from '../models/IRouteMatch'\r\nimport { IRouteProps } from '../models/IRouteProps'\r\nimport Section0 from '../components/c_sections/section_0'\r\nimport Section1 from '../components/c_sections/section_1'\r\nimport Section2 from '../components/c_sections/section_2'\r\nimport Section3 from '../components/c_sections/section_3'\r\nimport Section5 from '../components/c_sections/section_5'\r\nimport Section6 from '../components/c_sections/section_6'\r\nimport Section7 from '../components/c_sections/section_7'\r\nimport Section8 from '../components/c_sections/section_8'\r\nimport Section9 from '../components/c_sections/section_9'\r\nimport Section10 from '../components/c_sections/section_10'\r\nimport { Context } from '..'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { ISuggestions } from '../models/ISuggestions'\r\nimport { Toast, ToastMessageType } from 'primereact/toast'\r\nimport { CERT_TYPE_SUG, DEFAULT_ERROR_TOAST, PERSON_NAME_SUG } from '../utils/defaults'\r\nimport { ICertificate } from '../models/responses/ICertificate'\r\n\r\n\r\ninterface IMatch extends IRouteMatch {  \r\n  params: {id: string}\r\n}\r\ninterface CertificatePageProps extends IRouteProps { \r\n    match: IMatch  \r\n}\r\n\r\nconst CertificatePage: FC<CertificatePageProps> = (props: CertificatePageProps) => {  \r\n  const { certificateStore, userStore, layoutStore, suggestionsStore } = useContext(Context)     \r\n  const [certID, setCertID] = useState(Number.parseInt(props.match.params.id))\r\n  const [message, setMessage] = useState<ToastMessageType | null>(null)\r\n  //вывод попап-сообщения \r\n  useEffect(()=>{\r\n    if (!!message) {\r\n      layoutStore.message = message\r\n      setMessage(null)\r\n    }\r\n  },[layoutStore, message])\r\n  //привязка индикатора лоадера раскладки к индикатору загрузки стора свидетельств\r\n  useEffect(()=>{\r\n    layoutStore.isLoading = certificateStore.isLoading\r\n  },[certificateStore.isLoading, layoutStore]) \r\n  \r\n  //смена сертификата\r\n  useEffect(()=>{ \r\n   // console.log('certID-',certID,' certificateStore.cert.id-',certificateStore.cert.id)  \r\n    \r\n  if (certID === certificateStore.cert.id || certID===-1) {\r\n      layoutStore.isLoading = false\r\n      return\r\n    }  \r\n    let _idx = -1\r\n    const cArray = certificateStore.certs   \r\n    if (cArray.length>0){            \r\n      _idx = cArray.findIndex(el=>el.id === certID)      \r\n    }\r\n    if (_idx>-1) { \r\n      certificateStore.select(_idx)\r\n      layoutStore.isLoading = false\r\n    } else {      \r\n      certificateStore.findById(certID, ()=>{layoutStore.isLoading = false})\r\n    }  \r\n  },[certID, certificateStore, layoutStore, certificateStore.cert.id])\r\n  \r\n  //очистка буфера сообщений \r\n  useEffect(()=>{\r\n    if (!layoutStore.isLoading && !!layoutStore.message && !!toast.current) { \r\n      toast.current.show(layoutStore.message)\r\n      layoutStore.message = null\r\n    }\r\n  },[layoutStore, layoutStore.isLoading, layoutStore.message])\r\n\r\n  const toast = useRef<Toast>(null)  \r\n  const secton_router = ()=>{\r\n    switch (props.location.search) {\r\n      case \"?q=0\": return <Section0 />\r\n      case \"?q=1\": return <Section1 />\r\n      case \"?q=2\": return <Section2 />\r\n      case \"?q=3\": return <Section3 />      \r\n      case \"?q=5\": return <Section5 />\r\n      case \"?q=6\": return <Section6 />\r\n      case \"?q=7\": return <Section7 />\r\n      case \"?q=8\": return <Section8 />\r\n      case \"?q=9\": return <Section9 />\r\n      case \"?q=10\": return <Section10 />\r\n      default: return <Section0 /> \r\n    } \r\n  }    \r\n  const items = [        \r\n        {\r\n            label: 'Назад',\r\n            icon: 'pi pi-chevron-left',\r\n            command: () => {\r\n              let section = Number.parseInt(props.location.search[props.location.search.length-1])-1             \r\n              if (section===4) section--\r\n                if (section > -1) {               \r\n                userStore.history().push(`${CERTIFICATE_ROUTE}/${certificateStore.cert.id}?q=${section}`)\r\n              }\r\n            }\r\n        },\r\n        {\r\n            label: 'Удалить',\r\n            icon: 'pi pi-trash p-danger',\r\n            command: () => {\r\n              layoutStore.isLoading = true\r\n              const result = certificateStore.delete()\r\n              if (!result) {\r\n                layoutStore.isLoading = false\r\n              } else {\r\n                result.then(response=>{                  \r\n                  certificateStore.clean() \r\n                  layoutStore.isLoading = false\r\n                  //setCertID(certificateStore.cert.id)                                  \r\n                  setMessage({ severity: 'success', summary: 'Успешно', detail: 'Запись удалена', life: 3000 })                                 \r\n                })\r\n                .catch(reason=>{\r\n                  layoutStore.isLoading = false\r\n                  console.log(reason)\r\n                  setMessage((DEFAULT_ERROR_TOAST))\r\n                })                \r\n              }\r\n            }\r\n        },\r\n        {\r\n            label: 'Сохранить',\r\n            icon: 'pi pi-save p-success',\r\n            command: () => { \r\n              if (!suggestionsStore.suggestions[CERT_TYPE_SUG].done || !suggestionsStore.suggestions[PERSON_NAME_SUG].done ) {\r\n                 setMessage({severity:'warn', summary:'ОТКЛОНЕНО', detail:'Внесите минимальный набор данных: вид свидетельства, ФИО умершего(для идентифицированых)', life: 6000})\r\n                 return\r\n               }              \r\n              const result = certificateStore.save((data:ICertificate)=>{                                \r\n                  setMessage({ severity: 'success', summary: 'Успешно', detail: 'Изменения сохранены', life: 3000 })\r\n                  setCertID(data.id)                   \r\n              }, (message:string)=>{                         \r\n                setMessage(DEFAULT_ERROR_TOAST)\r\n                console.log(message)\r\n              }, userStore.userInfo?.organization.sm_code)\r\n              if (!result) {\r\n                console.log('нет юзера')                \r\n              }                \r\n            }\r\n        },    \r\n        {\r\n            label: 'Создать',\r\n            icon: 'pi pi-plus',\r\n            command: () => { \r\n              try {\r\n                certificateStore.createNew()\r\n                setCertID(-1)      \r\n                setMessage({ severity: 'success', summary: 'Пустое  свидетельство создано!', detail: 'Внесите минимальные изменения и сохраните, чтоб получить номер', life: 3000 })                   \r\n              } catch { \r\n                setMessage(DEFAULT_ERROR_TOAST)\r\n              }\r\n            }  \r\n        },\r\n        {\r\n            label: 'Заменить',\r\n            icon: 'pi pi-sync',            \r\n            command: () => { \r\n              if (certificateStore.cert.id < 0 || !certificateStore.cert.issueDate) {\r\n                setMessage({severity:'warn', summary:'ОТКЛОНЕНО', detail:'Замена возможна только для выданных свидетельств'})\r\n              return  \r\n              }\r\n              try {\r\n                certificateStore.replace()\r\n                setCertID(-1) \r\n                setMessage({ severity: 'success', summary: 'Cвидетельство заменено!', detail: 'Проверьте вид и сохраните, чтоб получить номер', life: 3000 })                        \r\n              } catch { \r\n                setMessage(DEFAULT_ERROR_TOAST)\r\n              }\r\n            }  \r\n        },\r\n        {\r\n            label: 'Далее',\r\n            icon: 'pi pi-chevron-right',\r\n            command: () => {\r\n              let section = Number.parseInt(props.location.search[props.location.search.length-1])+1              \r\n              if (section===4) section++\r\n              if (section > -1) {\r\n                userStore.history().push(`${CERTIFICATE_ROUTE}/${certificateStore.cert.id}?q=${section}`)\r\n              } \r\n            }\r\n        },        \r\n        \r\n\r\n    ]\r\n  const doneBodyTemplate = (rowData:any) => {\r\n        return rowData.done ? <Avatar icon=\"pi pi-check\" shape=\"circle\" style={{ color: 'rgb(104 159 56)'}}/>\r\n        : ''\r\n  }  \r\n  const rowClass = (data:any) => {\r\n    return {\r\n      'p-suggestion-actual': !data.done\r\n    }\r\n  } \r\n  const sugCount = suggestionsStore.redSuggestionsCount() \r\n  const suggestionHeader = () => {    \r\n    const avatar = sugCount === 0 ? <Avatar icon=\"pi pi-check\" shape=\"circle\" style={{ height:'1.5rem', width: '1.5rem',backgroundColor: 'rgb(104 159 56)', color: 'white'}}/> : <Badge value={sugCount}  style={{ backgroundColor: 'rgb(204, 0, 0)', color: 'white', marginLeft: '4px'}}/>\r\n    return <><span>Контроль заполнения</span>{avatar}</>\r\n  }\r\n  const suggestions = suggestionsStore.suggestions\r\n    .filter((item:ISuggestions) =>\r\n    item.section === props.location.search.slice(3))\r\n  \r\n  const layoutParams = {\r\n    title: 'Медицинское свидетельство о смерти',     \r\n    url: `${CERTIFICATE_ROUTE}/${certID}${props.location.search}`,\r\n    content:(<>      \r\n      <div className=\"p-d-flex p-jc-center\" >        \r\n        {secton_router()}        \r\n        <Card className=\"p-mr-2 p-mb-2 p-suggestion\"\r\n         key={`p_sug_${sugCount}`} header={suggestionHeader}>                        \r\n            <DataTable className=\"p-datatable-sm\" rowClassName={rowClass} \r\n            value={suggestions} responsiveLayout=\"scroll\">\r\n              <Column field=\"code\" header=\"Код\"></Column>\r\n              <Column field=\"suggestion\" header=\"Проверка\"></Column>\r\n              <Column body={doneBodyTemplate}></Column>\r\n            </DataTable> \r\n        </Card>\r\n      </div>   \r\n      <Toast ref={toast} />   \r\n    </>),\r\n    actionItems: items\r\n  } \r\n  return (\r\n    <>\r\n      <MainLayout {...layoutParams} />\r\n    </>\r\n  )\r\n}\r\nexport default observer(CertificatePage) ","import { makeAutoObservable } from \"mobx\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { IDoctor } from \"../IDoctor\"\r\nimport { IReferenceId } from \"../IReference\"\r\nimport { IDoctorR } from \"../requests/IDoctorR\"\r\nimport Person from \"./Person\"\r\n\r\nexport default class Doctor implements ISerializable {\r\n  private _id?: number\r\n  private _person: Person\r\n  private _position?: IReferenceId | undefined\r\n  private _organization?: IReferenceId | undefined\r\n  private _guid: string\r\n  constructor(props = {} as IDoctor) {\r\n    this._id = props.id\r\n    this._guid = props.guid || uuidv4()\r\n    this._person = props.person ? new Person(props.person) : new Person()\r\n    this._organization = props.organization || undefined\r\n    this._position = props.position || undefined\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n  getAttributes(): IDoctorR {\r\n    let _doctor = { guid: this._guid } as IDoctorR\r\n    if (this._id) _doctor.id = this._id\r\n    if (this._person) _doctor.person_attributes = this._person.getAttributes()\r\n    if (this._organization) _doctor.organization_id = this._organization.id\r\n    if (this._position) _doctor.position_id = this._position.id\r\n    return _doctor\r\n  }\r\n  get id() {\r\n    return this._id\r\n  }\r\n  set id(id: number | undefined) {\r\n    this._id = id\r\n  }\r\n  get person() {\r\n    return this._person\r\n  }\r\n\r\n  get guid() {\r\n    return this._guid\r\n  }\r\n  get position(): IReferenceId | undefined {\r\n    return this._position\r\n  }\r\n  set position(value: IReferenceId | undefined) {\r\n    this._position = value\r\n  }\r\n  get organization(): IReferenceId | undefined {\r\n    return this._organization\r\n  }\r\n  set organization(value: IReferenceId | undefined) {\r\n    this._organization = value\r\n  }\r\n}\r\n","\r\nimport React, { useState, useEffect, useRef, useContext, FC } from 'react'\r\nimport { classNames } from 'primereact/utils'\r\nimport { DataTable } from 'primereact/datatable'\r\nimport { Column } from 'primereact/column'\r\nimport { Toast } from 'primereact/toast'\r\nimport { Button } from 'primereact/button'\r\nimport { Toolbar } from 'primereact/toolbar'\r\nimport { Dialog } from 'primereact/dialog'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { Context } from '..'\r\nimport { IDoctor } from '../models/IDoctor'\r\nimport DoctorService from \"../services/DoctorService\"\r\nimport '../styles/components/Toolbar.css'\r\nimport '../styles/components/Dialog.css'\r\nimport '../styles/components/Toast.css'\r\nimport '../styles/components/AutoComplete.css'\r\nimport { InputMask } from 'primereact/inputmask'\r\nimport MainLayout from '../components/layouts/MainLayout'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { DESTROY_OPTION, DOCTORS_ROUTE } from '../utils/consts'\r\nimport { IContact } from '../models/IContact'\r\nimport { IReferenceId } from '../models/IReference'\r\nimport { AutoComplete } from 'primereact/autocomplete'\r\nimport { DEFAULT_ERROR_TOAST } from '../utils/defaults'\r\nimport Address from '../models/FormsData/Address'\r\nimport { IPerson } from '../models/IPerson'\r\nimport { genUpdateDoctorRequest } from '../models/FormsData/DoctorRequest'\r\nimport InputAddress from '../components/inputs/InputAddress'\r\nimport AddressDialog from '../components/dialogs/AddressDialog'\r\nimport Doctor from '../models/FormsData/Doctor'\r\nimport { DEFAULT_ADDRESS, IAddressR } from '../models/requests/IAddressR'\r\nimport { getOneLinePersonName, IPersonName } from '../models/IPersonName'\r\nimport { PersonName } from '../components/inputs/PersonName'\r\n\r\nconst DoctorsPage: FC = () => {    \r\n    const {addressStore, userStore} = useContext(Context)\r\n    let emptyDoctor = {\r\n        organization: userStore.userInfo?.organization,\r\n        guid: uuidv4(),       \r\n        person: { person_name: {family:'Тестов', given_1:'Тест'}, \r\n          contacts:[] as IContact[],\r\n          SNILS: '456-145-154 25'\r\n          } as IPerson        \r\n    } as IDoctor\r\n    const [doctor, setDoctor] = useState(new Doctor(emptyDoctor))\r\n    const [doctors, setDoctors] = useState<IDoctor[]>([])\r\n    const [doctorDialog, setDoctorDialog] = useState(false)\r\n    const [deleteDoctorDialog, setDeleteDoctorDialog] = useState(false)\r\n    const [deleteDoctorsDialog, setDeleteDoctorsDialog] = useState(false)    \r\n    const [selectedDoctors, setSelectedDoctors] = useState<IDoctor[]>([])\r\n    const [submitted, setSubmitted] = useState(false)   \r\n    const [email, setEmail] = useState<IContact>({telcom_value:'', main:false} as IContact) \r\n    const [phone, setPhone] = useState<IContact>({telcom_value:'', main:true} as IContact)\r\n    const [position, setPosition] = useState('')\r\n    const [positions, setPositions] = useState<IReferenceId[]>([])\r\n    const toast = useRef<Toast>(null)\r\n    const dt = useRef(null)\r\n     \r\n\r\n    useEffect(() => {      \r\n      if (userStore && userStore.userInfo) \r\n      DoctorService.getDoctors({       \r\n        q:{organization_id_eq: userStore.userInfo.organization.id}        \r\n      })\r\n      .then(data => {        \r\n        setDoctors(data.data)\r\n      })\r\n      .catch(()=>setDoctors([]))\r\n    }, [userStore.userInfo]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const  getPositions = (event: { query: string })=>{\r\n        const option = {} as any\r\n        if (event.query.trim().length>0) option.name_cont = event.query.trim()      \r\n        DoctorService.getPositions(option).then(response=>{\r\n            if (response.data.length>0) setPositions(response.data)\r\n            else setPositions([])        \r\n        }).catch((reason)=>console.log(reason))    \r\n    }\r\n\r\n    const openNew = () => {        \r\n        if (doctor.id) setDoctor(new Doctor(emptyDoctor))\r\n        addressStore.address = new Address(DEFAULT_ADDRESS)\r\n        setSubmitted(false)\r\n        setDoctorDialog(true)\r\n        setEmail({telcom_value:'', main:false} as IContact)\r\n        setPhone({telcom_value:'', main:true} as IContact)\r\n        setPosition('')\r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setDoctorDialog(false);\r\n    }\r\n\r\n    const hideDeleteDoctorDialog = () => {\r\n        setDeleteDoctorDialog(false)\r\n    }\r\n\r\n    const hideDeleteDoctorsDialog = () => {\r\n        setDeleteDoctorsDialog(false)\r\n    }\r\n\r\n    const saveDoctor = () => {\r\n        setSubmitted(true)\r\n        console.log('doctor2',doctor)\r\n        if (doctor.person?.fio?.family.trim() && doctor.person?.SNILS && doctor.position) {\r\n            let _doctors = [...doctors]\r\n            onContactChange(phone)\r\n            onContactChange(email)  \r\n            if (doctor.id) { \r\n              const index = findIndexById(doctor.id)\r\n              const request = genUpdateDoctorRequest(_doctors[index], doctor)\r\n              if (request) DoctorService.updateDoctor(request).then((response)=>{                \r\n                _doctors[index] = response.data\r\n                setDoctorDialog(false)\r\n                setDoctors(_doctors)\r\n                if (toast!==null && toast.current!==null) toast.current.show({ severity: 'success', summary: 'Успешно', detail: 'Запись обновлена', life: 3000 })\r\n              }).catch((reason)=>{\r\n                console.log('reason',reason)\r\n                setDoctorDialog(false)\r\n                if (toast!==null && toast.current!==null) \r\n                  toast.current.show(DEFAULT_ERROR_TOAST)\r\n              })\r\n              else {\r\n                if (toast!==null && toast.current!==null) toast.current.show({ severity: 'info', summary: 'Отклонено', detail: 'Изменения отсутствуют', life: 3000 })\r\n                setDoctorDialog(false)\r\n              }\r\n            } else {               \r\n              DoctorService.addDoctor(doctor.getAttributes()).then((response)=>{\r\n                if (response.data) {                  \r\n                  _doctors.push(response.data)\r\n                  setDoctors(_doctors)\r\n                  setDoctorDialog(false)                            \r\n                  setEmail({telcom_value:'', main:false} as IContact)\r\n                  setPhone({telcom_value:'', main:true} as IContact)\r\n                  setPosition('')\r\n                  if (toast!==null && toast.current!==null) toast.current.show({ severity: 'success', summary: 'Успешно', detail: 'Запись добавлена', life: 3000 })\r\n                }  \r\n              }).catch((reason)=>{\r\n                console.log('reason',reason)\r\n                setDoctorDialog(false)\r\n                if (toast!==null && toast.current!==null) \r\n                  toast.current.show(DEFAULT_ERROR_TOAST)\r\n              })\r\n            }\r\n          \r\n        }\r\n    }\r\n\r\n    const editDoctor = (_doctor: IDoctor) => {        \r\n        setPhone({telcom_value:'', main:true} as IContact)\r\n        setEmail({telcom_value:'', main:false} as IContact)        \r\n        if (_doctor.id !== doctor.id) setDoctor(new Doctor(_doctor))\r\n        doctor.person.contacts?.forEach((item)=>{if (item.main) setPhone({...item})\r\n        else setEmail({...item, telcom_value: item.telcom_value.replace('mailto:','')})})        \r\n        //addressStore.address = new Address(doctor.person.address || DEFAULT_ADDRESS)         \r\n        setPosition(doctor.position?.name || '')\r\n        setDoctorDialog(true)        \r\n    }\r\n\r\n    const confirmDeleteDoctor = (_doctor: IDoctor) => {\r\n        if (_doctor.id !== doctor.id) setDoctor(new Doctor(_doctor))\r\n        setDeleteDoctorDialog(true)\r\n    }\r\n\r\n    const deleteDoctor = () => {\r\n        if (doctor.id) DoctorService.removeDoctor(doctor.id).then(response=>{\r\n          let _doctors = doctors.filter(val => val.id !== doctor.id)\r\n          setDoctors(_doctors)\r\n          setDeleteDoctorDialog(false)\r\n          setDoctor(new Doctor(emptyDoctor))\r\n          if (toast!==null && toast.current!==null) toast.current.show({ severity: 'success', summary: 'Успешно', detail: 'Запись удалена', life: 3000 })\r\n        }).catch(reason=>{\r\n          console.log('reason',reason)\r\n          if (toast!==null && toast.current!==null) \r\n                  toast.current.show(DEFAULT_ERROR_TOAST)\r\n        })        \r\n    }\r\n    const findIndexById = (id:number | undefined) => {        \r\n        return doctors.findIndex((element)=>element.id === id)\r\n    }    \r\n\r\n    const confirmDeleteSelected = () => {\r\n        setDeleteDoctorsDialog(true);\r\n    }\r\n\r\n    const deleteSelectedDoctors = () => {\r\n        let _doctors = doctors.filter(val => !selectedDoctors.includes(val))\r\n        setDoctors(_doctors);\r\n        setDeleteDoctorsDialog(false);\r\n        setSelectedDoctors([]);\r\n        if (toast!==null && toast.current!==null) toast.current.show({ severity: 'success', summary: 'Удачно', detail: 'Записи удалены', life: 3000 });\r\n    }      \r\n\r\n    // Обработчик изменения контактов      \r\n    const onContactChange = (contact: IContact) => {   \r\n      let _contact = contact.telcom_value==='' ?\r\n      (contact.id ? {...contact,...DESTROY_OPTION} : {...contact}) :    \r\n      (contact.id ? {id:contact.id, parent_guid: contact.parent_guid, telcom_use: contact.telcom_use, telcom_value: contact.telcom_value, main: contact.main} : {...contact}) \r\n      if (doctor.person.contacts === undefined) doctor.person.contacts = []\r\n      if (_contact.id) {        \r\n          const idx = doctor.person.contacts.findIndex(item=>item.id===_contact.id)  \r\n          if (idx>-1) doctor.person.contacts[idx] = _contact        \r\n      } else doctor.person.contacts.push(_contact)       \r\n    } \r\n\r\n    const rightToolbarTemplate = () => {\r\n      return (\r\n        <React.Fragment>                \r\n          <Button  icon=\"pi pi-plus\" label=\"ДОБАВИТЬ\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n          <Button  icon=\"pi pi-trash\" label=\"УДАЛИТЬ\" className=\"p-button-danger\" onClick={confirmDeleteSelected} disabled={!selectedDoctors || !selectedDoctors.length} />\r\n        </React.Fragment>\r\n      )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData: IDoctor) => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success p-mr-2\" onClick={() => editDoctor(rowData)} />\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => confirmDeleteDoctor(rowData)} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    \r\n    const doctorDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"ОТМЕНА\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} />\r\n            <Button label=\"ВНЕСТИ\" icon=\"pi pi-check\" className=\"p-button-text p-button-success\" onClick={saveDoctor} />\r\n        </React.Fragment>\r\n    )\r\n    const deleteDoctorDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"НЕТ\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteDoctorDialog} />\r\n            <Button label=\"ДА\" icon=\"pi pi-check\" className=\"p-button-text p-button-warning\" onClick={deleteDoctor} />\r\n        </React.Fragment>\r\n    )\r\n    const deleteDoctorsDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"НЕТ\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteDoctorsDialog} />\r\n            <Button label=\"ДА\" icon=\"pi pi-check\" className=\"p-button-text p-button-warning\" onClick={deleteSelectedDoctors} />\r\n        </React.Fragment>\r\n    )\r\n    const fioBodyTemplate = (row: IDoctor)=>{\r\n      const fio = row.person?.person_name      \r\n      const result = getOneLinePersonName(fio)\r\n      return <>{result}</>\r\n    }  \r\n    const layoutParams = {\r\n        title: 'Врачи',     \r\n        url: DOCTORS_ROUTE,\r\n        content:\r\n        <div>\r\n            <Toast ref={toast} />\r\n            <div className=\"card\">\r\n                <Toolbar className=\"p-mb-4\" right={rightToolbarTemplate}></Toolbar>\r\n                <DataTable ref={dt} value={doctors} selection={selectedDoctors} onSelectionChange={(e) => setSelectedDoctors(e.value)} responsiveLayout=\"scroll\"\r\n                    dataKey=\"id\" >\r\n                    <Column selectionMode=\"multiple\" headerStyle={{ width: '3rem' }} exportable={false}></Column>                    \r\n                    <Column  header=\"ФИО\" body={fioBodyTemplate}  style={{ minWidth: '10rem' }}></Column>\r\n                    <Column field=\"position.name\" header=\"Должность\" ></Column>\r\n                    <Column field=\"person.SNILS\" header=\"СНИЛС\" ></Column>                    \r\n                    <Column body={actionBodyTemplate} exportable={false} style={{ minWidth: '8rem' }}></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <Dialog visible={doctorDialog} style={{ width: '800px' }} header=\"Данные врача\" modal \r\n             footer={doctorDialogFooter} onHide={hideDialog} >   \r\n               <div className='p-fluid p-formgrid p-grid'> \r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                    <label htmlFor=\"fio\">Фамилия, Имя, Отчество(при наличии)</label>\r\n                    <PersonName personName={doctor.person?.fio} submitted={submitted}\r\n                      onChange={(value: IPersonName)=>{                       \r\n                        if (doctor.person) doctor.person.fio  = value\r\n                      }}  \r\n                    />                   \r\n                </div>                \r\n                <div className=\"p-field  p-col-12 p-md-3\">\r\n                    <label htmlFor=\"snils\">СНИЛС</label>\r\n                    <InputMask id=\"snils\"  \r\n                      type=\"text\" mask=\"999-999-999 99\"\r\n                      value={doctor.person.SNILS} \r\n                      onChange={(e)=>{ \r\n                        doctor.person.SNILS = e.target.value  \r\n                        }} \r\n                      required className={classNames({ 'p-invalid': submitted && !doctor.person?.SNILS})}\r\n                    />\r\n                    {submitted && !doctor.person?.SNILS && <small className=\"p-error\">СНИЛС некорректен.</small>}\r\n                </div>\r\n                <div className=\"p-field  p-col-12 p-md-4\">\r\n                    <label htmlFor=\"position\">Должность</label>\r\n                    <AutoComplete id=\"position\" suggestions={positions} field=\"name\"\r\n                      value={doctor.position || position } delay={1000} dropdown \r\n                      completeMethod={getPositions}\r\n                      onChange={(e)=>{ \r\n                        console.log('e.value',e.value)\r\n                        if (e.value.name) { \r\n                          doctor.position = e.value\r\n                          setPosition(e.value.name) \r\n                        } else setPosition(e.value)   \r\n                       }}  \r\n                        className={classNames({ 'p-invalid': submitted && !doctor.position})}\r\n                    />\r\n                    {submitted && !doctor.position && <small className=\"p-error\">Должность должна быть указана.</small>}\r\n                </div>\r\n                <div className=\"p-field  p-col-12 p-md-4\">\r\n                    <label htmlFor=\"phone\">телефон</label>\r\n                    <InputMask id=\"phone\"  \r\n                      type=\"text\" mask=\"tel:+79999999999\"\r\n                      value={phone.telcom_value} \r\n                      onChange={(e)=>{setPhone({...phone, telcom_value: e.target.value})  \r\n                        }} required className={classNames({ 'p-invalid': submitted && !/tel:\\+?[-0-9().]+/i.test(phone.telcom_value)})}\r\n                    />\r\n                    {submitted && !/tel:\\+?[-0-9().]+/i.test(phone.telcom_value) && <small className=\"p-error\">тел.номер некорректен!</small>}\r\n                </div>\r\n                <div className=\"p-field  p-col-12 p-md-4\">\r\n                    <label htmlFor=\"email\">email</label>\r\n                    <InputText id=\"email\" type=\"text\" \r\n                      value={email.telcom_value} \r\n                      onChange={(e)=>{  \r\n                        setEmail({...email, telcom_value:e.target.value})  \r\n                        }} className={classNames({ 'p-invalid': submitted && !(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email.telcom_value) || email.telcom_value==='')})}\r\n                    />\r\n                    {submitted && !(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email.telcom_value) || email.telcom_value==='') && <small className=\"p-error\">Неверный email</small>}\r\n                </div>\r\n                <InputAddress className=\"p-col-12\" submitted={submitted} \r\n                  label='Адрес проживания'\r\n                  value={doctor.person.address || DEFAULT_ADDRESS} strictly \r\n                  onClear={(value: IAddressR)=>{\r\n                    doctor.person.address = {...value}                    \r\n                  }}\r\n                  onChange={()=>doctor.person.address = {...addressStore.addressProps()}} \r\n                />    \r\n               </div>               \r\n            </Dialog>\r\n            <AddressDialog />\r\n            <Dialog visible={deleteDoctorDialog} style={{ width: '450px' }} header=\"Подтвердите\" modal footer={deleteDoctorDialogFooter} onHide={hideDeleteDoctorDialog}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                    {doctor && <span>Вы действительно хотите удалить <b>{fioBodyTemplate}</b>?</span>}\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog visible={deleteDoctorsDialog} style={{ width: '450px' }} header=\"Подтвердите\" modal footer={deleteDoctorsDialogFooter} onHide={hideDeleteDoctorsDialog}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                    {doctor && <span>Вы действительно хотите удалить выбранные записи?</span>}\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    }\r\n    return (\r\n    <>\r\n      <MainLayout {...layoutParams} />\r\n    </>\r\n  )\r\n}\r\nexport default observer(DoctorsPage)               ","//Пол пациента\r\n//OID: 1.2.643.5.1.13.13.11.1040 Версия: 2.1\r\nexport const GENDERS = [\r\n  { code: 1, name: \"Мужской\" },\r\n  { code: 2, name: \"Женский\" },\r\n]\r\n","import $api, { API_URL } from \"../http\"\r\nimport { AxiosResponse } from \"axios\"\r\nimport { IReferenceId } from \"../models/IReference\"\r\nimport { IOrganization } from \"../models/IOrganization\"\r\n\r\nconst ORGANIZATION_RENDER_OPTIONS = {\r\n  render_options: { except: [\"updated_at\", \"old_oid\"], include: [\"address\", \"contacts\"] },\r\n  includes: [\"address\", \"contacts\"],\r\n  address: { except: [\"updated_at\", \"created_at\"], include: [\"null_flavors\"] },\r\n}\r\nexport default class OrganizationService {\r\n  // GET from public endpoint /auth/organizations/\r\n  static async getOrganizations(): Promise<AxiosResponse<{ organizations: IReferenceId[] }>> {\r\n    return $api.get(`${API_URL}auth/organizations/`)\r\n  }\r\n\r\n  // POST /show/model/Organization/:id from UEC endpoint\r\n  static async getOrganization(id: string): Promise<AxiosResponse<IOrganization>> {\r\n    return $api.post(`${API_URL}/show/model/Organization/${id}`, ORGANIZATION_RENDER_OPTIONS)\r\n  }\r\n  //PUT request for update Doctor /REST_API/v1/model/Doctor/:id\r\n  static async updateOrganization(request: any): Promise<AxiosResponse<IOrganization>> {\r\n    return $api.put(`${API_URL}model/Organization/${request.Organization.id}`, {\r\n      ...request,\r\n      ...ORGANIZATION_RENDER_OPTIONS,\r\n    })\r\n  }\r\n}\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { NULL_FLAVOR_IDX } from \"../../utils/defaults\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { INullFlavorR } from \"../INullFlavor\"\r\nimport { IPatient } from \"../IPatient\"\r\nimport IIdentityR from \"../requests/IIdentityR\"\r\nimport { IPatientR } from \"../requests/IPatientR\"\r\nimport Identity from \"./Identity\"\r\nimport Person from \"./Person\"\r\nexport const MAIN_REGISTRATION_ADDRESS = 1\r\nexport default class Patient implements ISerializable {\r\n  private _id?: string | undefined\r\n  private _person?: Person\r\n  private _gender?: number | undefined\r\n  private _birth_date: Date | undefined\r\n  private _birth_year?: number\r\n  private _provider_organization?: number\r\n  private _addrType?: number\r\n  private _guid: string\r\n  private _identity?: Identity\r\n  private _nullFlavors: INullFlavorR[]\r\n  private _oldOne?: IPatient\r\n  constructor(props = {} as IPatient) {\r\n    this._guid = props.guid || uuidv4()\r\n    this._oldOne = { ...props }\r\n    if (props.person) this._person = new Person(props.person)\r\n    this._provider_organization = props.organization_id\r\n    if (props.gender) this._gender = props.gender\r\n    this._addrType = props.addr_type || MAIN_REGISTRATION_ADDRESS\r\n    if (props.birth_date) this._birth_date = new Date(props.birth_date)\r\n    if (props.id) this._id = props.id\r\n    if (props.birth_year) this._birth_year = props.birth_year\r\n    if (props.identity) this._identity = new Identity(props.identity)\r\n    this._nullFlavors =\r\n      props.null_flavors?.map((item) => {\r\n        return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n      }) || []\r\n\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n  getAttributes(): IPatientR {\r\n    let _patient = { guid: this._guid } as IPatientR\r\n    if (this._id) _patient.id = this.id\r\n    if (this._addrType) _patient.addr_type = this._addrType\r\n    if (!!this._birth_date) _patient.birth_date = this._birth_date.toDateString()\r\n    else _patient.birth_date = null\r\n    if (!!this._birth_year) _patient.birth_year = this._birth_year\r\n    else _patient.birth_year = null\r\n    if (this._gender) _patient.gender = this._gender\r\n    else _patient.gender = null\r\n    if (this._identity) _patient.identity_attributes = this._identity.getAttributes()\r\n    else if (this._oldOne?.identity?.id)\r\n      _patient.identity_attributes = { id: this._oldOne.identity.id, _destroy: \"1\" } as IIdentityR\r\n    if (this._provider_organization) _patient.organization_id = this._provider_organization\r\n    if (this._person) _patient.person_attributes = this._person.getAttributes()\r\n    else _patient.person_id = null\r\n    if (this.nullFlavors.length > 0) _patient.null_flavors_attributes = this.null_flavors_attributes()\r\n    return _patient\r\n  }\r\n  get id() {\r\n    return this._id\r\n  }\r\n  set id(id: string | undefined) {\r\n    this._id = id\r\n  }\r\n  get person() {\r\n    return this._person\r\n  }\r\n\r\n  set person(value: Person | undefined) {\r\n    this._person = value\r\n  }\r\n\r\n  get gender() {\r\n    return this._gender\r\n  }\r\n  set gender(gender: number | undefined) {\r\n    this._gender = gender\r\n  }\r\n  get birth_date() {\r\n    return this._birth_date\r\n  }\r\n  set birth_date(birth_date: Date | undefined) {\r\n    this._birth_date = birth_date\r\n  }\r\n  get guid() {\r\n    return this._guid\r\n  }\r\n\r\n  get nullFlavors() {\r\n    return this._nullFlavors\r\n  }\r\n  set nullFlavors(nullFlavors: INullFlavorR[]) {\r\n    this._nullFlavors = nullFlavors\r\n  }\r\n\r\n  // получение копии массива заполнителей из Observable.array\r\n  null_flavors_attributes() {\r\n    return this._nullFlavors.map((el) => {\r\n      return { ...el }\r\n    })\r\n  }\r\n\r\n  get addr_type() {\r\n    return this._addrType\r\n  }\r\n  set addr_type(addr_type: number | undefined) {\r\n    this._addrType = addr_type\r\n  }\r\n  get provider_organization() {\r\n    return this._provider_organization\r\n  }\r\n  set provider_organization(provider_organization: number | undefined) {\r\n    this._provider_organization = provider_organization\r\n  }\r\n  get birth_year() {\r\n    return this._birth_year\r\n  }\r\n  set birth_year(birth_year: number | undefined) {\r\n    this._birth_year = birth_year\r\n  }\r\n  get identity() {\r\n    return this._identity\r\n  }\r\n  set identity(identity: Identity | undefined) {\r\n    this._identity = identity\r\n  }\r\n\r\n  setBirthDay(value: Date | undefined, isYear: boolean) {\r\n    if (value && !isYear) {\r\n      if (this._birth_date === undefined)\r\n        this.nullFlavors = this.nullFlavors.filter((element) => element.parent_attr !== \"birth_date\")\r\n      this.birth_date = value\r\n      this.birth_year = undefined\r\n    } else if (value && isYear) {\r\n      if (this.birth_date === undefined)\r\n        this.nullFlavors = this.nullFlavors.filter((element) => element.parent_attr !== \"birth_date\")\r\n      this.birth_date = value\r\n      this.birth_year = (this.birth_date as Date).getFullYear()\r\n    } else {\r\n      this.birth_date = undefined\r\n      this.birth_year = undefined\r\n    }\r\n  }\r\n}\r\n","import { autorun, makeAutoObservable } from \"mobx\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { NA, NULL_FLAVOR_IDX, REGION_OKATO } from \"../../utils/defaults\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { IAudit } from \"../IAudit\"\r\nimport { checkFieldNullFlavor, INullFlavorR } from \"../INullFlavor\"\r\nimport { IAddressR } from \"../requests/IAddressR\"\r\nimport { ICertificateR } from \"../requests/ICertificateR\"\r\nimport { IChildInfoR } from \"../requests/IChildInfoR\"\r\nimport { IDeathReasonR } from \"../requests/IDeathReasonR\"\r\nimport { ICertificate } from \"../responses/ICertificate\"\r\nimport { IDeathReason } from \"../responses/IDeathReason\"\r\nimport Authenticator from \"./Authenticator\"\r\nimport { ChildInfo } from \"./ChildInfo\"\r\nimport { DeathReason } from \"./DeathReason\"\r\nimport Participant from \"./Participant\"\r\nimport Patient from \"./Patient\"\r\n\r\nexport default class Certificate implements ISerializable {\r\n  private _id: number\r\n  private _series?: string\r\n  private _number?: string\r\n  private _issueDate?: Date\r\n  private _certType?: number\r\n  private _seriesPrev?: string\r\n  private _numberPrev?: string\r\n  private _effTimePrev?: Date\r\n  private _patient: Patient\r\n  private _lifeAreaType?: number\r\n  private _deathAreaType?: number\r\n  private _deathDatetime?: Date\r\n  private _deathYear?: number\r\n  private _deathMonth?: number | undefined\r\n  private _deathPlace?: number | undefined\r\n  private _maritalStatus?: number | undefined\r\n  private _educationLevel?: number | undefined\r\n  private _socialStatus?: number | undefined\r\n  private _deathKind?: number | undefined\r\n  private _extReasonTime?: Date | undefined\r\n  private _extReasonDescription?: string | undefined\r\n  private _reasonA?: DeathReason | undefined\r\n  private _reasonB?: DeathReason\r\n  private _reasonC?: DeathReason\r\n  private _reasonD?: DeathReason\r\n  private _deathReasons: DeathReason[]\r\n  private _reasonACME?: DeathReason | undefined\r\n  private _deathAddr?: IAddressR\r\n  private _guid?: string\r\n  private _policyOMS?: string | undefined\r\n  private _childInfo?: ChildInfo | undefined\r\n  private _establishedMedic?: number | undefined\r\n  private _basisDetermining?: number | undefined\r\n  private _trafficAccident?: number | undefined\r\n  private _pregnancyConnection?: number | undefined\r\n  private _author?: Authenticator | undefined\r\n  private _audithor?: Authenticator | undefined\r\n  private _legalAuthenticator?: Authenticator | undefined\r\n  private _nullFlavors: INullFlavorR[]\r\n  private _audits: IAudit[]\r\n  private _custodian_id?: number\r\n  private _participant?: Participant | undefined\r\n  private _oldOne?: ICertificate | undefined\r\n  private _latestOne?: ICertificate | undefined\r\n  disposers: (() => void)[]\r\n\r\n  constructor(props: ICertificate) {\r\n    if (props.null_flavors && props.null_flavors.length > 0)\r\n      this._nullFlavors = props.null_flavors.map((item) => {\r\n        return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n      })\r\n    else this._nullFlavors = []\r\n    this._oldOne = { ...props }\r\n    this._latestOne = props.latest_one\r\n    this._audits = []\r\n    this._id = props.id || -1\r\n    this._guid = props.guid || uuidv4()\r\n    this._custodian_id = props.custodian?.id || props.patient?.organization_id\r\n    this._patient = props.patient ? new Patient(props.patient) : new Patient()\r\n    if (props.issue_date) this._issueDate = new Date(props.issue_date)\r\n    this._certType = props.cert_type\r\n    this._series = props.series || REGION_OKATO\r\n    this._number = props.number\r\n    if (!!props.death_datetime) this._deathDatetime = new Date(props.death_datetime)\r\n    this._deathYear = props.death_year\r\n    this._numberPrev = props.number_prev\r\n    this._seriesPrev = props.series_prev\r\n    this._policyOMS = props.policy_OMS\r\n    this._lifeAreaType = props.life_area_type\r\n    this._deathAreaType = props.death_area_type\r\n    this._deathAddr = {\r\n      ...props.death_addr,\r\n      null_flavors_attributes:\r\n        props.death_addr?.null_flavors?.map((item) => {\r\n          return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n        }) || [],\r\n    } as IAddressR\r\n    this._deathPlace = props.death_place\r\n    this._deathKind = props.death_kind\r\n    this._educationLevel = props.education_level\r\n    this._maritalStatus = props.marital_status\r\n    this._socialStatus = props.social_status\r\n    if (props.eff_time_prev) this._effTimePrev = new Date(props.eff_time_prev)\r\n    if (props.child_info) this._childInfo = new ChildInfo(props.child_info)\r\n    if (props.author) this._author = new Authenticator(props.author)\r\n    if (props.audithor) this._audithor = new Authenticator(props.audithor)\r\n    if (props.legal_authenticator) this._legalAuthenticator = new Authenticator(props.legal_authenticator)\r\n    if (props.ext_reason_time) this._extReasonTime = new Date(props.ext_reason_time)\r\n    this._extReasonDescription = props.ext_reason_description\r\n    this._establishedMedic = props.established_medic\r\n    this._basisDetermining = props.basis_determining\r\n    this._trafficAccident = props.traffic_accident\r\n    this._pregnancyConnection = props.pregnancy_connection\r\n\r\n    if (props.a_reason) this._reasonA = new DeathReason(props.a_reason)\r\n    else this._reasonA = new DeathReason({} as IDeathReason)\r\n    if (props.b_reason) this._reasonB = new DeathReason(props.b_reason)\r\n    if (props.c_reason) this._reasonC = new DeathReason(props.c_reason)\r\n    if (props.reason_ACME) this.changeReasonACME(props.reason_ACME)\r\n\r\n    if (props.d_reason) this._reasonD = new DeathReason(props.d_reason)\r\n    if (props.death_reasons) this._deathReasons = props.death_reasons.map((reason) => new DeathReason(reason))\r\n    else this._deathReasons = []\r\n    if (props.participant) this._participant = new Participant(props.participant)\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n    this.disposers = []\r\n    this.disposers[0] = autorun(() => checkFieldNullFlavor(\"b_reason\", this.reasonB, this._nullFlavors, NA))\r\n    this.disposers[1] = autorun(() => checkFieldNullFlavor(\"c_reason\", this._reasonC, this._nullFlavors, NA))\r\n    this.disposers[2] = autorun(() => checkFieldNullFlavor(\"d_reason\", this.reasonD, this._nullFlavors, NA))\r\n    //console.log(\"Certificate\", props)\r\n  }\r\n\r\n  // получение копии массива заполнителей из Observable.array\r\n  null_flavors_attributes() {\r\n    return this._nullFlavors.map((el) => {\r\n      return { ...el }\r\n    })\r\n  }\r\n\r\n  changeReasonACME(value: string | undefined) {\r\n    if (!value || \"\" === value) this._reasonACME = undefined\r\n    else {\r\n      if (value === this._reasonA?.diagnosis?.ICD10) this._reasonACME = this._reasonA\r\n      else if (value === this._reasonB?.diagnosis?.ICD10) this._reasonACME = this._reasonB\r\n      else if (value === this._reasonC?.diagnosis?.ICD10) this._reasonACME = this._reasonC\r\n      else this._reasonACME = undefined\r\n    }\r\n  }\r\n  milisecAge() {\r\n    // Discard the time-zone information.\r\n    const a = this._patient.birth_date as Date\r\n    if (a === undefined) return false\r\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate(), a.getHours(), a.getMinutes())\r\n    const b = this._deathDatetime as Date\r\n    if (b === undefined) return false\r\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate(), b.getHours(), b.getMinutes())\r\n    return utc2 - utc1\r\n  }\r\n  hoursAge() {\r\n    const _MS_PER_HOUR = 1000 * 60 * 60\r\n    const ms = this.milisecAge()\r\n    if (ms) return Math.floor(ms / _MS_PER_HOUR)\r\n    else return false\r\n  }\r\n  daysAge() {\r\n    const _MS_PER_DAY = 1000 * 60 * 60 * 24\r\n    const ms = this.milisecAge()\r\n    if (ms) return Math.floor(ms / _MS_PER_DAY)\r\n    else return false\r\n  }\r\n  yearsAge() {\r\n    const dd = this._deathDatetime as Date\r\n    const db = this._patient.birth_date as Date\r\n    if (!!dd && !!db) return dd.getFullYear() - db.getFullYear()\r\n    else return false\r\n  }\r\n  setDeathDay(value: Date | undefined, isYear: boolean) {\r\n    if (value && !isYear) {\r\n      this.deathDatetime = value\r\n      this.deathYear = undefined\r\n    } else if (value && isYear) {\r\n      this.deathDatetime = value\r\n      this.deathYear = (this.deathDatetime as Date).getFullYear()\r\n    } else {\r\n      this.deathDatetime = undefined\r\n      this.deathYear = undefined\r\n    }\r\n  }\r\n\r\n  saveReasonEffTime(reason: DeathReason) {\r\n    if (!this._deathDatetime) return false\r\n    let result = new Date(this._deathDatetime)\r\n    if (reason.minutes) result.setMinutes(result.getMinutes() - reason.minutes)\r\n    if (reason.hours) result.setHours(result.getHours() - reason.hours)\r\n    if (reason.days) result.setDate(result.getDate() - reason.days)\r\n    if (reason.weeks) result.setDate(result.getDate() - reason.weeks * 7)\r\n    if (reason.months) result.setMonth(result.getMonth() - reason.months)\r\n    if (reason.years) result.setFullYear(result.getFullYear() - reason.years)\r\n    reason.effectiveTime = result\r\n    return true\r\n  }\r\n\r\n  getAttributes(): ICertificateR {\r\n    let _cert = { guid: this._guid } as ICertificateR\r\n    if (this._id > -1) _cert.id = this._id\r\n    if (this._issueDate) _cert.issue_date = this._issueDate.toDateString()\r\n    _cert.number_prev = this._numberPrev\r\n    _cert.series_prev = this._seriesPrev\r\n    _cert.eff_time_prev = this._effTimePrev?.toDateString()\r\n    if (this._audithor) {\r\n      _cert.audithor_attributes = this._audithor.getAttributes()\r\n      if (!_cert.audithor_attributes.id && !!this._oldOne?.audithor?.id)\r\n        _cert.audithor_attributes.id = this._oldOne.audithor.id\r\n    } else if (this._oldOne && this._oldOne.audithor)\r\n      _cert.audithor_attributes = { id: this._oldOne.audithor.id, _destroy: \"1\" }\r\n    if (this._author) {\r\n      _cert.author_attributes = this._author.getAttributes()\r\n      if (!_cert.author_attributes.id && !!this._oldOne?.author?.id) _cert.author_attributes.id = this._oldOne.author.id\r\n    } else if (this._oldOne && this._oldOne.author)\r\n      _cert.author_attributes = { id: this._oldOne.author.id, _destroy: \"1\" }\r\n    if (this._legalAuthenticator) {\r\n      _cert.legal_authenticator_attributes = this._legalAuthenticator.getAttributes()\r\n      if (!_cert.legal_authenticator_attributes.id && !!this._oldOne?.legal_authenticator?.id)\r\n        _cert.legal_authenticator_attributes.id = this._oldOne.legal_authenticator.id\r\n    } else if (this._oldOne && this._oldOne.legal_authenticator)\r\n      _cert.legal_authenticator_attributes = { id: this._oldOne.legal_authenticator.id, _destroy: \"1\" }\r\n    if (this._basisDetermining) _cert.basis_determining = this._basisDetermining\r\n    if (this._certType) _cert.cert_type = this._certType\r\n    if (this._childInfo) _cert.child_info_attributes = this._childInfo.getAttributes()\r\n    else if (this._oldOne && this._oldOne.child_info) _cert.child_info_attributes = { _destroy: \"1\" } as IChildInfoR\r\n    if (this._deathAddr && !!this._deathAddr.state && !!this._deathAddr.streetAddressLine)\r\n      _cert.death_addr_attributes = { ...this._deathAddr } as IAddressR\r\n    else if (this._oldOne && this._oldOne.death_addr)\r\n      _cert.death_addr_attributes = { id: this._oldOne.death_addr.id, _destroy: \"1\" } as IAddressR\r\n    if (this._deathAreaType || this._oldOne?.death_area_type)\r\n      _cert.death_area_type = !!this._deathAreaType ? this._deathAreaType : null\r\n    if (this._deathDatetime || this._oldOne?.death_datetime)\r\n      _cert.death_datetime = !!this._deathDatetime ? this._deathDatetime : null\r\n    if (this._deathYear || this._oldOne?.death_year) _cert.death_year = !!this._deathYear ? this._deathYear : null\r\n    if (this._deathKind || this._oldOne?.death_kind) _cert.death_kind = !!this._deathKind ? this._deathKind : null\r\n    if (this._deathPlace || this._oldOne?.death_place) _cert.death_place = !!this.deathPlace ? this.deathPlace : null\r\n    if (this._deathReasons.length > 0)\r\n      _cert.death_reasons_attributes = this._deathReasons.map((item) => item.getAttributes())\r\n    if (this._oldOne?.death_reasons && this._oldOne.death_reasons.length > 0) {\r\n      let _temp = [] as IDeathReasonR[]\r\n      this._oldOne.death_reasons.forEach((item) => {\r\n        if (\r\n          !_cert.death_reasons_attributes ||\r\n          _cert.death_reasons_attributes.findIndex((el) => el.id === item.id) === -1\r\n        )\r\n          _temp.push({ id: item.id, _destroy: \"1\" } as IDeathReasonR)\r\n      })\r\n      if (_cert.death_reasons_attributes && _temp.length > 0)\r\n        _cert.death_reasons_attributes = _cert.death_reasons_attributes.concat(_temp)\r\n      else if (_temp.length > 0) _cert.death_reasons_attributes = _temp\r\n    }\r\n    if (this._educationLevel || this._oldOne?.education_level)\r\n      _cert.education_level = !!this._educationLevel ? this._educationLevel : null\r\n    if (this._establishedMedic || this._oldOne?.established_medic)\r\n      _cert.established_medic = !!this._establishedMedic ? this._establishedMedic : null\r\n    if (this._extReasonDescription || this._oldOne?.ext_reason_description)\r\n      _cert.ext_reason_description = !!this.extReasonDescription ? this.extReasonDescription : null\r\n    if (this._extReasonTime || this._oldOne?.ext_reason_time)\r\n      _cert.ext_reason_time = !!this._extReasonTime ? this._extReasonTime : null\r\n    if (this._lifeAreaType || this._oldOne?.life_area_type)\r\n      _cert.life_area_type = !!this._lifeAreaType ? this._lifeAreaType : null\r\n    if (this._policyOMS || this._oldOne?.policy_OMS) _cert.policy_OMS = !!this._policyOMS ? this._policyOMS : null\r\n    if (this._pregnancyConnection || this._oldOne?.pregnancy_connection)\r\n      _cert.pregnancy_connection = !!this.pregnancyConnection ? this.pregnancyConnection : null\r\n    if (this._maritalStatus || this._oldOne?.marital_status)\r\n      _cert.marital_status = !!this._maritalStatus ? this._maritalStatus : null\r\n    if (this.nullFlavors.length > 0) _cert.null_flavors_attributes = this.null_flavors_attributes()\r\n    if (this._reasonA && this._reasonA.diagnosis) _cert.a_reason_attributes = this._reasonA.getAttributes()\r\n    else if (this._oldOne && this._oldOne.a_reason)\r\n      _cert.a_reason_attributes = { id: this._oldOne.a_reason.id, _destroy: \"1\" } as IDeathReasonR\r\n    if (this._reasonACME) _cert.reason_ACME = this._reasonACME.diagnosis?.ICD10\r\n    if (this._reasonB && this._reasonB.diagnosis) _cert.b_reason_attributes = this._reasonB.getAttributes()\r\n    else if (this._oldOne && this._oldOne.b_reason)\r\n      _cert.b_reason_attributes = { id: this._oldOne.b_reason.id, _destroy: \"1\" } as IDeathReasonR\r\n    if (this._reasonC && this._reasonC.diagnosis) _cert.c_reason_attributes = this._reasonC.getAttributes()\r\n    else if (this._oldOne && this._oldOne.c_reason)\r\n      _cert.c_reason_attributes = { id: this._oldOne.c_reason.id, _destroy: \"1\" } as IDeathReasonR\r\n    if (this._reasonD && this._reasonD.diagnosis) _cert.d_reason_attributes = this._reasonD.getAttributes(true)\r\n    else if (this._oldOne && this._oldOne.d_reason)\r\n      _cert.d_reason_attributes = { id: this._oldOne.d_reason.id, _destroy: \"1\" } as IDeathReasonR\r\n    if (this._series) _cert.series = this._series\r\n    if (this._socialStatus || this._oldOne?.social_status)\r\n      _cert.social_status = !!this._socialStatus ? this._socialStatus : null\r\n    if (this._trafficAccident || this._oldOne?.traffic_accident) _cert.traffic_accident = this._trafficAccident\r\n    if (this._patient) _cert.patient_attributes = this._patient.getAttributes()\r\n    _cert.custodian_id = this._custodian_id || _cert.patient_attributes?.organization_id\r\n    if (this._participant) _cert.participant_attributes = this._participant.getAttributes()\r\n    //console.log(\"_cert\", _cert)\r\n    return _cert\r\n  }\r\n  //#region Getters - Setters\r\n  get id() {\r\n    return this._id\r\n  }\r\n  set id(id: number) {\r\n    this._id = id\r\n  }\r\n  get series() {\r\n    return this._series\r\n  }\r\n  set series(series: string | undefined) {\r\n    this._series = series\r\n  }\r\n  get number() {\r\n    return this._number\r\n  }\r\n  set number(number: string | undefined) {\r\n    this._number = number\r\n  }\r\n  get issueDate() {\r\n    return this._issueDate\r\n  }\r\n  set issueDate(issueDate: Date | undefined) {\r\n    this._issueDate = issueDate\r\n  }\r\n  get deathDatetime() {\r\n    return this._deathDatetime\r\n  }\r\n  set deathDatetime(death_datetime: Date | undefined) {\r\n    this._deathDatetime = death_datetime\r\n  }\r\n  get certType() {\r\n    return this._certType\r\n  }\r\n  set certType(cert_type: number | undefined) {\r\n    this._certType = cert_type\r\n  }\r\n  get seriesPrev() {\r\n    return this._seriesPrev\r\n  }\r\n  set seriesPrev(series: string | undefined) {\r\n    this._seriesPrev = series\r\n  }\r\n  get numberPrev() {\r\n    return this._numberPrev\r\n  }\r\n  set numberPrev(number: string | undefined) {\r\n    this._numberPrev = number\r\n  }\r\n  get guid() {\r\n    return this._guid\r\n  }\r\n  get author(): Authenticator | undefined {\r\n    return this._author\r\n  }\r\n  set author(value: Authenticator | undefined) {\r\n    this._author = value\r\n  }\r\n  get authenticator(): Authenticator | undefined {\r\n    return this._audithor\r\n  }\r\n  set authenticator(value: Authenticator | undefined) {\r\n    this._audithor = value\r\n  }\r\n  get legalAuthenticator(): Authenticator | undefined {\r\n    return this._legalAuthenticator\r\n  }\r\n  set legalAuthenticator(value: Authenticator | undefined) {\r\n    this._legalAuthenticator = value\r\n  }\r\n\r\n  get extReasonTime(): Date | undefined {\r\n    return this._extReasonTime\r\n  }\r\n  set extReasonTime(value: Date | undefined) {\r\n    this._extReasonTime = value\r\n  }\r\n  get establishedMedic(): number | undefined {\r\n    return this._establishedMedic\r\n  }\r\n  set establishedMedic(value: number | undefined) {\r\n    this._establishedMedic = value\r\n  }\r\n  get basisDetermining(): number | undefined {\r\n    return this._basisDetermining\r\n  }\r\n  set basisDetermining(value: number | undefined) {\r\n    this._basisDetermining = value\r\n  }\r\n  get trafficAccident(): number | undefined {\r\n    return this._trafficAccident\r\n  }\r\n  set trafficAccident(value: number | undefined) {\r\n    this._trafficAccident = value\r\n  }\r\n  get pregnancyConnection(): number | undefined {\r\n    return this._pregnancyConnection\r\n  }\r\n  set pregnancyConnection(value: number | undefined) {\r\n    this._pregnancyConnection = value\r\n  }\r\n\r\n  get patient() {\r\n    return this._patient\r\n  }\r\n  get effTimePrev() {\r\n    return this._effTimePrev\r\n  }\r\n  set effTimePrev(eff_time: Date | undefined) {\r\n    this._effTimePrev = eff_time\r\n  }\r\n  get deathYear() {\r\n    return this._deathYear\r\n  }\r\n  set deathYear(death_year: number | undefined) {\r\n    this._deathYear = death_year\r\n  }\r\n\r\n  get policyOMS() {\r\n    return this._policyOMS || \"\"\r\n  }\r\n\r\n  set policyOMS(policyOMS: string | undefined) {\r\n    this._policyOMS = policyOMS\r\n  }\r\n\r\n  get lifeAreaType() {\r\n    return this._lifeAreaType\r\n  }\r\n  set lifeAreaType(lat: number | undefined) {\r\n    this._lifeAreaType = lat\r\n  }\r\n  get deathAreaType() {\r\n    return this._deathAreaType\r\n  }\r\n  set deathAreaType(dat: number | undefined) {\r\n    this._deathAreaType = dat\r\n  }\r\n\r\n  get deathAddr() {\r\n    return this._deathAddr\r\n  }\r\n  set deathAddr(value: IAddressR | undefined) {\r\n    this._deathAddr = value\r\n  }\r\n  get deathKind(): number | undefined {\r\n    return this._deathKind\r\n  }\r\n  set deathKind(value: number | undefined) {\r\n    this._deathKind = value\r\n  }\r\n  get socialStatus(): number | undefined {\r\n    return this._socialStatus\r\n  }\r\n  set socialStatus(value: number | undefined) {\r\n    this._socialStatus = value\r\n  }\r\n  get educationLevel(): number | undefined {\r\n    return this._educationLevel\r\n  }\r\n  set educationLevel(value: number | undefined) {\r\n    this._educationLevel = value\r\n  }\r\n  get maritalStatus(): number | undefined {\r\n    return this._maritalStatus\r\n  }\r\n  set maritalStatus(value: number | undefined) {\r\n    this._maritalStatus = value\r\n  }\r\n  get deathPlace(): number | undefined {\r\n    return this._deathPlace\r\n  }\r\n  set deathPlace(value: number | undefined) {\r\n    this._deathPlace = value\r\n  }\r\n  get deathMonth(): number | undefined {\r\n    return this._deathMonth\r\n  }\r\n  set deathMonth(value: number | undefined) {\r\n    this._deathMonth = value\r\n  }\r\n  get childInfo(): ChildInfo | undefined {\r\n    return this._childInfo\r\n  }\r\n  set childInfo(value: ChildInfo | undefined) {\r\n    this._childInfo = value\r\n  }\r\n  get extReasonDescription(): string | undefined {\r\n    return this._extReasonDescription\r\n  }\r\n  set extReasonDescription(value: string | undefined) {\r\n    this._extReasonDescription = value\r\n  }\r\n  get reasonA(): DeathReason | undefined {\r\n    return this._reasonA\r\n  }\r\n  set reasonA(value: DeathReason | undefined) {\r\n    this._reasonA = value\r\n  }\r\n  get reasonB(): DeathReason | undefined {\r\n    return this._reasonB\r\n  }\r\n  set reasonB(value: DeathReason | undefined) {\r\n    this._reasonB = value\r\n  }\r\n  get reasonC(): DeathReason | undefined {\r\n    return this._reasonC\r\n  }\r\n  set reasonC(value: DeathReason | undefined) {\r\n    this._reasonC = value\r\n  }\r\n  get reasonD(): DeathReason | undefined {\r\n    return this._reasonD\r\n  }\r\n  set reasonD(value: DeathReason | undefined) {\r\n    this._reasonD = value\r\n  }\r\n  get reasonACME(): DeathReason | undefined {\r\n    return this._reasonACME\r\n  }\r\n  set reasonACME(value: DeathReason | undefined) {\r\n    this._reasonACME = value\r\n  }\r\n  get deathReasons(): DeathReason[] {\r\n    return this._deathReasons\r\n  }\r\n  set deathReasons(value: DeathReason[]) {\r\n    this._deathReasons = value\r\n  }\r\n  get audits() {\r\n    return this._audits\r\n  }\r\n  get nullFlavors() {\r\n    return this._nullFlavors\r\n  }\r\n\r\n  set nullFlavors(nullFlavors: INullFlavorR[]) {\r\n    this._nullFlavors = nullFlavors\r\n  }\r\n\r\n  get participant(): Participant | undefined {\r\n    return this._participant\r\n  }\r\n  set participant(value: Participant | undefined) {\r\n    this._participant = value\r\n  }\r\n  get latestOne(): ICertificate | undefined {\r\n    return this._latestOne\r\n  }\r\n  set latestOne(value: ICertificate | undefined) {\r\n    this._latestOne = value\r\n  }\r\n\r\n  get oldOne(): ICertificate | undefined {\r\n    return this._oldOne\r\n  }\r\n\r\n  //#endregion\r\n\r\n  dispose() {\r\n    // So, to avoid subtle memory issues, always call the\r\n    // disposers when the reactions are no longer needed.\r\n    this.disposers.forEach((disposer) => disposer())\r\n  }\r\n}\r\n","export const DEFAULT_RENDER_OPTIONS = { except: [\"updated_at\", \"created_at\"] }\r\n","import { DEFAULT_RENDER_OPTIONS } from \"./default\"\r\n\r\nexport const NULLFLAVORABLE_RENDER_OPTIONS = {\r\n  ...DEFAULT_RENDER_OPTIONS,\r\n  include: [\"null_flavors\"],\r\n}\r\n","export const DEFAULT_AUTHENTICATOR_RENDER_OPTIONS = {\r\n  only: [\"id\", \"doctor\", \"time\"],\r\n  include: [\"doctor\"],\r\n}\r\n","export const LETTERED_DEATH_REASON_RENDER_OPTIONS = {\r\n  except: [\"diagnosis_id\", \"updated_at\", \"created_at\"],\r\n  include: [\"diagnosis\", \"null_flavors\"],\r\n}\r\n","import { AxiosResponse } from \"axios\"\r\nimport $api, { API_URL } from \"../http\"\r\nimport { NULLFLAVORABLE_RENDER_OPTIONS } from \"../models/render_options/address\"\r\nimport { DEFAULT_AUTHENTICATOR_RENDER_OPTIONS } from \"../models/render_options/Authenticator\"\r\nimport { CHILD_INFO_RENDER_OPTIONS } from \"../models/render_options/child_info\"\r\nimport { DEFAULT_RENDER_OPTIONS } from \"../models/render_options/default\"\r\nimport { SHORT_DOCTOR_RENDER_OPTIONS } from \"../models/render_options/Doctor\"\r\nimport { EXTERNAL_DEATH_REASON_RENDER_OPTIONS } from \"../models/render_options/external_death_reason\"\r\nimport { LETTERED_DEATH_REASON_RENDER_OPTIONS } from \"../models/render_options/lettered_reason\"\r\nimport { OTHER_REASON_RENDER_OPTIONS } from \"../models/render_options/other_reason\"\r\nimport { PARTICIPANT_RENDER_OPTIONS } from \"../models/render_options/Participant\"\r\nimport { PATIENT_RENDER_OPTIONS } from \"../models/render_options/patient\"\r\nimport { PERSON_RENDER_OPTIONS } from \"../models/render_options/person\"\r\nimport { PROCEDURE_RENDER_OPTIONS } from \"../models/render_options/procedure\"\r\nimport { RELATED_SUBJECT_RENDER_OPTIONS } from \"../models/render_options/related_subject\"\r\nimport { ICertificateR } from \"../models/requests/ICertificateR\"\r\nimport { ICertificate } from \"../models/responses/ICertificate\"\r\n\r\nexport const CERTIFICATE_FULL_RENDER_OPTIONS = {\r\n  render_options: {\r\n    except: [\"custodian_id\", \"patient_id\", \"updated_at\"],\r\n    include: [\r\n      \"patient\",\r\n      \"author\",\r\n      \"legal_authenticator\",\r\n      \"audithor\",\r\n      \"a_reason\",\r\n      \"b_reason\",\r\n      \"c_reason\",\r\n      \"d_reason\",\r\n      \"death_addr\",\r\n      \"child_info\",\r\n      \"custodian\",\r\n      \"death_reasons\",\r\n      \"participant\",\r\n      \"null_flavors\",\r\n      \"latest_one\",\r\n    ],\r\n  },\r\n  includes: [\r\n    \"patient\",\r\n    \"participant\",\r\n    \"custodian\",\r\n    \"a_reason\",\r\n    \"b_reason\",\r\n    \"c_reason\",\r\n    \"d_reason\",\r\n    \"death_addr\",\r\n    \"child_info\",\r\n    \"death_reasons\",\r\n    \"latest_one\",\r\n  ],\r\n  death_addr: NULLFLAVORABLE_RENDER_OPTIONS,\r\n  patient: PATIENT_RENDER_OPTIONS,\r\n  identity: NULLFLAVORABLE_RENDER_OPTIONS,\r\n  address: NULLFLAVORABLE_RENDER_OPTIONS,\r\n  a_reason: LETTERED_DEATH_REASON_RENDER_OPTIONS,\r\n  b_reason: LETTERED_DEATH_REASON_RENDER_OPTIONS,\r\n  c_reason: LETTERED_DEATH_REASON_RENDER_OPTIONS,\r\n  d_reason: EXTERNAL_DEATH_REASON_RENDER_OPTIONS,\r\n  author: DEFAULT_AUTHENTICATOR_RENDER_OPTIONS,\r\n  legal_authenticator: DEFAULT_AUTHENTICATOR_RENDER_OPTIONS,\r\n  audithor: DEFAULT_AUTHENTICATOR_RENDER_OPTIONS,\r\n  death_reasons: OTHER_REASON_RENDER_OPTIONS,\r\n  procedures: PROCEDURE_RENDER_OPTIONS,\r\n  child_info: CHILD_INFO_RENDER_OPTIONS,\r\n  related_subject: RELATED_SUBJECT_RENDER_OPTIONS,\r\n  addr: NULLFLAVORABLE_RENDER_OPTIONS,\r\n  person: PERSON_RENDER_OPTIONS,\r\n  doctor: SHORT_DOCTOR_RENDER_OPTIONS,\r\n  participant: PARTICIPANT_RENDER_OPTIONS,\r\n  position: { only: [\"id\", \"name\"] },\r\n  custodian: { only: [\"id\", \"name\"] },\r\n  null_flavors: DEFAULT_RENDER_OPTIONS,\r\n}\r\n\r\nexport default class CertificateService {\r\n  //POST request for get Certificate's list\r\n  static async getCertificates(query: any, first?: number, last?: number): Promise<AxiosResponse<ICertificate[]>> {\r\n    let _options = { ...query }\r\n    if (first) _options.offset = first\r\n    if (last !== undefined && first !== undefined) _options.limit = last - first + 1\r\n    else _options.limit = 25\r\n    return $api.post(`${API_URL}model/Certificate/`, {\r\n      ..._options,\r\n      ...CERTIFICATE_FULL_RENDER_OPTIONS,\r\n    })\r\n  }\r\n\r\n  // POST request for get Certificate's count\r\n  static async getCount(query: any): Promise<AxiosResponse<number>> {\r\n    return $api.post(`${API_URL}model/Certificate/`, { ...query, count: \"1\" })\r\n  }\r\n\r\n  //POST request for add  /REST_API/v1/model/Certificate/add\r\n  static async addCertificate(certificate: ICertificateR): Promise<AxiosResponse<ICertificate>> {\r\n    return $api.post(`${API_URL}model/Certificate/add`, {\r\n      Certificate: certificate,\r\n      ...CERTIFICATE_FULL_RENDER_OPTIONS,\r\n    })\r\n  }\r\n\r\n  //PUT request for update Certificate /REST_API/v1/model/Certificate/:id\r\n  static async updateCertificate(request: any): Promise<AxiosResponse<ICertificate>> {\r\n    return $api.put(`${API_URL}model/Certificate/${request.Certificate.id}`, {\r\n      ...request,\r\n      ...CERTIFICATE_FULL_RENDER_OPTIONS,\r\n    })\r\n  }\r\n  // DELETE request for remove Certificate /REST_API/v1/model/Certificate/:id\r\n  static async removeCertificate(certificate_id: number): Promise<AxiosResponse<ICertificate>> {\r\n    return $api.delete(`${API_URL}model/Certificate/${certificate_id}`)\r\n  }\r\n}\r\n","export const PATIENT_RENDER_OPTIONS = {\r\n  except: [\"person_id\", \"updated_at\", \"created_at\"],\r\n  include: [\"person\", \"identity\", \"null_flavors\"],\r\n}\r\n","export const EXTERNAL_DEATH_REASON_RENDER_OPTIONS = {\r\n  except: [\"ext_diagnosis_id\", \"updated_at\", \"created_at\"],\r\n  include: [\"ext_diagnosis\", \"null_flavors\"],\r\n}\r\n","export const OTHER_REASON_RENDER_OPTIONS = {\r\n  except: [\"diagnosis_id\", \"updated_at\", \"created_at\"],\r\n  include: [\"diagnosis\", \"procedures\", \"null_flavors\"],\r\n}\r\n","export const PROCEDURE_RENDER_OPTIONS = {\r\n  except: [\"medical_serv_id\", \"updated_at\", \"created_at\"],\r\n  include: [\"medical_serv\", \"null_flavors\"],\r\n}\r\n","export const CHILD_INFO_RENDER_OPTIONS = {\r\n  except: [\"related_subject_id\", \"updated_at\", \"created_at\"],\r\n  include: [\"related_subject\", \"address\", \"null_flavors\"],\r\n}\r\n","export const RELATED_SUBJECT_RENDER_OPTIONS = {\r\n  except: [\"person_name_id\", \"updated_at\", \"created_at\"],\r\n  include: [\"person_name\", \"addr\", \"null_flavors\"],\r\n}\r\n","export const PERSON_RENDER_OPTIONS = {\r\n  except: [\"created_at\", \"updated_at\"],\r\n  include: [\"person_name\", \"address\", \"null_flavors\"],\r\n}\r\n","export const SHORT_DOCTOR_RENDER_OPTIONS = {\r\n  only: [\"id\", \"person_name\", \"position\"],\r\n  include: [\"person_name\", \"position\"],\r\n}\r\n","export const PARTICIPANT_RENDER_OPTIONS = {\r\n  except: [\"person_id\", \"certificate_id\", \"updated_at\", \"created_at\"],\r\n  include: [\"person\", \"identity\"],\r\n}\r\n","import { observer } from 'mobx-react-lite'\r\nimport { Context } from '..'\r\nimport { MultiSelect } from 'primereact/multiselect'\r\nimport { Column} from 'primereact/column'\r\nimport { DataTable, DataTableFilterMatchModeType, DataTableFilterMeta, DataTableSortParams } from 'primereact/datatable'\r\nimport { Toast } from 'primereact/toast'\r\nimport { FC, useContext, useEffect, useMemo, useRef, useState } from 'react'\r\nimport MainLayout from '../components/layouts/MainLayout'\r\nimport { CERTIFICATE_ROUTE, DIRECTION, LIST_ROUTE, RunsackFilterMatchMode } from '../utils/consts'\r\nimport { ICertificate } from '../models/responses/ICertificate'\r\nimport React from 'react'\r\nimport { Button } from 'primereact/button'\r\nimport { GENDERS } from '../NSI/1.2.643.5.1.13.13.11.1040'\r\nimport { DEAD_PLACE_TYPES } from '../NSI/1.2.643.5.1.13.13.99.2.20'\r\nimport { BASIS_DERMINING } from '../NSI/1.2.643.5.1.13.13.99.2.23'\r\nimport '../styles/components/DataTable.css'\r\nimport '../styles/components/MultiSelect.css'\r\nimport { CERT_TYPES } from '../NSI/1.2.643.5.1.13.13.99.2.19'\r\nimport { getOneLinePersonName } from '../models/IPersonName'\r\nimport  PrimeReact, {FilterMatchMode}  from 'primereact/api'\r\nimport { IReference, IReferenceId } from '../models/IReference'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport OrganizationService from '../services/OrganizationService'\r\nimport { IRouteProps } from '../models/IRouteProps'\r\nimport { Operation, OperationType } from '../store/certificateStore'\r\n\r\n\r\nconst ListPage: FC<IRouteProps> = (props: IRouteProps) => {\r\n  const {certificateStore, userStore} = useContext(Context)  \r\n  const [filters, setFilters] = useState<DataTableFilterMeta | undefined>()\r\n  const [propsFilters, setPropsFilters] = useState<any | false | undefined>()  \r\n  const [organizations, setOrganizations] = useState<IReferenceId[] | null>(null)\r\n  const isSuperUser = userStore.userInfo?.roles.includes('MIAC') || userStore.userInfo?.roles.includes('ADMIN')\r\n  \r\n  useEffect(()=>{\r\n    if (organizations===null && isSuperUser) OrganizationService.getOrganizations().then(response=>\r\n      setOrganizations(response.data.organizations)\r\n    ).catch(()=>{\r\n      setOrganizations([])      \r\n    })},[isSuperUser, organizations])\r\n  \r\n\r\n  useMemo(()=>{\r\n    if (propsFilters === undefined) {\r\n      if (props.location.search){\r\n        const _params = props.location.search.replace(\"?\",\"\").split(\"&\") \r\n        let _filters = {} as any\r\n        _params.forEach(param=>{\r\n          const pair = param.split(\"=\")\r\n          _filters[pair[0]]=pair[1]\r\n        })        \r\n        certificateStore.operation = new Operation(OperationType.FILTERING)\r\n        certificateStore.filters = {..._filters}\r\n        setPropsFilters({..._filters})            \r\n      } else { \r\n        certificateStore.operation = new Operation(OperationType.FILTERING)       \r\n        if (certificateStore.filters && Object.keys(certificateStore.filters).length !== 0) {\r\n          certificateStore.filters = {}          \r\n        }  \r\n        setPropsFilters({})\r\n      }        \r\n    }    \r\n  },[certificateStore, props, propsFilters])  \r\n    \r\n  PrimeReact.locale = 'ru'\r\n  const toast = useRef<Toast>(null)\r\n  const dt = useRef<DataTable>(null) \r\n  useEffect(()=>{       \r\n    if (certificateStore.needScroll \r\n      && certificateStore.operation.is(OperationType.FILTERING)\r\n      && dt.current) {  \r\n        //console.log('useEffect resetScroll', certificateStore.operation)     \r\n        dt.current.resetScroll()\r\n      }\r\n  }, [ certificateStore.needScroll, certificateStore.operation])  \r\n\r\n  const [selected, setSelected] = useState<ICertificate | undefined>()\r\n\r\n  const initFilters = () => {\r\n        setFilters({\r\n        'basis_determining': { value: null, matchMode: FilterMatchMode.IN },  \r\n        'custodian_id': { value: null, matchMode: FilterMatchMode.IN },            \r\n        'number': { operator: 'and', constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }]}, \r\n        'patient_fio': { operator: 'and', constraints: [{ value: null, matchMode: FilterMatchMode.CONTAINS }]},\r\n        'primory_reason' : { operator: 'and', constraints: [{ value: null, matchMode: FilterMatchMode.GREATER_THAN_OR_EQUAL_TO},{ value: null, matchMode: FilterMatchMode.LESS_THAN_OR_EQUAL_TO}]},\r\n        'patient_birth_date' : { operator: 'and', constraints: [{ value: null, matchMode: FilterMatchMode.DATE_AFTER},{ value: null, matchMode: FilterMatchMode.DATE_BEFORE}]},\r\n        'patient_death_date' : { operator: 'and', constraints: [{ value: null, matchMode: FilterMatchMode.DATE_AFTER},{ value: null, matchMode: FilterMatchMode.DATE_BEFORE}]},\r\n        'issue_date': { operator: 'and', constraints: [{ value: null, matchMode: FilterMatchMode.DATE_AFTER},{ value: null, matchMode: FilterMatchMode.DATE_BEFORE}]},   \r\n        'death_place': { value: null, matchMode: FilterMatchMode.IN },        \r\n        })        \r\n    }   \r\n    useEffect(() => {            \r\n        initFilters()        \r\n    }, [])\r\n\r\n  const orderNumberBodyTemplate = (rowData: ICertificate)=>{    \r\n    return <i>{rowData.rowNumber}</i>\r\n  }\r\n  const seriesNumberBodyTemplate = (rowData: ICertificate)=>{   \r\n    const cert_type = CERT_TYPES.find(el=>el.code===rowData.cert_type) \r\n    return <>{rowData.series} {rowData.number} {cert_type?.s_name}</>\r\n  }\r\n  const reasonsBodyTemplate = (rowData: ICertificate)=>{\r\n    const acme = rowData.reason_ACME\r\n    const isACME = !!acme\r\n    const cr = rowData.c_reason?.diagnosis\r\n    const ar = rowData.a_reason?.diagnosis\r\n    const br = rowData.b_reason?.diagnosis\r\n    const dr = rowData.d_reason?.ext_diagnosis\r\n    let result = isACME && !!cr && acme === cr.ICD10 ? \r\n      `(ПП-${acme})${cr.s_name}; ` : !!cr ? `(В-${cr.ICD10})${cr.s_name}; ` : ''\r\n    result += (isACME && !!ar && acme === ar.ICD10 ? `(ПП-${acme})${ar.s_name}; ` : \r\n          !!ar ? `(А-${ar.ICD10})${ar.s_name}; ` : '')\r\n    result += (isACME && !!br && acme === br.ICD10 ? `(ПП-${acme})${br.s_name}; ` : \r\n          !!br ? `(Б-${br.ICD10})${br.s_name}; ` : '')\r\n    result += (isACME && !!dr && acme === dr.ICD10 ? `(ПП-${acme})${dr.s_name}; ` : \r\n          !!dr ? `(Г-${dr.ICD10})${dr.s_name}; ` : '')\r\n    if (rowData.death_reasons && rowData.death_reasons.length>0) { \r\n      result +=\"Сопутствующие: \" \r\n      rowData.death_reasons.forEach(el=>{\r\n        result +=`(${el.diagnosis?.ICD10})${el.diagnosis?.s_name}; `\r\n      })          \r\n    }\r\n    return <span style={{fontSize:'smaller'}}>{result}</span>\r\n  }\r\n\r\n  const filterClearTemplate = (options:any) => {\r\n        return <Button type=\"button\" icon=\"pi pi-times\" onClick={options.filterClearCallback} className=\"p-button-secondary\"></Button>;\r\n    }\r\n   const filterApplyTemplate = (options:any) => {\r\n        return <Button type=\"button\" icon=\"pi pi-check\" \r\n        onClick={options.filterApplyCallback} className=\"p-button-success\"></Button>\r\n    }\r\n  const dbBodyTemplate = (rowData: ICertificate)=>{\r\n    let _result =''\r\n    const birth = rowData.patient?.birth_date\r\n    if (!!birth) _result = `${birth.slice(8,10)}.${birth.slice(5,7)}.${birth.slice(0,4)}`  \r\n    return _result\r\n  }  \r\n  const ddBodyTemplate = (rowData: ICertificate)=>{\r\n    let _result =''    \r\n    const death = !rowData.death_datetime ? !rowData.death_year ? false : rowData.death_year.toString() : rowData.death_datetime \r\n    if (death && death.length>4) {\r\n       _result = `${death?.slice(8,10)}.${death.slice(5,7)}.${death.slice(0,4)}`\r\n    } else if (death && death.length<5){\r\n       _result =death       \r\n    } \r\n    return _result\r\n  }  \r\n  const ageBodyTemplate = (rowData: ICertificate)=>{\r\n    if (!rowData.death_datetime || !rowData.patient?.birth_date) return ''   \r\n    const dd = new Date(rowData.death_datetime)\r\n    const db = new Date(rowData.patient?.birth_date)\r\n    let age = dd.getFullYear() - db.getFullYear()\r\n    if (age === 0) return 0\r\n    const m = dd.getMonth() - dd.getMonth()\r\n    if (m < 0 || (m === 0 && dd.getDate() < db.getDate())) age--    \r\n    return age\r\n  }\r\n\r\n  const genderBodyTemplate = (rowData: ICertificate)=>{\r\n    if (!rowData.patient?.gender) return ''\r\n    else return GENDERS[rowData.patient.gender-1].name.slice(0,1)\r\n  }\r\n\r\n  const fioBodyTemplate = (rowData: ICertificate)=>{\r\n      if (!rowData.patient) return \"\"\r\n      else if (!rowData.patient.person) return \"не иденти-фицирован\"          \r\n      const result = getOneLinePersonName(rowData.patient.person.person_name)\r\n      return <>{result}</>\r\n    }\r\n  const deathPlaceBodyTemplate = (rowData: ICertificate) => {\r\n    if (!rowData.death_place) return ''\r\n    else {\r\n     const place = DEAD_PLACE_TYPES.find(el=>el.code === rowData.death_place)\r\n     if (!place) return ''\r\n     else return <span style={{fontSize:'small'}}>{place.name}</span>\r\n    }      \r\n  }     \r\n  const basisDeterminingBodyTemplate = (rowData: ICertificate) => {\r\n    if (!rowData.basis_determining) return ''\r\n    else {\r\n     const basis = BASIS_DERMINING.find(el=>el.code === rowData.basis_determining)\r\n     if (!basis) return ''\r\n     else return <span style={{fontSize:'small'}}>{basis.name}</span>\r\n    }      \r\n  }\r\n  const custodianBodyTemplate = (rowData: ICertificate) => {\r\n    const cusName = rowData.custodian?.name\r\n    if (!cusName) return ''\r\n    else return <span style={{fontSize:'small'}}>{cusName}</span>\r\n  }  \r\n  const custodianFilterTemplate = (options: any) => {\r\n        return <MultiSelect value={options.value} options={organizations || []}  onChange={(e) => options.filterCallback(e.value)} optionLabel=\"name\" placeholder=\"не выбрано\" className=\"p-column-filter\" />;\r\n    }  \r\n  const custodian = isSuperUser ? \r\n    <Column  header=\"Мед. организация\" body={custodianBodyTemplate}          \r\n        filterField='custodian_id' showFilterMatchModes={false}\r\n                      filterClear={filterClearTemplate} filterApply={filterApplyTemplate}\r\n                      filter filterElement={custodianFilterTemplate}                    \r\n        style={{ flexGrow: 1, flexBasis: '120px' }}> </Column> :\r\n    <></>                  \r\n  const doctorBodyTemplate = (rowData: ICertificate) => {\r\n    if (!rowData.author) return ''\r\n    else {       \r\n      const result = getOneLinePersonName(rowData.author.doctor.person_name)\r\n      return  <span style={{fontSize:'small'}}>{result}</span>\r\n    }      \r\n  }\r\n  const positionBodyTemplate = (rowData: ICertificate) => {\r\n    if (!rowData.author?.doctor.position ) return ''\r\n    else return  <span style={{fontSize:'small'}}>{rowData.author.doctor.position.name}</span>         \r\n  }  \r\n  const issueDateBodyTemplate = (rowData: ICertificate) => {\r\n    const iDate = rowData.issue_date\r\n    if (!iDate ) return ''    \r\n    else return  <span style={{fontSize:'small'}}>{`${iDate.slice(8,10)}.${iDate.slice(5,7)}.${iDate.slice(0,4)}`}</span>         \r\n  }\r\n   \r\n  const actionBodyTemplate = (rowData: ICertificate) => {       \r\n        return rowData.id && (\r\n            <React.Fragment>\r\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success p-mr-2\" onClick={()=>userStore.history().push(`${CERTIFICATE_ROUTE}/${rowData.id}?q=0`)} />                \r\n            </React.Fragment>\r\n        )\r\n    }\r\n  const loadCertificatesLazy = (event: any) => {  \r\n    if (!(certificateStore.operation.is(OperationType.FILTERING) || certificateStore.operation.is(OperationType.SCROLLING))) certificateStore.operation = new Operation(OperationType.SCROLLING)    \r\n    //console.log('loadCertificatesLazy start count-', certificateStore.count, event.first, event.last, certificateStore.operation.getType()  )         \r\n    certificateStore.getList(()=>{ \r\n      //console.log('loadCertificatesLazy finished, count-', certificateStore.count, event.first, event.last, certificateStore.operation.getType())\r\n      \r\n      }, event.first, event.last)           \r\n  }   \r\n \r\n  const sortLazy = (e: DataTableSortParams) => {         \r\n    const order =  e.sortOrder ? DIRECTION[e.sortOrder===-1 ? 0 : 1] : DIRECTION[0]    \r\n    if (e.sortField && e.sortOrder) {\r\n      certificateStore.sorts = [`${e.sortField} ${order}`]\r\n      certificateStore.sortField = e.sortField\r\n      certificateStore.sortOrder = e.sortOrder\r\n      certificateStore.operation = new Operation(OperationType.SORTING)\r\n    } \r\n  }  \r\n  const basisDeterminingFilterTemplate = (options: any) => {\r\n        return <MultiSelect value={options.value} options={BASIS_DERMINING}  onChange={(e) => options.filterCallback(e.value)} optionLabel=\"name\" placeholder=\"не выбрано\" className=\"p-column-filter\" />;\r\n    }\r\n  const deathPlaceFilterTemplate = (options: any) => {\r\n        return <MultiSelect value={options.value} options={DEAD_PLACE_TYPES}  onChange={(e) => options.filterCallback(e.value)} optionLabel=\"name\" placeholder=\"не выбрано\" className=\"p-column-filter\" />;\r\n    }   \r\n    \r\n  const fioFilterTemplate = (options: any) => {\r\n        return <InputText value={options.value || ''}  onChange={(e) => options.filterCallback(e.target.value)}  placeholder=\"строка поиска\" className=\"p-column-filter\" />\r\n    }  \r\n  \r\n  const footer = `Всего ${ certificateStore.count } свидетельств(а).`  \r\n  \r\n  const layoutParams = {\r\n        title: 'СПИСОК СВИДЕТЕЛЬСТВ',     \r\n        url: LIST_ROUTE,\r\n        content:\r\n        <>\r\n          <Toast ref={toast} />\r\n          <div id='tableDiv' className='p-card' >             \r\n            <DataTable ref={dt} value={certificateStore.allCerts}  responsiveLayout=\"scroll\" scrollDirection=\"both\"\r\n                emptyMessage=\"нет данных, удовлетворяющих запросу\" scrollable scrollHeight=\"72vh\" \r\n                selectionMode=\"single\" selection={selected}  dataKey=\"id\" size=\"small\"\r\n                footer={footer} loading={certificateStore.isLoading} lazy\r\n                onSelectionChange={e =>{\r\n                  if ( e.value.id ) {\r\n                    certificateStore.select(certificateStore.certs.findIndex(el=>el.id === e.value.id))\r\n                    setSelected(e.value)\r\n                  }\r\n                }} filterDisplay=\"menu\" \r\n                onFilter={e=>{\r\n                  //console.log('e',e)\r\n                  let _filters = {...propsFilters} as any                  \r\n                  let _constraint: any = e.filters['issue_date'] \r\n                  if (_constraint && _constraint.constraints[0] && _constraint.constraints[0].value) \r\n                    _filters[`issue_date${RunsackFilterMatchMode[_constraint.constraints[0].matchMode  as DataTableFilterMatchModeType]}`]=_constraint.constraints[0].value                  \r\n                  if (_constraint && _constraint.constraints[1] && _constraint.constraints[1].value) \r\n                    _filters[`issue_date${RunsackFilterMatchMode[_constraint.constraints[1].matchMode  as DataTableFilterMatchModeType]}`]=_constraint.constraints[1].value\r\n                    _constraint = e.filters['primory_reason'] \r\n                  if (_constraint && _constraint.constraints[0] && _constraint.constraints[0].value) \r\n                    _filters[`reason_ACME${RunsackFilterMatchMode[_constraint.constraints[0].matchMode  as DataTableFilterMatchModeType]}`]=_constraint.constraints[0].value                  \r\n                  if (_constraint && _constraint.constraints[1] && _constraint.constraints[1].value) \r\n                    _filters[`reason_ACME${RunsackFilterMatchMode[_constraint.constraints[1].matchMode  as DataTableFilterMatchModeType]}`]=_constraint.constraints[1].value  \r\n                   _constraint = e.filters['patient_birth_date'] \r\n                  if (_constraint && _constraint.constraints[0] && _constraint.constraints[0].value) \r\n                    _filters[`patient_birth_date${RunsackFilterMatchMode[_constraint.constraints[0].matchMode  as DataTableFilterMatchModeType]}`]=_constraint.constraints[0].value                  \r\n                  if (_constraint && _constraint.constraints[1] && _constraint.constraints[1].value) \r\n                    _filters[`patient_birth_date${RunsackFilterMatchMode[_constraint.constraints[1].matchMode  as DataTableFilterMatchModeType]}`]=_constraint.constraints[1].value  \r\n                  _constraint = e.filters['patient_death_date'] \r\n                  if (_constraint && _constraint.constraints[0] && _constraint.constraints[0].value) \r\n                    _filters[`death_datetime${RunsackFilterMatchMode[_constraint.constraints[0].matchMode  as DataTableFilterMatchModeType]}`]=_constraint.constraints[0].value                  \r\n                  if (_constraint && _constraint.constraints[1] && _constraint.constraints[1].value) \r\n                    _filters[`death_datetime${RunsackFilterMatchMode[_constraint.constraints[1].matchMode  as DataTableFilterMatchModeType]}`]=_constraint.constraints[1].value     \r\n                  _constraint = e.filters['number'] \r\n                  if (_constraint && _constraint.constraints[0] && _constraint.constraints[0].value) \r\n                    _filters[`number${RunsackFilterMatchMode[_constraint.constraints[0].matchMode as DataTableFilterMatchModeType]}`]=_constraint.constraints[0].value\r\n                  _constraint = e.filters['patient_fio'] \r\n                  if (_constraint && _constraint.constraints[0] && _constraint.constraints[0].value) \r\n                    _filters[`patient_fio${RunsackFilterMatchMode[_constraint.constraints[0].matchMode as DataTableFilterMatchModeType]}`]=_constraint.constraints[0].value  \r\n                  _constraint = e.filters['basis_determining']   \r\n                  if (_constraint && _constraint.value) {\r\n                    const values = _constraint.value as IReference[]\r\n                    let _codes = [] as string[]\r\n                    values.map(item=> _codes.push(item.code)) \r\n                    _filters.basis_determining_in = _codes   \r\n                  }\r\n                  _constraint = e.filters['death_place']   \r\n                  if (_constraint && _constraint.value) {\r\n                    const values = _constraint.value as IReference[]\r\n                    let _codes = [] as string[]\r\n                    values.map(item=> _codes.push(item.code)) \r\n                    _filters.death_place_in = _codes   \r\n                  }\r\n                  _constraint = e.filters['custodian_id']   \r\n                  if (_constraint && _constraint.value) {\r\n                    const values = _constraint.value as IReferenceId[]\r\n                    let _codes = [] as number[]\r\n                    values.map(item=> _codes.push(item.id)) \r\n                    _filters.custodian_id_in = _codes   \r\n                  }               \r\n                  certificateStore.filters = _filters \r\n                }}                \r\n                virtualScrollerOptions={{ lazy: true,  onLazyLoad: loadCertificatesLazy,  itemSize: 120, delay: 100,showLoader: false,  loading: certificateStore.isLoading}} filters={filters} filterLocale={'ru'} \r\n                onRowDoubleClick={()=>userStore.history().push(`${CERTIFICATE_ROUTE}/${certificateStore.cert.id}?q=0`)}\r\n                onSort={sortLazy} sortField={certificateStore.sortField} sortOrder={certificateStore.sortOrder}\r\n                >  \r\n                    <Column header=\"№ п.п\"  body={orderNumberBodyTemplate} \r\n                      sortField='rowNumber'\r\n                      style={{ flexGrow: 1, flexBasis: '58px' }} frozen></Column>                                   \r\n                    <Column header=\"Серия Номер Вид\" body={seriesNumberBodyTemplate} filterField='number'\r\n                      filter filterPlaceholder=\"Поиск по номеру\" dataType='text' showFilterOperator ={false}                                           \r\n                      filterClear={filterClearTemplate} filterApply={filterApplyTemplate} sortField='number' sortable style={{ flexGrow: 1, flexBasis: '110px' }} frozen></Column>\r\n                    <Column header=\"Причины смерти и соп. патологии\" showFilterOperator ={false}                     \r\n                     filterField='primory_reason'  filterPlaceholder=\"код ПП\" filter dataType='numeric'\r\n                     filterClear={filterClearTemplate} filterApply={filterApplyTemplate}  \r\n                      style={{ flexGrow: 1, flexBasis: '250px' }} body={reasonsBodyTemplate}></Column>\r\n                    <Column  header=\"ФИО\" body={fioBodyTemplate} \r\n                      sortField='patient_person_person_name_family'\r\n                      dataType='text' showFilterOperator ={false}\r\n                      filter filterField='patient_fio' filterClear={filterClearTemplate} filterApply={filterApplyTemplate}  filterElement={fioFilterTemplate}\r\n                      sortable style={{ flexGrow: 1, flexBasis: '140px' }}></Column>                    \r\n                    <Column  header=\"ДР\" body={dbBodyTemplate} filter sortable\r\n                       showFilterOperator={false} dataType='date' filterPlaceholder=\"дата рождения\"\r\n                     filterField='patient_birth_date' sortField='patient_birth_date' \r\n                     filterClear={filterClearTemplate} filterApply={filterApplyTemplate}  \r\n                       style={{ flexGrow: 1, flexBasis: '110px' }}> </Column>\r\n                    <Column  header=\"ДС\" body={ddBodyTemplate} filter sortable\r\n                       showFilterOperator={false} dataType='date' filterPlaceholder=\"дата смерти\"\r\n                     filterField='patient_death_date' sortField='death_datetime' \r\n                     filterClear={filterClearTemplate} filterApply={filterApplyTemplate}  \r\n                       style={{ flexGrow: 1, flexBasis: '110px' }}> </Column>\r\n                    <Column  header=\"Лет\" body={ageBodyTemplate} \r\n                      style={{ flexGrow: 1, flexBasis: '46px' }}> </Column>\r\n                    <Column  header=\"Пол\" body={genderBodyTemplate} sortField='patient_gender'\r\n                      sortable style={{ flexGrow: 1, flexBasis: '56px' }}> </Column>    \r\n                    <Column  header=\"Адрес проживания\" sortable sortField='patient_person_address_streetAddressLine'\r\n                      field='patient.person.address.streetAddressLine'\r\n                      style={{ flexGrow: 1, flexBasis: '200px' }}> </Column>  \r\n                    <Column  header=\"Адрес смерти\" sortable sortField='death_addr_streetAddressLine'\r\n                      field='death_addr.streetAddressLine'\r\n                      style={{ flexGrow: 1, flexBasis: '200px' }}> </Column>                     \r\n                    <Column  header=\"Смерть наступила\" body={deathPlaceBodyTemplate}\r\n                      showFilterMatchModes={false} filterElement={deathPlaceFilterTemplate}\r\n                      filterClear={filterClearTemplate} filterApply={filterApplyTemplate} \r\n                      filter filterField='death_place' sortField='death_place' sortable \r\n                      style={{ flexGrow: 1, flexBasis: '140px' }}> </Column>  \r\n                    <Column  header=\"Основание заключения\" body={basisDeterminingBodyTemplate}\r\n                      sortField='basis_determining' sortable \r\n                      filterField='basis_determining' showFilterMatchModes={false}\r\n                      filterClear={filterClearTemplate} filterApply={filterApplyTemplate}\r\n                      filter filterElement={basisDeterminingFilterTemplate} \r\n                      style={{ flexGrow: 1, flexBasis: '140px' }}> </Column>\r\n                    {custodian}\r\n                    <Column  header=\"Специалист\" body={doctorBodyTemplate}\r\n                      style={{ flexGrow: 1, flexBasis: '120px' }}> </Column>\r\n                    <Column  header=\"Должность\" body={positionBodyTemplate}\r\n                      style={{ flexGrow: 1, flexBasis: '130px' }}> </Column>  \r\n                    <Column  header=\"Выдано\" body={issueDateBodyTemplate} \r\n                     showFilterOperator={false} dataType='date' \r\n                     filterField='issue_date' sortField='issue_date' filterPlaceholder=\"дата выпуска\"\r\n                     filterClear={filterClearTemplate} filterApply={filterApplyTemplate}                       \r\n                     filter sortable style={{ flexGrow: 1, flexBasis: '100px' }}> </Column>                \r\n                    <Column body={actionBodyTemplate} exportable={false} \r\n                      style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\r\n                </DataTable>\r\n          </div>  \r\n        </>\r\n    }\r\n\r\n return (\r\n    <>\r\n      <MainLayout {...layoutParams} />\r\n    </>\r\n )  \r\n}\r\nexport default observer(ListPage)","export default __webpack_public_path__ + \"static/media/security.f40a12e4.png\";","const LoginImageDiv = () => {\r\n  return (\r\n    <div className='login-image'>\r\n      <div className='login-image-content'>\r\n        <h1>Медицинское</h1>\r\n        <h1>свидетельство</h1>\r\n        <h1>о смерти</h1>\r\n        <h3>версия 3.0</h3>\r\n        <h3>(с учетом требований CDA_R2 уровня 3)</h3>\r\n      </div>\r\n      <div className='login-footer'>\r\n        <p>2022 © АО \"АМИАЦ\"</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default LoginImageDiv\r\n","import { observer } from 'mobx-react-lite'\r\nimport { useContext, useState } from 'react'\r\nimport { FC } from 'react'\r\nimport { Link} from 'react-router-dom'\r\nimport { Context } from '..'\r\nimport logo from \"../images/security.png\"\r\nimport '../styles/login.css'\r\nimport  '../styles/components/Inputtext.css'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport {Password} from 'primereact/password'\r\nimport { Button } from 'primereact/button'\r\nimport { Field, Form } from 'react-final-form'\r\nimport { classNames } from 'primereact/utils'\r\nimport LoginImageDiv from '../static/LoginImageDiv'\r\n\r\ninterface IAuth {\r\n  email: string\r\n  password: string\r\n}\r\nconst LoginPage: FC = () => {    \r\n  const [email, setEmail] = useState<string>('')\r\n  const {userStore} = useContext(Context)   \r\n  \r\n  const validate = (data: IAuth) => {\r\n    let errors: any = {}        \r\n        if (!data.email) {\r\n            errors.email = 'Поле <Email> обязательно'\r\n        } else if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)){\r\n          setEmail(data.email)\r\n        }\r\n        if (!data.password) {\r\n            errors.password = 'Поле <Пароль> обязательно'\r\n        }        \r\n        return errors\r\n  }\r\n  const onSubmit = async (data: IAuth, form: any) => {          \r\n    userStore.login(data.email, data.password)        \r\n  }\r\n  const onPassordRecovery = async () => {          \r\n    userStore.renew_link(email)        \r\n  }\r\n  const isFormFieldValid = (meta: any) => !!(meta.touched && meta.error)\r\n  const getFormErrorMessage = (meta: any) => {\r\n    return (isFormFieldValid(meta) && <small className=\"p-error\">{meta.error}</small>)\r\n  }    \r\n  return (\r\n  <>\r\n    <div className=\"login-body\">\r\n      <div className=\"login-wrapper\">\r\n        <div className=\"login-panel\">\r\n          <img src={logo} className='logo' alt=\"logo\"></img>\r\n          <div id=\"clickForm\" className=\"login-form\" >\r\n            <h2>Авторизация</h2>\r\n            <p>Нет учетной записи? <Link to=\"/registration\">Регистрация</Link></p>\r\n            <Form onSubmit={onSubmit} initialValues={{email: '', password: '' }} \r\n              validate={validate} \r\n              render={({ handleSubmit }) => (\r\n              <form  onSubmit={handleSubmit}  className=\"p-fluid\">\r\n                <Field name=\"email\" render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label p-input-icon-right\">\r\n                        <i className=\"pi pi-envelope\" />\r\n                        <InputText id=\"email\"  autoFocus {...input} className={classNames({ 'p-invalid': isFormFieldValid(meta) })} />\r\n                        <label htmlFor=\"email\" \r\n                        className={classNames({ 'p-error': isFormFieldValid(meta) })}>Email*</label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                  )} />\r\n                  <Field name=\"password\"  render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label p-input-icon-right\">\r\n                        <Password id=\"password\" autoComplete='off' {...input} toggleMask className={classNames({ 'p-invalid': isFormFieldValid(meta) })}  />\r\n                        <label htmlFor=\"password\" className={classNames({ 'p-error': isFormFieldValid(meta) })}>Пароль*</label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                  )} />\r\n              <Button type=\"submit\" label=\"ВОЙТИ\" style={{marginBottom:\"1rem\"}}/>   \r\n              <Button type=\"button\" onClick={onPassordRecovery} label=\"не помню пароль\" className=\"p-button-link\"  /> \r\n            </form>)}/>            \r\n          </div>\r\n        </div>  \r\n        <LoginImageDiv/>      \r\n      </div>\r\n    </div>\r\n  </>\r\n)}\r\nexport default observer(LoginPage)","import { observer } from 'mobx-react-lite'\r\nimport { FC, useContext, useEffect } from 'react'\r\nimport MainLayout from '../components/layouts/MainLayout'\r\nimport { CERTIFICATE_ROUTE, HOME_ROUTE, LIST_ROUTE, MO_SETTINGS_ROUTE } from '../utils/consts'\r\nimport { Button } from 'primereact/button'\r\nimport { Card } from 'primereact/card'\r\nimport { DataTable } from 'primereact/datatable'\r\nimport { Column } from 'primereact/column'\r\nimport { Divider } from 'primereact/divider'\r\nimport { Context } from '..'\r\nimport { ProgressSpinner } from 'primereact/progressspinner'\r\nimport { IRouteProps } from '../models/IRouteProps'\r\nimport { Operation, OperationType } from '../store/certificateStore'\r\n\r\n\r\n\r\nconst MainPage: FC<IRouteProps> = (props: IRouteProps) => {\r\n  const {userStore, certificateStore, layoutStore} = useContext(Context)\r\n  useEffect(()=>{\r\n    if (userStore.userInfo)     \r\n      certificateStore.userInfo = userStore.userInfo\r\n  },[certificateStore, userStore.userInfo])\r\n  useEffect(()=>{         \r\n      if  (certificateStore.userInfo && !certificateStore.isLoading) {\r\n        certificateStore.operation = new Operation(OperationType.FILTERING)        \r\n        if (props.location.search){\r\n          const _params = props.location.search.replace(\"?\",\"\").split(\"&\") \r\n          let _filters = {} as any\r\n          _params.forEach(param=>{\r\n          const pair = param.split(\"=\")\r\n          _filters[pair[0]]=pair[1]\r\n          })        \r\n          certificateStore.filters = {..._filters} \r\n        } else certificateStore.filters = {}\r\n        \r\n      }              \r\n  },[certificateStore, certificateStore.userInfo, layoutStore, props.location.search])\r\n  // useEffect(()=>{         \r\n  //     if  (layoutStore.isLoading && certificateStore.count) {        \r\n  //       layoutStore.isLoading = false        \r\n  //     }              \r\n  // },[certificateStore, certificateStore.count, layoutStore])\r\n  \r\n  const news =[{version:\"3.005\",record:\"Уведомления об активности (колокольчик) теперь работают; Улучшена работа списка свидетельств; исправлена ошибка ввода дат с точностью до года.\"},{version:\"3.004\",record:\"Улучшена работа вкладки ввода причин; исправлена ошибка выбора жд_ст населенных пунктов при вводе адреса.\"},{version:\"3.003\",record:\"Улучшена работа списка. Фильтрация по датам рождения, первопричинам, МО в списке\"},{version:\"3.002\",record:\"Фильтрация по датам смерти в списке\"},\r\n  {version:\"3.001\",record:\"Исправлена ошибка нумерации в списке\"},\r\n  {version:\"3.000\",record:\"с учетом требований CDA_R2 уровня 3\"}]\r\n  const layoutParams= {\r\n    title: 'Главная',     \r\n    url: HOME_ROUTE,\r\n    content: userStore ? ( \r\n      <>     \r\n        <div className=\"p-d-flex p-flex-column p-jc-around p-flex-md-row p-flex-wrap\">\r\n          <Button style={{minWidth:'243px'}} className=\"p-mr-2 p-mb-2 p-shadow-3\" label=\"Ввод свидетельства\"  title=\"Форма ввода свидетельства\" \r\n          onClick={(e)=>{userStore.history().push(`${CERTIFICATE_ROUTE}/${certificateStore.cert.id}?q=0`)}}/>\r\n            <Button style={{minWidth:'243px'}} className=\"p-button-secondary p-mr-2 p-mb-2 p-shadow-3\" label=\"Настройки\" title=\"Настройки учетной записи\" onClick={(e)=>{userStore.history().push(`${MO_SETTINGS_ROUTE}/${userStore.userInfo?.organization.id}`)}}/>\r\n            <Button style={{minWidth:'243px'}} className=\"p-button-secondary p-mr-2 p-mb-2 p-shadow-3\" id=\"reports\" label=\"Отчеты\" title=\"Формирование отчетов\" />\r\n            <Button style={{minWidth:'243px'}} className=\"p-mr-2 p-mb-2 p-shadow-3\" label=\"Перинатальное свидетельство\" /> \r\n            <Button className=\"p-button-secondary p-mr-2 p-mb-2 p-shadow-3\" \r\n            id=\"repBt\" style={{minWidth:'243px'}} label=\"ЖУРНАЛ\" title=\"Журнал выданных свидетельств и копий\" />                     \r\n            <Button style={{minWidth:'243px'}} className=\"p-button-success p-mr-2 p-mb-2 p-shadow-3\" label=\"Список свидетельств\" title=\"Список введеных свидетельств\" onClick={(e)=>{userStore.history().push(LIST_ROUTE)}}/>            \r\n        </div> \r\n        <Divider style={{marginTop:'1rem', marginBottom:'1rem'}}/>\r\n        <div className=\"p-d-flex p-flex-column p-jc-around p-flex-md-row p-flex-wrap\">\r\n          <Card className=\"p-mr-2 p-mb-2\" title=\"Последние изменения\" >\r\n            <DataTable className=\"p-datatable-sm\" value={news} responsiveLayout='scroll'>\r\n              <Column field=\"version\" header=\"Версия\"></Column>\r\n              <Column field=\"record\" header=\"Что нового\"></Column>\r\n            </DataTable> \r\n          </Card>\r\n        </div>                  \r\n      </>\r\n    ) : (<ProgressSpinner/>)   \r\n  }  \r\n  return (\r\n    <>\r\n      <MainLayout {...layoutParams} />\r\n    </>\r\n  )\r\n}\r\nexport default observer(MainPage)","export default __webpack_public_path__ + \"static/media/ava.ec8d39a0.jpg\";","export default __webpack_public_path__ + \"static/media/hospital.0e4a3324.jpg\";","import { FC, useContext, useEffect, useRef, useState } from 'react'\r\nimport { IRouteMatch } from '../models/IRouteMatch'\r\nimport { IRouteProps } from '../models/IRouteProps'\r\nimport ava from '../images/hospital.jpg'\r\nimport '../styles/pages/ProfilePage.css'\r\nimport '../styles/components/AutoComplete.css'\r\nimport { DESTROY_OPTION, MO_SETTINGS_ROUTE} from '../utils/consts'\r\nimport MainLayout from '../components/layouts/MainLayout'\r\nimport OrganizationService from '../services/OrganizationService'\r\nimport { IOrganization } from '../models/IOrganization'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { ProgressSpinner } from 'primereact/progressspinner'\r\nimport { IAudit } from '../models/IAudit'\r\nimport { classNames } from 'primereact/utils'\r\nimport { InputMask } from 'primereact/inputmask'\r\nimport { IContact } from '../models/IContact'\r\nimport { Button } from 'primereact/button'\r\nimport { Toast } from 'primereact/toast'\r\nimport { DEFAULT_ERROR_TOAST } from '../utils/defaults'\r\nimport { Context } from '..'\r\nimport { Dropdown } from 'primereact/dropdown'\r\nimport { IReferenceId } from '../models/IReference'\r\nimport AddressDialog from '../components/dialogs/AddressDialog'\r\nimport { observer } from 'mobx-react-lite'\r\nimport AddressFC2 from '../components/inputs/InputAddress'\r\nimport { IAddressR } from '../models/requests/IAddressR'\r\n\r\n// страница настроек профиля организации\r\n// Organization profile page\r\n\r\n// используем роут с параметром id для загрузки с API\r\ninterface IMatch extends IRouteMatch {  \r\n  params: {id: string}\r\n}\r\ninterface SettingsPageProps extends IRouteProps { \r\n    match: IMatch  \r\n}\r\n\r\n\r\nconst SettingsPage: FC<SettingsPageProps> = (props: SettingsPageProps) =>{ \r\n  const {userStore, addressStore} = useContext(Context)\r\n  const [audits, setAudits] = useState<IAudit[]>([])\r\n  const [submitted, setSubmitted] = useState(false)\r\n  const [email, setEmail] = useState<IContact>({telcom_value:'', main:false} as IContact) \r\n  const [phone, setPhone] = useState<IContact>({telcom_value:'', main:true} as IContact)\r\n  const [organization, setOrganization] = useState<IOrganization | null>(null)\r\n  const [ID, setID] = useState<number | null>(null)\r\n  const toast = useRef<Toast>(null) \r\n  useEffect(()=>{\r\n    if (organization!==null && organization.id !== ID) {\r\n      setPhone({telcom_value:'', main:true} as IContact)\r\n      setEmail({telcom_value:'', main:false} as IContact)          \r\n      organization.contacts.forEach((item)=>{if (item.main) setPhone({...item})\r\n        else setEmail({...item, telcom_value: item.telcom_value.replace('mailto:','')})})\r\n      setID(organization.id)      \r\n    }\r\n  },[organization, ID])\r\n\r\n  useEffect(()=>{\r\n    if (organization===null && props.match.params.id) {\r\n        OrganizationService.getOrganization(props.match.params.id)\r\n        .then(response=>{        \r\n          setOrganization(response.data)        \r\n        })\r\n        .catch((reason=>{console.log(reason)\r\n          if (toast!==null && toast.current!==null) toast.current.show(DEFAULT_ERROR_TOAST)\r\n        }))      \r\n    }\r\n  },[organization, props.match.params.id, userStore.userInfo])\r\n  const [organizations, setOrganizations] = useState<IReferenceId[] | null>(null)\r\n  useEffect(()=>{\r\n    if (organizations===null && userStore.userInfo\r\n       && userStore.userInfo.roles.includes('ADMIN')) \r\n    OrganizationService.getOrganizations().then(response=>\r\n      setOrganizations(response.data.organizations)\r\n    ).catch(()=>{\r\n      setOrganizations([])\r\n      if (toast!==null && toast.current!==null) toast.current.show(DEFAULT_ERROR_TOAST)\r\n    })},[organizations, userStore.userInfo])\r\n  const changesAudit = (fieldName: string, field: string, oldValue: string, newValue: string) => {\r\n    if (organization ===null) return\r\n    let _audits = audits\r\n    const audit = _audits.find(element=>element.field === field) || {field, before: oldValue} as IAudit\r\n    if (audit.after === undefined) _audits.push(audit)    \r\n    audit.after = newValue   \r\n    audit.detail = `${fieldName}: ${audit.before} -> ${audit.after}`     \r\n    setAudits(_audits)\r\n  }\r\n  \r\n\r\n  // Обработчик изменения контактов      \r\n  const onContactChange = (contact: IContact) => { \r\n      if (organization === null) return  \r\n      let _contact = contact.telcom_value==='' ?\r\n      (contact.id ? {...contact,...DESTROY_OPTION} : {...contact}) :    \r\n      (contact.id ? {id:contact.id, parent_guid: contact.parent_guid, telcom_use: contact.telcom_use, telcom_value: contact.telcom_value, main: contact.main} : {...contact}) \r\n      if (organization.contacts === undefined) organization.contacts = []\r\n      if (_contact.id) {        \r\n          const idx = organization.contacts.findIndex(item=>item.id===_contact.id)  \r\n          if (idx>-1) organization.contacts[idx] = _contact        \r\n      } else organization.contacts.push(_contact)       \r\n  }\r\n\r\n  // проверка возможности сохранения\r\n  const isSaveAvaible = () : boolean => {\r\n    if (organization === null) return false    \r\n    let _result = audits.length > 0    \r\n    _result = _result && /tel:\\+?[-0-9().]+/i.test(phone.telcom_value)    \r\n    _result = _result && (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email.telcom_value) || email.telcom_value==='')    \r\n    _result = _result && !(!organization.name || (!organization.name && organization.name.length > 100))\r\n    _result = _result && !!organization.name_full    \r\n    //_result = _result && !(!organization.address || !organization.address.houseGUID)\r\n   \r\n    return  _result\r\n  }  \r\n  const saveOrganization = () => {\r\n    if (organization===null) return    \r\n    setSubmitted(true)\r\n    if (isSaveAvaible()) {\r\n      onContactChange(phone)\r\n      onContactChange(email)\r\n      let _organization = { id: organization.id,                               \r\n                            name: organization.name,\r\n                            name_full: organization.name_full,\r\n                            license: organization.license || null,\r\n                            license_data: organization.license_data || null,\r\n                            okpo: organization.okpo || null,\r\n                            sm_code: organization.sm_code || '00',\r\n                            contacts_attributes: organization.contacts,\r\n                            address_attributes: organization.address\r\n                           } as any                                                     \r\n      OrganizationService.updateOrganization({Organization: _organization, audits: audits})\r\n        .then(response=>{          \r\n          setAudits([])\r\n          setSubmitted(false)\r\n          setOrganization(response.data)\r\n          //console.log('response.data',response.data)\r\n          if (toast!==null && toast.current!==null) toast.current.show({ severity: 'success', summary: 'Успешно', detail: 'Изменения применены', life:3000 })\r\n        })\r\n        .catch((reason=>{console.log(reason)\r\n          if (toast!==null && toast.current!==null) toast.current.show(DEFAULT_ERROR_TOAST)\r\n        }))    \r\n    } else if (toast!==null && toast.current!==null) toast.current.show({ severity: 'info', summary: 'Отклонено', detail: 'Изменения отсутствуют или неприменимы', life:3000 })   \r\n  } \r\n  \r\n  const adminOpportunities = ()=>{    \r\n    return (userStore.userInfo && userStore.userInfo.roles.includes('ADMIN')) ? \r\n    (<>\r\n      <div className=\"p-field p-col-12\">\r\n        <label htmlFor=\"organization\" >Выбрать медорганизацию</label>\r\n        <Dropdown id=\"organization\"  options={organizations || []}\r\n          onChange={(e)=>{            \r\n            if (e.value.id) {\r\n              const history = userStore.history()\r\n              let link = `${MO_SETTINGS_ROUTE}/${e.value.id}`\r\n              setOrganization(null)              \r\n              history.push(link)              \r\n            }  \r\n          }}\r\n          filter showClear optionLabel=\"name\" />\r\n      </div>\r\n    </>) \r\n    : (<></>)     \r\n  }\r\n  const layoutParams = {\r\n    title: 'Профиль медорганизации',     \r\n    url: MO_SETTINGS_ROUTE,\r\n    content: organization ? (<>    \r\n    <div className=\"card widget-user-card\" key={props.match.params.id}>\r\n      <div className=\"user-card-header\">\r\n        <img src={ava} alt=\"\" className=\"user-card-avatar\" />\r\n      </div>\r\n      <div className=\"user-card-body\">  \r\n      <div className=\"user-card-title\">\r\n        {organization.name || ''}\r\n      </div>             \r\n      <div className=\"user-card-subtext\">{organization.oid}</div>\r\n      <div className=\"p-grid user-card-stats\">\r\n        <div className=\"p-col-4\">\r\n          <i className=\"pi pi-users\"></i>\r\n          <div>14 Создано</div>\r\n        </div>\r\n        <div className=\"p-col-4\">\r\n          <i className=\"pi pi-bookmark\"></i>\r\n          <div>2 Выданно</div>\r\n        </div>\r\n        <div className=\"p-col-4\">\r\n          <i className=\"pi pi-check-square\"></i>\r\n          <div>6 Отправленно</div>\r\n        </div>\r\n      </div>        \r\n    </div>\r\n    <div className='card' style={{textAlign: 'left'}} >      \r\n        <div className='p-fluid p-formgrid p-grid'>\r\n          <div className=\"p-field p-col-12 p-md-5 \">\r\n            <label htmlFor=\"name\">Наименование</label>\r\n            <InputText id=\"name\" required value={organization.name || ''} \r\n              onChange={e=>{\r\n                  let _organization = {...organization}\r\n                  changesAudit(\"Наименование\", \"name\", _organization.name || '', e.target.value || '')\r\n                   _organization.name = e.target.value\r\n                  setOrganization(_organization) \r\n              }}\r\n              autoFocus className={classNames({ 'p-invalid': submitted && organization.name && organization.name?.length > 100})}\r\n            />\r\n            {submitted && (!organization.name || (organization.name && organization.name.length > 100)) && <small className=\"p-error\">Краткое наименование более 100 знаков или отсутствует</small>}\r\n          </div>\r\n          <div className=\"p-field p-col-12 p-md-7\">\r\n            <label htmlFor=\"name_full\">Полное наименование</label>\r\n            <InputText id=\"name_full\" value={organization.name_full || ''} \r\n              onChange={e=>{\r\n                  let _organization = {...organization}                  \r\n                  changesAudit(\"Полное наименование\", \"name_full\", _organization.name || '', e.target.value || '')\r\n                  _organization.name_full = e.target.value\r\n                  setOrganization(_organization) \r\n              }}\r\n              required className={classNames({ 'p-invalid': submitted && !organization.name_full})}\r\n            />\r\n            {submitted && !organization.name_full && <small className=\"p-error\">Полное наименование обязательно</small>}\r\n          </div>\r\n          <div className=\"p-field p-col-12\">\r\n            <label htmlFor=\"license\">Cерия и номер лицензии на осуществление медицинской деятельности</label>\r\n            <InputText id=\"license\" value={organization.license || ''} \r\n              onChange={e=>{\r\n                  let _organization = {...organization}\r\n                  changesAudit(\"Cерия и номер лицензии\", \"license\", _organization.license || '', e.target.value || '')\r\n                   _organization.license = e.target.value\r\n                  setOrganization(_organization) \r\n              }}               \r\n            />            \r\n          </div>\r\n          <div className=\"p-field p-col-12\">\r\n            <label htmlFor=\"license_data\">указание на Федеральную службу по надзору в сфере здравоохранения и дату регистрации лицензии</label>\r\n            <InputText id=\"license_data\" value={organization.license_data || ''} \r\n              onChange={e=>{\r\n                  let _organization = {...organization}\r\n                  changesAudit(\"Данные лицензии\", \"license_data\", _organization.license_data || '', e.target.value || '')\r\n                   _organization.license_data = e.target.value\r\n                  setOrganization(_organization) \r\n              }}               \r\n            />            \r\n          </div>\r\n          <div className=\"p-field p-col-12 p-md-6\">\r\n            <label htmlFor=\"okpo\">ОКПО</label>\r\n            <InputText id=\"okpo\" value={organization.okpo || ''} \r\n              onChange={e=>{\r\n                  let _organization = {...organization}\r\n                  changesAudit(\"ОКПО\", \"okpo\", _organization.okpo || '', e.target.value || '')\r\n                  _organization.okpo = e.target.value\r\n                  setOrganization(_organization) \r\n              }}               \r\n            />            \r\n          </div>\r\n          <div className=\"p-field p-col-12 p-md-6\">\r\n            <label htmlFor=\"sm_code\">Последние две цифры кода в ТФОМС</label>\r\n            <div className=\"p-inputgroup\">\r\n              <span className=\"p-inputgroup-addon\">2800</span>\r\n              <InputMask mask=\"99\" id=\"sm_code\" value={organization.sm_code || ''} \r\n                onChange={e=>{\r\n                  let _organization = {...organization}\r\n                  changesAudit(\"ТФОМС код\", \"sm_code\", _organization.sm_code || '', e.target.value || '')\r\n                  _organization.sm_code = e.value\r\n                  setOrganization(_organization) \r\n                }}               \r\n              />                            \r\n            </div>                        \r\n          </div>\r\n          <div className=\"p-field p-col-12 p-md-6\">\r\n            <label htmlFor=\"phone\">телефон</label>\r\n            <InputMask id=\"phone\" required \r\n              type=\"text\" mask=\"tel:+79999999999\"\r\n              value={phone.telcom_value} \r\n              onChange={(e)=>{\r\n                changesAudit(\"телефон\", \"phone\", phone.telcom_value || '', e.target.value || '')  \r\n                setPhone({...phone, telcom_value: e.target.value})                \r\n              }} \r\n              className={classNames({ 'p-invalid': submitted && !/tel:\\+?[-0-9().]+/i.test(phone.telcom_value)})}\r\n            />\r\n            {submitted && !/tel:\\+?[-0-9().]+/i.test(phone.telcom_value) && <small className=\"p-error\">тел.номер некорректен или отсутствует!</small>}            \r\n          </div>\r\n          <div className=\"p-field  p-col-12 p-md-6\">\r\n            <label htmlFor=\"email\">email</label>\r\n            <InputText id=\"email\" type=\"text\" \r\n              value={email.telcom_value} \r\n              onChange={(e)=>{ \r\n                changesAudit(\"email\", \"email\", email.telcom_value || '', e.target.value || '') \r\n                setEmail({...email, telcom_value:e.target.value})  \r\n              }} \r\n              className={classNames({ 'p-invalid': submitted && !(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email.telcom_value) || email.telcom_value==='')})}\r\n                    />\r\n              {submitted && !(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email.telcom_value) || email.telcom_value==='') && <small className=\"p-error\">Неверный email</small>}\r\n          </div>      \r\n          <AddressFC2 className=\"p-col-12\" submitted={submitted} \r\n            label='Адрес медорганизации'\r\n            value={organization.address} strictly \r\n            onClear={(value: IAddressR)=>setOrganization({...organization, address: {...value}})}\r\n            onChange={()=>{        \r\n              let _organization = {...organization, address: addressStore.addressProps()}                \r\n              changesAudit(\"Адрес\", \"address\", organization.address?.streetAddressLine || '', _organization.address?.streetAddressLine || '')                 \r\n              setOrganization(_organization)\r\n            }}  \r\n          />\r\n          <div className=\"p-field  p-col-12 p-md-6\">\r\n            <Button label=\"ПРИМЕНИТЬ\"  className=\"p-button-success\" \r\n              style={{marginTop: '22px'}} onClick={saveOrganization}  />\r\n          </div>   \r\n          {adminOpportunities()}          \r\n        </div>        \r\n      </div>             \r\n    </div>\r\n    <Toast ref={toast} /> \r\n    <AddressDialog />        \r\n  </>) : (<><Toast ref={toast} /><ProgressSpinner/></>)\r\n  }\r\n  return (\r\n    <>\r\n      <MainLayout {...layoutParams} />\r\n    </>\r\n  )\r\n}\r\nexport default observer(SettingsPage)","import { AdminPage } from \"./pages/AdminPage\"\r\nimport CertificatePage from \"./pages/CertificatePage\"\r\nimport DoctorsPage from \"./pages/DoctorsPage\"\r\nimport { ErrorPage } from \"./pages/ErrorPage\"\r\nimport ListPage from \"./pages/ListPage\"\r\nimport LoginPage from \"./pages/LoginPage\"\r\nimport MainPage from \"./pages/MainPage\"\r\nimport { MessagePage } from \"./pages/MessagePage\"\r\nimport { PassordRecoveryPage } from \"./pages/PasswordRecoveryPage\"\r\nimport { ProfilePage } from \"./pages/ProfilePage\"\r\nimport { RegistrationPage } from \"./pages/RegistrationPage\"\r\nimport SettingsPage from \"./pages/SettingsPage\"\r\nimport {\r\n  ADMIN_ROUTE,\r\n  CERTIFICATE_ROUTE,\r\n  ERROR_ROUTE,\r\n  HOME_ROUTE,\r\n  LIST_ROUTE,\r\n  LOGIN_ROUTE,\r\n  MESSAGE_ROUTE,\r\n  PWD_RECOVERY_ROUTE,\r\n  REGISTRATION_ROUTE,\r\n  USER_ROUTE,\r\n  DOCTORS_ROUTE,\r\n  MO_SETTINGS_ROUTE,\r\n} from \"./utils/consts\"\r\n\r\nexport const AUTH_ROUTES = [\r\n  { path: HOME_ROUTE, Component: MainPage },\r\n  { path: ADMIN_ROUTE, Component: AdminPage },\r\n  { path: LIST_ROUTE, Component: ListPage },\r\n  { path: CERTIFICATE_ROUTE + \"/:id\", Component: CertificatePage },\r\n  { path: DOCTORS_ROUTE, Component: DoctorsPage },\r\n  { path: USER_ROUTE + \"/:id\", Component: ProfilePage },\r\n  { path: MO_SETTINGS_ROUTE + \"/:id\", Component: SettingsPage },\r\n  { path: LOGIN_ROUTE, Component: MainPage },\r\n]\r\nexport const NON_AUTH_ROUTES = [\r\n  { path: LOGIN_ROUTE, Component: LoginPage },\r\n  { path: REGISTRATION_ROUTE, Component: RegistrationPage },\r\n  { path: PWD_RECOVERY_ROUTE + \"/:code\", Component: PassordRecoveryPage },\r\n  { path: HOME_ROUTE, Component: LoginPage },\r\n]\r\nexport const PUBLIC_ROUTES = [\r\n  { path: MESSAGE_ROUTE + \"/:message\", Component: MessagePage },\r\n  { path: ERROR_ROUTE + \"/:error\", Component: ErrorPage },\r\n]\r\n","//import React, { useEffect } from 'react';\r\nimport { FC } from 'react'\r\n\r\ntype AdminPageProps = {}\r\n\r\nexport const AdminPage: FC<AdminPageProps> = (props: AdminPageProps) => {\r\n  //const [state, setState] = useState();\r\n\r\n  //useEffect(() => {}, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>AdminPage React TS FC Component</h1>\r\n      <div>List</div>\r\n    </>\r\n  );\r\n};","import { FC, useEffect, useState } from 'react'\r\nimport { IRouteMatch } from '../models/IRouteMatch'\r\nimport { IRouteProps } from '../models/IRouteProps'\r\nimport ava from '../images/ava.jpg'\r\nimport '../styles/pages/ProfilePage.css'\r\nimport { ROLES, USER_ROUTE } from '../utils/consts'\r\nimport MainLayout from '../components/layouts/MainLayout'\r\nimport { IUserInfo } from '../models/responses/IUserInfo'\r\nimport UsersService from '../services/UsersService'\r\n\r\n// страница настроек профиля пользователя\r\n// User profile page\r\n\r\n// используем роут с параметром id для загрузки с API\r\ninterface IMatch extends IRouteMatch {  \r\n  params: {id: number}\r\n}\r\ninterface ProfilePageProps extends IRouteProps { \r\n    match: IMatch  \r\n}\r\n\r\n\r\nexport const ProfilePage: FC<ProfilePageProps> = (props: ProfilePageProps) =>{ \r\n  const [user, setUser] = useState<IUserInfo | null>(null)\r\n  useEffect(()=>{\r\n    if (user===null && props.match.params.id) UsersService.getUser(props.match.params.id)\r\n    .then(response=>setUser(response.data))\r\n    .catch(()=>console.log('Ошибка получения пользователя')) \r\n  })\r\n  const user_name = `${user?.person_name.family} ${user?.person_name.given_1}`\r\n  const user_team = `${user!==null && user.roles ? ROLES[user.roles.split(' ')[0]] : ''} ${user?.organization.name}`\r\n  const layoutParams = {\r\n    title: 'Профиль пользователя',     \r\n    url: USER_ROUTE,\r\n    content: (<>  \r\n    <div className=\"card widget-user-card\">\r\n      <div className=\"user-card-header\">\r\n        <img src={ava} alt=\"\" className=\"user-card-avatar\" />\r\n      </div>\r\n      <div className=\"user-card-body\">\r\n        <div className=\"user-card-title\">{user_name}</div>\r\n        <div className=\"user-card-subtext\">{user_team}</div>\r\n        <div className=\"p-grid user-card-stats\">\r\n          <div className=\"p-col-4\">\r\n            <i className=\"pi pi-users\"></i>\r\n            <div>14 Создано</div>\r\n          </div>\r\n          <div className=\"p-col-4\">\r\n            <i className=\"pi pi-bookmark\"></i>\r\n            <div>2 Выданно</div>\r\n          </div>\r\n          <div className=\"p-col-4\">\r\n            <i className=\"pi pi-check-square\"></i>\r\n            <div>6 Отправленно</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>      \r\n  </>)\r\n  }\r\n  return (\r\n    <>\r\n      <MainLayout {...layoutParams} />\r\n    </>\r\n  )\r\n}","import { useHistory} from 'react-router-dom'\r\nimport { Button } from 'primereact/button'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { Password } from 'primereact/password'\r\nimport { Dropdown } from 'primereact/dropdown'\r\nimport { InputMask } from 'primereact/inputmask'\r\nimport { classNames } from 'primereact/utils'\r\nimport  '../styles/components/Dropdown.css'\r\nimport  '../styles/components/Inputtext.css'\r\nimport React, { useContext, useState } from 'react'\r\nimport { FC } from 'react'\r\nimport { Field, Form } from 'react-final-form'\r\nimport { Context } from '..'\r\nimport logo from \"../images/security.png\"\r\nimport { IRegisterForm } from '../models/FormsData/IRegisterForm'\r\nimport { IRegistration } from '../models/requests/IRegistration'\r\nimport LoginImageDiv from '../static/LoginImageDiv'\r\nimport OrganizationService from '../services/OrganizationService'\r\nimport { useEffect } from 'react'\r\nimport { IReferenceId } from '../models/IReference'\r\n\r\nexport const RegistrationPage: FC = () =>{ \r\n  const history = useHistory()  \r\n  const [organizations, setOrganizations] = useState<IReferenceId[] | null>(null)\r\n  useEffect(()=>{\r\n    if (organizations===null) OrganizationService.getOrganizations().then(response=>\r\n      setOrganizations(response.data.organizations)\r\n    ).catch(()=>{\r\n      setOrganizations([])\r\n      history.push(\"/error/Ошибка API при получении списка МО\")\r\n    })},[organizations, history])\r\n  const {userStore} = useContext(Context)  \r\n  const validate = (data: IRegisterForm) => {\r\n    let errors: any = {} \r\n    if (!data.name || (data.name.trim().split(' ').length < 2)){             \r\n            errors.name = 'значение <ФИО> некорректно'\r\n    }       \r\n    if (!data.email) {\r\n       errors.email = 'Поле <Email> обязательно'\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n       errors.email = 'Неверный email Н.п. example@email.com'\r\n    }\r\n    if (!data.password) {\r\n       errors.password = 'Поле <Пароль> обязательно'\r\n    } else if (data.password && data.password!==data.password_confirmation) {\r\n       errors.password_confirmation = 'пароли не совпадают'\r\n    }     \r\n    if (data.organization == null ) {\r\n       errors.organization = 'Поле <Медорганизация> обязательно'       \r\n    }   \r\n    return errors\r\n  }\r\n    const onSubmit = async (data: IRegisterForm, form: any) => {\r\n    const request:IRegistration  = {} as IRegistration \r\n    try {\r\n        const names = data.name.trim().split(' ')\r\n        request.person_name_attributes = {family: names[0], given_1: names[1]}         \r\n        if (names.length>2)  request.person_name_attributes.given_2= names[2]  \r\n        if (data.phone_number) request.contacts_attributes={telcom_value: data.phone_number, main: true}        \r\n        request.email = data.email\r\n        request.password = data.password\r\n        request.password_confirmation = data.password_confirmation\r\n        request.organization_id = data.organization.id                  \r\n        userStore.registration(request)        \r\n    } catch (e:any){\r\n      history.push(\"/error/\"+e.message)      \r\n    }          \r\n  }\r\n  const isFormFieldValid = (meta: any) => !!(meta.touched && meta.error)\r\n  const getFormErrorMessage = (meta: any) => {\r\n    return (isFormFieldValid(meta) && <small className=\"p-error\">{meta.error}</small>)\r\n  } \r\n  if (organizations)\r\n  return (\r\n  <>\r\n    <div className=\"login-body\">\r\n      <div className=\"login-wrapper\">\r\n        <div className=\"login-panel\">\r\n          <img src={logo} className=\"logo_reg\" alt=\"logo\"></img>\r\n          <div className=\"login-form\">\r\n            <h2>Регистрация</h2>            \r\n            <Form onSubmit={onSubmit} initialValues={{name: '', email: '', password: '', password_confirmation: '', organization: null, phone_number: ''}} \r\n              validate={validate} \r\n              render={({ handleSubmit }) => (\r\n              <form onSubmit={handleSubmit} className=\"p-fluid\" >\r\n                <Field name=\"name\" render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label p-input-icon-right\">\r\n                       <InputText id=\"name\" {...input} autoFocus className={classNames({ 'p-invalid': isFormFieldValid(meta) })} />\r\n                        <label htmlFor=\"name\" className={classNames({ 'p-error': isFormFieldValid(meta) })}>Фамилия имя отчество*</label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                )} />                \r\n                <Field name=\"email\" render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label p-input-icon-right\">\r\n                        <i className=\"pi pi-envelope\" />\r\n                        <InputText id=\"email\" {...input} className={classNames({ 'p-invalid': isFormFieldValid(meta) })} />\r\n                        <label htmlFor=\"email\" \r\n                        className={classNames({ 'p-error': isFormFieldValid(meta) })}>Email*</label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                  )} />\r\n                  <Field name=\"password\" render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label p-input-icon-right\">\r\n                        <Password id=\"password\" {...input} toggleMask className={classNames({ 'p-invalid': isFormFieldValid(meta) })}  />\r\n                        <label htmlFor=\"password\" className={classNames({ 'p-error': isFormFieldValid(meta) })}>Пароль*</label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                  )} />\r\n                  <Field name=\"password_confirmation\" render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label p-input-icon-right\">\r\n                        <Password id=\"password_confirmation\" {...input}  toggleMask className={classNames({ 'p-invalid': isFormFieldValid(meta) })}  />\r\n                        <label htmlFor=\"password_confirmation\" className={classNames({ 'p-error': isFormFieldValid(meta) })}>Еще раз пароль*</label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                  )} />\r\n                  <Field name=\"organization\" render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label\">\r\n                       <Dropdown id=\"organization\" {...input} options={organizations}\r\n                        filter showClear optionLabel=\"name\" className=\"p-inputwrapper p-inputwrapper-filled\"/>  \r\n                        <label htmlFor=\"organization\" className={classNames({ 'p-error': isFormFieldValid(meta) })}>Медорганизация*</label>                     \r\n                      </span>  \r\n                      {getFormErrorMessage(meta)}                    \r\n                    </div>\r\n                  )} />\r\n                  <Field name=\"phone\" render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label p-input-icon-right\">\r\n                        <i className=\"pi pi-phone\" />\r\n                       <InputMask id=\"phone\" {...input} mask=\"+7(999) 999-9999\"  className={classNames({ 'p-invalid': isFormFieldValid(meta) })} />\r\n                        <label htmlFor=\"phone\" className={classNames({ 'p-error': isFormFieldValid(meta) })}>Контактный номер</label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                )} />\r\n              <Button type=\"submit\" label=\"ДАЛЕЕ\" />    \r\n            </form>)}/>            \r\n          </div>\r\n        </div>  \r\n        <LoginImageDiv/>      \r\n      </div>\r\n    </div>\r\n  </>)\r\n  else return <></>\r\n}","import { FC, useContext } from 'react'\r\nimport { Field, Form } from 'react-final-form'\r\nimport { Button } from 'primereact/button'\r\nimport { Password } from 'primereact/password'\r\nimport { classNames } from 'primereact/utils'\r\nimport { Context } from '..'\r\nimport { IRouteMatch } from '../models/IRouteMatch'\r\nimport { IRouteProps } from '../models/IRouteProps'\r\nimport LoginImageDiv from '../static/LoginImageDiv'\r\nimport logo from '../images/security.png'\r\nimport { IPassRenew } from '../models/requests/IPassRenew'\r\ninterface IParams {code: string}\r\ninterface IMatch extends IRouteMatch {  \r\n  params: IParams\r\n}\r\ninterface PasswordRecoveryPageProps extends IRouteProps {  \r\n  match: IMatch  \r\n}\r\nexport const PassordRecoveryPage: FC<PasswordRecoveryPageProps> = (props: PasswordRecoveryPageProps) =>{\r\n  const {userStore} = useContext(Context)\r\n  const validate = (data: IPassRenew) => {\r\n    let errors: any = {}        \r\n    if (!data.password) {\r\n       errors.password = 'Поле <Пароль> обязательно'\r\n    } else if (data.password && data.password!==data.password_confirmation) {\r\n       errors.password_confirmation = 'пароли не совпадают'\r\n    }      \r\n    return errors\r\n  }\r\n  const isFormFieldValid = (meta: any) => !!(meta.touched && meta.error)\r\n  const getFormErrorMessage = (meta: any) => {\r\n    return (isFormFieldValid(meta) && <small className=\"p-error\">{meta.error}</small>)\r\n  }\r\n  const onSubmit = (data: IPassRenew, form: any) => {          \r\n     userStore.pwd_renew(data)       \r\n  }   \r\n  return (\r\n  <>    \r\n    <div className=\"login-body\">\r\n      <div className=\"login-wrapper\">\r\n        <div className=\"login-panel\">\r\n          <img src={logo} className='logo' alt=\"logo\"></img>\r\n          <div  className=\"login-form\" >\r\n            <h2>Восстановить пароль</h2>            \r\n            <Form onSubmit={onSubmit} initialValues={{ activation_link: props.match.params.code,password: '', password_confirmation: '' }} \r\n              validate={validate} \r\n              render={({ handleSubmit }) => (\r\n              <form  onSubmit={handleSubmit}  className=\"p-fluid\">                \r\n                  <Field name=\"password\"  render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label p-input-icon-right\">\r\n                        <Password id=\"password\" autoComplete='off' {...input} toggleMask className={classNames({ 'p-invalid': isFormFieldValid(meta) })}  />\r\n                        <label htmlFor=\"password\" className={classNames({ 'p-error': isFormFieldValid(meta) })}>Новый пароль*</label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                  )} />\r\n                  <Field name=\"password_confirmation\" render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label p-input-icon-right\">\r\n                        <Password id=\"password_confirmation\" {...input}  toggleMask className={classNames({ 'p-invalid': isFormFieldValid(meta) })}  />\r\n                        <label htmlFor=\"password_confirmation\" className={classNames({ 'p-error': isFormFieldValid(meta) })}>Еще раз пароль*</label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                  )} />\r\n              <Button type=\"submit\" label=\"ИЗМЕНИТЬ\" />               \r\n            </form>)}/>            \r\n          </div>\r\n        </div>  \r\n        <LoginImageDiv/>      \r\n      </div>\r\n    </div>\r\n  </>)\r\n}","\r\nimport { FC } from 'react';\r\nimport { IRouteMatch } from '../models/IRouteMatch';\r\nimport { IRouteProps } from '../models/IRouteProps';\r\n\r\ninterface IParams {message: string}\r\ninterface IMatch extends IRouteMatch {  \r\n  params: IParams\r\n}\r\ninterface MessagePageProps extends IRouteProps {  \r\n  match: IMatch  \r\n}\r\n\r\n\r\nexport const MessagePage: FC<MessagePageProps> = (props: MessagePageProps) => {\r\n  return (\r\n    <>\r\n      <h1>Внимание:</h1>\r\n      <div>{props.match.params.message}!</div>\r\n    </>\r\n  )\r\n}","\r\nimport { FC } from 'react'\r\nimport { IRouteMatch } from '../models/IRouteMatch'\r\nimport { IRouteProps } from '../models/IRouteProps'\r\nimport '../styles/simplePage.css'\r\nimport '../styles/root.css'\r\n\r\n\r\ninterface IMatch extends IRouteMatch {  \r\n  params: {error: string}\r\n}\r\ninterface ErrorPageProps extends IRouteProps { \r\n    match: IMatch  \r\n}\r\n\r\nexport const ErrorPage: FC<ErrorPageProps> = (props: ErrorPageProps) => {\r\n  return (\r\n    <>\r\n      <div className=\"error-body\">\r\n        <div className=\"erpage-block\">\r\n          <h1>Ошибка!</h1>\r\n          <div>{props.match.params.error}</div>\r\n        </div>\r\n      </div>  \r\n    </>\r\n  )\r\n}","import { observer } from 'mobx-react-lite'\r\nimport { useEffect } from 'react'\r\nimport { useContext } from 'react'\r\nimport { FC } from 'react'\r\nimport { Route, Switch, useHistory } from 'react-router-dom'\r\nimport { Context } from '..'\r\nimport { NoMatchPage } from '../pages/NoMatchPage'\r\nimport { AUTH_ROUTES, NON_AUTH_ROUTES, PUBLIC_ROUTES } from '../routes'\r\n\r\nconst AppRouter: FC = observer(() => {  \r\n  const history = useHistory()\r\n  const {userStore} = useContext(Context) \r\n  const token =  userStore.token()\r\n  const isAuth =  userStore.isAuth()\r\n  userStore.setHistory(history)  \r\n  useEffect(()=>{\r\n    if (token.length>0 && !isAuth) {\r\n      userStore.checkAuth()\r\n    }   \r\n  },[token, userStore, isAuth])  \r\n  const chech_routes =  userStore.isAuth() || (token.length>0) ?  AUTH_ROUTES : NON_AUTH_ROUTES    \r\n  return (\r\n    <Switch> \r\n      { chech_routes.map(\r\n        ({path, Component})=><Route key={path} path={path} component={Component} exact/>)\r\n      }          \r\n      { PUBLIC_ROUTES.map(\r\n        ({path, Component})=><Route key={path} path={path} component={Component} exact/>)\r\n      }\r\n      <Route component={NoMatchPage} />                         \r\n    </Switch>     \r\n  )\r\n})\r\nexport default AppRouter\r\n","import {FC} from 'react'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport AppRouter  from './components/AppRouter'\r\nimport './styles/root.css'\r\nimport './styles/primereact.css'\r\nimport 'primeicons/primeicons.css'\r\nimport 'primeflex/primeflex.css'\r\n\r\n\r\nconst App: FC =() => {    \r\n  return (\r\n    <BrowserRouter>\r\n      <AppRouter/>\r\n    </BrowserRouter>  \r\n  )  \r\n}\r\n\r\nexport default App\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport Address from \"../models/FormsData/Address\"\r\nimport { checkFieldNullFlavor, INullFlavorR } from \"../models/INullFlavor\"\r\nimport { IReference } from \"../models/IReference\"\r\nimport { DEFAULT_ADDRESS, IAddressR } from \"../models/requests/IAddressR\"\r\nimport { IFiasItem } from \"../models/responses/IFiasItem\"\r\nimport FiasService from \"../services/FiasService\"\r\nimport { HOME_REGION_CODE } from \"../utils/defaults\"\r\nimport { removeEmpty } from \"../utils/functions\"\r\nexport default class AddressStore {\r\n  private _address: Address\r\n  private _isLoding: boolean\r\n  private _history: any\r\n  private _regionsOptions: IReference[] | undefined\r\n  private _fiasOptions: IFiasItem[] | undefined\r\n  private _dialogVisible: boolean\r\n  private _manualMode: boolean\r\n  private _onAddrComplete?: (() => void) | undefined\r\n\r\n  constructor() {\r\n    this._isLoding = false\r\n    this._address = new Address(DEFAULT_ADDRESS)\r\n    this._dialogVisible = false\r\n    this._manualMode = false\r\n    makeAutoObservable(this)\r\n  }\r\n\r\n  fetchRegionOptions() {\r\n    const _regions = localStorage.getItem(\"Regions\")\r\n    if (_regions) {\r\n      this._regionsOptions = JSON.parse(_regions) as IReference[]\r\n      this.defaultRegion()\r\n    } else\r\n      FiasService.getRegions()\r\n        .then((response) => {\r\n          this._regionsOptions = response.data.data.map((item) => {\r\n            return { code: item.code?.substr(0, 2), name: item.streetAddressLine } as IReference\r\n          })\r\n          localStorage.setItem(\"Regions\", JSON.stringify(this._regionsOptions))\r\n          this.defaultRegion()\r\n        })\r\n        .finally(() => (this._isLoding = false))\r\n  }\r\n\r\n  async searchBar(query: string, regionID = HOME_REGION_CODE as string) {\r\n    this._isLoding = true\r\n    try {\r\n      const response = await FiasService.searchBar(query, regionID)\r\n      if (response.data.data) this._fiasOptions = response.data.data\r\n      else this._fiasOptions = []\r\n      return this._fiasOptions\r\n    } catch (e) {\r\n      console.log(e)\r\n      return []\r\n    } finally {\r\n      this._isLoding = false\r\n    }\r\n  }\r\n  defaultRegion() {\r\n    return this._regionsOptions?.find((item) => item.code === HOME_REGION_CODE)\r\n  }\r\n  async getChildItems(parent: string, level: string, query = \"\") {\r\n    this._isLoding = true\r\n    try {\r\n      const response = await FiasService.getChildItems(parent, level, query)\r\n      if (response.data.data)\r\n        this._fiasOptions = response.data.data.map((item) => {\r\n          if (item.level !== \"building\") item.name = `${item.name} ${item.shortname}`\r\n          return item\r\n        })\r\n      else this._fiasOptions = []\r\n      return this._fiasOptions\r\n    } finally {\r\n      this._isLoding = false\r\n    }\r\n  }\r\n\r\n  // Returned full streetAddressLine include flat and postal code to save in IAddress\r\n  // Возвращает полный строковый адрес, включая квартиру и почтовы код,\r\n  // обычно не используемые в строке поиска, для сохранения в POJO\r\n\r\n  streetAddressLine(): string {\r\n    const addr = this._address\r\n    return `${addr.streetAddressLine}${addr.flat ? \", \" + addr.flat : \"\"}${\r\n      addr.postalCode ? \", \" + addr.postalCode : \"\"\r\n    }`\r\n  }\r\n  createNullFlavors(): INullFlavorR[] {\r\n    const addr = this._address\r\n    //check postalcode\r\n    checkFieldNullFlavor(\"postalCode\", addr.postalCode, addr.nullFlavors)\r\n    //check aoGUID\r\n    checkFieldNullFlavor(\"aoGUID\", addr.aoGUID, addr.nullFlavors)\r\n    //check houseGUID\r\n    checkFieldNullFlavor(\"houseGUID\", addr.houseGUID, addr.nullFlavors)\r\n    return addr.null_flavors_attributes()\r\n  }\r\n  // Check address for FIAS requarens\r\n  isNotStrictly(): boolean {\r\n    const addr = this._address\r\n    return !addr.aoGUID || !addr.houseGUID || !addr.postalCode\r\n  }\r\n  // Returned POJO address data\r\n  // Возвращает POJO объект адреса\r\n  addressProps(): IAddressR {\r\n    const addr = this._address\r\n    const _result = {\r\n      id: addr.id,\r\n      state: addr.state?.code,\r\n      streetAddressLine: this.streetAddressLine(),\r\n      aoGUID: addr.aoGUID,\r\n      houseGUID: addr.houseGUID,\r\n      postalCode: addr.postalCode,\r\n      house_number: addr.housenum,\r\n      struct_number: addr.strucnum,\r\n      building_number: addr.buildnum,\r\n      flat_number: addr.flat,\r\n      parent_guid: addr.parent,\r\n      null_flavors_attributes: [...this.createNullFlavors()],\r\n    } as IAddressR\r\n    return removeEmpty(_result)\r\n  }\r\n\r\n  set history(history: any) {\r\n    this._history = history\r\n  }\r\n  get history() {\r\n    return this._history\r\n  }\r\n\r\n  set isLoading(isLoding: boolean) {\r\n    this._isLoding = isLoding\r\n  }\r\n  get isLoading() {\r\n    return this._isLoding\r\n  }\r\n  get address() {\r\n    return this._address\r\n  }\r\n  set address(value: Address) {\r\n    this._address = value\r\n  }\r\n  get regionsOptions() {\r\n    return this._regionsOptions\r\n  }\r\n  get fiasOptions() {\r\n    return this._fiasOptions\r\n  }\r\n  clear() {\r\n    if (this._address === undefined) return\r\n    this._address.postalCode = undefined\r\n    this._address.district = undefined\r\n    this._address.city = undefined\r\n    this._address.houseGUID = undefined\r\n    this._address.aoGUID = undefined\r\n    this._address.street = undefined\r\n    this._address.town = undefined\r\n    this._address.housenum = undefined\r\n    this._address.buildnum = undefined\r\n    this._address.strucnum = undefined\r\n    this._address.streetAddressLine = this._address.state?.name + \", \" || \"\"\r\n  }\r\n  get dialogVisible(): boolean {\r\n    return this._dialogVisible\r\n  }\r\n  set dialogVisible(value: boolean) {\r\n    this._dialogVisible = value\r\n  }\r\n\r\n  get manualMode(): boolean {\r\n    return this._manualMode\r\n  }\r\n  set manualMode(value: boolean) {\r\n    this._manualMode = value\r\n  }\r\n\r\n  get onAddrComplete(): (() => void) | undefined {\r\n    return this._onAddrComplete\r\n  }\r\n  set onAddrComplete(value: (() => void) | undefined) {\r\n    this._onAddrComplete = value\r\n  }\r\n}\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport { ToastMessageType } from \"primereact/toast\"\r\n\r\nexport default class LayoutStore {\r\n  private _isTabletOrMobile: boolean\r\n  private _isLayoutStaticInactive: boolean\r\n  private _isRightSidebarActive: boolean\r\n  private _isProfileMenuActive: boolean\r\n  private _isNotificationsMenuActive: boolean\r\n  private _isLoading: boolean\r\n  private _message: ToastMessageType | null\r\n\r\n  constructor() {\r\n    this._isTabletOrMobile = false\r\n    this._isLayoutStaticInactive = false\r\n    this._isRightSidebarActive = false\r\n    this._isProfileMenuActive = false\r\n    this._isNotificationsMenuActive = false\r\n    this._isLoading = false\r\n    this._message = null\r\n    makeAutoObservable(this)\r\n  }\r\n  setTabletOrMobile(visible: boolean) {\r\n    this._isTabletOrMobile = visible\r\n  }\r\n  tabletOrMobile() {\r\n    return this._isTabletOrMobile\r\n  }\r\n  sideBarToggle() {\r\n    this._isLayoutStaticInactive = !this._isLayoutStaticInactive\r\n  }\r\n  setLayoutStaticInactive(isLayoutStaticInactive: boolean) {\r\n    this._isLayoutStaticInactive = isLayoutStaticInactive\r\n  }\r\n  layoutStaticInactive() {\r\n    return this._isLayoutStaticInactive\r\n  }\r\n  rightSideBarActive() {\r\n    return this._isRightSidebarActive\r\n  }\r\n  setRightSideBarActive(rightSidebarActive: boolean) {\r\n    this._isRightSidebarActive = rightSidebarActive\r\n  }\r\n  profileMenuActive() {\r\n    return this._isProfileMenuActive\r\n  }\r\n  setProfileMenuActive(profileMenuActive: boolean) {\r\n    this._isProfileMenuActive = profileMenuActive\r\n  }\r\n  notificationsMenuActive() {\r\n    return this._isNotificationsMenuActive\r\n  }\r\n  setNotificationsMenuActive(notificationsMenuActive: boolean) {\r\n    this._isNotificationsMenuActive = notificationsMenuActive\r\n  }\r\n  get isLoading(): boolean {\r\n    return this._isLoading\r\n  }\r\n  set isLoading(value: boolean) {\r\n    this._isLoading = value\r\n  }\r\n\r\n  get message(): ToastMessageType | null {\r\n    return this._message\r\n  }\r\n  set message(value: ToastMessageType | null) {\r\n    this._message = value\r\n  }\r\n}\r\n","import { autorun, makeAutoObservable } from \"mobx\"\r\nimport { ISuggestions } from \"../models/ISuggestions\"\r\nimport { DISEASE_DEADTH_KIND } from \"../NSI/1.2.643.5.1.13.13.99.2.21\"\r\nimport {\r\n  AUTHENTICATOR_SUG,\r\n  AUTHOR_SUG,\r\n  BASIS_DERMINING_SUG,\r\n  CERT_DEATH_THIME_SUG,\r\n  CERT_TYPE_SUG,\r\n  CHILD_WEIGHT_SUG,\r\n  DEATH_AREA_SUG,\r\n  DEATH_KINDS_SUG,\r\n  DEATH_PLACE_SUG,\r\n  DEATH_PLACE_TYPE_SUG,\r\n  DEFAULT_CERT_SUGGESTIONS,\r\n  EDUCATION_LEVEL_SUG,\r\n  EST_MEDIC_SUG,\r\n  EXT_REASON_SUG,\r\n  EXT_REASON_TIME_SUG,\r\n  IDNUMBER_SUG,\r\n  IDSERIES_SUG,\r\n  IORGCODE_SUG,\r\n  IORGDATE_SUG,\r\n  IORGNAME_SUG,\r\n  KIND_DEATH_REASON_SUG,\r\n  LEGAL_AUTHENTICATOR_SUG,\r\n  LIFE_AREA_SUG,\r\n  LIFE_PLACE_SUG,\r\n  MARITAL_STATUS_SUG,\r\n  MOTHER_ADDRESS_SUG,\r\n  MOTHER_BIRTHDAY_SUG,\r\n  MOTHER_FIO_SUG,\r\n  NUMBER_PREGNANCY_SUG,\r\n  OMS_SUG,\r\n  PARTIPICIPANT_DATE_SUG,\r\n  PARTIPICIPANT_FIO_SUG,\r\n  PARTIPICIPANT_IDENTITY_SUG,\r\n  PATIENT_BIRTHDAY_SUG,\r\n  PATIENT_GENDER_SUG,\r\n  PERSON_NAME_SUG,\r\n  PREGNANCY_CONNECTION_SUG,\r\n  REASON_A_SUG,\r\n  REASON_A_TIME_SUG,\r\n  REASON_B_SUG,\r\n  REASON_B_TIME_SUG,\r\n  REASON_C_SUG,\r\n  REASON_C_TIME_SUG,\r\n  REASON_D_SUG,\r\n  REASON_D_TIME_SUG,\r\n  SNILS_SUG,\r\n  SOCIAL_STATUS_SUG,\r\n  TERMS_PREGNANCY_SUG,\r\n  TRAFFFIC_ACCIDENT_SUG,\r\n} from \"../utils/defaults\"\r\nimport CertificateStore from \"./certificateStore\"\r\n\r\nexport default class SuggestionsStore {\r\n  private _cStore: CertificateStore\r\n  private _suggestions: ISuggestions[]\r\n  private _identified: boolean\r\n  private _fromRelatives: boolean\r\n  disposers: (() => void)[]\r\n  constructor(cStore: CertificateStore) {\r\n    this._cStore = cStore\r\n    this.disposers = []\r\n    this._identified = true\r\n    this._fromRelatives = false\r\n    this._suggestions = DEFAULT_CERT_SUGGESTIONS\r\n    makeAutoObservable(this)\r\n    // проверки полноты заполнения свидетельства\r\n    // работают как реакции на изменение данных\r\n    this.disposers[0] = autorun(() => {\r\n      this._suggestions[CERT_TYPE_SUG].done = !!this._cStore.cert.certType\r\n    })\r\n\r\n    this.disposers[1] = autorun(() => {\r\n      this._suggestions[PATIENT_GENDER_SUG].done = !!this._cStore.cert.patient.gender\r\n    })\r\n    this.disposers[2] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const patient = this._cStore.cert.patient\r\n      const isBirthDay =\r\n        !patient.birth_date &&\r\n        patient.nullFlavors.findIndex((element) => {\r\n          return element.parent_attr === \"birth_date\" && !element._destroy\r\n        }) === -1\r\n      this._suggestions[PATIENT_BIRTHDAY_SUG].done = !isBirthDay\r\n    })\r\n    this.disposers[3] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const cert = this._cStore.cert\r\n      const isDeathDay =\r\n        !cert.deathDatetime && cert.nullFlavors.findIndex((element) => element.parent_attr === \"death_datetime\") === -1\r\n      this._suggestions[CERT_DEATH_THIME_SUG].done = !isDeathDay\r\n    })\r\n    this.disposers[4] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const person = this._cStore.cert.patient.person\r\n      const isSNILS =\r\n        (!person && this._identified) ||\r\n        (person &&\r\n          (!person.SNILS || person.SNILS.length < 14) &&\r\n          person.nullFlavors.findIndex((element) => element.parent_attr === \"SNILS\") === -1)\r\n      this._suggestions[SNILS_SUG].done = !isSNILS\r\n    })\r\n    this.disposers[5] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const oms = this._cStore.cert.policyOMS\r\n      const isOMS =\r\n        (!oms || oms.length < 7) &&\r\n        this._cStore.cert.nullFlavors.findIndex((element) => element.parent_attr === \"policy_OMS\") === -1\r\n      this._suggestions[OMS_SUG].done = !isOMS\r\n    })\r\n    this.disposers[6] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const patient = this._cStore.cert.patient\r\n      const identity = patient.identity\r\n      const code = identity?.issueOrgCode\r\n      const isCODE =\r\n        (!identity && patient.nullFlavors.findIndex((element) => element.parent_attr === \"identity\") === -1) ||\r\n        (identity &&\r\n          (!code || code.length < 1) &&\r\n          identity.nullFlavors.findIndex((element) => element.parent_attr === \"issueOrgCode\") === -1)\r\n      this._suggestions[IORGCODE_SUG].done = !isCODE\r\n    })\r\n    this.disposers[7] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const patient = this._cStore.cert.patient\r\n      const isIORGDate =\r\n        (!patient.identity && patient.nullFlavors.findIndex((element) => element.parent_attr === \"identity\") === -1) ||\r\n        (patient.identity && !patient.identity?.issueOrgDate)\r\n      this._suggestions[IORGDATE_SUG].done = !isIORGDate\r\n    })\r\n    this.disposers[8] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const patient = this._cStore.cert.patient\r\n      const isIORGName =\r\n        (!patient.identity && patient.nullFlavors.findIndex((element) => element.parent_attr === \"identity\") === -1) ||\r\n        (patient.identity && (!patient.identity?.issueOrgName || patient.identity.issueOrgName.length < 15))\r\n      this._suggestions[IORGNAME_SUG].done = !isIORGName\r\n    })\r\n    this.disposers[9] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const patient = this._cStore.cert.patient\r\n      const identity = patient.identity\r\n      const series = patient.identity?.series\r\n      const isIDSeries =\r\n        (!identity && patient.nullFlavors.findIndex((element) => element.parent_attr === \"identity\") === -1) ||\r\n        (identity &&\r\n          (!series || series.length < 1) &&\r\n          identity.nullFlavors.findIndex((element) => element.parent_attr === \"series\") === -1)\r\n      this._suggestions[IDSERIES_SUG].done = !isIDSeries\r\n    })\r\n    this.disposers[10] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const patient = this._cStore.cert.patient\r\n      const isIDNumber =\r\n        (!patient.identity &&\r\n          patient.nullFlavors.findIndex((element) => element.parent_attr === \"identity\" && !element._destroy) === -1) ||\r\n        (patient.identity && !patient.identity.number)\r\n      this._suggestions[IDNUMBER_SUG].done = !isIDNumber\r\n    })\r\n    this.disposers[11] = autorun(() => {\r\n      const person = this._cStore.cert.patient.person\r\n      const isLifeArea =\r\n        (!person && this._identified) ||\r\n        (person &&\r\n          (!person.address ||\r\n            !person.address.streetAddressLine ||\r\n            person.address.streetAddressLine.split(\",\").length < 3) &&\r\n          person.nullFlavors.findIndex((element) => element.parent_attr === \"address\") === -1)\r\n      this._suggestions[LIFE_PLACE_SUG].done = !isLifeArea\r\n    })\r\n    this.disposers[12] = autorun(() => {\r\n      const isDeathArea =\r\n        (!this._cStore.cert.deathAddr ||\r\n          !this._cStore.cert.deathAddr.streetAddressLine ||\r\n          this._cStore.cert.deathAddr.streetAddressLine.split(\",\").length < 3) &&\r\n        this._cStore.cert.nullFlavors.findIndex((element) => element.parent_attr === \"death_addr\") === -1\r\n      this._suggestions[DEATH_PLACE_SUG].done = !isDeathArea\r\n    })\r\n    this.disposers[13] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const isDeathAreaType =\r\n        this._cStore.cert.deathAreaType === undefined &&\r\n        this._cStore.cert.nullFlavors.findIndex((element) => element.parent_attr === \"death_area_type\") === -1\r\n      this._suggestions[DEATH_AREA_SUG].done = !isDeathAreaType\r\n    })\r\n    this.disposers[14] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const isLifeAreaType =\r\n        this._cStore.cert.lifeAreaType === undefined &&\r\n        this._cStore.cert.nullFlavors.findIndex((element) => element.parent_attr === \"life_area_type\") === -1\r\n      this._suggestions[LIFE_AREA_SUG].done = !isLifeAreaType\r\n    })\r\n    this.disposers[15] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[DEATH_PLACE_TYPE_SUG].done = this._cStore.cert.deathPlace !== undefined\r\n    })\r\n    this.disposers[16] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const childInfo = this._cStore.cert.childInfo\r\n      const isTERMS_PREGNANCY =\r\n        childInfo === undefined ||\r\n        childInfo.termPregnancy !== undefined ||\r\n        childInfo.nullFlavors.findIndex((element) => element.parent_attr === \"term_pregnancy\") !== -1\r\n      this._suggestions[TERMS_PREGNANCY_SUG].done = isTERMS_PREGNANCY\r\n    })\r\n    this.disposers[17] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const childInfo = this._cStore.cert.childInfo\r\n      const isCHILD_WEIGHT = childInfo === undefined || childInfo.weight !== undefined\r\n      this._suggestions[CHILD_WEIGHT_SUG].done = isCHILD_WEIGHT\r\n    })\r\n    this.disposers[18] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const childInfo = this._cStore.cert.childInfo\r\n      const isNUMBER_PREGNANCY = !childInfo || !!childInfo.whichAccount\r\n      this._suggestions[NUMBER_PREGNANCY_SUG].done = isNUMBER_PREGNANCY\r\n    })\r\n    this.disposers[19] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const childInfo = this._cStore.cert.childInfo\r\n      const isMOTHER_FIO =\r\n        !childInfo ||\r\n        (!!childInfo.relatedSubject &&\r\n          (childInfo.relatedSubject.nullFlavors.findIndex((item) => item.parent_attr === \"person_name\") !== -1 ||\r\n            !!childInfo.relatedSubject.fio))\r\n      this._suggestions[MOTHER_FIO_SUG].done = isMOTHER_FIO\r\n    })\r\n    this.disposers[20] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const childInfo = this._cStore.cert.childInfo\r\n      const isMOTHER_BIRTHDAY =\r\n        !childInfo ||\r\n        (!!childInfo.relatedSubject &&\r\n          (childInfo.relatedSubject.nullFlavors.findIndex((item) => item.parent_attr === \"birthTime\") !== -1 ||\r\n            !!childInfo.relatedSubject.birthTime))\r\n      this._suggestions[MOTHER_BIRTHDAY_SUG].done = isMOTHER_BIRTHDAY\r\n    })\r\n    this.disposers[21] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const childInfo = this._cStore.cert.childInfo\r\n      const isMOTHER_ADDRESS =\r\n        !childInfo ||\r\n        (!!childInfo.relatedSubject &&\r\n          (childInfo.relatedSubject.nullFlavors.findIndex((item) => item.parent_attr === \"addr\") !== -1 ||\r\n            (!!childInfo.relatedSubject.addr && !!childInfo.relatedSubject.addr.houseGUID)))\r\n      this._suggestions[MOTHER_ADDRESS_SUG].done = isMOTHER_ADDRESS\r\n    })\r\n    this.disposers[22] = autorun(() => {\r\n      this._suggestions[MARITAL_STATUS_SUG].done = !!this._cStore.cert && !!this._cStore.cert.maritalStatus\r\n    })\r\n    this.disposers[23] = autorun(() => {\r\n      this._suggestions[EDUCATION_LEVEL_SUG].done = !!this._cStore.cert && !!this._cStore.cert.educationLevel\r\n    })\r\n    this.disposers[24] = autorun(() => {\r\n      this._suggestions[SOCIAL_STATUS_SUG].done = !!this._cStore.cert && !!this._cStore.cert.socialStatus\r\n    })\r\n    this.disposers[25] = autorun(() => {\r\n      this._suggestions[DEATH_KINDS_SUG].done = !!this._cStore.cert && !!this._cStore.cert.deathKind\r\n    })\r\n    this.disposers[26] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[KIND_DEATH_REASON_SUG].done =\r\n        (!!this._cStore.cert.deathKind && this._cStore.cert.deathKind === DISEASE_DEADTH_KIND) ||\r\n        (!!this._cStore.cert.extReasonTime && !!this._cStore.cert.extReasonDescription)\r\n    })\r\n    this.disposers[27] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[EST_MEDIC_SUG].done = !!this._cStore.cert.establishedMedic\r\n    })\r\n    this.disposers[28] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[BASIS_DERMINING_SUG].done = !!this._cStore.cert.basisDetermining\r\n    })\r\n    this.disposers[29] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[REASON_A_SUG].done = !!this._cStore.cert.reasonA?.diagnosis\r\n    })\r\n    this.disposers[30] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[REASON_A_TIME_SUG].done =\r\n        !!this._cStore.cert.reasonA?.effectiveTime ||\r\n        this._cStore.cert.reasonA?.nullFlavors.findIndex(\r\n          (item) => item.parent_attr === \"effective_time\" && !item._destroy\r\n        ) !== -1\r\n    })\r\n    this.disposers[31] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[REASON_B_SUG].done =\r\n        !!this._cStore.cert.reasonB?.diagnosis ||\r\n        this._cStore.cert.nullFlavors.findIndex((item) => item.parent_attr === \"b_reason\" && !item._destroy) !== -1\r\n    })\r\n    this.disposers[32] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[REASON_B_TIME_SUG].done =\r\n        !this._cStore.cert.reasonB ||\r\n        !!this._cStore.cert.reasonB.effectiveTime ||\r\n        this._cStore.cert.reasonB?.nullFlavors.findIndex(\r\n          (item) => item.parent_attr === \"effective_time\" && !item._destroy\r\n        ) !== -1\r\n    })\r\n    this.disposers[33] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[REASON_C_SUG].done =\r\n        !!this._cStore.cert.reasonC?.diagnosis ||\r\n        this._cStore.cert.nullFlavors.findIndex((item) => item.parent_attr === \"c_reason\" && !item._destroy) !== -1\r\n    })\r\n    this.disposers[34] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[REASON_C_TIME_SUG].done =\r\n        !this._cStore.cert.reasonC ||\r\n        !!this._cStore.cert.reasonC.effectiveTime ||\r\n        this._cStore.cert.reasonC?.nullFlavors.findIndex(\r\n          (item) => item.parent_attr === \"effective_time\" && !item._destroy\r\n        ) !== -1\r\n    })\r\n    this.disposers[35] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[REASON_D_SUG].done =\r\n        this._cStore.cert.reasonD?.diagnosis !== undefined ||\r\n        this._cStore.cert.nullFlavors.findIndex((item) => item.parent_attr === \"d_reason\" && !item._destroy) !== -1\r\n    })\r\n    this.disposers[36] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[REASON_D_TIME_SUG].done =\r\n        !this._cStore.cert.reasonD ||\r\n        !!this._cStore.cert.reasonD.effectiveTime ||\r\n        this._cStore.cert.reasonD?.nullFlavors.findIndex(\r\n          (item) => item.parent_attr === \"effective_time\" && !item._destroy\r\n        ) !== -1\r\n    })\r\n    this.disposers[37] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[TRAFFFIC_ACCIDENT_SUG].done =\r\n        !!this._cStore.cert.trafficAccident ||\r\n        this._cStore.cert.nullFlavors.findIndex((item) => item.parent_attr === \"traffic_accident\" && !item._destroy) !==\r\n          -1\r\n    })\r\n    this.disposers[38] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[PREGNANCY_CONNECTION_SUG].done =\r\n        !!this._cStore.cert.pregnancyConnection ||\r\n        this._cStore.cert.nullFlavors.findIndex(\r\n          (item) => item.parent_attr === \"pregnancy_connection\" && !item._destroy\r\n        ) !== -1\r\n    })\r\n    this.disposers[39] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[AUTHOR_SUG].done = !!this._cStore.cert.author\r\n    })\r\n    this.disposers[40] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[AUTHENTICATOR_SUG].done = !!this._cStore.cert.authenticator\r\n    })\r\n    this.disposers[41] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[LEGAL_AUTHENTICATOR_SUG].done = !!this._cStore.cert.legalAuthenticator\r\n    })\r\n    this.disposers[42] = autorun(() => {\r\n      this._identified =\r\n        !!this._cStore.cert.patient.person ||\r\n        this._cStore.cert.patient.nullFlavors.findIndex((el) => el.parent_attr === \"person\" && !el._destroy) === -1\r\n    })\r\n    this.disposers[43] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._fromRelatives = this._identified && this._cStore.cert.patient && !this._cStore.cert.patient.identity\r\n    })\r\n    this.disposers[44] = autorun(() => {\r\n      const person = this._cStore.cert.patient?.person\r\n      const fio = person?.fio\r\n      const isPersonNameSug =\r\n        (!person && this._identified) ||\r\n        (!!fio &&\r\n          (fio.family.trim().length === 0 ||\r\n            fio.given_1.trim().length === 0 ||\r\n            (!!fio.given_2 && fio.given_2.trim().length === 0)))\r\n      this._suggestions[PERSON_NAME_SUG].done = !isPersonNameSug\r\n    })\r\n  }\r\n  dispose() {\r\n    // So, to avoid subtle memory issues, always call the\r\n    // disposers when the reactions are no longer needed.\r\n    this.disposers.forEach((disposer) => disposer())\r\n  }\r\n  redSuggestionsCount() {\r\n    return this.suggestions.reduce((result, item, index) => {\r\n      if (\r\n        !(\r\n          item.done ||\r\n          index in\r\n            [\r\n              EXT_REASON_SUG,\r\n              EXT_REASON_TIME_SUG,\r\n              PARTIPICIPANT_FIO_SUG,\r\n              PARTIPICIPANT_DATE_SUG,\r\n              PARTIPICIPANT_IDENTITY_SUG,\r\n            ]\r\n        )\r\n      )\r\n        ++result\r\n      return result\r\n    }, 0)\r\n  }\r\n  get identified(): boolean {\r\n    return this._identified\r\n  }\r\n  set identified(value: boolean) {\r\n    this._identified = value\r\n  }\r\n  get fromRelatives(): boolean {\r\n    return this._fromRelatives\r\n  }\r\n  set fromRelatives(value: boolean) {\r\n    this._fromRelatives = value\r\n  }\r\n  get suggestions(): ISuggestions[] {\r\n    return this._suggestions\r\n  }\r\n}\r\n","export default class TemporaryIDStore {\r\n  private _lastCertificateID: number\r\n  private _lastDeathReasonID: number\r\n  private _lastProcedureID: number\r\n\r\n  constructor() {\r\n    this._lastCertificateID = -1\r\n    this._lastDeathReasonID = -1\r\n    this._lastProcedureID = -1\r\n  }\r\n  get lastCertificateID(): number {\r\n    return this._lastCertificateID--\r\n  }\r\n  get lastDeathReasonID(): number {\r\n    return this._lastDeathReasonID--\r\n  }\r\n  get lastProcedureID(): number {\r\n    return this._lastProcedureID--\r\n  }\r\n}\r\n","import $api from \"../http\"\r\nimport { AxiosResponse } from \"axios\"\r\nimport { AuthResponse } from \"../models/responses/AuthResponse\"\r\nimport { IRegistration } from \"../models/requests/IRegistration\"\r\nimport { IPassRenew } from \"../models/requests/IPassRenew\"\r\nexport default class AuthService {\r\n  static async login(email: string, password: string): Promise<AxiosResponse<AuthResponse>> {\r\n    return $api.post(\"auth/login\", { email, password })\r\n  }\r\n  static async registration(user: IRegistration): Promise<AxiosResponse<AuthResponse>> {\r\n    return $api.post(\"auth/registration\", { user })\r\n  }\r\n  static async renew_link(email: string): Promise<AxiosResponse<void>> {\r\n    return $api.post(\"auth/renew_link\", { email })\r\n  }\r\n  static async pwd_renew(user: IPassRenew): Promise<AxiosResponse<void>> {\r\n    return $api.post(\"auth/pwd_renew\", { ...user })\r\n  }\r\n  static async logout(): Promise<void> {\r\n    return $api.post(\"auth/logout\")\r\n  }\r\n}\r\n","import { createContext } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport AddressStore from './store/addressStore'\r\nimport CertificateStore from './store/certificateStore'\r\nimport LayoutStore from './store/layoutStore'\r\nimport SuggestionsStore from './store/suggestionsStore'\r\nimport TemporaryIDStore from './store/temporaryIDStore'\r\nimport UserStore from './store/userStore'\r\ninterface IState{\r\n  userStore: UserStore\r\n  layoutStore: LayoutStore\r\n  certificateStore: CertificateStore\r\n  suggestionsStore: SuggestionsStore\r\n  addressStore: AddressStore \r\n  temporaryIDStore: TemporaryIDStore \r\n}\r\nconst userStore = new UserStore()\r\nconst layoutStore = new LayoutStore()\r\nconst certificateStore = new CertificateStore()\r\nconst suggestionsStore = new SuggestionsStore(certificateStore)\r\nconst addressStore = new AddressStore()\r\nconst temporaryIDStore = new TemporaryIDStore()\r\naddressStore.fetchRegionOptions()\r\nexport const Context = createContext<IState>({userStore, layoutStore, addressStore, certificateStore, temporaryIDStore,suggestionsStore}) \r\nReactDOM.render(  \r\n  <Context.Provider value={{userStore, layoutStore, addressStore, certificateStore, temporaryIDStore, suggestionsStore}} >\r\n    <App />  \r\n  </Context.Provider> , \r\n  document.getElementById('root')\r\n)\r\n\r\n\r\n","import axios from \"axios\"\r\nimport { makeAutoObservable } from \"mobx\"\r\nimport { API_URL } from \"../http\"\r\nimport { IUser } from \"../models/IUser\"\r\nimport { IPassRenew } from \"../models/requests/IPassRenew\"\r\nimport { IRegistration } from \"../models/requests/IRegistration\"\r\nimport { AuthResponse } from \"../models/responses/AuthResponse\"\r\nimport { IUserInfo } from \"../models/responses/IUserInfo\"\r\nimport AuthService from \"../services/AuthService\"\r\nimport UsersService from \"../services/UsersService\"\r\nimport { HOME_ROUTE, LOGIN_ROUTE } from \"../utils/consts\"\r\n\r\nexport default class UserStore {\r\n  private _isAuth: boolean\r\n  private _user: IUser\r\n  private _isLoding: boolean\r\n  private _history: any\r\n  private _token: string\r\n  private _userInfo?: IUserInfo\r\n\r\n  constructor() {\r\n    this._user = {} as IUser\r\n    this._isLoding = false\r\n    this._token = localStorage.getItem(\"token\") || \"\"\r\n    this._isAuth = this._token !== \"\"\r\n    if (this._isAuth) this.checkAuth()\r\n    makeAutoObservable(this)\r\n  }\r\n\r\n  setAuth(isAuth: boolean) {\r\n    this._isAuth = isAuth\r\n  }\r\n  isAuth() {\r\n    return this._isAuth\r\n  }\r\n  setUser(user: IUser) {\r\n    this._user = user\r\n  }\r\n  user() {\r\n    return this._user\r\n  }\r\n  setLoading(isLoding: boolean) {\r\n    this._isLoding = isLoding\r\n  }\r\n  isLoading() {\r\n    return this._isLoding\r\n  }\r\n  setHistory(history: any) {\r\n    this._history = history\r\n  }\r\n\r\n  setToken(access_token: string) {\r\n    this._token = access_token\r\n  }\r\n  token() {\r\n    return this._token\r\n  }\r\n  async login(email: string, password: string) {\r\n    AuthService.login(email, password)\r\n      .then((response) => {\r\n        if (response.data) {\r\n          localStorage.setItem(\"token\", response.data.tokens.access)\r\n          this.setAuth(true)\r\n          this.setUser(response.data.user)\r\n          this._history.push(HOME_ROUTE)\r\n        } else {\r\n          this._history.push(\"/error/Ошибка авторизации: неверный ответ API-сервера\")\r\n        }\r\n      })\r\n      .catch((reason) => {\r\n        this._history.push(\"/error/Auth1:\" + reason.message)\r\n      })\r\n  }\r\n  async registration(user: IRegistration) {\r\n    try {\r\n      await AuthService.registration(user)\r\n      this._history.push(\r\n        \"/message/Ваша заявка направлена администратору ресурса для активации. Письмо с результатом, будет выслано на Ваш email\"\r\n      )\r\n    } catch (e: any) {\r\n      this._history.push(\"/error/\" + e.message)\r\n    }\r\n  }\r\n  async pwd_renew(user: IPassRenew) {\r\n    try {\r\n      await AuthService.pwd_renew(user)\r\n      this._history.push(\"/message/Пароль был успешно изменен\")\r\n    } catch (e: any) {\r\n      this._history.push(\"/error/\" + e.message)\r\n      return false\r\n    }\r\n  }\r\n  async renew_link(email: string) {\r\n    try {\r\n      await AuthService.renew_link(email)\r\n      this._history.push(\"/message/Вам в почту направлено письмо, со ссылкой на страницу изменения пароля\")\r\n    } catch (e: any) {\r\n      this._history.push(\"/error/\" + e.message)\r\n      return false\r\n    }\r\n  }\r\n  async logout() {\r\n    try {\r\n      await AuthService.logout()\r\n      this.setAuth(false)\r\n      localStorage.removeItem(\"token\")\r\n      this.setToken(\"\")\r\n      this.setUser({} as IUser)\r\n      this._userInfo = undefined\r\n      this._history.push(LOGIN_ROUTE)\r\n    } catch (e: any) {\r\n      this._history.push(\"/error/\" + e.message)\r\n    }\r\n  }\r\n  async checkAuth() {\r\n    try {\r\n      this.setLoading(true)\r\n      const response = await axios.get<AuthResponse>(`${API_URL}auth/refresh`, { withCredentials: true })\r\n      localStorage.setItem(\"token\", response.data.tokens.access)\r\n      this.setToken(response.data.tokens.access)\r\n      this.setAuth(true)\r\n      this.setUser(response.data.user)\r\n    } catch (e: any) {\r\n      if (e.message?.includes(\"401\")) {\r\n        this._isAuth = false\r\n        this._token = \"\"\r\n        localStorage.removeItem(\"token\")\r\n        this._user = {} as IUser\r\n        this._history.push(LOGIN_ROUTE)\r\n      } else this._history.push(\"/error/Auth2:\" + e.message)\r\n    } finally {\r\n      this.setLoading(false)\r\n    }\r\n  }\r\n  async getUserInfo(id: number) {\r\n    if (id === undefined) return false\r\n    try {\r\n      this.setLoading(true)\r\n      const response = await UsersService.getUser(id)\r\n      return response.data\r\n    } catch (e: any) {\r\n      this._history.push(\"/error/Auth3:\" + e.message)\r\n    } finally {\r\n      this.setLoading(false)\r\n    }\r\n  }\r\n  history() {\r\n    return this._history\r\n  }\r\n  get userInfo() {\r\n    if (this._userInfo) return this._userInfo\r\n    else if (this._user.id)\r\n      this.getUserInfo(this._user.id).then((response) => {\r\n        if (response) this._userInfo = response\r\n        else this._userInfo = undefined\r\n      })\r\n    return null\r\n  }\r\n}\r\n"],"sourceRoot":""}