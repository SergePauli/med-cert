{"version":3,"sources":["utils/cadesplugin_api.js","pages/NoMatchPage.tsx","utils/consts.ts","components/layouts/FooterLayout.tsx","images/favicon.png","components/menus/SideBarMenu.tsx","http/index.ts","models/responses/ITimeEvent.ts","components/layouts/SideBarLayout.tsx","images/ava.png","components/menus/ProfileMenu.tsx","components/menus/NotificationsMenu.tsx","components/layouts/TopBarLayout.tsx","services/AuditService.ts","components/layouts/RightSideBarLayout.tsx","components/layouts/ActionButtonLayout.tsx","components/layouts/MainLayout.tsx","NSI/1.2.643.5.1.13.13.99.2.19.ts","components/c_sections/section_0.tsx","utils/defaults.ts","components/NullFlavorWrapper.tsx","models/INullFlavor.ts","models/FormsData/Identity.ts","models/FormsData/Person.ts","models/IPersonName.ts","components/inputs/PersonName.tsx","components/c_sections/section_1.tsx","components/inputs/inputsIdentity.tsx","components/c_sections/section_2.tsx","components/dialogs/AddressDialog.tsx","services/FiasService.ts","models/FormsData/Address.ts","models/requests/IAddressR.ts","components/inputs/InputAddress.tsx","components/inputs/AreaType.tsx","components/c_sections/section_3.tsx","NSI/1.2.643.5.1.13.13.99.2.20.ts","NSI/1.2.643.5.1.13.13.99.2.15.ts","NSI/1.2.643.5.1.13.13.99.2.16.ts","NSI/1.2.643.5.1.13.13.11.1038.ts","NSI/1.2.643.5.1.13.13.99.2.18.ts","models/FormsData/RelatedSubject.ts","models/FormsData/ChildInfo.ts","components/MotherInfo.tsx","components/c_sections/section_5.tsx","NSI/1.2.643.5.1.13.13.99.2.21.ts","NSI/1.2.643.5.1.13.13.99.2.22.ts","NSI/1.2.643.5.1.13.13.99.2.23.ts","components/c_sections/section_6.tsx","models/FormsData/Procedure.ts","models/FormsData/DeathReason.ts","services/DiagnosisService.ts","components/inputs/Reason.tsx","services/ACME_Service.ts","utils/acme.ts","components/c_sections/section_7.tsx","components/c_sections/section_8.tsx","NSI/1.2.643.5.1.13.13.99.2.24.ts","NSI/1.2.643.5.1.13.13.99.2.25.ts","utils/functions.ts","models/FormsData/DoctorRequest.ts","services/DoctorService.ts","models/FormsData/Authenticator.ts","components/c_sections/section_9.tsx","models/FormsData/Participant.ts","components/c_sections/section_10.tsx","models/render_options/default.ts","models/render_options/address.ts","models/render_options/Authenticator.ts","models/render_options/lettered_reason.ts","services/CertificateService.ts","models/render_options/patient.ts","models/render_options/external_death_reason.ts","models/render_options/other_reason.ts","models/render_options/procedure.ts","models/render_options/child_info.ts","models/render_options/related_subject.ts","models/render_options/person.ts","models/render_options/Doctor.ts","models/render_options/Participant.ts","utils/async_code.js","components/c_sections/section_11.tsx","pages/CertificatePage.tsx","models/FormsData/Doctor.ts","NSI/1.2.643.5.1.13.13.99.2.42.ts","pages/DoctorsPage.tsx","NSI/1.2.643.5.1.13.13.11.1040.ts","services/OrganizationService.ts","pages/ListPage.tsx","images/security.png","static/LoginImageDiv.js","pages/LoginPage.tsx","pages/MainPage.tsx","images/ava.jpg","services/UsersService.ts","images/hospital.jpg","pages/SettingsPage.tsx","routes.js","pages/AdminPage.tsx","pages/ProfilePage.tsx","pages/RegistrationPage.tsx","pages/PasswordRecoveryPage.tsx","pages/MessagePage.tsx","pages/ErrorPage.tsx","components/AppRouter.tsx","App.tsx","store/addressStore.ts","models/FormsData/Patient.ts","models/FormsData/Certificate.ts","store/certificateStore.ts","store/layoutStore.ts","store/suggestionsStore.ts","store/temporaryIDStore.ts","services/AuthService.ts","index.tsx","store/userStore.ts","../../node_modules/xml-js/lib/xml2js.js","../../node_modules/sax/lib/sax.js","../../node_modules/xml-js/lib/array-helper.js","../../node_modules/xml-js/lib/options-helper.js","../../node_modules/xml-js/lib/xml2json.js","../../src/comment-el.js","../../src/instruction-el.js","../../src/text-el.js","../../src/elements.js","../../src/index.js"],"names":["cadesplagin","window","cadesplugin","pluginObject","plugin_resolved","plugin_reject","plugin_resolve","isOpera","isFireFox","isSafari","isYandex","canPromise","Promise","cadesplugin_loaded_event_recieved","isFireFoxExtensionLoaded","resolve","reject","browserSpecs","check_browser","ru_cryptopro_npcades_10_native_bridge","callbacksCount","callbacks","resultForCallback","callbackId","resultArray","callback","apply","call","functionName","args","hasCallback","iframe","document","createElement","arrObjs","Array","setAttribute","encodeURIComponent","JSON","stringify","e","alert","documentElement","appendChild","parentNode","removeChild","JSModuleVersion","async_spawn","set","set_pluginObject","set_log_level","getLastError","is_capilite_enabled","isNativeMessageSupported","CreateObjectAsync","ReleasePluginObjects","CreateObject","cadesplugin_load_timeout","setTimeout","check_load_timeout","set_constantValues","current_log_level","LOG_LEVEL_ERROR","check_plugin_working","tem","ua","navigator","userAgent","M","match","test","name","version","exec","replace","appName","appVersion","splice","cpcsp_console_log","level","msg","console","LOG_LEVEL_DEBUG","log","LOG_LEVEL_INFO","info","error","postMessage","CAPICOM_MEMORY_STORE","CAPICOM_LOCAL_MACHINE_STORE","CAPICOM_CURRENT_USER_STORE","CAPICOM_SMART_CARD_USER_STORE","CADESCOM_MEMORY_STORE","CADESCOM_LOCAL_MACHINE_STORE","CADESCOM_CURRENT_USER_STORE","CADESCOM_SMART_CARD_USER_STORE","CADESCOM_CONTAINER_STORE","CAPICOM_MY_STORE","CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED","CAPICOM_CERTIFICATE_FIND_SUBJECT_NAME","CADESCOM_XML_SIGNATURE_TYPE_ENVELOPED","CADESCOM_XML_SIGNATURE_TYPE_ENVELOPING","CADESCOM_XML_SIGNATURE_TYPE_TEMPLATE","CADESCOM_XADES_DEFAULT","CADESCOM_XADES_BES","CADESCOM_XADES_T","CADESCOM_XADES_X_LONG_TYPE_1","CADESCOM_XMLDSIG_TYPE","XmlDsigGost3410UrlObsolete","XmlDsigGost3411UrlObsolete","XmlDsigGost3410Url","XmlDsigGost3411Url","XmlDsigGost3411Url2012256","XmlDsigGost3410Url2012256","XmlDsigGost3411Url2012512","XmlDsigGost3410Url2012512","CADESCOM_CADES_DEFAULT","CADESCOM_CADES_BES","CADESCOM_CADES_T","CADESCOM_CADES_X_LONG_TYPE_1","CADESCOM_PKCS7_TYPE","CADESCOM_ENCODE_BASE64","CADESCOM_ENCODE_BINARY","CADESCOM_ENCODE_ANY","CAPICOM_CERTIFICATE_INCLUDE_CHAIN_EXCEPT_ROOT","CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN","CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY","CAPICOM_CERT_INFO_SUBJECT_SIMPLE_NAME","CAPICOM_CERT_INFO_ISSUER_SIMPLE_NAME","CAPICOM_CERTIFICATE_FIND_SHA1_HASH","CAPICOM_CERTIFICATE_FIND_ISSUER_NAME","CAPICOM_CERTIFICATE_FIND_ROOT_NAME","CAPICOM_CERTIFICATE_FIND_TEMPLATE_NAME","CAPICOM_CERTIFICATE_FIND_EXTENSION","CAPICOM_CERTIFICATE_FIND_EXTENDED_PROPERTY","CAPICOM_CERTIFICATE_FIND_APPLICATION_POLICY","CAPICOM_CERTIFICATE_FIND_CERTIFICATE_POLICY","CAPICOM_CERTIFICATE_FIND_TIME_VALID","CAPICOM_CERTIFICATE_FIND_TIME_NOT_YET_VALID","CAPICOM_CERTIFICATE_FIND_TIME_EXPIRED","CAPICOM_CERTIFICATE_FIND_KEY_USAGE","CAPICOM_DIGITAL_SIGNATURE_KEY_USAGE","CAPICOM_PROPID_ENHKEY_USAGE","CAPICOM_OID_OTHER","CAPICOM_OID_KEY_USAGE_EXTENSION","CAPICOM_EKU_CLIENT_AUTH","CAPICOM_EKU_SMARTCARD_LOGON","CAPICOM_EKU_OTHER","CAPICOM_AUTHENTICATED_ATTRIBUTE_SIGNING_TIME","CAPICOM_AUTHENTICATED_ATTRIBUTE_DOCUMENT_NAME","CAPICOM_AUTHENTICATED_ATTRIBUTE_DOCUMENT_DESCRIPTION","CADESCOM_AUTHENTICATED_ATTRIBUTE_SIGNING_TIME","CADESCOM_AUTHENTICATED_ATTRIBUTE_DOCUMENT_NAME","CADESCOM_AUTHENTICATED_ATTRIBUTE_DOCUMENT_DESCRIPTION","CADESCOM_AUTHENTICATED_ATTRIBUTE_MACHINE_INFO","CADESCOM_ATTRIBUTE_OTHER","CADESCOM_STRING_TO_UCS2LE","CADESCOM_BASE64_TO_BINARY","CADESCOM_DISPLAY_DATA_NONE","CADESCOM_DISPLAY_DATA_CONTENT","CADESCOM_DISPLAY_DATA_ATTRIBUTE","CADESCOM_ENCRYPTION_ALGORITHM_RC2","CADESCOM_ENCRYPTION_ALGORITHM_RC4","CADESCOM_ENCRYPTION_ALGORITHM_DES","CADESCOM_ENCRYPTION_ALGORITHM_3DES","CADESCOM_ENCRYPTION_ALGORITHM_AES","CADESCOM_ENCRYPTION_ALGORITHM_GOST_28147_89","CADESCOM_HASH_ALGORITHM_SHA1","CADESCOM_HASH_ALGORITHM_MD2","CADESCOM_HASH_ALGORITHM_MD4","CADESCOM_HASH_ALGORITHM_MD5","CADESCOM_HASH_ALGORITHM_SHA_256","CADESCOM_HASH_ALGORITHM_SHA_384","CADESCOM_HASH_ALGORITHM_SHA_512","CADESCOM_HASH_ALGORITHM_CP_GOST_3411","CADESCOM_HASH_ALGORITHM_CP_GOST_3411_2012_256","CADESCOM_HASH_ALGORITHM_CP_GOST_3411_2012_512","CADESCOM_HASH_ALGORITHM_CP_GOST_3411_HMAC","CADESCOM_HASH_ALGORITHM_CP_GOST_3411_2012_256_HMAC","CADESCOM_HASH_ALGORITHM_CP_GOST_3411_2012_512_HMAC","CADESCOM_AllowNone","CADESCOM_AllowNoOutstandingRequest","CADESCOM_AllowUntrustedCertificate","CADESCOM_AllowUntrustedRoot","CADESCOM_SkipInstallToStore","CADESCOM_InstallCertChainToContainer","CADESCOM_UseContainerStore","ENABLE_CARRIER_TYPE_CSP","ENABLE_CARRIER_TYPE_FKC_NO_SM","ENABLE_CARRIER_TYPE_FKC_SM","ENABLE_ANY_CARRIER_TYPE","DISABLE_EVERY_CARRIER_OPERATION","ENABLE_CARRIER_OPEN_ENUM","ENABLE_CARRIER_CREATE","ENABLE_ANY_OPERATION","CADESCOM_PRODUCT_CSP","CADESCOM_PRODUCT_OCSP","CADESCOM_PRODUCT_TSP","MEDIA_TYPE_REGISTRY","MEDIA_TYPE_HDIMAGE","MEDIA_TYPE_CLOUD","MEDIA_TYPE_SCARD","XCN_CRYPT_STRING_BASE64HEADER","AT_KEYEXCHANGE","AT_SIGNATURE","CARRIER_FLAG_REMOVABLE","CARRIER_FLAG_UNIQUE","CARRIER_FLAG_PROTECTED","CARRIER_FLAG_FUNCTIONAL_CARRIER","CARRIER_FLAG_SECURE_MESSAGING","CARRIER_FLAG_ABLE_VISUALISE_SIGNATURE","CARRIER_FLAG_VIRTUAL","generatorFunc","continuer","verb","arg","result","generator","err","done","value","then","onFulfilled","onRejected","prototype","slice","arguments","bind","isIE","isIOS","call_ru_cryptopro_npcades_10_native_bridge","decimalToHexString","number","toString","toUpperCase","GetMessageFromException","message","exception","cpcsp_chrome_nmcades","array","tmpobj","ex","response","str","eval","show_firefox_missing_extension_dialog","cadesplugin_skip_extension_install","ovr","id","style","innerHTML","getElementsByTagName","getElementById","addEventListener","plugin_loaded_error","visibility","firefox_or_safari_nmcades_onload","cadesplugin_extension_loaded_callback","check_chrome_plugin","plugin_loaded","nmcades_api_onload","event","data","url","substring","indexOf","fileref","onerror","onload","cadesplugin_loaded","load_extension","load_npapi_plugin","elem","elem1","elem2","createPromise","check_npapi_plugin","display","mimetype","mimeTypes","enabledPlugin","div","length","readyState","obj","EnableInternalCSP","NoMatchPage","className","href","HOME_ROUTE","LOGIN_ROUTE","LIST_ROUTE","CERTIFICATE_ROUTE","DOCTORS_ROUTE","USER_ROUTE","MO_SETTINGS_ROUTE","DIRECTION","ROLES","USER","ADMIN","STATS","RunsackFilterMatchMode","startsWith","contains","notContains","endsWith","equals","notEquals","in","lt","lte","gt","gte","between","dateIs","dateIsNot","dateBefore","dateAfter","custom","DESTROY_OPTION","_destroy","TIME_FORMAT","year","month","day","hour","minute","DATE_FORMAT","FooterLayout","props","orgName","userInfo","organization","profile","roles","split","SideBarMenu","userStore","useContext","Context","useState","activeItem","setActiveItem","onItemClick","item","disabled","preventDefault","history","push","command","originalEvent","classNames","menu","items","label","role","map","index","separator","renderSeparator","iconClassName","icon","linkClassName","undefined","submenuIcon","content","type","onClick","target","includes","submenu","UniqueComponentId","renderMenuItem","renderItem","renderMenu","model","API_URL","FIAS_URL","ACME_URL","$api","axios","create","withCredentials","baseURL","$fias","$acme","headers","Accept","interceptors","request","use","config","Authorization","localStorage","getItem","a","originalRequest","status","_isRetry","get","setItem","tokens","access","Error","errors","reduce","element","Severity","SideBarLayout","observer","certificateStore","cert_id","cert","cert_route_id","issueDate","logout","activeUrl","findActive","isActive","forEach","to","src","avatar","alt","ProfileMenu","useHistory","NotificationsMenu","summary","detail","detail_templ","TopBarLayout","layoutStore","isTOM","useMediaQuery","query","profileMenuClassName","profileMenuActive","notificationsMenuClassName","notificationsMenuActive","notif_items","notif_amount","previtem","sum","userName","person_name","family","given_1","given_2","charAt","tabletOrMobile","setTabletOrMobile","sideBarToggle","title","setNotificationsMenuActive","setProfileMenuActive","ava","setRightSideBarActive","ACTIONS","Map","color","TIME_EVENT_OPTIONS","render_options","only","include","user","AuditService","post","rightSideBarActive","timeEvents","setTimeEvents","q","setQ","useEffect","sorts","user_organization_id_eq","getAudits","limit","catch","ACTION_ATTRIBUTES","action","timeStr","Date","created_at","toLocaleString","backgroundColor","email","ActionButtonLayout","position","radius","direction","layoutStaticInactive","wrapperClass","setUserInfo","userId","isLoading","addLocale","noFilter","clear","matchAll","matchAny","addRule","removeRule","accept","closeText","prevText","nextText","currentText","monthNames","monthNamesShort","dayNames","dayNamesShort","dayNamesMin","weekHeader","firstDay","isRTL","showMonthAfterYear","yearSuffix","week","timeOnlyTitle","timeText","hourText","minuteText","secondText","allDayText","actionItems","CERT_TYPES","code","s_name","header","htmlFor","series","placeholder","dateFormat","inputId","autoFocus","options","certType","filter","optionLabel","find","el","onChange","padding","fontWeight","numberPrev","seriesPrev","effTimePrev","borderLeft","borderLeftStyle","background","latestOne","HOME_REGION_CODE","DEFAULT_CERT_SUGGESTIONS","section","suggestion","NULL_FLAVORS","NULL_FLAVOR_IDX","NI","INV","DER","OTH","NINF","PINF","UNC","MSK","NA","UNK","ASKU","NAV","NASK","QS","TRC","ID_CARD_TYPES","s_mask","n_mask","c_mask","DEFAULT_ERROR_TOAST","severity","life","baseZIndex","NullFlavorWrapper","setValue","checked","setChecked","fieldStyle","paraNum","marginLeft","nullFlavors","field_name","parent_attr","nullFlavor","checkbox","lincked","setCheck","_nullFlavors","marginTop","checkboxLabel","dropdown","findIndex","idx","canNullFlavor","field","width","getCleanNullFlavor","old","_new","parent_guid","checkFieldNullFlavor","key","Identity","_id","_identityCardType","_series","_number","_issueOrgName","_issueOrgCode","_issueOrgDate","_parentGUID","this","identity_card_type_id","issueOrgName","issueOrgCode","parentGUID","null_flavors","makeAutoObservable","deep","_identity","toDateString","null_flavors_attributes","ct","issueOrgDate","Person","_personName","_SNILS","_address","_contacts","_oldOne","SNILS","address","contacts","_person","state","streetAddressLine","address_attributes","contacts_attributes","person_name_attributes","fio","snils","getOneLinePersonName","trim","PersonName","personName","setFio","isErrorMessage","submitted","values","_result","suggestionsStore","certificate","patient","person","birth_year","yearBTChecked","setYearBTChecked","deathYear","yearDTChecked","setYearDTChecked","identified","optionCode","fromRelatives","isDeathTime","deathDatetime","identity","policyOMS","setBirthDay","birth_date","gender","locale","mask","showIcon","setDeathDay","timeOnly","hourFormat","inputsIdentity","dulValue","seriesProps","seriesField","numberProps","numberField","depCodeProps","docChecked","setDocChecked","identityCardType","setDulValue","nullFlavorOption","depCodeField","nf","cols","rows","paddingLeft","addressStore","regions","regionsOptions","searchStr","setSearchStr","region","setRegion","district","setDistrict","city","setCity","town","setTown","street","setStreet","housenum","house","setHouse","fiasOptions","addresses","setAddresses","toast","useRef","setAddress","parent","postalCode","aoGUID","AOGUID","houseGUID","HouseGUID","buildnum","strucnum","fetchRegionOptions","onHide","dialogVisible","autocompleteOnChange","setter","getSuggestions","getChildItems","reason","current","show","footer","manualMode","isNotStrictly","oldOne","onAddrComplete","onCancel","visible","breakpoints","modal","suggestions","completeMethod","searchBar","filterBy","forceSelection","maxWidth","flat","ref","FiasService","regionID","parentOpt","Address","_streetAddressLine","_state","_district","_city","_town","_street","_aoGUID","_houseGUID","_housenum","_buildnum","_strucnum","_flat","_postalCode","_parent","house_number","building_number","struct_number","flat_number","fetchAddressHierarchy","fiasItem","shortname","parseFiasItem","DEFAULT_ADDRESS","invalid","strictly","bt_id","_addr","onClear","AreaType","addressLife","setAddressLife","deathAddr","addressDeath","setAddressDeath","checkedLifeArea","checkedDeathArea","onAddressCopy","deathAreaType","lifeAreaType","addressProps","DEAD_PLACE_TYPES","MARITAL_STATUSES","EDUCATION_LEVELS","SOCIAL_STATUSES","TERMS_PREGNANCY","RelatedSubject","_guid","_familyConnection","_fio","_birthTime","guid","uuidv4","family_connection","birthTime","addr","_rs","addr_attributes","toLocaleDateString","ChildInfo","_termPregnancy","_weight","_whichAccount","_relatedSubject","term_pregnancy","weight","which_account","related_subject","_chInfo","related_subject_attributes","getAttributes","MotherInfo","childInfo","relatedSubject","max","min","whichAccount","temp","age","hoursAge","isChildInfo","yearsAge","isMonthChild","daysAge","termPregnancy","ddStyle","minWidth","dDivStyle","paddingTop","deathPlace","chInf","maritalStatus","educationLevel","socialStatus","DEATH_KINDS","MEDICS","BASIS_DERMINING","isExtReason","deathKind","extReasonTime","panelStyle","extReasonDescription","establishedMedic","basisDetermining","Procedure","_medicalServ","_textValue","_effectiveTime","medical_serv","text_value","effective_time","_pr","medical_serv_id","getHours","getMinutes","DeathReason","_diagnosis","_years","_months","_weeks","_days","_hours","_minutes","_procedures","diagnosis","ext_diagnosis","days","hours","minutes","months","weeks","years","procedures","proc","textValue","medicalServ","effectiveTime","isExt","_dr","diagnosis_id","Number","parseInt","ext_diagnosis_id","procedures_attributes","_temp","pr","concat","DiagnosisService","offset","CSS_classes","diagnoses","setDiagnoses","diagnosisText","setDiagnosisText","diagnosisCode","setDiagnosisCode","cleanEffectiveTime","deathReason","deathTime","setDeathReason","upButton","onUp","downButton","onDown","diagnosisOptionTemplate","option","marginRight","ICD10","effTime","onTimeChecked","saveReasonEffTime","onDiagnosisChecked","fieldName","delay","s_name_cont","ICD10_start","fetchExtDiagnoses","fetchDiagnoses","itemTemplate","ACMEService","input","data_AIN","ACME_AIN","withOtherReasons","deathDate","X1X4","X7X12","padStart","X14X17","X19X21","X22X23","X24X25","X26X29","birthDay","deathDay","XYMD","X39X41","_diff","getFullYear","getMonth","getDate","X42","X45","reasonD","lastIndexOf","reasonA","padEnd","reasonB","reasonC","reasons","deathReasons","reasons_in","X171","X174","pregnancyConnection","X176X177","X178X179","X180X183","X188","X219","X220X231","reason_a","reason_b","reason_c","ext_reason","_part_2","codogram","parse_ACME_TIN","xACME","_sb","x45","x54","x51_53","spX45","spX54","spX51_53","mainCSSClass","isACME","reasonBckecked","reasonCckecked","reasonDckecked","reasonIDExchange","first","second","reasonACME","height","changeReasonACME","onSucccess","onError","strACMEAIN1","isReasonD","strACMEAIN2","runACME","TINs","data_TIN","_res","_alter","doACME","temporaryIDStore","checkReason","lastDeathReasonID","newReason","setNewReason","medicalServs","setMedicalServs","medservText","setMedservText","medservCode","setMedservCode","procedure","setProcedure","dateETChecked","setDateETChecked","diagnosChecked","setDiagnosChecked","selectedProcedures","setSelectedProcedures","selectedReasons","setSelectedReasons","setMedServValue","lastProcedureID","s_code","medServOptionTemplate","_reasons","val","name_cont","s_code_start","fetchMedicalServs","inputStyle","showTime","margin","selection","responsiveLayout","dataKey","emptyMessage","onSelectionChange","selectionMode","headerStyle","body","rowData","_resultStr","procNames","TRAFFIC_ACCIDENT","PREGNANCY_CONNECTION","removeEmpty","candidat","isPrototypeOf","newObj","Object","keys","DOCTOR_RENDER_OPTIONS","DoctorService","doctor","Doctor","put","doctor_id","delete","Authenticator","_time","_doctorID","time","_authenticator","doctors","setDoctors","getDoctors","organization_id_eq","isTrafficAccident","trafficAccident","isPregnancyConnection","nullFlavorDropdnStyle","customDropdnStyle","customParagraphFieldStyle","fontSize","author","doctorID","showClear","legalAuthenticator","authenticator","Participant","_receiptDate","_description","_original","receipt_date","description","original","person_attributes","identity_attributes","participant","receiptDate","buttonDisabled","DEFAULT_RENDER_OPTIONS","except","NULLFLAVORABLE_RENDER_OPTIONS","DEFAULT_AUTHENTICATOR_RENDER_OPTIONS","LETTERED_DEATH_REASON_RENDER_OPTIONS","CERTIFICATE_FULL_RENDER_OPTIONS","death_addr","a_reason","b_reason","c_reason","d_reason","legal_authenticator","audithor","death_reasons","child_info","custodian","CertificateService","last","count","Certificate","certificate_id","STATUS_OK","CertificateAdjuster","getVersion","ObjectVersion","PlugInVersionTxt","PlugInEnabled","oAbout","CSPVersion","ver","MajorVersion","MinorVersion","BuildVersion","ret","CSPVersionTxt","CSPName","sCSPName","CspEnabled","CspEnabledTxt","CSPNameTxt","PlugInEnabledTxt","PluginVersion","CurrentPluginVersion","checkQuotes","i","extract","from","what","certName","begin","end","substr","Print2Digit","digit","GetCertDate","paramDate","certDate","getUTCDate","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","GetCertName","certSubjectName","GetIssuer","certIssuerName","GetCertInfoString","certFromDate","CertStatusEmoji","isValid","getESCertInfo","oOpt","Now","now","ValidFromDate","ValidToDate","HasPrivateKey","hasPrivateKey","IsValid","Validator","Result","getTime","emoji","SubjectName","text","SerialNumber","serialNumber","MyStoreExists","oStore","Open","certsList","infoList","certs","certCnt","Certificates","Count","Item","Close","certsEXT","k","found","j","option_info","activeIndex","setActiveIndex","versionPlagin","setVersionPlagin","dataToSignXML","setDataToSignXML","cAdES","setCAdES","selectedCAdES","setSelectedCAdES","getCDA","useMemo","CheckForPlugIn","csp_info","FillCAdESList","overflow","resize","border","borderRadius","xml","collapsible","rowClassName","isDataSelectable","params","certID","setCertID","setMessage","_idx","cArray","select","findById","location","search","clean","save","sm_code","finally","createNew","sugCount","redSuggestionsCount","layoutParams","secton_router","shape","_position","_organization","_doctor","organization_id","position_id","CAN_SIGN_POSITIONS","emptyDoctor","setDoctor","doctorDialog","setDoctorDialog","deleteDoctorDialog","setDeleteDoctorDialog","deleteDoctorsDialog","setDeleteDoctorsDialog","selectedDoctors","setSelectedDoctors","setSubmitted","telcom_value","main","setEmail","phone","setPhone","setPosition","positions","setPositions","dt","openNew","hideDialog","hideDeleteDoctorDialog","hideDeleteDoctorsDialog","findIndexById","confirmDeleteSelected","onContactChange","contact","_contact","telcom_use","doctorDialogFooter","Fragment","_doctors","oldValue","newValue","_request","audits","createAudit","audit","_audits","before","after","_person_attributes","oldPerson","newPerson","_person_name_attributes","oldFIO","newFIO","oldAddress","newAddress","oldContacts","u","newContacts","oldNullFlavors","newNullFlavors","null_flavor_attributes","genUpdateDoctorRequest","updateDoctor","addDoctor","deleteDoctorDialogFooter","removeDoctor","deleteDoctorsDialogFooter","fioBodyTemplate","row","right","exportable","editDoctor","required","getPositions","GENDERS","ORGANIZATION_RENDER_OPTIONS","OrganizationService","Organization","lazyLoading","setLazyLoading","sortField","setSortField","sortOrder","setSortOrder","filters","setFilters","organizations","setOrganizations","isSuperUser","getOrganizations","PrimeReact","selected","setSelected","matchMode","FilterMatchMode","IN","operator","constraints","STARTS_WITH","CONTAINS","GREATER_THAN_OR_EQUAL_TO","LESS_THAN_OR_EQUAL_TO","DATE_AFTER","DATE_BEFORE","filterClearTemplate","filterClearCallback","filterApplyTemplate","filterApplyCallback","cusName","filterField","showFilterMatchModes","filterClear","filterApply","filterElement","filterCallback","flexGrow","flexBasis","scrollDirection","scrollable","scrollHeight","size","loading","filterDisplay","onFilter","_filters","_constraint","_codes","basis_determining_in","death_place_in","custodian_id_in","getList","virtualScrollerOptions","lazy","onLazyLoad","itemSize","filterLocale","onRowDoubleClick","onSort","order","rowNumber","sortable","frozen","cert_type","filterPlaceholder","dataType","showFilterOperator","acme","reason_ACME","cr","ar","br","dr","birth","death","death_datetime","death_year","dd","db","m","death_place","place","basis_determining","basis","iDate","issue_date","LoginImageDiv","onSubmit","form","login","password","onPassordRecovery","renew_link","isFormFieldValid","meta","touched","getFormErrorMessage","logo","initialValues","validate","render","handleSubmit","autoComplete","toggleMask","marginBottom","record","UsersService","setAudits","setOrganization","ID","setID","getOrganization","changesAudit","oid","textAlign","name_full","license","license_data","okpo","isSaveAvaible","updateOrganization","link","AUTH_ROUTES","path","Component","MainPage","ListPage","CertificatePage","DoctorsPage","setUser","getUser","user_name","user_team","SettingsPage","NON_AUTH_ROUTES","LoginPage","names","phone_number","password_confirmation","registration","PWD_RECOVERY_ROUTE","pwd_renew","activation_link","PUBLIC_ROUTES","MESSAGE_ROUTE","ERROR_ROUTE","AppRouter","token","isAuth","setHistory","checkAuth","chech_routes","component","exact","App","AddressStore","_isLoding","_history","_regionsOptions","_fiasOptions","_dialogVisible","_manualMode","_onAddrComplete","_regions","parse","defaultRegion","getRegions","createNullFlavors","isLoding","Patient","_gender","_birth_date","_birth_year","_provider_organization","_addrType","addr_type","_patient","person_id","provider_organization","isYear","_issueDate","_certType","_seriesPrev","_numberPrev","_effTimePrev","_lifeAreaType","_deathAreaType","_deathDatetime","_deathYear","_deathMonth","_deathPlace","_maritalStatus","_educationLevel","_socialStatus","_deathKind","_extReasonTime","_extReasonDescription","_reasonA","_reasonB","_reasonC","_reasonD","_deathReasons","_reasonACME","_deathAddr","_policyOMS","_childInfo","_establishedMedic","_basisDetermining","_trafficAccident","_pregnancyConnection","_author","_audithor","_legalAuthenticator","_custodian_id","_participant","_latestOne","disposers","latest_one","number_prev","series_prev","policy_OMS","life_area_type","death_area_type","death_kind","education_level","marital_status","social_status","eff_time_prev","ext_reason_time","ext_reason_description","established_medic","traffic_accident","pregnancy_connection","autorun","utc1","UTC","b","ms","milisecAge","Math","floor","setMinutes","setHours","setDate","setMonth","setFullYear","_cert","audithor_attributes","author_attributes","legal_authenticator_attributes","child_info_attributes","death_addr_attributes","death_reasons_attributes","a_reason_attributes","b_reason_attributes","c_reason_attributes","d_reason_attributes","patient_attributes","custodian_id","participant_attributes","eff_time","lat","dat","disposer","configure","enforceActions","CertificateStore","_submitted","_userInfo","_certs","_selected","_sorts","_first","_last","_rows","_count","_needFetch","_q","custodian_id_eq","getCount","onSuccess","patient_id","updateCertificate","nCert","addCertificate","removeCertificate","num","dataLength","doAfter","isAdd","getCertificates","id_eq","LayoutStore","_isTabletOrMobile","_isLayoutStaticInactive","_isRightSidebarActive","_isProfileMenuActive","_isNotificationsMenuActive","_isLoading","_message","isLayoutStaticInactive","rightSidebarActive","SuggestionsStore","cStore","_cStore","_suggestions","_identified","_fromRelatives","isBirthDay","isDeathDay","isSNILS","oms","isOMS","isCODE","isIORGDate","isIORGName","isIDSeries","isIDNumber","isLifeArea","isDeathArea","isDeathAreaType","isLifeAreaType","isTERMS_PREGNANCY","isCHILD_WEIGHT","isNUMBER_PREGNANCY","isMOTHER_FIO","isMOTHER_BIRTHDAY","isMOTHER_ADDRESS","isPersonNameSug","TemporaryIDStore","_lastCertificateID","_lastDeathReasonID","_lastProcedureID","AuthService","_isAuth","_user","_token","access_token","setAuth","removeItem","setToken","setLoading","getUserInfo","createContext","ReactDOM","Provider","helper","sax","parser","chunk","S","DOCTYPE","c","CDATA","ATTRIB","strictFail","ATTRIB_NAME","ATTRIB_VALUE","require$$1","prefix","tag","tagName","entity","require$$0","isArray","attributes","currentElement","validateOptions","CommentElement","PropTypes","InstructionElement","instruction","Element","elements","TextElement","isTextElement","indentation","collapsed","toggleCollapse","cursor","isRequired","getElement","stopPropagation","getSelectedText","Elements","declaration","XMLViewer","defaultTheme","theme","indentSize","invalidXml","customTheme","convert"],"mappings":";6JAAA,gFAAO,IAAMA,YAAc,SAAdA,cAEX,IAAIC,OAAOC,YAAX,CAEA,IAAIC,aACAC,gBAAkB,EAClBC,cACAC,eACAC,QAAU,EACVC,UAAY,EACZC,SAAW,EACXC,SAAW,EACXC,aAAeV,OAAOW,QACtBC,mCAAoC,EACpCC,0BAA2B,EAC3BZ,YAGFA,YADES,WACY,IAAIC,SAAQ,SAAUG,EAASC,GAC3CV,eAAiBS,EACjBV,cAAgBW,KAGJ,GAmBhB,IAAIC,aAAeC,gBAwUfC,sCAAwC,CAC1CC,eAAgB,EAChBC,UAAW,GAGXC,kBAAmB,SAA2BC,EAAYC,GACxD,IAAIC,EAAWN,sCAAsCE,UAAUE,GAC1DE,GACLA,EAASC,MAAM,KAAMF,IAOvBG,KAAM,SAAcC,EAAcC,EAAMJ,GACtC,IAAIK,EAAcL,GAAgC,oBAAbA,EACjCF,EAAaO,EAAcX,sCAAsCC,iBAAmB,EAEpFU,IAAaX,sCAAsCE,UAAUE,GAAcE,GAE/E,IAAIM,EAASC,SAASC,cAAc,UAChCC,EAAU,IAAIC,MAAM,gBACxB,IACEJ,EAAOK,aACL,MACA,gBAAkBR,EAAe,IAAML,EAAa,IAAMc,mBAAmBC,KAAKC,UAAUV,EAAMK,KAEpG,MAAOM,GACPC,MAAMD,GAERR,SAASU,gBAAgBC,YAAYZ,GACrCA,EAAOa,WAAWC,YAAYd,GAC9BA,EAAS,OA0Pb7B,YAAY4C,gBAAkB,QAC9B5C,YAAY6C,YAAcA,YAC1B7C,YAAY8C,IAAMC,iBAClB/C,YAAYgD,cAAgBA,cAC5BhD,YAAYiD,aAAeA,aAC3BjD,YAAYkD,oBAAsBA,oBAE9BC,6BACFnD,YAAYoD,kBAAoBA,kBAChCpD,YAAYqD,qBAAuBA,sBAGhCF,6BACHnD,YAAYsD,aAAeA,cAGzBvD,OAAOwD,yBACTC,WAAWC,mBAAoB1D,OAAOwD,0BAEtCC,WAAWC,mBAAoB,KAGjCC,qBAEA1D,YAAY2D,kBAAoB3D,YAAY4D,gBAC5C7D,OAAOC,YAAcA,YACrB6D,uBA7oBA,SAAS7C,gBACP,IACE8C,EADEC,EAAKC,UAAUC,UAEjBC,EAAIH,EAAGI,MAAM,2EAA6E,GAC5F,MAAI,WAAWC,KAAKF,EAAE,IAEb,CAAEG,KAAM,KAAMC,SADrBR,EAAM,kBAAkBS,KAAKR,IAAO,IACF,IAAM,IAE7B,WAATG,EAAE,IAEO,OADXJ,EAAMC,EAAGI,MAAM,iCACS,CAAEE,KAAMP,EAAI,GAAGU,QAAQ,MAAO,SAAUF,QAASR,EAAI,KAE/EI,EAAIA,EAAE,GAAK,CAACA,EAAE,GAAIA,EAAE,IAAM,CAACF,UAAUS,QAAST,UAAUU,WAAY,MACzB,OAAtCZ,EAAMC,EAAGI,MAAM,qBAA6BD,EAAES,OAAO,EAAG,EAAGb,EAAI,IAC7D,CAAEO,KAAMH,EAAE,GAAII,QAASJ,EAAE,KAIlC,SAASU,kBAAkBC,EAAOC,GAEhC,GAAuB,qBAAZC,QACX,OAAIF,GAAS7E,YAAY2D,mBACnBkB,IAAU7E,YAAYgF,iBAAiBD,QAAQE,IAAI,YAAaH,GAChED,IAAU7E,YAAYkF,gBAAgBH,QAAQI,KAAK,WAAYL,QAC/DD,IAAU7E,YAAY4D,iBAAiBmB,QAAQK,MAAM,YAAaN,UAHxE,EAQF,SAAS9B,cAAc6B,GAGjBA,IAAU7E,YAAYgF,iBACtBH,IAAU7E,YAAYkF,gBACtBL,IAAU7E,YAAY4D,iBAM1B5D,YAAY2D,kBAAoBkB,EAC5B7E,YAAY2D,oBAAsB3D,YAAYgF,iBAChDJ,kBAAkB5E,YAAYkF,eAAgB,yCAC5ClF,YAAY2D,oBAAsB3D,YAAYkF,gBAChDN,kBAAkB5E,YAAYkF,eAAgB,wCAC5ClF,YAAY2D,oBAAsB3D,YAAY4D,iBAChDgB,kBAAkB5E,YAAYkF,eAAgB,yCAC5C/B,6BACEnD,YAAY2D,oBAAsB3D,YAAYgF,iBAAiBjF,OAAOsF,YAAY,sBAAuB,KACzGrF,YAAY2D,oBAAsB3D,YAAYkF,gBAAgBnF,OAAOsF,YAAY,qBAAsB,KACvGrF,YAAY2D,oBAAsB3D,YAAY4D,iBAAiB7D,OAAOsF,YAAY,sBAAuB,OAb7GT,kBAAkB5E,YAAY4D,gBAAiB,4CAA8CiB,GAiBjG,SAASnB,qBACP1D,YAAYsF,qBAAuB,EACnCtF,YAAYuF,4BAA8B,EAC1CvF,YAAYwF,2BAA6B,EACzCxF,YAAYyF,8BAAgC,EAC5CzF,YAAY0F,sBAAwB,EACpC1F,YAAY2F,6BAA+B,EAC3C3F,YAAY4F,4BAA8B,EAC1C5F,YAAY6F,+BAAiC,EAC7C7F,YAAY8F,yBAA2B,IAEvC9F,YAAY+F,iBAAmB,KAE/B/F,YAAYgG,mCAAqC,EAEjDhG,YAAYiG,sCAAwC,EAEpDjG,YAAYkG,sCAAwC,EACpDlG,YAAYmG,uCAAyC,EACrDnG,YAAYoG,qCAAuC,EAEnDpG,YAAYqG,uBAAyB,GACrCrG,YAAYsG,mBAAqB,GACjCtG,YAAYuG,iBAAmB,GAC/BvG,YAAYwG,6BAA+B,KAC3CxG,YAAYyG,sBAAwB,EAEpCzG,YAAY0G,2BAA6B,iEACzC1G,YAAY2G,2BAA6B,mDACzC3G,YAAY4G,mBAAqB,qEACjC5G,YAAY6G,mBAAqB,uDAEjC7G,YAAY8G,0BAA4B,+DACxC9G,YAAY+G,0BAA4B,6EACxC/G,YAAYgH,0BAA4B,+DACxChH,YAAYiH,0BAA4B,6EAExCjH,YAAYkH,uBAAyB,EACrClH,YAAYmH,mBAAqB,EACjCnH,YAAYoH,iBAAmB,EAC/BpH,YAAYqH,6BAA+B,GAC3CrH,YAAYsH,oBAAsB,MAElCtH,YAAYuH,uBAAyB,EACrCvH,YAAYwH,uBAAyB,EACrCxH,YAAYyH,qBAAuB,EAEnCzH,YAAY0H,8CAAgD,EAC5D1H,YAAY2H,wCAA0C,EACtD3H,YAAY4H,4CAA8C,EAE1D5H,YAAY6H,sCAAwC,EACpD7H,YAAY8H,qCAAuC,EAEnD9H,YAAY+H,mCAAqC,EACjD/H,YAAYiG,sCAAwC,EACpDjG,YAAYgI,qCAAuC,EACnDhI,YAAYiI,mCAAqC,EACjDjI,YAAYkI,uCAAyC,EACrDlI,YAAYmI,mCAAqC,EACjDnI,YAAYoI,2CAA6C,EACzDpI,YAAYqI,4CAA8C,EAC1DrI,YAAYsI,4CAA8C,EAC1DtI,YAAYuI,oCAAsC,EAClDvI,YAAYwI,4CAA8C,GAC1DxI,YAAYyI,sCAAwC,GACpDzI,YAAY0I,mCAAqC,GAEjD1I,YAAY2I,oCAAsC,IAElD3I,YAAY4I,4BAA8B,EAE1C5I,YAAY6I,kBAAoB,EAChC7I,YAAY8I,gCAAkC,GAE9C9I,YAAY+I,wBAA0B,EACtC/I,YAAYgJ,4BAA8B,EAC1ChJ,YAAYiJ,kBAAoB,EAEhCjJ,YAAYkJ,6CAA+C,EAC3DlJ,YAAYmJ,8CAAgD,EAC5DnJ,YAAYoJ,qDAAuD,EACnEpJ,YAAYqJ,8CAAgD,EAC5DrJ,YAAYsJ,+CAAiD,EAC7DtJ,YAAYuJ,sDAAwD,EACpEvJ,YAAYwJ,8CAAgD,IAC5DxJ,YAAYyJ,0BAA4B,EAExCzJ,YAAY0J,0BAA4B,EACxC1J,YAAY2J,0BAA4B,EAExC3J,YAAY4J,2BAA6B,EACzC5J,YAAY6J,8BAAgC,EAC5C7J,YAAY8J,gCAAkC,EAE9C9J,YAAY+J,kCAAoC,EAChD/J,YAAYgK,kCAAoC,EAChDhK,YAAYiK,kCAAoC,EAChDjK,YAAYkK,mCAAqC,EACjDlK,YAAYmK,kCAAoC,EAChDnK,YAAYoK,4CAA8C,GAE1DpK,YAAYqK,6BAA+B,EAC3CrK,YAAYsK,4BAA8B,EAC1CtK,YAAYuK,4BAA8B,EAC1CvK,YAAYwK,4BAA8B,EAC1CxK,YAAYyK,gCAAkC,EAC9CzK,YAAY0K,gCAAkC,EAC9C1K,YAAY2K,gCAAkC,EAC9C3K,YAAY4K,qCAAuC,IACnD5K,YAAY6K,8CAAgD,IAC5D7K,YAAY8K,8CAAgD,IAC5D9K,YAAY+K,0CAA4C,IACxD/K,YAAYgL,mDAAqD,IACjEhL,YAAYiL,mDAAqD,IAEjEjL,YAAYgF,gBAAkB,EAC9BhF,YAAYkF,eAAiB,EAC7BlF,YAAY4D,gBAAkB,EAE9B5D,YAAYkL,mBAAqB,EACjClL,YAAYmL,mCAAqC,EACjDnL,YAAYoL,mCAAqC,EACjDpL,YAAYqL,4BAA8B,EAC1CrL,YAAYsL,4BAA8B,UAC1CtL,YAAYuL,qCAAuC,UACnDvL,YAAYwL,2BAA6B,WAEzCxL,YAAYyL,wBAA0B,EACtCzL,YAAY0L,8BAAgC,EAC5C1L,YAAY2L,2BAA6B,EACzC3L,YAAY4L,wBAA0B,EAEtC5L,YAAY6L,gCAAkC,EAC9C7L,YAAY8L,yBAA2B,EACvC9L,YAAY+L,sBAAwB,EACpC/L,YAAYgM,qBAAuB,EAEnChM,YAAYiM,qBAAuB,EACnCjM,YAAYkM,sBAAwB,EACpClM,YAAYmM,qBAAuB,EAEnCnM,YAAYoM,oBAAsB,EAClCpM,YAAYqM,mBAAqB,EACjCrM,YAAYsM,iBAAmB,EAC/BtM,YAAYuM,iBAAmB,EAE/BvM,YAAYwM,8BAAgC,EAC5CxM,YAAYyM,eAAiB,EAC7BzM,YAAY0M,aAAe,EAE3B1M,YAAY2M,uBAAyB,EACrC3M,YAAY4M,oBAAsB,EAClC5M,YAAY6M,uBAAyB,EACrC7M,YAAY8M,gCAAkC,EAC9C9M,YAAY+M,8BAAgC,GAC5C/M,YAAYgN,sCAAwC,GACpDhN,YAAYiN,qBAAuB,IAGrC,SAASpK,YAAYqK,GACnB,SAASC,EAAUC,EAAMC,GACvB,IAAIC,EACJ,IACEA,EAASC,EAAUH,GAAMC,GACzB,MAAOG,GACP,OAAO9M,QAAQI,OAAO0M,GAExB,OAAIF,EAAOG,KACFH,EAAOI,MAEPhN,QAAQG,QAAQyM,EAAOI,OAAOC,KAAKC,EAAaC,GAG3D,IAAIN,EAAYL,EAAcjL,MAAM6L,UAAUC,MAAMtM,KAAKuM,UAAW,IAChEJ,EAAcT,EAAUc,KAAKd,EAAW,QACxCU,EAAaV,EAAUc,KAAKd,EAAW,SAC3C,OAAOS,IAGT,SAASM,OAGP,MAA6B,OAAtBnN,aAAasD,MAAuC,SAAtBtD,aAAasD,KAGpD,SAAS8J,QACP,OACEnK,UAAUC,UAAUE,MAAM,UAAYH,UAAUC,UAAUE,MAAM,UAAYH,UAAUC,UAAUE,MAAM,WAI1G,SAAShB,2BAEP,OAAI+K,SAEsB,QAAtBnN,aAAasD,OAGS,cAAtBtD,aAAasD,MACf7D,UAAW,GACJ,GAGiB,UAAtBO,aAAasD,MACfhE,SAAU,EACNU,aAAauD,SAAW,IAMJ,YAAtBvD,aAAasD,MACf/D,WAAY,EACRS,aAAauD,SAAW,IAMJ,WAAtBvD,aAAasD,KACXtD,aAAauD,SAAW,GAOJ,WAAtBvD,aAAasD,MACf9D,UAAW,EACPQ,aAAauD,SAAW,SAF9B,IAWF,SAAShB,aAAae,GACpB,OAAI8J,QAGKC,2CAA2C,eAAgB,CAAC/J,IAG9DpE,aAAaqD,aAAae,GAGnC,SAASgK,mBAAmBC,GAK1B,OAJIA,EAAS,IACXA,EAAS,WAAaA,EAAS,GAG1BA,EAAOC,SAAS,IAAIC,cAG7B,SAASC,wBAAwBnM,GAC/B,IAAIkL,EAAMlL,EAAEoM,QAMZ,OALKlB,EAEMlL,EAAEgM,SACXd,GAAO,OAASa,mBAAmB/L,EAAEgM,QAAU,KAF/Cd,EAAMlL,EAIDkL,EAGT,SAASvK,aAAa0L,GACpB,GAAIxL,4BAA8B+K,QAAUC,QAC1C,OAAOM,wBAAwBE,GAGjC,IACE,OAAO1O,aAAagD,eACpB,MAAOX,GACP,OAAOmM,wBAAwBE,IAKnC,SAAStL,uBACP,OAAOtD,OAAO6O,qBAAqBvL,uBAIrC,SAASD,kBAAkBiB,GACzB,GAAIpE,aAAc,OAAOA,aAAamD,kBAAkBiB,GAyC1D,SAAS+J,2CAA2C1M,aAAcmN,OAChE,IAAIC,OACAC,GAUJ,GATA9N,sCAAsCQ,KAAKC,aAAcmN,OAAO,SAAUvM,EAAG0M,UAC3ED,GAAKzM,EACL,IAAI2M,IAAM,UAAYD,SACtBE,KAAKD,KACiB,kBAAXH,SACTA,OAASA,OAAOtK,QAAQ,SAAU,MAClCsK,OAASA,OAAOtK,QAAQ,SAAU,UAGlCuK,GAAI,MAAMA,GACd,OAAOD,OAGT,SAASK,wCACP,IAAKpP,OAAOqP,mCAAoC,CAC9C,IAAIC,EAAMvN,SAASC,cAAc,OACjCsN,EAAIC,GAAK,kBACTD,EAAIE,MACF,uHACFF,EAAIG,UACF,+uCAKF1N,SAAS2N,qBAAqB,QAAQ,GAAGhN,YAAY4M,GACrDvN,SAAS4N,eAAe,6BAA6BC,iBAAiB,SAAS,WAC7EC,oBAAoB,qGACpB9N,SAAS4N,eAAe,mBAAmBH,MAAMM,WAAa,YAGhER,EAAIM,iBAAiB,SAAS,WAC5BC,oBAAoB,qGACpB9N,SAAS4N,eAAe,mBAAmBH,MAAMM,WAAa,YAEhER,EAAIE,MAAMM,WAAa,WAG3B,SAASC,mCACH/P,OAAOgQ,uCAAuChQ,OAAOgQ,wCACzDnP,0BAA2B,EAC3Bb,OAAO6O,qBAAqBoB,oBAAoBC,cAAeL,qBAGjE,SAASM,qBACFhC,QAAW5N,WAAcC,UACxBR,OAAOgQ,uCAAuChQ,OAAOgQ,wCAE3DhQ,OAAOsF,YAAY,2BAA4B,KAC/CtF,OAAO4P,iBACL,WACA,SAAUQ,GACR,GAA0B,kBAAfA,EAAMC,MAAsBD,EAAMC,KAAKjM,MAAM,wBACpDxD,kCAAJ,CACA,GAAIL,WAAaC,SAAU,CAEzB,IAAI8P,EAAMF,EAAMC,KAAKE,UAAUH,EAAMC,KAAKG,QAAQ,QAAU,GAC5D,IACGF,EAAIlM,MAAM,2DACVkM,EAAIlM,MAAM,yEAOX,OALAS,kBACE5E,YAAY4D,gBACZ,YAAcyM,EAAM,iEAEtBT,sBAGF,IAAIY,EAAU1O,SAASC,cAAc,UACrCyO,EAAQtO,aAAa,OAAQ,mBAC7BsO,EAAQtO,aAAa,MAAOmO,GAC5BG,EAAQC,QAAUb,oBAClBY,EAAQE,OAASZ,iCACjBhO,SAAS2N,qBAAqB,QAAQ,GAAGhN,YAAY+N,QAErDzQ,OAAO6O,qBAAqBoB,oBAAoBC,cAAeL,qBAEjEjP,mCAAoC,EACpCX,YAAY2Q,oBAAqB,MAEnC,GAKJ,SAASC,iBAOH,IAQIJ,EAdJlQ,WAAaC,SAEf2P,qBAGI7P,SAAWG,WACTgQ,EAAU1O,SAASC,cAAc,WAC7BG,aAAa,OAAQ,mBAC7BsO,EAAQtO,aAAa,MAAO,6EAC5BsO,EAAQC,QAAUb,oBAClBY,EAAQE,OAASR,mBACjBpO,SAAS2N,qBAAqB,QAAQ,GAAGhN,YAAY+N,MAGjDA,EAAU1O,SAASC,cAAc,WAC7BG,aAAa,OAAQ,mBAC7BsO,EAAQtO,aAAa,MAAO,6EAC5BsO,EAAQC,QAAUb,oBAClBY,EAAQE,OAASR,mBACjBpO,SAAS2N,qBAAqB,QAAQ,GAAGhN,YAAY+N,IAM3D,SAASK,oBACP,IAAIC,EAAOhP,SAASC,cAAc,UAMlC,GALA+O,EAAK5O,aAAa,KAAM,sBACxB4O,EAAK5O,aAAa,OAAQ,uBAC1B4O,EAAK5O,aAAa,QAAS,sBAC3BJ,SAAS2N,qBAAqB,QAAQ,GAAGhN,YAAYqO,GACrD7Q,aAAe6B,SAAS4N,eAAe,sBACnCxB,OAAQ,CACV,IAAI6C,EAAQjP,SAASC,cAAc,UACnCgP,EAAM7O,aAAa,KAAM,0BACzB6O,EAAM7O,aAAa,UAAW,8CAC9B6O,EAAM7O,aAAa,QAAS,sBAC5BJ,SAAS2N,qBAAqB,QAAQ,GAAGhN,YAAYsO,GACrD,IAAIC,EAAQlP,SAASC,cAAc,UACnCiP,EAAM9O,aAAa,KAAM,mBACzB8O,EAAM9O,aAAa,UAAW,8CAC9B8O,EAAM9O,aAAa,QAAS,sBAC5BJ,SAAS2N,qBAAqB,QAAQ,GAAGhN,YAAYuO,IAKzD,SAASf,gBACP/P,gBAAkB,EACdO,WACFL,iBAEAL,OAAOsF,YAAY,qBAAsB,KAK7C,SAASuK,oBAAoB9K,GACR,qBAARA,GAAsC,kBAARA,IAAkBA,EAAM,qGACjE5E,gBAAkB,EACdO,WACFN,cAAc2E,GAEd/E,OAAOsF,YAAY,yBAA0B,KAKjD,SAAS5B,qBACiB,IAApBvD,kBACAI,YACGM,0BAA0BuO,yCAEjCjP,gBAAkB,EACdO,WACFN,cAAc,0NAEdJ,OAAOsF,YAAY,yBAA0B,MAKjD,SAAS4L,cAAc5D,GACrB,OAAO,IAAI3M,QAAQ2M,GAGrB,SAAS6D,qBACP,IACe5N,aAAa,kBAC1B2M,gBACA,MAAOzC,GACP1L,SAAS4N,eAAe,sBAAsBH,MAAM4B,QAAU,OAG9D,IAAIC,EAAWpN,UAAUqN,UAAU,uBACnC,GAAID,EAGAxB,oBAFWwB,EAASE,cAEA,qNAEA,4JAGtB1B,oBAAoB,sGAM1B,SAAS/L,uBACP,IAAI0N,EAAMzP,SAASC,cAAc,OACjCwP,EAAI/B,UAAY,6CAC6C,IAAzC+B,EAAI9B,qBAAqB,KAAK+B,OAEhD5B,oBAAoB,8LAIlBzM,2BACFyN,iBACUnQ,WAWkB,aAAxBqB,SAAS2P,YACXZ,oBACAK,sBAEAnR,OAAO4P,iBACL,QACA,SAAUQ,GACRU,oBACAK,wBAEF,GApBJnR,OAAO4P,iBACL,WACA,SAAUQ,GACW,6BAAfA,EAAMC,OACVS,oBACAK,yBAEF,GAmBN,SAASnO,iBAAiB2O,GACxBzR,aAAeyR,EAGjB,SAASxO,sBACP,QAA6C,qBAAlClD,YAAY2R,oBAAqC3R,YAAY2R,sB,+fCpoB/DC,EAAkB,WAE7B,OACE,mCACE,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,YAAd,8IACA,qBAAKA,UAAU,cAAf,4dACA,mBAAGA,UAAU,gBAAgBC,KAAK,MAAlC,qEAAsD,mBAAGD,UAAU,gBAAgBC,KAAK,MAAlC,wH,sCCTnDC,G,iCAAa,KACbC,EAAc,SAMdC,EAAa,QACbC,EAAoB,QAEpBC,EAAgB,WAChBC,EAAa,QACbC,EAAoB,gBACpBC,EAAY,CAAC,MAAO,QACpBC,EAAqB,CAChCC,KAAM,2EACNC,MAAO,iFACPC,MAAO,0DAEIC,EAAyB,CACpCC,WAAY,SACZC,SAAU,QACVC,YAAa,YACbC,SAAU,OACVC,OAAQ,MACRC,UAAW,UACXC,GAAI,MACJC,GAAI,MACJC,IAAK,OACLC,GAAI,MACJC,IAAK,QACLC,QAAS,GACTC,OAAQ,MACRC,UAAW,UACXC,WAAY,MACZC,UAAW,MACXC,OAAQ,IAIGC,EAAiB,CAAEC,SAAU,KAG7BC,EAAc,CACzBC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,WAIGC,EAAc,CAAEL,KAAM,UAAWC,MAAO,QAASC,IAAK,WCtCpDI,EAbM,SAACC,GACpB,IAAMC,EAA2B,OAAjBD,EAAME,UAAmBF,EAAME,SAASC,aAAeH,EAAME,SAASC,aAAarQ,KAAO,GACpGsQ,EAA2B,OAAjBJ,EAAME,UAAmBF,EAAME,SAASG,MAAQrC,EAAMgC,EAAME,SAASG,MAAMC,MAAM,KAAK,IAAK,GAC3G,OACE,sBAAKhD,UAAU,gBAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,uBAAMA,UAAU,WAAhB,UAA4B2C,EAA5B,OACA,sBAAM3C,UAAU,cAAhB,SAA+B8C,OAEjC,sBAAM9C,UAAU,YAAhB,kGCbS,MAA0B,oC,OCQ5BiD,EAA6B,SAACP,GACzC,IAAQQ,EAAcC,qBAAWC,IAAzBF,UACR,EAAoCG,mBAAmB,IAAvD,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAc,SAAClF,EAAyBmF,GACpCA,EAAKC,SACLpF,EAAMqF,kBAGLF,EAAKjF,IAECiF,EAAKjF,IAAIuC,WAAWb,KAC5BgD,EAAUU,UAAUC,KAAKJ,EAAKjF,KAC9BF,EAAMqF,kBAHNrF,EAAMqF,iBAKLF,EAAKK,SAASL,EAAKK,QAAQ,CACzBC,cAAezF,EACfmF,SAEFA,IAAOH,GACLA,EAAWtD,YAAWsD,EAAWtD,UAAU,IAC/CyD,EAAKzD,UAAU,kBACfuD,EAAcE,KAEdA,EAAKzD,UAAU,GACfuD,EAAc,OAIhBvD,EAAYgE,YAAW,wBAAyBtB,EAAM1C,WAsD5D,OACE,qBAAKvC,GAAIiF,EAAMjF,IAAM,eAAgBuC,UAAWA,EAAWtC,MAAOgF,EAAMhF,MAAxE,SAtDW,SAAPuG,EAAQC,EAAmBC,GA+C/B,OACE,oBAAgBnE,UAAU,cAAcoE,KAAK,OAA7C,SA/CiB,WACjB,GAAIF,EAAMvE,OAAO,EAAG,CAsClB,OAAOuE,EAAMG,KAAI,SAACZ,EAAMa,GACtB,OAtCiB,SAACb,EAAea,GAkCjC,OAAIb,EAAKc,UAjCe,SAACD,GAAD,OAAgB,oBAA+BtE,UAAU,iBAAiBoE,KAAK,aAAtD,aAAeE,GAiCrCE,CAAgBF,GAhCrB,SAACb,EAAea,GAAkB,IAAD,EAEjDG,EAAgBT,YAAW,gCAAiCP,EAAKiB,MACjEC,EAAgBX,YAAW,WAAY,CAAE,cAAuBY,IAAbnB,EAAKjF,KAC9D,CAAE,aAAciF,EAAKC,WACfmB,EAAcpB,EAAKS,OAAS,sBAAMlE,UAJX,kDAKvB0E,EAAOjB,EAAKiB,MAAQ,sBAAM1E,UAAWyE,IACrCN,EAAQV,EAAKU,OAAS,sBAAMnE,UAAU,uBAAhB,SAAwCyD,EAAKU,QACnEW,EAAUrB,EAAKzD,WAAayD,EAAKS,MAAoB,CACvD,yBAA0Ca,KAAK,SAASC,QAAS,SAACvU,GAAD,OAAsB+S,EAAY/S,EAAGgT,IAAOzD,UAAU,kBAAvH,UACG0E,EACAP,EACAU,IAHH,aAAmBpB,EAAKU,MAAxB,YAAiCG,KAK9B,CAAC,oBAAGrE,KAAMwD,EAAKjF,IAAKyG,OAAQxB,EAAKwB,OAE9BjF,UAAW2E,EACXK,QAAS,SAACvU,GAAD,OAAsB+S,EAAY/S,EAAGgT,IAC9C,gBAAeA,EAAKC,SAJtB,UAKGgB,EAAMP,IALT,YACYV,EAAKC,SAAWS,EAAQG,MAK1C,UAAIb,EAAKzD,iBAAT,aAAI,EAAgBkF,SAAS,0BAC1BJ,EAAQjB,KAAK,qBAAuC7D,UAAWyD,EAAKzD,UAAvD,SAAkE,qBAAKA,UAAU,4BAAf,SAA4CyD,EAAKU,SAAnH,aAAgBV,EAAKU,MAArB,YAA8BG,KAC9C,IAAMa,EAAW1B,EAAKS,OAAST,EAAKzD,WAAciE,EAAKR,EAAKS,MAAOT,EAAKU,OAASiB,eACjF,OACE,qBACEpF,UAAWyD,EAAKzD,UAAWtC,MAAO+F,EAAK/F,MACvC0G,KAAK,WAFP,UAGGU,EACAK,IAJH,aAAeb,EAAf,YAAwBb,EAAKzD,YASrBqF,CAAe5B,EAAMa,GAG1BgB,CAAW7B,EAAMa,MAG5B,OAAO,KAKJiB,IADMpB,GAORF,CAAKvB,EAAM8C,OAAS,GAAI,a,wCCvFlBC,EAAU,uCAEVC,EAAW,oCAEXC,EAAW,gCAElBC,EAAOC,IAAMC,OAAO,CACxBC,iBAAiB,EACjBC,QAASP,IAGEQ,EAAQJ,IAAMC,OAAO,CAChCE,QAASN,IAGEQ,EAAQL,IAAMC,OAAO,CAChCK,QAAS,CACPC,OAAQ,mBACR,eAAgB,kCAChB,mBAAoB,kBAEtBJ,QAASL,IAGXC,EAAKS,aAAaC,QAAQC,KAAI,SAACC,GAE7B,OADAA,EAAOL,QAAQM,cAAf,iBAAyCC,aAAaC,QAAQ,UACvDH,KAGTZ,EAAKS,aAAalJ,SAASoJ,KACzB,SAACC,GAAD,OAAYA,IADd,uCAEE,WAAOjT,GAAP,mBAAAqT,EAAA,yDACQC,EAAkBtT,EAAMiT,QAC1BjT,EAAM4J,UAAsC,MAA1B5J,EAAM4J,SAAS2J,SAAkBvT,EAAMiT,QAAWjT,EAAMiT,OAAOO,SAFvF,wBAGIF,EAAgBE,UAAW,EAH/B,kBAK6BlB,IAAMmB,IAAN,UAA2BvB,EAA3B,gBAAkD,CAAEM,iBAAiB,IALlG,cAKY5I,EALZ,OAMMuJ,aAAaO,QAAQ,QAAS9J,EAASoB,KAAK2I,OAAOC,QANzD,kBAOavB,EAAKU,QAAQO,IAP1B,wCASY,IAAIO,MAAM,iIATtB,oCAWa7T,EAAM4J,WAAY,CAAC,IAAK,KAAK+H,SAAS3R,EAAM4J,SAAS2J,QAXlE,qBAYQvT,EAAM4J,SAASoB,OAAQhL,EAAM4J,SAASoB,KAAK8I,OAZnD,uBAaUxK,EAAUtJ,EAAM4J,SAASoB,KAAK8I,OAAOC,QAAO,SAAC7L,EAAgB8L,GAE/D,OADA9L,EAAM,UAAMA,EAAN,aAAiB8L,KADX,oBAGEhU,EAAM4J,SAAS2J,SACzB,IAAIM,MAAMvK,GAjBtB,cAkBiB,IAAIuK,MAAJ,oBAAuB7W,KAAKC,UAAU+C,KAlBvD,cAoBQA,EApBR,0DAFF,uDA0BA0S,EAAMI,aAAalJ,SAASoJ,KAC1B,SAACC,GAAD,OAAYA,IADd,uCAEE,WAAOjT,GAAP,eAAAqT,EAAA,2DACMrT,EAAM4J,UAAY5J,EAAM4J,SAAS2J,QAAU,CAAC,IAAK,KAAK5B,SAAS3R,EAAM4J,SAAS2J,SADpF,oBAEQvT,EAAM4J,SAASoB,OAAQhL,EAAM4J,SAASoB,KAAK8I,OAFnD,sBAGUxK,EAAUtJ,EAAM4J,SAASoB,KAAK8I,OAAOC,QAAO,SAAC7L,EAAgB8L,GAE/D,OADA9L,EAAM,UAAMA,EAAN,aAAiB8L,KADX,oBAGEhU,EAAM4J,SAAS2J,SACzB,IAAIM,MAAMvK,GAPtB,aAQiB,IAAIuK,MAAJ,oBAAuB7T,EAAM4J,SAAS2J,SARvD,8BASavT,EAAMsJ,QAAQqI,SAAS,kBAAkB,IAAIkC,MAAM,uQAThE,cAUQ7T,EAVR,4CAFF,uDAeeqS,IC9DH4B,ED8DG5B,IEnBA6B,EA9COC,aAAS,SAAChF,GAA+B,IAAD,EAC3D,EAAsCS,qBAAWC,IAA1CF,EAAP,EAAOA,UAAWyE,EAAlB,EAAkBA,iBACZC,GAAW,UAAAD,EAAiBE,KAAKpK,UAAtB,eAA0Bf,aAAc,MACnDoL,EAAa,UAAMzH,EAAN,YAA2BuH,GACxC1D,EAAmB,CACtB,CAAEC,MAAO,iFAAiBnE,UAAW,uBACnCkE,MAAM,CAAC,CAACC,MAAM,uCAAUO,KAAK,UAAWR,MAAM,CAC5C,CAACC,MAAM,iHACP3F,IAAI,GAAD,OAAIsJ,EAAJ,SACH,CAAC3D,MAAM,qDAAmB3F,IAAI,GAAD,OAAIsJ,EAAJ,SAAyB,CAAC3D,MAAM,qEAAoB3F,IAAI,GAAD,OAAIsJ,EAAJ,SAAyB,CAAC3D,MAAM,qDAAmB3F,IAAI,GAAD,OAAIsJ,EAAJ,SAAyB,CAAC3D,MAAM,eAAW3F,IAAI,GAAD,OAAIsJ,EAAJ,SAAyB,CAAC3D,MAAM,eAAW3F,IAAI,GAAD,OAAIsJ,EAAJ,SAAyB,CAAC3D,MAAM,2DAAoB3F,IAAI,GAAD,OAAIsJ,EAAJ,SAAyB,CAAC3D,MAAM,sDAAoB3F,IAAI,GAAD,OAAIsJ,EAAJ,SAAyB,CAAC3D,MAAM,eAAW3F,IAAI,GAAD,OAAIsJ,EAAJ,SAAyB,CAAC3D,MAAM,+DAAc3F,IAAI,GAAD,OAAIsJ,EAAJ,UAA0B,CAAC3D,MAAM,mDAAY3F,IAAI,GAAD,OAAIsJ,EAAJ,YACre,CAAE3D,MAAO,uCAAUT,UAAWiE,EAAiBE,KAAKE,UAAYrD,KAAK,WAAYR,MAAO,CAAC,CAACC,MAAM,6CAAWO,KAAK,UAAWO,OAAO,SAAUzG,IAAI,GAAD,OAAIiH,EAAJ,sBAAyBmC,IAAW,CAAEzD,MAAM,yDAAaO,KAAK,UAAWO,OAAO,SAAUzG,IAAI,GAAD,OAAIiH,EAAJ,sBAAyBmC,MACrQ,CAAEzD,MAAO,uCAAWO,KAAK,UAAWR,MAAO,CAAC,CAACC,MAAM,iFAAiBO,KAAK,aAAclG,IAAI4B,GAAY,CAAC+D,MAAM,uCAAUO,KAAK,gBAAiBlG,IAAI,UACpJ,CAAC+F,WAAW,GACZ,CAAEJ,MAAO,iCAASnE,UAAW,uBAC3BkE,MAAO,CAAC,CAACC,MAAM,6CAAWO,KAAK,UAAWlG,IAAI0B,GAAY,CAACiE,MAAM,iFAAiBO,KAAK,UAAWlG,IAAI4B,GAAY,CAAC+D,MAAM,iCAASO,KAAK,cAAeZ,QAAQ,WAAKZ,EAAU8E,cAG7KxJ,EAAMkE,EAAMuF,UAmBlB,OAlBmB,SAAbC,EAAchE,GAClB,IAAIiE,GAAW,EAcf,OAbAjE,EAAMkE,SAAQ,SAAC3E,GAKb,GAJIA,EAAKjF,MAAQA,IACfiF,EAAKzD,UAAU,kBACfmI,GAAW,GAETA,EAAU,OAAO,EACjB1E,EAAKS,OACHgE,EAAWzE,EAAKS,SAClBT,EAAKzD,UAAYyD,EAAKzD,WAAa,kBACnCmI,GAAW,MAIVA,EAETD,CAAWhE,GAET,sBAAKlE,UAAU,iBAAf,UACI,eAAC,IAAD,CAAMA,UAAU,OAAOqI,GAAG,KAA1B,UACE,qBAAK5K,GAAG,WAAWuC,UAAU,aAAasI,IAAKC,EAAQC,IAAI,wCAC3D,sBAAMxI,UAAU,WAAhB,+CAEF,cAAC,EAAD,CAAawF,MAAOtB,U,QCpDb,MAA0B,gCCO5BuE,EAA8B,SAAC/F,GAC1C,IAAMkB,EAAU8E,cA4ChB,OACE,oBAAI1I,UA5BY,0BA4BhB,SA3BiB,SAACkE,GAClB,IAAMoB,EAAa,SAAC7B,EAAea,GAgB/B,OAAIb,EAAKc,UAfe,SAACD,GAAD,OAAgB,oBAA+BtE,UAAU,iBAAiBoE,KAAK,aAAtD,aAAeE,GAerCE,CAAgBF,GAdrB,SAACb,EAAea,GACpC,IAAMG,EAAgBT,YAAW,KAAMP,EAAKiB,MACtCA,EAAOjB,EAAKiB,MAAQ,mBAAG1E,UAAWyE,IAClCN,EAAQV,EAAKU,OAAS,+BAAOV,EAAKU,QAClCW,EAAU,yBACZC,KAAK,SACLC,QAAS,SAACvU,GAAD,OA1BD,SAAC6N,EAAyBmF,GACxCA,EAAKC,SACPpF,EAAMqF,kBAGHF,EAAKjF,IAECiF,EAAKjF,IAAIuC,WAAWb,KAC7B0D,EAAQC,KAAKJ,EAAKjF,KAClBF,EAAMqF,kBAHNrF,EAAMqF,iBAKJF,EAAKK,SAASL,EAAKK,QAAQ,CAC7BC,cAAezF,EACfmF,UAauCD,CAAY/S,EAAGgT,IAC9CzD,UAAU,SAHE,UAIT0E,EACAP,IALS,aAAmBV,EAAKU,MAAxB,YAAiCG,IAOjD,OAAO,6BAA0BQ,GAA1B,cAAgBR,IAIbe,CAAe5B,EAAMa,IAErC,OAAIJ,EAAMvE,OAAS,EACVuE,EAAMG,KAAI,SAACZ,EAAMa,GACpB,OAAOgB,EAAW7B,EAAMa,MAEhB,KAITiB,CAAW7C,EAAM8C,OAAS,OC/CtBmD,EAAgD,SAACjG,GAC5D,IAAMkB,EAAU8E,cAkDhB,OACE,oBAAI1I,UAlCY,gCAkChB,SAjCiB,SAACkE,GAClB,IAAMoB,EAAa,SAAC7B,EAAkBa,GAsBlC,OAAIb,EAAKc,UArBe,SAACD,GAAD,OAAgB,oBAA+BtE,UAAU,iBAAiBoE,KAAK,aAAtD,aAAeE,GAqBrCE,CAAgBF,GApBrB,SAACb,EAAkBa,GACvC,IAAMtE,EAAagE,YAAW,oBAAqBP,EAAKzD,WAClDyE,EAAgBT,YAAW,KAAMP,EAAKiB,KAAMjB,EAAKzD,WACjD0E,EAAOjB,EAAKiB,MAAQ,mBAAG1E,UAAWyE,IAClCmE,EAAUnF,EAAKmF,SAAW,qBAAK5I,UAAU,uBAAf,SAAuCyD,EAAKmF,UACtEzE,EAASV,EAAKU,OAASV,EAAKU,MAAMnB,MAAM,WAAY,CAAC,GAAG,IACxD8B,EAAU,yBACZC,KAAK,SAAS/E,UAAU,SACxBgF,QAAS,SAACvU,GAAD,OA5BD,SAAC6N,EAAyBmF,GACxCA,EAAKC,SACPpF,EAAMqF,kBAGHF,EAAKjF,IAECiF,EAAKjF,IAAIuC,WAAWb,KAC7B0D,EAAQC,KAAKJ,EAAKjF,KAClBF,EAAMqF,kBAHNrF,EAAMqF,iBAKJF,EAAKK,SAASL,EAAKK,QAAQ,CAC7BC,cAAezF,EACfmF,UAeuCD,CAAY/S,EAAGgT,IAFlC,UAGTiB,EACH,sBAAK1E,UAAWA,EAAhB,UACG4I,EACD,sBAAK5I,UAAU,sBAAf,UACGmE,EAAM,GADT,IACa,4BAAIV,EAAKoF,SADtB,IACmC1E,EAAM,WAP/B,aAAmBV,EAAKmF,QAAxB,YAAmCtE,IAWnD,OAAO,6BAA0BQ,GAA1B,cAAgBR,IAIbe,CAAe5B,EAAMa,IAErC,OAAIJ,EAAMvE,OAAS,EACVuE,EAAMG,KAAI,SAACZ,EAAMa,GACpB,OAAOgB,EAAW7B,EAAMa,MAEhB,KAITiB,CAAW7C,EAAM8C,OAAS,OC/C7BsD,EAAc,SACPC,EAAerB,aAAS,SAAChF,GAA6B,IAAD,YAChE,EAAiCS,qBAAWC,IAArC4F,EAAP,EAAOA,YAAa9F,EAApB,EAAoBA,UACd+F,EAAQC,wBAAc,CAAEC,MAAO,uBAC/BC,EAAuBpF,YAAW,eAAe,CAAC,6BAA6BgF,EAAYK,sBAC3FC,EAA6BtF,YAAW,qBAAsB,CAAC,kBAAkBgF,EAAYO,4BAM7FrF,EAAmB,CACrB,CAACC,MAAM,2EAAgBO,KAAK,UAAWlG,IAAI,GAAD,OAAI+B,EAAJ,sBAAkB2C,EAAUN,gBAA5B,aAAkB,EAAoBnF,KAChF,CAAC0G,MAAM,uFAAkBO,KAAK,cAAelG,IAAI,GAAD,OAAIgC,EAAJ,sBAAyB0C,EAAUN,gBAAnC,aAAyB,EAAoBC,aAAapF,KAC1G,CAAC0G,MAAM,iCAASO,KAAK,WAAYlG,IAAI,GAAD,OAAI8B,IACxC,CAAC6D,MAAM,iCAASO,KAAK,eAAgBZ,QAAQ,WAAKZ,EAAU8E,YAE1DwB,EAA4B,CAC9B,CAACrF,MAAM,8CAAD,OAAY2E,EAAZ,6EAAyCF,QAAQ,iCAAS5I,UAAU,YAAa0E,KAAK,UAAWmE,OAAO,EAAGrK,IAAI,MACrH,CAAC2F,MAAM,oDAAD,OAAa2E,EAAb,6EAA0CF,QAAQ,uCAAU5I,UAAU,SAAU0E,KAAK,SAAUmE,OAAO,EAAGrK,IAAI,MACnH,CAAC2F,MAAM,uHAAD,OAAyB2E,EAAzB,6EAAsDF,QAAQ,6CAAWlE,KAAK,SAAUmE,OAAO,EAAGrK,IAAI,MAC5G,CAAC2F,MAAM,6EAAD,OAAkB2E,EAAlB,6EAA+C9I,UAAU,WAAY4I,QAAQ,yDAAalE,KAAK,SAAUmE,OAAO,EAAGrK,IAAI,MAC7H,CAAC2F,MAAM,0DAAD,OAAc2E,EAAd,6EAA2CF,QAAQ,+DAAe5I,UAAU,YAAa0E,KAAK,SAAUmE,OAAO,EAAGrK,IAAI,MAC5H,CAAC2F,MAAM,sGAAD,OAAuB2E,GAAgBF,QAAQ,+DAAc5I,UAAU,YAAa0E,KAAK,SAAUmE,OAAO,EAAGrK,IAAI,OAEpHiL,EAAeD,EAAYlC,QAAO,SAACoC,EAAUjG,EAAMkG,GACxD,OAAOA,EAAOlG,EAAKoF,SAClB,GAEIe,EAA4B,OAAjBlH,EAAME,UAAmBF,EAAME,SAASiH,YAAxC,oBACdnH,EAAME,SAASiH,mBADD,aACd,EAA4BC,OADd,sBACwBpH,EAAME,SAASiH,mBADvC,aACwB,EAA4BE,QAAQ,GAD5D,aACkE,UAAArH,EAAME,SAASiH,mBAAf,mBAA4BG,eAA5B,eAAqCC,OAAO,KAAK,IAAO,GAC5I,OACE,sBAAKjK,UAAU,gBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,wBAAQ+E,KAAK,SAAS/E,UAAU,qBAAqBgF,QAAS,WA3B9DiE,GAASD,EAAYkB,iBAAkBlB,EAAYmB,mBAAkB,GAChElB,IAAUD,EAAYkB,iBAAkBlB,EAAYmB,mBAAkB,GAC1EnB,EAAYoB,iBAyBb,SACE,mBAAGpK,UAAU,qBAAb,iBAEF,sBAAMA,UAAU,qBAChB,qBAAKA,UAAU,6BAAf,SACE,+BAAO0C,EAAM2H,aAGjB,qBAAKrK,UAAU,eAAf,SACE,qBAAIA,UAAU,cAAd,UACE,qBAAIA,UAAWsJ,EAAf,UACE,yBAAQvE,KAAK,SAAS/E,UAAU,SAChCgF,QAAS,kBAAIgE,EAAYsB,4BAA2B,IADpD,UAEE,mBAAGtK,UAAU,eACb,sBAAMA,UAAU,eAAhB,SAAgCyJ,OAElC,cAAC,EAAD,CAAmBjE,MAAOgE,OAE5B,qBAAIxJ,UAAWoJ,EAAf,UACE,yBAAQrE,KAAK,SAAS/E,UAAU,SAASgF,QAAS,kBAAIgE,EAAYuB,sBAAqB,IAAvF,UACE,qBAAKjC,IAAKkC,EAAKhC,IAAI,GAAGxI,UAAU,kBAChC,sBAAMA,UAAU,eAAhB,SAAgC4J,OAElC,cAAC,EAAD,CAAapE,MAAOtB,OAEtB,oBAAIlE,UAAU,qBAAd,SACE,wBAAQ+E,KAAK,SAAS/E,UAAU,SAASgF,QAAS,kBAAIgE,EAAYyB,uBAAsB,IAAxF,SACE,mBAAGzK,UAAU,qCLxEd0K,GAAU,IAAIC,IAA8B,CACvD,CAAC,QAAS,CAAEN,MAAO,0DAAc3F,KAAM,aAAckG,MAAO,sBAC5D,CAAC,UAAW,CAAEP,MAAO,oDAAa3F,KAAM,eAAgBkG,MAAO,qBAC/D,CAAC,UAAW,CAAEP,MAAO,8CAAY3F,KAAM,cAAekG,MAAO,sBAC7D,CAAC,WAAY,CAAEP,MAAO,4EAAiB3F,KAAM,cAAekG,MAAO,sBACnE,CAAC,YAAa,CAAEP,MAAO,sEAAgB3F,KAAM,gBAAiBkG,MAAO,sBACrE,CAAC,WAAY,CAAEP,MAAO,wCAAW3F,KAAM,iBAAkBkG,MAAO,sBAChE,CAAC,WAAY,CAAEP,MAAO,8CAAY3F,KAAM,eAAgBkG,MAAO,sBAC/D,CAAC,YAAa,CAAEP,MAAO,0DAAc3F,KAAM,kBAAmBkG,MAAO,sBACrE,CAAC,aAAc,CAAEP,MAAO,oDAAa3F,KAAM,mBAAoBkG,MAAO,yB,SAE5DpD,O,qBAAAA,I,eAAAA,I,qBAAAA,I,kBAAAA,M,2BMRCqD,GAAqB,CAChCC,eAAgB,CACdC,KAAM,CAAC,KAAM,UAAW,QAAS,SAAU,SAAU,cACrDC,QAAS,CAAC,OAAQ,iBAEpB9F,SAAU,CAAC,OAAQ,gBACnB+F,KAAM,CAAEF,KAAM,CAAC,KAAM,SAAUC,QAAS,CAAC,gBACzCnI,aAAc,CAAEkI,KAAM,CAAC,KAAM,UAEVG,G,uIAEnB,WAAuB/B,GAAvB,0FACSvD,EAAKuF,KAAL,UAAa1F,EAAb,2CAAyC0D,GAAU0B,MAD5D,2C,8DCyCanD,gBA9CyC,SAAChF,GAAmC,IAAD,EACzF,EAAiCS,qBAAWC,IAArC4F,EAAP,EAAOA,YAAa9F,EAApB,EAAoBA,UACdlD,EAAYgE,YAAW,uBAAwB,CAAC,8BAA+BgF,EAAYoC,uBACjG,EAAoC/H,mBAA8B,MAAlE,mBAAOgI,EAAP,KAAmBC,EAAnB,KACA,EAAmBjI,mBAAqB,MAAxC,mBAAOkI,EAAP,KAAWC,EAAX,KAiBA,OAhBAC,qBAAU,WAC+B,IAAD,EAA5B,OAANF,GAAcrI,EAAUN,WACtBM,EAAUN,SAASG,MAAMmC,SAAS,SACpCsG,EAAK,CAAEE,MAAO,CAAE,qBAEhBF,EAAK,CAACG,wBAAuB,UAAEzI,EAAUN,gBAAZ,aAAE,EAAoBC,aAAapF,GAAIiO,MAAO,CAAE,wBAEhF,CAACH,EAAGrI,EAAUN,SAAd,UAAwBM,EAAUN,gBAAlC,aAAwB,EAAoBC,eAE/C4I,qBAAU,WACS,OAAbJ,GAAyB,OAAJE,GAAUL,GAAaU,UAAU,CAACL,EAAEA,EAAGM,MAAO,MACtE/P,MAAK,SAAAqB,GAAQ,OAAEmO,EAAcnO,EAASoB,SACtCuN,OAAM,kBAAIR,EAAc,SACzB,CAACD,EAAYE,IAIf,sBAAKvL,UAAWA,EAAhB,UACE,8FACA,qBAAKA,UAAU,kBAAf,SACiB,OAAbqL,GAAyC,IAApBA,EAAW1L,OAAa,qGAAuB0L,EAAWhH,KAAI,SAAAZ,GACnF,IAAMsI,EAAoBrB,GAAQ1D,IAAIvD,EAAKuI,QAC3C,QAA0BpH,IAAtBmH,EAAiC,MAAM3E,MAAM,2DACjD,IAAM6E,EAAU,IAAIC,KAAKzI,EAAK0I,YAAYC,eAC5C,KAAMlK,GACJ,OACF,sBAAKlC,UAAU,iBAAf,UACE,sBAAMA,UAAU,sBAAsBtC,MAAO,CAAE2O,gBAAiBN,EAAkBnB,OAAlF,SACQ,mBAAG5K,UAAW+L,EAAkBrH,SAExC,sBAAK1E,UAAU,uBAAf,UAAuCiM,EAAvC,IAAiDF,EAAkB1B,SACnE,sBAAKrK,UAAU,wBAAf,UACGyD,EAAKmF,QAAU,qCAAE,qDAAF,IAAe,6BAAKnF,EAAKmF,aAAmB,GAC3DnF,EAAKoF,OAAS,8BAAG,qDAAapF,EAAKoF,UAAc,GAClD,qDAHF,IAGe,6BAAKpF,EAAKwH,KAAKqB,aARK7I,EAAKhG,e,kCC3BnC8O,GAAkD,SAAC7J,GAC9D,OAAIA,EAAMwB,MAEV,sBAAKlE,UAAU,gBAAf,UACE,cAAC,KAAD,CAASiF,OAAO,yFAAyFuH,SAAS,SAClH,cAAC,KAAD,CAAWhH,MAAO9C,EAAMwB,MAAOuI,OAAQ,GAAKC,UAAU,OAAO3H,KAAK,mBAEzD,8B,iBCqFE2C,gBAvFuB,SAAChF,GACrC,MAAiCS,qBAAWC,IAArC4F,EAAP,EAAOA,YAAa9F,EAApB,EAAoBA,UACdkI,EAAqBpC,EAAYoC,qBACjCuB,EAAuB3D,EAAY2D,uBACnCtD,EAAoBL,EAAYK,oBAChCE,EAA0BP,EAAYO,0BAMtCqD,EAAe5I,YAAW,8DAA8D,CAAC,yBAA0B2I,GAAuB,CAAC,uBAAwB3D,EAAYkB,mBACrL,EAAgC7G,mBAA2B,MAA3D,mBAAOT,EAAP,KAAiBiK,EAAjB,KACMC,EAAS5J,EAAU+H,OAAOxN,GAChCgO,qBAAU,gBACO7G,IAAVkI,GAAoC,OAAblK,GAC3BiK,EAAY3J,EAAUN,YACrB,CAACkK,EAAQlK,EAAUM,EAAUN,WAEjC,IAAMkC,EAAWkE,EAAY+D,UAAY,cAAC,KAAD,IAAqBrK,EAAMoC,QAoDpE,OAnDAkI,aAAU,KAAM,CACdjM,WAAY,sEACZC,SAAU,mDACVC,YAAa,gEACbC,SAAU,wFACVC,OAAQ,iCACRC,UAAW,8CACX6L,SAAU,iCACV3L,GAAI,0DACJC,IAAK,yFACLC,GAAI,uCACJC,IAAK,+FACLE,OAAQ,iCACRC,UAAW,8CACXC,WAAY,oDACZC,UAAW,oDACXC,OAAQ,2BACRmL,MAAO,mDACPvd,MAAO,yDACPwd,SAAU,sDACVC,SAAU,kEACVC,QAAS,+CACTC,WAAY,gDACZC,OAAQ,eACRte,OAAQ,qBACRue,UAAW,6CACXC,SAAU,iCACVC,SAAU,uCACVC,YAAa,6CACbC,WAAY,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BACvD,2BAAQ,uCAAU,mDAAY,6CAAW,uCAAU,8CACvDC,gBAAiB,CAAC,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBACjD,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,sBACvCC,SAAU,CAAC,qEAAe,qEAAe,6CAAW,iCAAS,6CAAW,6CAAW,8CACnFC,cAAe,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBACpDC,YAAa,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAClDC,WAAY,qBACZC,SAAU,EACVC,OAAO,EACPC,oBAAoB,EACpBC,WAAY,GACZjM,MAAO,qBACPkM,KAAM,uCACNjM,IAAK,2BACLkM,cAAe,4EACfC,SAAU,iCACVC,SAAU,2BACVC,WAAY,uCACZC,WAAY,6CACZC,WAAY,kEAGd,sBAAK5O,UAAW4M,EAAc,aAAW,QAAzC,UACE,sBAAK5M,UAAU,yBAAyBgF,QAAS,WAlE7CoG,EAAoBpC,EAAYyB,uBAAsB,GACjDpB,EAAmBL,EAAYuB,sBAAqB,GACpDhB,GAAyBP,EAAYsB,4BAA2B,IAgEzE,UACE,cAACvB,EAAD,CAAesB,MAAS3H,EAAM2H,MAAQzH,SAAUA,IAChD,sBAAK5C,UAAU,iBAAf,UAAiC8E,EAC/B,cAAC,GAAD,CAAoBZ,MAAOxB,EAAMmM,iBAEnC,cAAC,EAAD,CAAcjM,SAAUA,OAE1B,cAAC,EAAD,CAAgBqF,UAAWvF,EAAMlE,MACjC,cAAC,GAAD,IACA,qBAAKwB,UAAU,kBACf,qBAAKA,UAAU,uBAAuBgF,QAAS,WAAKgE,EAAYmB,mBAAkB,Y,sDCrGzE2E,GAAa,CACxB,CAAEC,KAAM,EAAGvc,KAAM,iFAAiBwc,OAAQ,sBAC1C,CAAED,KAAM,EAAGvc,KAAM,6FAAmBwc,OAAQ,sBAC5C,CAAED,KAAM,EAAGvc,KAAM,wIAA2Bwc,OAAQ,gBACpD,CAAED,KAAM,EAAGvc,KAAM,4HAAyBwc,OAAQ,YCkDnCtH,gBA7CK,WAAO,IAAD,EACjBC,EAAqBxE,qBAAWC,IAAhCuE,iBACFE,EAAQF,EAAiBE,KAIhC,OAAQ,mCACJ,eAAC,IAAD,CAAM7H,UAAU,0BAA0BiP,OAJ9B,WACZ,OAAO,mJAGP,UACE,sBAAKjP,UAAU,4BAAf,UACE,sBAAKA,UAAU,yBAAf,UACE,uBAAOkP,QAAQ,SAAf,4CACA,cAAC,KAAD,CAAWzR,GAAG,SAAS5B,MAAOgM,EAAKsH,OAAQpK,KAAK,OAC9CqK,YAAY,oJAA4B1L,UAAQ,OAEpD,sBAAK1D,UAAU,yBAAf,UACE,uBAAOkP,QAAQ,SAAf,4CACA,cAAC,KAAD,CAAWzR,GAAG,SAAS5B,MAAOgM,EAAKpL,OAAQiH,UAAQ,EAACqB,KAAK,OAAOqK,YAAY,yJAE9E,sBAAKpP,UAAU,0BAAf,UACE,uBAAOkP,QAAQ,OAAf,sCACA,cAAC,KAAD,CAAUzR,GAAG,OAAQ4R,WAAW,WAAWxT,MAAOgM,EAAKE,UAAWrE,UAAQ,OAE5E,sBAAK1D,UAAU,0BAAf,UACE,uBAAOkP,QAAQ,YAAf,+GACA,cAAC,KAAD,CAAUI,QAAQ,YAAaF,YAAY,6CAAUG,WAAS,EAC5DC,QAAS3H,EAAK4H,SAAY,CAAC,EAAG,GAAGvK,SAAS2C,EAAK4H,UAAYX,GAAWY,QAAO,SAACjM,GAAD,MAAQ,CAAC,EAAE,EAAE,GAAGyB,SAASzB,EAAKsL,SAASD,GAAcA,GAAWY,QAAO,SAACjM,GAAD,MAAQ,CAAC,EAAE,GAAGyB,SAASzB,EAAKsL,SAASY,YAAY,OACrM9T,MAAOiT,GAAWc,MAAK,SAAAC,GAAE,OAAEA,EAAGd,OAAOlH,EAAK4H,YAAWK,SAAU,SAACrf,GAAD,OAAMkX,EAAiBE,KAAK4H,SAAWhf,EAAEoL,MAAMkT,MAAMrL,SAAUmE,EAAKpK,IAAM,UAI/I,cAAC,KAAD,IACA,sBAAKuC,UAAU,gBAAf,UACE,sBAAKA,UAAU,iFAAf,UACE,qBAAKA,UAAU,gCAAgCtC,MAAO,CAACqS,QAAQ,UAA/D,oGACC,qBAAK/P,UAAU,iCAAiCtC,MAAO,CAACsS,WAAW,IAAID,QAAQ,UAA/E,SAA6FlI,EAAKoI,WAAP,UAAuBpI,EAAKqI,WAA5B,YAA0CrI,EAAKoI,WAA/C,mCAAgEpI,EAAKsI,mBAArE,aAAgE,EAAkB/D,eAAe,KAAM5J,IAAiB,0BAEtN,sBAAKxC,UAAU,iFACbtC,MAAO,CAAC0S,WAAW,cAAeC,gBAAgB,SADpD,UAEE,qBAAKrQ,UAAU,gCAAgCtC,MAAO,CAACqS,QAAQ,UAA/D,mDACA,qBAAK/P,UAAU,iCAAgCtC,MAAO,CAACsS,WAAW,IAAIM,WAAYzI,EAAK0I,UAAY,uBAAwB,UAAW3F,MAAO/C,EAAK0I,UAAY,iBAAmB,UAAWR,QAAQ,UAApM,SAAgNlI,EAAK0I,UAAY,mDAAa,yEAhCrL5I,EAAiBE,KAAKpK,S,kBClB9E+S,I,MAAmB,MACnBC,GAA2B,CACtC,CAAEC,QAAS,IAAK3B,KAAM,IAAK4B,WAAY,4MAAwC/U,MAAM,GACrF,CACE8U,QAAS,IACT3B,KAAM,WACN4B,WAAY,mUACZ/U,MAAM,GAER,CAAE8U,QAAS,IAAK3B,KAAM,WAAO4B,WAAY,uUAA+D/U,MAAM,GAC9G,CACE8U,QAAS,IACT3B,KAAM,WACN4B,WAAY,0ZACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,WACN4B,WAAY,8YACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,aACN4B,WAAY,ybACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,aACN4B,WAAY,+bACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,aACN4B,WAAY,sfACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,aACN4B,WAAY,wdACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,aACN4B,WAAY,kgBACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,WACN4B,WAAY,6YACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,WACN4B,WAAY,8YACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,WACN4B,WAAY,iYACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,WACN4B,WAAY,oZACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,YACN4B,WAAY,4XACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,YACN4B,WAAY,4XACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,YACN4B,WAAY,uTACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,YACN4B,WAAY,sZACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,cACN4B,WAAY,wVACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,cACN4B,WACE,+gBACF/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,cACN4B,WAAY,iXACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,cACN4B,WAAY,waACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,cACN4B,WAAY,gcACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,YACN4B,WAAY,sTACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,YACN4B,WAAY,2QACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,YACN4B,WAAY,+PACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,YACN4B,WAAY,iTACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,YACN4B,WACE,2pBACF/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,YACN4B,WAAY,igBACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,YACN4B,WAAY,wZACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,eACN4B,WAAY,2PACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,qBACN4B,WAAY,8eACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,oBACN4B,WAAY,wVACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,0BACN4B,WACE,ulBACF/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,oBACN4B,WAAY,wVACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,0BACN4B,WACE,ulBACF/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,oBACN4B,WAAY,wVACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,0BACN4B,WACE,ulBACF/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,iBACN4B,WAAY,idACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,iBACN4B,WACE,+nBACF/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,YACN4B,WAAY,2ZACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,YACN4B,WAAY,wdACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,cACN4B,WACE,irBACF/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,cACN4B,WAAY,mcACZ/U,MAAM,GAER,CACE8U,QAAS,IACT3B,KAAM,YACN4B,WACE,4iBACF/U,MAAM,GAER,CACE8U,QAAS,KACT3B,KAAM,KACN4B,WAAY,gQACZ/U,MAAM,GAER,CACE8U,QAAS,KACT3B,KAAM,KACN4B,WAAY,8OACZ/U,MAAM,GAER,CACE8U,QAAS,KACT3B,KAAM,UACN4B,WAAY,wbACZ/U,MAAM,GAER,CACE8U,QAAS,KACT3B,KAAM,IACN4B,WAAY,2MACZ/U,MAAM,GAER,CACE8U,QAAS,KACT3B,KAAM,IACN4B,WAAY,4MACZ/U,MAAM,GAER,CACE8U,QAAS,KACT3B,KAAM,IACN4B,WAAY,6MACZ/U,MAAM,IA4DGgV,GAAe,CAC1B,CAAE7B,KAAM,KAAMvc,KAAM,mFACpB,CAAEuc,KAAM,MAAOvc,KAAM,6HACrB,CAAEuc,KAAM,MAAOvc,KAAM,uHACrB,CAAEuc,KAAM,MAAOvc,KAAM,wCACrB,CAAEuc,KAAM,OAAQvc,KAAM,iHACtB,CAAEuc,KAAM,OAAQvc,KAAM,2GACtB,CAAEuc,KAAM,MAAOvc,KAAM,sJACrB,CAAEuc,KAAM,MAAOvc,KAAM,wCACrB,CAAEuc,KAAM,KAAMvc,KAAM,sEACpB,CAAEuc,KAAM,MAAOvc,KAAM,gEACrB,CAAEuc,KAAM,OAAQvc,KAAM,qIACtB,CAAEuc,KAAM,MAAOvc,KAAM,iHACrB,CAAEuc,KAAM,OAAQvc,KAAM,+FACtB,CAAEuc,KAAM,KAAMvc,KAAM,mIACpB,CAAEuc,KAAM,MAAOvc,KAAM,+FAsBVqe,GAAkC,CAC7CC,GAAI,EACJC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,KAAM,EACNC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLC,GAAI,EACJC,IAAK,EACLC,KAAM,GACNC,IAAK,GACLC,KAAM,GACNC,GAAI,GACJC,IAAK,IAEMJ,GAAO,GAiBPK,GAAqC,CAChD,CAAE9C,KAAM,EAAGvc,KAAM,wEAAkBsf,OAAQ,QAASC,OAAQ,SAAUC,OAAQ,WAC9E,CAAEjD,KAAM,EAAGvc,KAAM,2IAA8Bsf,OAAQ,KAAMC,OAAQ,UAAWC,OAAQ,4BACxF,CAAEjD,KAAM,EAAGvc,KAAM,qGACjB,CAAEuc,KAAM,EAAGvc,KAAM,2IACjB,CAAEuc,KAAM,EAAGvc,KAAM,yIAA4Buf,OAAQ,UACrD,CAAEhD,KAAM,EAAGvc,KAAM,8NACjB,CAAEuc,KAAM,EAAGvc,KAAM,6EACjB,CAAEuc,KAAM,GAAIvc,KAAM,oLAClB,CAAEuc,KAAM,GAAIvc,KAAM,gGAClB,CAAEuc,KAAM,GAAIvc,KAAM,qNAClB,CAAEuc,KAAM,GAAIvc,KAAM,sQAClB,CAAEuc,KAAM,GAAIvc,KAAM,2JAClB,CAAEuc,KAAM,GAAIvc,KAAM,0FAMPyf,GAAsB,CACjCC,SAAU,QACVtJ,QAAS,2BACTC,OAAQ,2MACRsJ,KAAM,IACNC,WAAY,KCrWCC,GA9EqC,SAAC3P,GACnD,MAA0BW,mBAA4BX,EAAM7G,MAAO+U,GAAalO,EAAM7G,OAAS,MAA/F,mBAAOA,EAAP,KAAcyW,EAAd,KACA,EAA8BjP,mBAAkBX,EAAM6P,UAAW,GAAjE,mBAAOA,EAAP,KAAgBC,EAAhB,KACMC,EAAa/P,EAAMgQ,QAAU,CAACC,WAAY,YAAc,GAExDC,EAAelQ,EAAMkQ,aAAelQ,EAAMkQ,YAAYjT,OAAO,GAAK+C,EAAMmQ,WAAenQ,EAAMkQ,YAAYlD,QAAO,SAACnI,GAAD,OAAyBA,EAAQuL,cAAcpQ,EAAMmQ,cAAc,GACnLE,KAAcrQ,EAAMkQ,aAAelQ,EAAMkQ,YAAYjT,OAAO,GAAK+C,EAAMmQ,aAAenQ,EAAMkQ,YAAYhD,MAAK,SAACrI,GAAD,OAAyBA,EAAQuL,cAAcpQ,EAAMmQ,cACxKpH,qBAAU,WACR,GAAI/I,EAAMkQ,YAAa,CACrB,IAAMG,EAAarQ,EAAMkQ,YAAYhD,MAAK,SAAAnM,GAAI,OAAEA,EAAKqP,cAAcpQ,EAAMmQ,aAAepP,EAAKxB,YACzF8Q,GACFT,EAAS1B,GAAamC,EAAWhE,QACb,IAAhBrM,EAAM6P,SAAgBC,GAAW,KACZ,IAAhB9P,EAAM6P,SAAiBC,GAAW,MAE/C,CAAC9P,EAAMkQ,YAAalQ,EAAMmQ,WAAYnQ,EAAM6P,UAE9C,IAAMS,GAAatQ,EAAMuQ,SAAW,cAAC,KAAD,CAC9BvV,MAAO,CAAEiV,WAAY,UACrBJ,QAASA,EACT7O,SAAUhB,EAAMgB,SAChBoM,SAAU,SAACrf,GAEP,GADA+hB,EAAW/hB,EAAE8hB,SACT7P,EAAMkQ,YACR,GAAIlQ,EAAMwQ,UAAYziB,EAAE8hB,QAClBQ,GAAcA,EAAWtV,IAC3BiF,EAAMkQ,YAAYxK,SAAQ,SAAAyH,GACpBA,EAAGiD,cAAcpQ,EAAMmQ,aAAYhD,EAAG5N,SAAS,QAErDS,EAAMwQ,SAASziB,IACTiS,EAAMwQ,SAASziB,EAAGmiB,QACrB,GAAIlQ,EAAMwQ,UAAYxQ,EAAM7G,OAAS6G,EAAMmQ,WAAY,CAC5D,IAAIM,EAAeP,EACnBO,EAAatP,KAAK,CAACiP,YAAapQ,EAAMmQ,WAAY9D,KAAMrM,EAAM7G,QAC9D6G,EAAMwQ,SAASziB,EAAG0iB,QACTzQ,EAAMwQ,UAAUxQ,EAAMwQ,SAASziB,QACjCiS,EAAMwQ,UAAUxQ,EAAMwQ,SAASziB,MAK9CiN,EAASgF,EAAMuQ,QAAU,CAACG,UAAU,UAAY,GAChDC,EAAgB3Q,EAAMuQ,UAAYvQ,EAAM6P,QAAW,6BACvD,sBAAKvS,UAAU,oCAC+BtC,MAAOA,EADrD,UAEGgF,EAAMyB,MACN6O,IAHH,aACYtQ,EAAM6P,QADlB,YAC6B7P,EAAMgQ,UAK/BY,GAAY5Q,EAAMuQ,SAAW,cAAC,KAAD,CAC/BxV,GAAI,IAAMiF,EAAMmQ,WAEhBnV,MAAO+U,EACP5W,MAAOA,EACP2T,QAAS9M,EAAM8M,QACfM,SAAU,SAACrf,GAET,GADA6hB,EAAS7hB,EAAEoL,OACP6G,EAAMoN,SAAU,CAClB,IAAMiD,EAAa,CAACD,YAAapQ,EAAMmQ,WAAY9D,KAAM6B,GAAa2C,WAAU,SAAChM,GAAD,OAAWA,EAAQwH,OAAOte,EAAEoL,MAAMkT,SAC9GoE,EAAeP,EACnBO,EAAatP,KAAKkP,GAClBrQ,EAAMoN,SAASrf,EAAEoL,MAAOsX,QACnB,GAAMzQ,EAAMkQ,YAAa,CAC5B,IAAMY,EAAM9Q,EAAMkQ,YAAYW,WAAU,SAAA9P,GAAI,OAAEA,EAAKqP,cAAcpQ,EAAMmQ,cACvE,KAAIW,GAAO,GACN,MAAM,IAAIpM,MAAJ,wDAA2D1E,EAAMmQ,aAD9DnQ,EAAMkQ,YAAYY,GAAKzE,KAAO6B,GAAa2C,WAAU,SAAChM,GAAD,OAAWA,EAAQwH,OAAOte,EAAEoL,MAAMkT,UAI3GY,YAAY,OACZP,YAAY,2GApBmB,aAEpB1M,EAAMmQ,WAFc,YAEAnQ,EAAM6P,UAoBnCkB,EAAgBlB,EACpB,qBAAK7U,MAAO+U,EAAZ,SAAyB/P,EAAMgR,QAE/B,qBAAKhW,MAtES,CAACiW,MAAO,SAsEtB,SAAsBL,IAExB,OAAQ,qCAAGD,EAAeI,MCnFfG,GAAqB,SAACC,GACjC,QAAYjP,IAARiP,EAAJ,CACA,IAAIC,EAAO,CAAE/E,KAAM8E,EAAI9E,KAAM+D,YAAae,EAAIf,aAG9C,OAFIe,EAAIpW,KAAIqW,EAAKrW,GAAKoW,EAAIpW,IACtBoW,EAAIE,cAAaD,EAAKC,YAAcF,EAAIE,aACrCD,IAMIE,GAAuB,SAClCC,EACAP,EACAd,GAEI,IADJ7D,EACG,uDFmYc,EElYbyE,EAAMZ,EAAYW,WAAU,SAAC9P,GAAD,OAAUA,EAAKqP,cAAgBmB,KAC/D,GAAIP,IAAkB,IAATF,GAAcZ,EAAYY,GAAK/V,GAC1C,GACEmV,EAAYY,GAAKvR,SAAW,IAC5BuR,EAAMZ,EAAYW,WAAU,SAAC9P,GAAD,OAAUA,EAAKqP,cAAgBmB,IAAQxQ,EAAKxB,UAAYwB,EAAKhG,aACzE,IAAT+V,QACAE,IAAkB,IAATF,EAAYZ,EAAY9f,OAAO0gB,EAAK,GAC9CE,IAAkB,IAATF,GAA4C,MAA9BZ,EAAYY,GAAKvR,SAEtCyR,IAAkB,IAATF,GAAYZ,EAAY/O,KAAK,CAAEkL,KAAMA,EAAM+D,YAAamB,IAD3ErB,EAAYY,GAAZ,eAAwBI,GAAmBhB,EAAYY,M,QCnCtCU,G,WAUnB,WAAYxR,GAAmB,IAAD,4BATtByR,SASsB,OARtBC,uBAQsB,OAPtBC,aAOsB,OANtBC,aAMsB,OALtBC,mBAKsB,OAJtBC,mBAIsB,OAHtBC,mBAGsB,OAFtBC,iBAEsB,OADtBvB,kBACsB,EAC5BwB,KAAKR,IAAMzR,EAAMjF,GACjBkX,KAAKP,kBAAoB1R,EAAMkS,sBAC3BlS,EAAMyM,SAAQwF,KAAKN,QAAU3R,EAAMyM,QACvCwF,KAAKL,QAAU5R,EAAMjG,OACrBkY,KAAKJ,cAAgB7R,EAAMmS,aACvBnS,EAAMoS,eAAcH,KAAKH,cAAgB9R,EAAMoS,cAC/CpS,EAAMqF,YAAW4M,KAAKF,cAAgB,IAAIvI,KAAKxJ,EAAMqF,YACzD4M,KAAKD,YAAchS,EAAMqS,WACzBJ,KAAKxB,cACH,UAAAzQ,EAAMsS,oBAAN,eAAoB3Q,KAAI,SAACZ,GACvB,OAAO,2BAAKA,GAAZ,IAAkBsL,KAAM8B,GAAgBpN,EAAKsL,aACzC,GACRkG,aAAmBN,UAAM/P,EAAW,CAAEsQ,MAAM,I,kDAE9C,WACE,IAAIC,EAAY,GAUhB,OATIR,KAAKR,MAAKgB,EAAU1X,GAAKkX,KAAKR,KAC9BQ,KAAKP,oBAAmBe,EAAUP,sBAAwBD,KAAKP,mBAC/DO,KAAKH,gBAAeW,EAAUL,aAAeH,KAAKH,eAClDG,KAAKF,gBAAeU,EAAUpN,UAAY4M,KAAKF,cAAcW,gBAC7DT,KAAKJ,gBAAeY,EAAUN,aAAeF,KAAKJ,eAClDI,KAAKxB,aAAaxT,OAAS,IAAGwV,EAAUE,wBAA0BV,KAAKU,2BACvEV,KAAKL,UAASa,EAAU1Y,OAASkY,KAAKL,SACtCK,KAAKD,cAAaS,EAAUJ,WAAaJ,KAAKD,aAC9CC,KAAKN,UAASc,EAAUhG,OAASwF,KAAKN,SACnCc,I,4BAET,WACE,OAAOR,KAAKP,mB,IAEd,SAAqBkB,GACnBX,KAAKP,kBAAoBkB,I,kBAE3B,WACE,OAAOX,KAAKN,QAAUM,KAAKN,QAAU,I,IAEvC,SAAWlF,GACTwF,KAAKN,QAAUlF,I,kBAEjB,WACE,OAAOwF,KAAKL,S,IAEd,SAAW7X,GACTkY,KAAKL,QAAU7X,I,wBAEjB,WACE,OAAOkY,KAAKJ,e,IAEd,SAAiBM,GACfF,KAAKJ,cAAgBM,I,wBAEvB,WACE,OAAOF,KAAKF,e,IAEd,SAAiBc,GACfZ,KAAKF,cAAgBc,I,wBAEvB,WACE,OAAOZ,KAAKH,cAAgBG,KAAKH,cAAgB,I,IAEnD,SAAiBM,GACfH,KAAKH,cAAgBM,I,sBAEvB,WACE,OAAOH,KAAKD,c,uBAEd,WACE,OAAOC,KAAKxB,c,IAEd,SAAgBP,GACd+B,KAAKxB,aAAeP,I,qCAGtB,WACE,OAAO+B,KAAKxB,aAAa9O,KAAI,SAACwL,GAC5B,OAAO,eAAKA,U,cCnFG2F,G,WASnB,aAAoC,IAAD,MAAvB9S,EAAuB,uDAAf,GAAe,0BAR3ByR,SAQ2B,OAP3BsB,iBAO2B,OAN3BC,YAM2B,OAL3BvC,kBAK2B,OAJ3BwC,cAI2B,OAH3BC,eAG2B,OAF3BC,aAE2B,EACjClB,KAAKkB,QAAUnT,EACfiS,KAAKc,YAAc/S,EAAMmH,YACzB8K,KAAKe,OAAShT,EAAMoT,MACpBnB,KAAKR,IAAMzR,EAAMjF,GACjBkX,KAAKgB,SAAL,2BACKjT,EAAMqT,SADX,IAEEV,yBACE,UAAA3S,EAAMqT,eAAN,mBAAef,oBAAf,eAA6B3Q,KAAI,SAACZ,GAChC,OAAO,2BAAKA,GAAZ,IAAkBsL,KAAM8B,GAAgBpN,EAAKsL,aACzC,KAEV4F,KAAKxB,cACH,UAAAzQ,EAAMsS,oBAAN,eAAoB3Q,KAAI,SAACZ,GACvB,OAAO,2BAAKA,GAAZ,IAAkBsL,KAAM8B,GAAgBpN,EAAKsL,aACzC,GACR4F,KAAKiB,UAAYlT,EAAMsT,UAAY,GACnCf,aAAmBN,UAAM/P,EAAW,CAAEsQ,MAAM,I,kDAG9C,WAA2B,IAAD,EACpBe,EAAU,GAUd,OATItB,KAAKR,MAAK8B,EAAQxY,GAAKkX,KAAKR,KAC5BQ,KAAKe,SAAQO,EAAQH,MAAQnB,KAAKe,QAClCf,KAAKgB,UAAchB,KAAKgB,SAASO,OAAWvB,KAAKgB,SAASQ,kBAC5DF,EAAQG,mBAAR,eAAkCzB,KAAKgB,UAChChB,KAAKkB,UAAL,UAAgBlB,KAAKkB,QAAQE,eAA7B,aAAgB,EAAsBtY,MAC7CwY,EAAQG,mBAAqB,CAAE3Y,GAAIkX,KAAKkB,QAAQE,QAAQtY,GAAIwE,SAAU,MACpE0S,KAAKiB,UAAUjW,OAAS,IAAGsW,EAAQI,oBAAR,aAAkC1B,KAAKiB,YAClEjB,KAAKxB,aAAaxT,OAAS,IAAGsW,EAAQZ,wBAA0BV,KAAKU,2BACrEV,KAAKc,cAAaQ,EAAQK,uBAAR,eAAsC3B,KAAKc,cAC1DQ,I,eAGT,WACE,OAAOtB,KAAKc,a,IAGd,SAAQc,GACN5B,KAAKc,YAAcc,I,uBAGrB,WACE,OAAO5B,KAAKxB,c,IAEd,SAAgBP,GACd+B,KAAKxB,aAAeP,I,qCAItB,WACE,OAAO+B,KAAKxB,aAAa9O,KAAI,SAACwL,GAC5B,OAAO,eAAKA,Q,iBAIhB,WACE,OAAO8E,KAAKe,Q,IAGd,SAAUc,GACR7B,KAAKe,OAASc,I,cAGhB,WACE,OAAO7B,KAAKR,M,mBAEd,WACE,OAAOQ,KAAKgB,U,IAEd,SAAY9Z,GACV8Y,KAAKgB,SAAW9Z,I,oBAElB,WACE,OAAO8Y,KAAKiB,W,IAEd,SAAa/Z,GACX8Y,KAAKiB,UAAY/Z,I,sBAGnB,WACE,IAAM0a,EAAM5B,KAAKc,YACjB,OAASc,EAAF,UAAWA,EAAIzM,OAAf,YAAyByM,EAAIxM,QAA7B,YAA0CwM,EAAIvM,QAAUuM,EAAIvM,QAAU,IAAO,O,KC/F3EyM,GAAuB,SAAC5M,GACnC,OAAKA,EACO,UAAGA,EAAYC,OAAf,YAAyBD,EAAYE,QAArC,YAAgDF,EAAYG,QAAUH,EAAYG,QAAU,IAAK0M,OADpF,ICGdC,GAAiC,SAACjU,GAC7C,MAAsBW,mBAASoT,GAAqB/T,EAAMkU,aAA1D,mBAAOL,EAAP,KAAYM,EAAZ,KACMC,EAAiBpU,EAAMqU,aAAerU,EAAMkU,aAAelU,EAAMkU,WAAW9M,SAAWpH,EAAMkU,WAAW7M,SAC9G,OAAQ,qCACN,cAAC,KAAD,CAAYtM,GAAG,MAAMsH,KAAK,OACxBlJ,MAAO0a,EACPzG,SAAU,SAACrf,GAAK,IAAD,IACbomB,EAAOpmB,EAAEwU,OAAOpJ,OAChB,IAAMmb,EAASvmB,EAAEwU,OAAOpJ,MAAM6a,OAAO1T,MAAM,KACvCiU,EAAU,IACd,UAAIvU,EAAMkU,kBAAV,aAAI,EAAkBnZ,MAAIwZ,EAAQxZ,GAAR,UAAaiF,EAAMkU,kBAAnB,aAAa,EAAkBnZ,IACrDuZ,GAAUA,EAAOrX,OAAS,GAC5BsX,EAAO,2BAAOA,GAAP,IAAgBnN,OAAQkN,EAAO,GAAIjN,QAASiN,EAAO,KACtDA,EAAO,KAAIC,EAAQjN,QAAUgN,EAAO,KAClCC,EAAO,2BAAOA,GAAP,IAAgBnN,OAAQ,GAAIC,QAAS,KACpDrH,EAAMoN,SAASmH,IAEjBjX,UAAWgE,YAAW,CAAE,YAAa8S,MAEtCA,GAAkB,uBAAO9W,UAAU,UAAjB,mJC4MN0H,gBApNK,WACpB,MAA4DvE,qBAAWC,IAA/DuE,EAAR,EAAQA,iBAAkBuP,EAA1B,EAA0BA,iBAAkBlO,EAA5C,EAA4CA,YACtCmO,EAAcxP,EAAiBE,KAC/BuP,EAAUD,EAAYC,QACtBC,EAAUD,EAAQC,OACxB,EAA0ChU,qBAAoB+T,EAAQE,YAAtE,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA0CnU,qBAAoB8T,EAAYM,WAA1E,mBAAOC,EAAP,KAAsBC,EAAtB,KAMMC,EAAaV,EAAiBU,WAC9BC,EAAaX,EAAiBY,cAAgB,OAAS,SACvDC,OAA0CnT,IAA5BuS,EAAYa,gBACuD,IAA9Eb,EAAYvE,YAAYW,WAAU,SAAC9P,GAAD,MAA2B,eAAnBA,EAAKqP,eACxD,OAAQ,mCACJ,cAAC,IAAD,CAAM9S,UAAU,0BAA0BiP,OAT/B,WACX,OAAO,0HAQP,SACI,sBAAKjP,UAAU,4BAAf,UACE,sBAAKA,UAAU,mCAAf,UACE,cAAC,KAAD,CAAUsP,QAAQ,gBAAgBiD,SAAU2E,EAAiBU,WAAY9H,SAAU,SAAArf,GAC7EA,EAAE8hB,SACJ6E,EAAQC,YAASzS,EACjBwS,EAAQa,cAAWrT,EACnBuS,EAAYe,eAAYtT,IAExBwS,EAAQC,OAAS,IAAI7B,GACjB+B,IAAiBC,GAAiB,GACpCJ,EAAQe,YAAYf,EAAQgB,YAAgC,KAGhEpE,GAAqB,SAAUoD,EAAQC,OAAQD,EAAQxE,YPgXpD,GO/WHoB,GAAqB,WAAYoD,EAAQa,SAAUb,EAAQxE,YP+WxD,GO9WHoB,GAAqB,aAAcmD,EAAYe,UAAWf,EAAYvE,YP8WnE,GO7WHsE,EAAiBU,YAAcnnB,EAAE8hB,WAGnC,uBAAOrD,QAAQ,gBAAf,mKAEF,sBAAKlP,UAAU,mCAAf,UACE,cAAC,KAAD,CAAUsP,QAAQ,gBAAgBiD,QAAS2E,EAAiBY,cAC5DhI,SAAU,SAAArf,GACRymB,EAAiBY,cAAgBrnB,EAAE8hB,QAC/B9hB,EAAE8hB,SACC6E,EAAQC,SACXD,EAAQC,OAAS,IAAI7B,GACrBxB,GAAqB,SAAUoD,EAAQC,OAAQD,EAAQxE,cAErD2E,IACFC,GAAiB,GACjBJ,EAAQe,YAAYf,EAAQgB,YAAgC,IAE9DhB,EAAQa,cAAWrT,EACnBoP,GAAqB,WAAYoD,EAAQa,SAAUb,EAAQxE,YAAapB,KAExE4F,EAAQa,SAAW,IAAI/D,GAAS,CAACU,sBAAuB/C,GPuX/C,GOvX0E9C,UAEvF,uBAAOG,QAAQ,gBAAf,gLAEF,sBAAKlP,UAAU,0CAAf,UACE,qBAAKA,UAAU,mBAAf,kBACA,qBAAKA,UAAU,kCAAf,SAEE,cAAC,GAAD,CACE0D,UAAWwT,EAAiBY,cAC5BvF,QAASqF,EACTlF,SAAO,EACPvO,MAAO,uBAAO+K,QAAQ,SAAf,6LACPwE,MAAO,cAAC,GAAD,CAAYkD,WAAU,OAAES,QAAF,IAAEA,OAAF,EAAEA,EAAQd,IACrCzG,SAAU,SAACjU,GACJwb,IACiB,MAAb,OAALxb,QAAK,IAALA,OAAA,EAAAA,EAAOiO,SAAmBuN,EAAOd,KAA4B,KAArBc,EAAOd,IAAIzM,SAAed,EAAYnM,QAAU,CAAEqV,SAAU,UAAWtJ,QAAS,6CAAWC,OAAQ,oXAA8EsJ,KAAM,MACnOkF,EAAOd,IAAM1a,GAAS,CAACiO,OAAO,GAAGC,QAAQ,IACzCiK,GAAqB,cAAeqD,EAAOd,IAAIvM,QAASqN,EAAOzE,YPsUlE,OOnUDpD,QAASoB,GAAalB,QAAO,SAACjM,GAAD,OAAmBoU,EAAW3S,SAASzB,EAAKsL,SACzElT,MAAOqb,EAAiBY,cAAgBtG,GPkUvC,EOjUDoB,YAAawE,EAAQxE,YACrBC,WAAW,YAlBf,gBACgB+E,OAqBlB,sBAAK5X,UAAU,uBAAf,UACE,qBAAKA,UAAU,mBAAf,kBACA,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,oCAAf,gCACA,sBAAKA,UAAU,sBAAf,UACE,cAAC,KAAD,CAAaxN,KAAK,QAAQ+f,QP0TtB,IO1T+B6E,EAAQiB,OACzCvI,SAAU,SAACrf,GACLA,EAAE8hB,QAAS6E,EAAQiB,OPwTvB,EOvTKjB,EAAQiB,YAASzT,KAE1B,uBAAOsK,QAAQ,QAAf,uGAEF,sBAAKlP,UAAU,sBAAf,UACE,cAAC,KAAD,CAAaxN,KAAK,SAAS+f,QPiTzB,IOjTkC6E,EAAQiB,OAC1CvI,SAAU,SAACrf,GACPA,EAAE8hB,QAAS6E,EAAQiB,OP+SvB,EO9SKjB,EAAQiB,YAASzT,KAGxB,uBAAOsK,QAAQ,SAAf,4DAEF,sBAAKlP,UAAU,sBAAf,UACE,cAAC,KAAD,CAAaxN,KAAK,OAAO+f,QPuSzB,IOvSkC6E,EAAQiB,OACxCvI,SAAU,SAACrf,GACLA,EAAE8hB,QAAS6E,EAAQiB,OPqS3B,EOpSSjB,EAAQiB,YAASzT,KAG1B,uBAAOsK,QAAQ,OAAf,mEAKR,sBAAKlP,UAAU,+BAAf,UACE,qBAAKA,UAAU,mBAAf,kBACA,qBAAKA,UAAU,oBAAf,SACE,cAAC,GAAD,CAAmB0S,SAAO,EACtBhP,SAAUwT,EAAiBU,WAC3BzT,MAAO,uBAAO+K,QAAQ,YAAf,uFACPqD,QAAS2E,EAAiBU,YAAcL,EAAgBrE,SAAU,SAACziB,EAAwBmiB,GACpFniB,EAAE8hB,UACL6E,EAAQgB,gBAAaxT,EACrBwS,EAAQE,gBAAa1S,GAEnBgO,IAAawE,EAAQxE,YAAcA,IAEzC9C,SAAU,SAACrf,EAAemiB,GAA+CA,IAAawE,EAAQxE,YAAcA,IAC5Gc,MAAO,sBAAK1T,UAAU,kCAAf,UACL,cAAC,KAAD,CAAUvC,GAAG,YAAYuC,UAAU,SAASsY,OAAO,KACjDjJ,WAAYkI,EAAgB,KAAO,WACnCgB,KAAMhB,EAAgB,OAAS,aAC/B1b,MAAOub,EAAQgB,WACftI,SAAU,SAACrf,GAAD,OAAK2mB,EAAQe,YAAY1nB,EAAEwU,OAAOpJ,MAA2B0b,IAEvEiB,UAAQ,IACV,sBAAKxY,UAAU,mBAAf,UACE,cAAC,KAAD,CAAUuS,QAASgF,EACjBjI,QAAQ,UAAU5L,SAAUwT,EAAiBU,WAC7C9H,SAAU,SAAArf,GACR+mB,EAAiB/mB,EAAE8hB,SACnB6E,EAAQe,YAAYf,EAAQgB,WAAgC3nB,EAAE8hB,YAClE,uBAAOrD,QAAQ,UAAf,2EAGJM,QAASoB,GAAalB,QAAO,SAACjM,GAAD,MAAmB,WAAWyB,SAASzB,EAAKsL,SACzElT,MAAOqb,EAAiBY,cAAgBtG,GP0PzC,EOzPCqB,WAAW,aACXD,YAAawE,EAAQxE,eAhC3B,gBAAiDgF,OAoCnD,sBAAK5X,UAAU,+BAAf,UACE,qBAAKA,UAAU,mBAAf,kBACA,qBAAKA,UAAU,kCAAf,SACE,cAAC,GAAD,CAAmB0S,SAAO,EACxBvO,MAAO,uBAAO+K,QAAQ,YAAf,2EACPqD,aAAqC3N,IAA5BuS,EAAYa,cAA2B9E,SAAU,SAACziB,EAAwBmiB,GAC5EniB,EAAE8hB,QACF4E,EAAYsB,YAAY,IAAIvM,MAAQ,GADzBiL,EAAYsB,iBAAY7T,GAAW,GAE/CgO,IAAauE,EAAYvE,YAAcA,IAE7C9C,SAAU,SAACrf,EAAemiB,GAA+CA,IAAauE,EAAYvE,YAAcA,IAChHc,MAAO,sBAAK1T,UAAU,kCAAf,UACH,cAAC,KAAD,CAAUvC,GAAG,YAAYuC,UAAU,SAASsY,OAAO,KACjDjJ,WAAYqI,EAAgB,KAAO,WACnCa,KAAMb,EAAgB,OAAS,aAC/B7b,MAAOsb,EAAYa,cACnBlI,SAAU,SAACrf,GAAD,OAAK0mB,EAAYsB,YAAYhoB,EAAEwU,OAAOpJ,MAA2B6b,IAE3Ec,UAAQ,IACV,sBAAKxY,UAAU,mBAAf,UACE,cAAC,KAAD,CAAUuS,QAASmF,EACjBpI,QAAQ,UACRQ,SAAU,SAAArf,GAAKknB,EAAiBlnB,EAAE8hB,SAChC4E,EAAYsB,YAAYtB,EAAYa,cAAmCvnB,EAAE8hB,YAC7E,uBAAOrD,QAAQ,UAAf,2EAGJM,QAASoB,GAAalB,QAAO,SAACjM,GAAD,MAAmB,WAAWyB,SAASzB,EAAKsL,SACzElT,MPwND,EOvNCgX,WAAW,iBACXD,YAAauE,EAAYvE,gBAG/B,qBAAK5S,UAAU,oBAAf,SACE,cAAC,GAAD,CACE0D,SAAUgU,EACVvT,MAAO,uBAAO+K,QAAQ,YAAf,iFACPqD,QAASwF,IAAgBL,EACzBxE,SAAU,SAACziB,EAAwBmiB,GAC7BA,IAAauE,EAAYvE,YAAcA,IAE7C9C,SAAU,SAACrf,EAAemiB,GAA+CA,IAAauE,EAAYvE,YAAcA,IAChHc,MAAQ,cAAC,KAAD,CAAUjW,GAAG,YACnBib,UAAQ,EAACC,WAAW,KAAKL,OAAO,KAChCzc,MAAOsb,EAAYa,cACnBQ,UAAQ,IACVhJ,QAASoB,GAAalB,QAAO,SAACjM,GAAD,MAAmB,WAAWyB,SAASzB,EAAKsL,SACzElT,MPqMC,EOpMDgX,WAAW,aACXD,YAAauE,EAAYvE,eAhB7B,iBAAkD8E,EAAlD,YAAmEK,iB,kBCxMpEa,GAAiB,SAAClW,GAC7B,IAAMuV,EAAWvV,EAAMuV,SACjBY,EAAWnW,EAAMmW,SACjBC,EAAc,CAAC/T,KAAK,OAAQtH,GAAG,SAAU5B,MAAK,OAACoc,QAAD,IAACA,OAAD,EAACA,EAAU9I,OAC3DW,SAAS,SAACrf,GAAawnB,IAAUA,EAAS9I,OAAS1e,EAAEwU,OAAOpJ,SAC1Dkd,GAAsB,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAU/G,QAAS,cAAC,KAAD,4BAAgByG,KAAI,OAACM,QAAD,IAACA,OAAD,EAACA,EAAU/G,QAAUgH,KAC5E,cAAC,KAAD,eAAeA,IACbE,EAAc,CAACjU,KAAK,OAAQtH,GAAG,YAAa5B,MAAK,OAACoc,QAAD,IAACA,OAAD,EAACA,EAAUxb,OAC9DqT,SAAS,SAACrf,GAAawnB,IAAUA,EAASxb,OAAShM,EAAEwU,OAAOpJ,SAC1Dod,GAAsB,OAARJ,QAAQ,IAARA,OAAA,EAAAA,EAAU9G,QAAS,cAAC,KAAD,4BAAgBwG,KAAI,OAACM,QAAD,IAACA,OAAD,EAACA,EAAU9G,QAAUiH,KAC5E,cAAC,KAAD,eAAeA,IACbE,EAAe,CAACnU,KAAK,OAAQtH,GAAG,UAAW5B,MAAK,OAACoc,QAAD,IAACA,OAAD,EAACA,EAAUnD,aAC7DhF,SAAS,SAACrf,GAAawnB,IAAUA,EAASnD,aAAerkB,EAAEwU,OAAOpJ,SAGtE,MAAO,CAACkd,EAAaE,GAFQ,OAARJ,QAAQ,IAARA,OAAA,EAAAA,EAAU7G,QAAS,cAAC,KAAD,4BAAgBuG,KAAI,OAACM,QAAD,IAACA,OAAD,EAACA,EAAU7G,QAAUkH,KAC7E,cAAC,KAAD,eAAeA,MCkLJxR,gBAlLK,WAAO,IAAD,QAC1B,EAA+CvE,qBAAWC,IAAlDuE,EAAR,EAAQA,iBAAkBuP,EAA1B,EAA0BA,iBACpBU,EAAaV,EAAiBU,WAI9BT,EAAcxP,EAAiBE,KAC/BuP,EAAUD,EAAYC,QACtBa,EAAWb,EAAQa,SACzB,EAAoC5U,mBAASuU,IAAsG,IAAxFR,EAAQxE,YAAYW,WAAU,SAAA9P,GAAI,OAAGA,EAAKxB,UAA+B,aAAnBwB,EAAKqP,gBAAtH,mBAAOqG,EAAP,KAAmBC,EAAnB,KACA,EAAiC/V,mBAASwO,GAAcjC,MAAK,SAACnM,GAAD,OAAQA,EAAKsL,QAAL,OAAckJ,QAAd,IAAcA,OAAd,EAAcA,EAAUoB,sBAA7F,mBAAOR,EAAP,KAAiBS,EAAjB,KACMjC,EAAUD,EAAQC,OAClBkC,EAAoBJ,EAAa,MAAQ,cAC/C,EAAiDP,GAAe,CAACC,WAAUZ,aAA3E,mBAAOc,EAAP,KAAoBE,EAApB,KAAiCO,EAAjC,KACA,OAAQ,mCACJ,cAAC,IAAD,CAAMxZ,UAAU,0BAA0BiP,OAZ/B,WACX,OAAO,4IAWP,SACI,sBAAKjP,UAAU,4BAAf,UACE,sBAAKA,UAAU,0CAAf,UACE,qBAAKA,UAAU,mBAAf,iBACA,qBAAKA,UAAU,kCAAf,SACE,cAAC,GAAD,CACE0D,UAAWkU,EAAYlF,SAAO,EAC9BH,QAAS4G,EAAYjG,SAAU,SAACziB,EAAwBmiB,GAChDniB,EAAE8hB,SACN6E,EAAQa,SAAW,IAAI/D,GAAS,CAC9BU,sBAAuB/C,GTmZpB,GSnZ+C9C,OAE7C6I,IAAYV,EAAiBU,YAAa,IAC1CR,EAAQa,cAAWrT,EACtBgO,IAAawE,EAAQxE,YAAcA,GACvCwG,EAAc3oB,EAAE8hB,UAEpBK,YAAawE,EAAQxE,YACrBC,WAAW,WACX1O,MAAO,uBAAO+K,QAAQ,qBAAf,wPACPwE,MAAO,cAAC,KAAD,CAAWjW,GAAG,qBAAqB5B,MAAOgd,EACjDtJ,WAAS,EAACC,QAASqC,GAAelC,YAAY,OAC9CG,SAAU,SAACrf,GACLwnB,EAAUA,EAASoB,iBAAmB5oB,EAAEoL,MAAMkT,MAEhDqI,EAAQa,SAAW,IAAI/D,GAAS,CAACU,sBAAuBnkB,EAAEoL,MAAMkT,OAChEiF,GAAqB,WAAYoD,EAAQa,SAAUb,EAAQxE,cAE7D0G,EAAYzH,GAAcjC,MAAK,SAACnM,GAAD,OAAQA,EAAKsL,OAASte,EAAEoL,MAAMkT,YAG/DS,QAASoB,GAAalB,QAAO,SAACjM,GAAD,OAAmB8V,EAAiBrU,SAASzB,EAAKsL,SAC/ElT,MAAOsd,ET8VN,ES9VyB3H,OAG9B,qBAAKxR,UAAU,kCACbtC,MAAO,CAACiV,WAAW,UADrB,SAEE,cAAC,GAAD,CACExO,MAAO,uBAAO+K,QAAQ,SAAf,4CACPqD,QAAS4G,IAAwF,KAA1E,UAAA/B,EAAQa,gBAAR,eAAkBrF,YAAYW,WAAU,SAAAkG,GAAE,MAAmB,WAAjBA,EAAG3G,gBAA8BI,SAAU,SAACziB,EAAwBmiB,GACjIniB,EAAE8hB,SAAW6E,EAAQa,SAAUb,EAAQa,SAAS9I,OAAS,GACpDiI,EAAQa,WAAUb,EAAQa,SAAS9I,YAASvK,IAEvD8O,MAAOqF,EACPlG,WAAW,SACXrD,QAASoI,EAAa,CAAChH,GTgVvB,IShV2C,CAACA,GAAaY,KACzD3V,MT+UA,ES9UA+W,YAAW,UAAEwE,EAAQa,gBAAV,aAAE,EAAkBrF,YAC/BK,SAAUkG,KAbd,cAA6DA,IAgB7D,qBAAKnZ,UAAU,kCACbtC,MAAO,CAACiV,WAAW,UADrB,SAEE,cAAC,GAAD,CACExO,MAAO,uBAAO+K,QAAQ,YAAf,4CACPqD,QAAS4G,EACTzF,MAAOuF,EACPzJ,QAASoB,GAAalB,QAAO,SAACjM,GAAD,MAAmB,WAAWyB,SAASzB,EAAKsL,SACzElT,MAAO+b,EToUN,ESpUyBpG,GAC1ByB,SAAO,KARX,cAA6DkG,IAW7D,qBAAKnZ,UAAU,kCAA4DtC,MAAO,CAACiV,WAAW,UAA9F,SACE,cAAC,GAAD,CACExO,MAAO,uBAAO+K,QAAQ,eAAf,+DACPqD,QAAS4G,EACTzF,MACE,cAAC,KAAD,CAAejW,GAAG,eAAe5B,MAAK,OAAEoc,QAAF,IAAEA,OAAF,EAAEA,EAAUpD,aAClD6E,KAAM,GAAIC,KAAM,EAAKjW,UAAWkU,EAChC9H,SAAU,SAACrf,GAASwnB,IAAUA,EAASpD,aAAepkB,EAAEwU,OAAOpJ,UACjE2T,QAASoB,GAAalB,QAAO,SAACjM,GAAD,MAAmB,WAAWyB,SAASzB,EAAKsL,SACzElT,MAAO+b,ETuTN,ESvTyBpG,GAC1ByB,SAAO,KAVX,cAA6DkG,IAa7D,qBAAKnZ,UAAU,kCAAkCtC,MAAO,CAACiV,WAAW,UAApE,SACE,cAAC,GAAD,CACExO,MAAO,uBAAO+K,QAAQ,YAAf,2EACPqD,QAAS4G,EACTzF,MAAO,cAAC,KAAD,CAAWjW,GAAG,YAAYuC,UAAU,SACzCqP,WAAY,WACZiJ,OAAO,KAAKC,KAAK,aACjB1c,MAAK,OAAEoc,QAAF,IAAEA,OAAF,EAAEA,EAAU1C,aACjBzF,SAAU,SAACrf,GAASwnB,IAAUA,EAAS1C,aAAe9kB,EAAEwU,OAAOpJ,QAC/D2c,UAAQ,IAEVhJ,QAASoB,GAAalB,QAAO,SAACjM,GAAD,MAAmB,WAAWyB,SAASzB,EAAKsL,SACzElT,MAAO+b,ETuSN,ESvSyBpG,GAC1BqB,WAAW,YACXI,SAAO,KAdX,gBAA6FkG,IAiB7F,qBAAKnZ,UAAU,kCAA6DtC,MAAO,CAACiV,WAAW,UAA/F,SACE,cAAC,GAAD,CACExO,MAAO,uBAAO+K,QAAQ,UAAf,+GACPqD,QAAS4G,IAA8F,KAAhF,UAAA/B,EAAQa,gBAAR,eAAkBrF,YAAYW,WAAU,SAAAkG,GAAE,MAAmB,iBAAjBA,EAAG3G,gBACtEI,SAAU,SAACziB,EAAwBmiB,GAC7BniB,EAAE8hB,SAAW6E,EAAQa,SAAUb,EAAQa,SAASnD,aAAe,GAC1DsC,EAAQa,WAAUb,EAAQa,SAASnD,kBAAelQ,GACvDgO,GAAewE,EAAQa,WAAUb,EAAQa,SAASrF,YAAeA,IAEvEc,MAAO8F,EACPhK,QAASoI,EAAa,CAAChH,GTuRvB,ISvR2C,CAACA,GAAaY,KACzD3V,MAAO+b,ETsRP,EStRyBpG,GACzBoB,YAAW,UAAEwE,EAAQa,gBAAV,aAAE,EAAkBrF,YAC/BK,SAAUkG,EACVtG,WAAW,kBAdf,eAA8DsG,OAkBhE,sBAAKnZ,UAAU,+BAAf,UACE,qBAAKA,UAAU,mBAAf,kBACA,qBAAKA,UAAU,oBAAf,SACE,cAAC,GAAD,CAAmB0S,SAAO,EACtBvO,MAAO,uBAAO+K,QAAQ,QAAf,4CACPxL,UAAWkU,EACXrF,QAAS8E,IAAgG,IAAtFA,EAAOzE,YAAYW,WAAU,SAAA9P,GAAI,MAAuB,UAArBA,EAAKqP,cAA4BrP,EAAKxB,YAAgBiR,SAAU,SAACziB,EAAwBmiB,GACxIyE,IACDzE,IAAayE,EAAOzE,YAAcA,GACjCniB,EAAE8hB,UAAS8E,EAAOvB,WAAQlR,KAEjC8O,MAAO,cAAC,KAAD,CAAWjW,GAAG,QACnBsH,KAAK,OAAOwT,KAAK,iBACjB1c,MAAK,OAAEwb,QAAF,IAAEA,OAAF,EAAEA,EAAQvB,MACfhG,SAAU,SAACrf,GACJ4mB,IACLA,EAAOvB,MAAQrlB,EAAEwU,OAAOpJ,UAE5B2T,QAASoB,GAAalB,QAAO,SAACjM,GAAD,MAAmB,cAAcyB,SAASzB,EAAKsL,SAC5ElT,MAAOsd,ET6PR,ES7P2B3H,GAC1BqB,WAAW,QACXD,YAAW,OAAEyE,QAAF,IAAEA,OAAF,EAAEA,EAAQzE,mBAI7B,sBAAK5S,UAAU,+BAAf,UACE,qBAAKA,UAAU,mBAAf,kBACA,qBAAKA,UAAU,kCAAf,SACE,cAAC,GAAD,CAAoB0S,SAAO,EACvBvO,MAAO,uBAAO+K,QAAQ,YAAf,0IACPqD,QAASqF,IAA8G,IAAhGT,EAAYvE,YAAYW,WAAU,SAAA9P,GAAI,MAAuB,eAArBA,EAAKqP,cAAiCrP,EAAKxB,YAAgBiR,SAAU,SAACziB,EAAwBmiB,GACvJA,IAAauE,EAAYvE,YAAcA,GACtCniB,EAAE8hB,UAAS4E,EAAYe,eAAYtT,IAE1C8O,MAAO,cAAC,KAAD,CAAWjW,GAAG,YACnBsH,KAAK,OACLlJ,MAAOsb,EAAYe,UACnBpI,SAAU,SAACrf,GAAK0mB,EAAYe,UAAYznB,EAAEwU,OAAOpJ,SAEnD2T,QAASoB,GAAalB,QAAO,SAACjM,GAAD,MAAmB,cAAcyB,SAASzB,EAAKsL,SAC5ElT,MAAOsd,ETwOR,ESxO2B3H,GAC1BqB,WAAW,aACXD,YAAauE,EAAYvE,mBAIjC,qBAAK5S,UAAU,0CAA0CtC,MAAO,CAACiW,MAAO,MAAOiG,YAAY,UAA3F,SACE,uX,mCCkGClS,gBA7Q+B,SAAChF,GAA8B,IAAD,cAClEmX,EAAiB1W,qBAAWC,IAA5ByW,aACR,EAAoBxW,mBAASwW,EAAa9M,WAAnCA,EAAP,oBACMlR,EAAQge,EAAa9D,QACrBI,EAAoBta,EAAMsa,kBAC1B2D,EAAUD,EAAaE,eAC7B,EAAkC1W,mBAAiB,IAAnD,mBAAO2W,EAAP,KAAkBC,EAAlB,KACAxO,qBAAU,kBAAIwO,EAAa9D,KACzB,CAACA,IACH,MAA4B9S,qBAA5B,mBAAO6W,EAAP,KAAeC,EAAf,KACA1O,qBAAU,kBAAI0O,EAAS,OAACL,QAAD,IAACA,OAAD,EAACA,EAASlK,MAAK,SAACnM,GAAD,aAAQA,EAAKsL,QAAL,UAAclT,EAAMqa,aAApB,aAAc,EAAanH,YACtE,CAAC+K,EAASje,EAAMqa,QACnB,MAAgC7S,mBAAiB,IAAjD,mBAAO+W,EAAP,KAAiBC,EAAjB,KACA5O,qBAAU,wBAAI4O,GAAY,UAAAxe,EAAMue,gBAAN,eAAgB5nB,OAAQ,MAAK,WAACqJ,EAAMue,gBAAP,aAAC,EAAgB5nB,OACxE,MAAwB6Q,oBAAiB,UAAAxH,EAAMye,YAAN,eAAY9nB,OAAQ,IAA7D,mBAAO8nB,EAAP,KAAaC,EAAb,KACA9O,qBAAU,wBAAI8O,GAAQ,UAAA1e,EAAMye,YAAN,eAAY9nB,OAAQ,MAAK,WAACqJ,EAAMye,YAAP,aAAC,EAAY9nB,OAC5D,MAAwB6Q,oBAAiB,UAAAxH,EAAM2e,YAAN,eAAYhoB,OAAQ,IAA7D,mBAAOgoB,EAAP,KAAaC,EAAb,KACAhP,qBAAU,wBAAIgP,GAAQ,UAAA5e,EAAM2e,YAAN,eAAYhoB,OAAQ,MAAK,WAACqJ,EAAM2e,YAAP,aAAC,EAAYhoB,OAC5D,MAA4B6Q,oBAAiB,UAAAxH,EAAM6e,cAAN,eAAcloB,OAAQ,IAAnE,mBAAOkoB,EAAP,KAAeC,EAAf,KACAlP,qBAAU,wBAAIkP,GAAU,UAAA9e,EAAM6e,cAAN,eAAcloB,OAAQ,MAAK,WAACqJ,EAAM6e,cAAP,aAAC,EAAcloB,OAClE,MAA0B6Q,mBAAiBxH,EAAM+e,UAAY,IAA7D,mBAAOC,EAAP,KAAcC,EAAd,KACArP,qBAAU,kBAAIqP,EAASjf,EAAM+e,UAAY,MAAK,CAAC/e,EAAM+e,WACrD,MAAkCvX,mBAASwW,EAAakB,aAAxD,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAQC,iBAAc,MACtBC,EAAa,SAAbA,EAAc3qB,GAClB,GAAU,OAANA,EAMJ,OALIA,EAAE4qB,QAAQD,EAAW3qB,EAAE4qB,QACvB5qB,EAAE6qB,YAAc7qB,EAAE6qB,WAAW3b,OAAO,IAAG9D,EAAMyf,WAAa7qB,EAAE6qB,YAChEzf,EAAM0f,OAAS9qB,EAAE+qB,OACjB3f,EAAM4f,UAAYhrB,EAAEirB,UACpB7f,EAAMsa,kBAAoB1lB,EAAE0lB,kBACpB1lB,EAAEuC,OACR,IAAK,SAAevC,EAAEse,OAAMlT,EAAMqa,MAAQ,CAACnH,KAAMte,EAAEse,KAAK7S,MAAM,EAAE,GAAI1J,KAAM/B,EAAE+B,OAC1E2nB,EAAS,OAACL,QAAD,IAACA,OAAD,EAACA,EAASlK,MAAK,SAACnM,GAAD,aAAQA,EAAKsL,QAAL,UAAclT,EAAMqa,aAApB,aAAc,EAAanH,UAC3D,MACF,IAAK,OAAQlT,EAAMye,KAAO,CAACvL,KAAMte,EAAE+qB,OAAQhpB,KAAM/B,EAAE+B,MACjD+nB,EAAQ9pB,EAAE+B,MACV,MACF,IAAK,WAAYqJ,EAAMue,SAAW,CAACrL,KAAMte,EAAE+qB,OAAQhpB,KAAM/B,EAAE+B,MACzD6nB,EAAY5pB,EAAE+B,MACd,MACF,IAAK,gBACL,IAAK,OAAQqJ,EAAM2e,KAAO,CAACzL,KAAMte,EAAE+qB,OAAQhpB,KAAM/B,EAAE+B,MACjDioB,EAAQhqB,EAAE+B,MACV,MACF,IAAK,WAAYqJ,EAAM+e,SAAWnqB,EAAEmqB,SAClC/e,EAAM8f,SAAWlrB,EAAEkrB,SACnB9f,EAAM+f,SAAWnrB,EAAEmrB,SACrB,MACA,IAAK,SACHjB,EAAUlqB,EAAE+B,MACZqJ,EAAM6e,OAAS,CAAC3L,KAAMte,EAAE+qB,OAAQhpB,KAAM/B,EAAE+B,QAI9CiZ,qBAAW,WAAO,IAAD,OACD7G,IAAVkV,EACFD,EAAagC,0BACUjX,IAAd/I,EAAMqa,OAAmC,OAAdra,EAAMqa,OAC1CiE,EAAS,OAACL,QAAD,IAACA,OAAD,EAACA,EAASlK,MAAK,SAACsK,GAAD,OAAUA,EAAOnL,OAAOyB,OAChD3U,EAAMqa,MAAQgE,IACT,UAAIre,EAAMqa,aAAV,aAAI,EAAanH,OACtBoL,EAAS,OAACL,QAAD,IAACA,OAAD,EAACA,EAASlK,MAAK,SAACsK,GAAD,aAAUA,EAAOnL,QAAP,UAAclT,EAAMqa,aAApB,aAAc,EAAanH,YAE9D,CAAC+K,EAASje,EAAOge,EAAcK,IAGlC,IAAM4B,GAAS,WACbjC,EAAakC,eAAgB,GAGzBC,GAAuB,SAACvrB,EAA6BwrB,GAAmC,IAAD,EACxFxrB,EAAEoL,QAAF,UAAWpL,EAAEoL,aAAb,aAAW,EAAS2f,SACrB3B,EAAa3M,QACbkO,EAAW3qB,EAAEoL,QACRogB,EAAOxrB,EAAEoL,QAGZqgB,GAAiB,SAACb,EAAeroB,EAAemW,GACrD0Q,EAAasC,cAAcd,EAAQroB,EAAOmW,GACxCrN,MAAK,SAAAqB,GAAQ,OAAE8d,EAAa9d,MAC5B2O,OAAM,SAAAsQ,GACAlB,EAAMmB,SAASnB,EAAMmB,QAAQC,KAAd,2BAAuBrK,IAAvB,IAA4CpJ,OAAO,oHAAD,OAA2BuT,EAAOvf,YACvGoe,EAAa,QASZsB,GACJ,gCACE,cAAC,KAAD,CAAQpY,MAAM,yDAAYO,KAAK,cAAchB,YANzCmW,EAAa2C,aAAc3C,EAAa4C,kBACzC5C,EAAa9D,QAAQ2G,OAAOvG,oBAAsB0D,EAAa1D,qBAMhEnR,QAAS,WACH6U,EAAa4C,iBAAmB5C,EAAa2C,aAC/C3gB,EAAM+e,SAAWC,EACO,OAApBhf,EAAM4f,WAAwBZ,EAChChB,EAAa9D,QAAQI,kBAArB,UAA4C6D,GAA5C,OAAwDne,EAAM+e,SAASjb,OAAO,EAAI,KAAK9D,EAAM+e,SAAW,IACrGf,EAAa9D,QAAQI,kBAAoB6D,GAE5CH,EAAa8C,gBAAgB9C,EAAa8C,iBAC9Cb,MACC9b,UAAU,mCACf,cAAC,KAAD,CAAQmE,MAAM,uCAASO,KAAK,cAAcM,QAAS,WAC7CtC,EAAMka,UAAUla,EAAMka,WAC1Bd,MAAW9b,UAAU,qBAG3B,OACA,cAAC,KAAD,CAAQuc,OAAQA,GAAQtN,OAAO,4JAA+B4N,QAAShD,EAAakC,cAAeD,OAAQA,GACzGgB,YAAa,CAAC,QAAS,OAAQ,QAAS,SACxCpf,MAAO,CAACiW,MAAO,QAASoJ,OAAK,EAF/B,SAGE,sBAAK/c,UAAU,iBAAf,UACA,qBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,sBAAMA,UAAU,qBAAhB,wFACA,cAAC,KAAD,CAAcvC,GAAG,aAAaiG,SAAUqJ,EACpClR,MAAOme,EACPgD,YAAahC,EACbiC,eAAgB,SAACxsB,GAAM,IAAD,IAEO,EADrB0Y,GAAQ,UAAAtN,EAAMqa,aAAN,eAAa1jB,MAAO/B,EAAE0Y,MAAMxW,SAAQ,UAAAkJ,EAAMqa,aAAN,eAAa1jB,MAAK,IAAK,IAAM/B,EAAE0Y,MAC7EA,EAAMuN,OAAO/W,OAAO,IACtBka,EAAaqD,UAAU/T,EAAMuN,OAA7B,UAAqC7a,EAAMqa,aAA3C,aAAqC,EAAanH,MAClDkM,EAAapB,EAAakB,eAGhCrH,MAAM,oBACN5D,SAAU,SAACrf,GAAO,IAAD,EACZA,EAAEoL,QAAF,UAAWpL,EAAEoL,aAAb,aAAW,EAAS2f,SACrB3B,EAAa3M,QACbkO,EAAW3qB,EAAEoL,OACboe,EAAaxpB,EAAEoL,MAAMsa,oBAChB8D,EAAaxpB,EAAEwU,OAAOpJ,QAE/BuT,YAAY,sNAIlB,sBAAKpP,UAAU,0BAAf,UACE,uBAAOkP,QAAQ,SAAf,4KACA,cAAC,KAAD,CAAUzR,GAAG,SAAS5B,MAAOqe,EAAQxK,QAAM,EAACyN,SAAS,OACjDrN,SAAU,SAACrf,GACToL,EAAMqa,MAAQzlB,EAAEoL,MAChBge,EAAa3M,QACbiN,EAAU1pB,EAAEoL,QAEd2T,QAASsK,EACTnK,YAAY,YAGlB,sBAAK3P,UAAU,0BAAf,UACE,uBAAOkP,QAAQ,WAAf,4CACA,cAAC,KAAD,CAAczR,GAAG,WAAW6V,UAAQ,EAChCzX,MAAOue,EAAWgD,gBAAc,EAChC1J,MAAM,OAAOhQ,SAAUqJ,EACvB+C,SAAU,SAAArf,GAAC,OAAEurB,GAAqBvrB,EAAG4pB,IACrC2C,YAAahC,EACbiC,eAAgB,SAAAxsB,GAAI,IAAD,KACjB,UAAIoL,EAAMqa,aAAV,aAAI,EAAanH,OACjBmN,GAAc,UAACrgB,EAAMqa,aAAP,aAAC,EAAanH,KAAM,WAAYte,EAAE0Y,aAItD,sBAAKnJ,UAAU,0BAAf,UACE,uBAAOkP,QAAQ,OAAf,4CACA,cAAC,KAAD,CAAczR,GAAG,OAAO6V,UAAQ,EAC9BzX,MAAOye,EAAO8C,gBAAc,EAC5B1J,MAAM,OACN5D,SAAU,SAAArf,GAAC,OAAEurB,GAAqBvrB,EAAE8pB,IACpCyC,YAAahC,EACbiC,eAAgB,SAAAxsB,GAAI,IAAD,KACjB,UAAIoL,EAAMqa,aAAV,aAAI,EAAanH,OAAMmN,GAAc,UAACrgB,EAAMqa,aAAP,aAAC,EAAanH,KAAK,OAAQte,EAAE0Y,aAIxE,sBAAKnJ,UAAU,0BAAf,UACE,uBAAOkP,QAAQ,OAAf,yGACA,cAAC,KAAD,CAAczR,GAAG,OAAO6V,UAAQ,EAACzX,MAAO2e,EACtC4C,gBAAc,EAAC1J,MAAM,OACrB5D,SAAU,SAAArf,GAAC,OAAEurB,GAAqBvrB,EAAGgqB,IACrCuC,YAAahC,EACbiC,eAAc,uCAAE,WAAOxsB,GAAP,yBAAAmW,EAAA,sDACVyU,EADU,UACDxf,EAAMqa,aADL,aACD,EAAanH,MAC1B,UAAIlT,EAAMye,YAAV,aAAI,EAAYvL,QAAMsM,EAAM,UAAGxf,EAAMye,YAAT,aAAG,EAAYvL,OAC3C,UAAIlT,EAAMue,gBAAV,aAAI,EAAgBrL,QAAMsM,EAAM,UAAGxf,EAAMue,gBAAT,aAAG,EAAgBrL,MAC/CsM,GAAQa,GAAeb,EAAQ,OAAQ5qB,EAAE0Y,OAJ/B,2CAAF,2DAQlB,sBAAKnJ,UAAU,0BAAf,UACE,uBAAOkP,QAAQ,SAAf,4CACA,cAAC,KAAD,CAAczR,GAAG,SAAS2f,gBAAc,EACtCvhB,MAAO6e,EAAQhH,MAAM,OAAOJ,UAAQ,EACpCxD,SAAU,SAAArf,GAAC,OAAEurB,GAAqBvrB,EAAGkqB,IACrCqC,YAAahC,EACbiC,eAAc,uCAAE,WAAOxsB,GAAP,6BAAAmW,EAAA,sDACVyU,EADU,UACDxf,EAAMqa,aADL,aACD,EAAanH,MAC1B,UAAIlT,EAAMue,gBAAV,aAAI,EAAgBrL,QAAMsM,EAAM,UAAGxf,EAAMue,gBAAT,aAAG,EAAgBrL,OACnD,UAAIlT,EAAMye,YAAV,aAAI,EAAYvL,QAAMsM,EAAM,UAAGxf,EAAMye,YAAT,aAAG,EAAYvL,OAC3C,UAAIlT,EAAM2e,YAAV,aAAI,EAAYzL,QAAMsM,EAAM,UAAGxf,EAAM2e,YAAT,aAAG,EAAYzL,MACvCsM,GAAQa,GAAeb,EAAQ,SAAU5qB,EAAE0Y,OALjC,2CAAF,2DASlB,sBAAKnJ,UAAU,0BAA0BtC,MAAO,CAAE2f,SAAS,QAA3D,UACE,uBAAOnO,QAAQ,WAAf,gCACA,cAAC,KAAD,CAAczR,GAAG,WAAW6V,UAAQ,EAACzX,MAAOgf,EAAOnH,MAAM,OACvD5D,SAAU,SAACrf,GAAK,IAAD,EACVA,EAAEoL,QAAF,UAAWpL,EAAEoL,aAAb,aAAW,EAAS2f,SACrB3B,EAAa3M,QACbkO,EAAW3qB,EAAEoL,OACbif,EAASrqB,EAAEoL,MAAMrJ,QAEjBsoB,EAASrqB,EAAEoL,OACXA,EAAM+e,SAAWnqB,EAAEoL,MACnBA,EAAM4f,UAAY,OAGtBuB,YAAahC,EACbiC,eAAc,uCAAE,WAAOxsB,GAAP,iCAAAmW,EAAA,sDACVyU,EADU,UACDxf,EAAMqa,aADL,aACD,EAAanH,MAC1B,UAAIlT,EAAMue,gBAAV,aAAI,EAAgBrL,QAAMsM,EAAM,UAAGxf,EAAMue,gBAAT,aAAG,EAAgBrL,OACnD,UAAIlT,EAAMye,YAAV,aAAI,EAAYvL,QAAMsM,EAAM,UAAGxf,EAAMye,YAAT,aAAG,EAAYvL,OAC3C,UAAIlT,EAAM2e,YAAV,aAAI,EAAYzL,QAAMsM,EAAM,UAAGxf,EAAM2e,YAAT,aAAG,EAAYzL,OAC3C,UAAIlT,EAAM6e,cAAV,aAAI,EAAc3L,QAAMsM,EAAM,UAAGxf,EAAM6e,cAAT,aAAG,EAAc3L,MAC3CsM,GAAQa,GAAeb,EAAQ,WAAY5qB,EAAE0Y,OANnC,2CAAF,2DAUlB,sBAAKnJ,UAAU,0BAA0BtC,MAAO,CAAE2f,SAAS,QAA3D,UACE,uBAAOnO,QAAQ,WAAf,iCACA,cAAC,KAAD,CAAWzR,GAAG,WACZ5B,MAAOA,EAAM+f,UAAY,GACzB9L,SAAU,SAACrf,GACLA,EAAEwU,OAAOpJ,MAAM6a,OAAO/W,OAAO,IAAG9D,EAAM+f,SAASnrB,EAAEwU,OAAOpJ,aAIlE,sBAAKmE,UAAU,0BAA0BtC,MAAO,CAAE2f,SAAS,QAA3D,UACE,uBAAOnO,QAAQ,WAAf,uCACA,cAAC,KAAD,CAAWzR,GAAG,WAAW5B,MAAOA,EAAM8f,UAAY,GAChD7L,SAAU,SAACrf,GACLA,EAAEwU,OAAOpJ,MAAM6a,OAAO/W,OAAO,IAAG9D,EAAM8f,SAASlrB,EAAEwU,OAAOpJ,aAIlE,sBAAKmE,UAAU,0BAA0BtC,MAAO,CAAE2f,SAAS,QAA3D,UACE,uBAAOnO,QAAQ,OAAf,wFACA,cAAC,KAAD,CAAWzR,GAAG,OAAO5B,MAAOA,EAAMyhB,MAAQ,GACxCxN,SAAU,SAACrf,GACToL,EAAMyhB,KAAK7sB,EAAEwU,OAAOpJ,YAI1B,sBAAKmE,UAAU,0BAAf,UACE,uBAAOkP,QAAQ,aAAf,iFACA,cAAC,KAAD,CAAWzR,GAAG,aAAaiG,cAAyBkB,IAAf/I,EAAM0f,OACzC1f,MAAOA,EAAMyf,YAAc,GACzBxL,SAAU,SAACrf,GACToL,EAAMyf,WAAW7qB,EAAEwU,OAAOpJ,YAIlC,cAAC,KAAD,CAAO0hB,IAAKrC,YC5RGsC,G,wIACnB,uGACSvX,EAAMe,IAAN,UAAatB,EAAb,6BADT,2C,oHAGA,WAAuByD,GAAvB,0FAAsCsU,EAAtC,+BAAiDjN,GAAjD,kBACSvK,EAAMe,IAAN,UAAatB,EAAb,8CAA2D+X,EAA3D,gCAA2FtU,KADpG,2C,yHAGA,WACEkS,EACAroB,GAFF,8FAGEmW,EAHF,+BAGU,GACR0C,EAJF,+BAIU,MAEF6R,EAA8B,IAAlBrC,EAAO1b,OAAP,mBAAkC0b,GAAlC,iBAAuDA,GAN3E,kBAOSpV,EAAMe,IAAN,UAAatB,EAAb,YAAyBgY,EAAzB,+BAAyD1qB,EAAzD,kBAAwEmW,EAAxE,kBAAuF0C,KAPhG,2C,gECLmB8R,G,WAkBnB,WAAYjb,GAAmB,0BAjBvBmT,aAiBsB,OAhBtB1B,SAgBsB,OAftByJ,wBAesB,OAdtBC,YAcsB,OAbtBC,eAasB,OAZtBC,WAYsB,OAXtBC,WAWsB,OAVtBC,aAUsB,OATtBC,aASsB,OARtBC,gBAQsB,OAPtBC,eAOsB,OANtBC,eAMsB,OALtBC,eAKsB,OAJtBC,WAIsB,OAHtBC,iBAGsB,OAFtBrL,kBAEsB,OADtBsL,aACsB,EAC5B9J,KAAKxB,aACDzQ,EAAM2S,yBAA2B3S,EAAM2S,wBAAwB1V,OAAS,EAA1E,aACQ+C,EAAM2S,yBACV,GACF3S,EAAMjF,KAAIkX,KAAKR,IAAMzR,EAAMjF,IAC/BkX,KAAKkB,QAAUnT,EACfiS,KAAKiJ,mBAAqBlb,EAAMyT,kBAChCxB,KAAKuJ,QAAUxb,EAAM6Y,OACrB5G,KAAKwJ,WAAazb,EAAM+Y,UACxB9G,KAAK6J,YAAc9b,EAAM4Y,WACzB3G,KAAKyJ,UAAY1b,EAAMgc,aACvB/J,KAAK0J,UAAY3b,EAAMic,gBACvBhK,KAAK2J,UAAY5b,EAAMkc,cACvBjK,KAAK4J,MAAQ7b,EAAMmc,YACnBlK,KAAK8J,QAAU/b,EAAMqR,YACrBY,KAAKmK,wBACL7J,aAAmBN,UAAM/P,EAAW,CAAEsQ,MAAM,I,yCAG9C,WACE,OAAOP,KAAKkB,U,cAGd,WACE,OAAOlB,KAAKR,K,IAEd,SAAO1W,GACLkX,KAAKR,IAAM1W,I,6BAEb,WACE,OAAOkX,KAAKiJ,oB,IAEd,SAAsB/hB,GACpB8Y,KAAKiJ,mBAAqB/hB,I,iBAE5B,WACE,OAAO8Y,KAAKkJ,Q,IAEd,SAAUhiB,GACR8Y,KAAKkJ,OAAShiB,I,gBAEhB,WACE,OAAO8Y,KAAK4J,O,IAEd,SAAS1iB,GACP8Y,KAAK4J,MAAQ1iB,I,sBAGf,WACE,OAAO8Y,KAAK6J,a,IAEd,SAAe3iB,GACb8Y,KAAK6J,YAAc3iB,I,oBAErB,WACE,OAAO8Y,KAAKyJ,W,IAEd,SAAaviB,GACX8Y,KAAKyJ,UAAYviB,I,oBAEnB,WACE,OAAO8Y,KAAK0J,W,IAEd,SAAaxiB,GACX8Y,KAAK0J,UAAYxiB,I,oBAEnB,WACE,OAAO8Y,KAAK2J,W,IAEd,SAAaziB,GACX8Y,KAAK2J,UAAYziB,I,kBAMnB,WACE,OAAO8Y,KAAKsJ,S,IAJd,SAAWpiB,GACT8Y,KAAKsJ,QAAUpiB,I,gBAQjB,WACE,OAAO8Y,KAAKqJ,O,IAJd,SAASniB,GACP8Y,KAAKqJ,MAAQniB,I,kBAQf,WACE,OAAO8Y,KAAKuJ,S,IAJd,SAAWriB,GACT8Y,KAAKuJ,QAAUriB,I,qBAQjB,WACE,OAAO8Y,KAAKwJ,Y,IAJd,SAActiB,GACZ8Y,KAAKwJ,WAAatiB,I,oBAQpB,WACE,OAAO8Y,KAAKmJ,W,IAJd,SAAajiB,GACX8Y,KAAKmJ,UAAYjiB,I,gBAQnB,WACE,OAAO8Y,KAAKoJ,O,IAJd,SAASliB,GACP8Y,KAAKoJ,MAAQliB,I,kBAMf,WACE,OAAO8Y,KAAK8J,U,uBAEd,WACE,OAAO9J,KAAKxB,c,IAGd,SAAgBP,GACd+B,KAAKxB,aAAeP,I,qCAItB,WACE,OAAO+B,KAAKxB,aAAa9O,KAAI,SAACwL,GAC5B,OAAO,eAAKA,Q,2BAKhB,SAAckP,GACZ,OAAQA,EAAS/rB,OACf,IAAK,WACH2hB,KAAKiJ,mBAAqBmB,EAAS5I,kBACnC,MACF,IAAK,SACHxB,KAAKsJ,QAAU,CAAElP,KAAMgQ,EAASvD,OAAQhpB,KAAK,GAAD,OAAKusB,EAASvsB,KAAd,YAAsBusB,EAASC,YAC3E,MACF,IAAK,OACL,IAAK,gBACHrK,KAAKqJ,MAAQ,CAAEjP,KAAMgQ,EAASvD,OAAQhpB,KAAK,GAAD,OAAKusB,EAASvsB,KAAd,YAAsBusB,EAASC,YACzE,MACF,IAAK,OACHrK,KAAKoJ,MAAQ,CAAEhP,KAAMgQ,EAASvD,OAAQhpB,KAAK,GAAD,OAAKusB,EAASvsB,KAAd,YAAsBusB,EAASC,YACzE,MACF,IAAK,WACHrK,KAAKmJ,UAAY,CAAE/O,KAAMgQ,EAASvD,OAAQhpB,KAAK,GAAD,OAAKusB,EAASvsB,KAAd,YAAsBusB,EAASC,YAC7E,MACF,IAAK,SACH,GAAID,EAAShQ,KAAM,CACjB,IAAMA,EAAOgQ,EAAShQ,KAAK7S,MAAM,EAAG,GACpCyY,KAAKkJ,OAAS,CAAE9O,KAAMA,EAAMvc,KAAK,GAAD,OAAKusB,EAASvsB,OAEhD,MACF,QACEU,QAAQE,IAAI,yBAA0B2rB,GAGtCA,EAAS1D,QAAQ1G,KAAKsK,cAAcF,EAAS1D,U,mCAGnD,WAAyB,IAAD,OACjB1G,KAAKuJ,SACVV,GAAYrB,cAAcxH,KAAKuJ,QAASvJ,KAAKwJ,WAAa,WAAa,GAAI,GAAI,KAC5EriB,MAAK,SAACqB,GACDA,EAASoB,KAAKA,MAChBpB,EAASoB,KAAKA,KAAK6J,SAAQ,SAAC3E,GAC1B,EAAKwb,cAAcxb,SAGxBqI,OAAM,SAACsQ,GAAD,OAAYlpB,QAAQE,IAAIgpB,U,KChLxB8C,GAAkB,CAAEhJ,MAAO1F,GAAkB2F,kBAAmB,IC8C9DzO,gBA5C6B,SAAChF,GAC3C,IAAMqU,EAAYrU,EAAMqU,UAClBlb,EAAQ6G,EAAM7G,MACbge,EAAgB1W,qBAAWC,IAA3ByW,aAEDsF,EAAUzc,EAAM0c,UAAYvjB,IAAUA,EAAM4f,WAC5C5f,GAAUA,EAAMsa,mBAAqBta,EAAMsa,kBAAkBnT,MAAM,KAAKrD,OAAS,EAEjF0f,EAAK,kBAAc3c,EAAMjF,IAY/B,OANCgO,qBAAU,WACLoO,EAAa2C,cAAe9Z,EAAM0c,WACpCvF,EAAa2C,YAAc9Z,EAAM0c,YAEnC,CAACvF,EAAcnX,EAAM0c,WAEf,sBAAKpf,UAAWgE,YAAW,CAAC,YAAatB,EAAMyB,OAAQzB,EAAM1C,WAA7D,UACL0C,EAAMyB,OAAS,uBAAO+K,QAASmQ,EAAhB,SAAwB3c,EAAMyB,QAC9C,sBAAKnE,UAAU,eAAf,UACE,cAAC,KAAD,CAAQvC,GAAG,iBAAiB0G,MAAM,2BAAOa,QAAS,WAChD6U,EAAa9D,QAAU,IAAI4H,GAAQjb,EAAM7G,OAASqjB,IAClDrF,EAAakC,eAAgB,EAC7BlC,EAAa8C,eAAiBja,EAAMoN,UAAWpS,MAAO,CAACiW,MAAM,UAC/D,cAAC,KAAD,CACEtJ,MAAK,OAAExO,QAAF,IAAEA,OAAF,EAAEA,EAAOsa,kBACdta,MAAK,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAOsa,kBACd/G,YAAa,0bAAmGpP,UAAWgE,YAAW,CAAE,YAAa+S,GAAaoI,MACpK,cAAC,KAAD,CAAQza,KAAK,cAAc1E,UAAU,kBAAkBgF,QAAS,WAC9D,GAAKnJ,EAAL,CACA,IAAIyjB,EAAQJ,GACRrjB,EAAM4B,KAAI6hB,EAAM7hB,GAAK5B,EAAM4B,IAC3B5B,EAAMkY,cAAauL,EAAMvL,YAAclY,EAAMkY,aAC7ClY,EAAMwZ,0BAAyBiK,EAAMjK,wBAA0BxZ,EAAMwZ,yBACzE3S,EAAM6c,QAAQD,GACdzF,EAAa9D,QAAU,IAAI4H,GAAQ2B,UAGtCvI,GAAaoI,GAAW,uBAAOnf,UAAU,UAAjB,uPCpDhBwf,GAAW,SAAC9c,GACvB,MAA0BW,mBAA6BX,EAAM7G,OAA7D,mBAAOA,EAAP,KAAcyW,EAAd,KACA,OACA,sBAAKtS,UAAU,qBAA0CtC,MAAO,CAACiV,WAAY,YAA7E,UACI,sBAAK3S,UAAU,sBAAf,UACE,cAAC,KAAD,CAAaxN,KAAK,QAAQ+f,Qf2ZH,Ie3ZY1W,EACjCiU,SAAU,SAACrf,GACLA,EAAE8hB,SACJD,EfwZiB,GevZjB5P,EAAMoN,SfuZW,KerZjBwC,OAAS1N,GACTlC,EAAMoN,cAASlL,OAIrB,uBAAOsK,QAAQ,QAAf,uEAEF,sBAAKlP,UAAU,sBAAf,UACE,cAAC,KAAD,CAAaxN,KAAK,SAAS+f,Qf8YH,Ie9YY1W,EAClCiU,SAAU,SAACrf,GACLA,EAAE8hB,SACJD,Ef2YkB,Ge1YlB5P,EAAMoN,Sf0YY,KexYlBwC,OAAS1N,GACTlC,EAAMoN,cAASlL,OAGrB,uBAAOsK,QAAQ,SAAf,mEA1BN,cAAgDrT,KCqJlC6L,gBAlJK,WAAO,IAAD,IACzB,EAA4DvE,qBAAWC,IAA/DyW,EAAR,EAAQA,aAAclS,EAAtB,EAAsBA,iBAAiBuP,EAAvC,EAAuCA,iBACjCC,EAAcxP,EAAiBE,KAC/BuP,EAAUD,EAAYC,QAC5B,EAAsC/T,mBAAQ,UAAC+T,EAAQC,cAAT,aAAC,EAAgBtB,SAA/D,mBAAO0J,EAAP,KAAoBC,EAApB,KACA,EAAwCrc,mBAAS8T,EAAYwI,WAA7D,mBAAOC,EAAP,KAAqBC,EAArB,KACMjI,EAAaV,EAAiBU,WAC9BkI,IAAoB1I,EAAQC,SAA0G,IAAhGD,EAAQC,OAAOzE,YAAYW,WAAU,SAAC9P,GAAD,MAA2B,YAAnBA,EAAKqP,cAA4BrP,EAAKxB,YACzH8d,IAAqBH,IAA8F,IAA9EzI,EAAYvE,YAAYW,WAAU,SAAC9P,GAAD,MAA2B,eAAnBA,EAAKqP,eACpFgF,EAAgBZ,EAAiBY,cACjCf,EAAYpP,EAAiBoP,UAO7BiJ,EAAgB,WACpB,GAAK5I,EAAQC,OAAb,CAIM,IAAD,IADL,GAFAF,EAAY8I,cAAgB9I,EAAY+I,aAEnC9I,EAAQC,OAAOtB,QAElBoB,EAAYwI,UAAZ,2BACKvI,EAAQC,OAAOtB,SADpB,IAEEV,yBACE,UAAA+B,EAAQC,OAAOtB,eAAf,mBAAwBV,+BAAxB,eAAiDhR,KAAI,SAACZ,GACpD,MAAO,CAAEqP,YAAarP,EAAKqP,YAAa/D,KAAMtL,EAAKsL,WAC/C,GACRtR,QAAImH,EACJmP,iBAAanP,SATYuS,EAAYwI,eAAY/a,EAYrDib,EAAgB1I,EAAYwI,aAE9B,OAAQ,qCACN,cAAC,IAAD,CAAM3f,UAAU,0BAA0BiP,OAxB7B,WACb,OAAO,qCAAE,0MAA4C,cAAC,KAAD,CAAQlK,KAAK,SAASC,QAASgb,EAAe7b,MAAM,yDAAYT,UAAWoc,EAAiB9f,UAAU,yCAuB3J,SACE,sBAAKA,UAAU,4BAAf,UACE,sBAAKA,UAAU,8BAA8BtC,MAAO,CAACiW,MAAO,OAA5D,UACE,qBAAK3T,UAAU,mBAAf,gBACA,qBAAKA,UAAU,oBAAoBtC,MAAO,CAACiW,MAAO,OAAlD,SACE,cAAC,GAAD,CAAmBjB,SAAO,EACxBvO,MAAO,uBAAO+K,QAAQ,OAAf,gPACPqD,QAASqF,GAAckI,EACvB5M,SAAU,SAACziB,EAAwBmiB,GAC5BwE,EAAQC,SACTzE,IAAawE,EAAQC,OAAOzE,YAAcA,GACzCniB,EAAE8hB,UAAS6E,EAAQC,OAAOtB,aAAUnR,KAE3C8O,MAAO,cAAC,GAAD,CAAeqD,UAAWA,EACzBtZ,GAAG,cACH5B,MAAO4jB,GAAeP,GACtBK,QAAS,SAAC1jB,GACHub,EAAQC,SACbD,EAAQC,OAAOtB,QAAUla,EACzB6jB,EAAetI,EAAQC,OAAOtB,WAEhCjG,SAAU,WACHsH,EAAQC,SACbD,EAAQC,OAAOtB,QAAU8D,EAAasG,eACtCT,EAAetI,EAAQC,OAAOtB,aAGxCvG,QAASoB,GAAalB,QAAO,SAACjM,GAAD,MAAmB,WAAWyB,SAASzB,EAAKsL,SACzElT,MAAOic,EAAgBtG,GhBoVlB,EgBnVLqB,WAAW,UACXD,YAAW,UAAEwE,EAAQC,cAAV,aAAE,EAAgBzE,mBAInC,sBAAK5S,UAAU,uBAAf,UACE,qBAAKA,UAAU,mBAAf,gBACA,qBAAKA,UAAU,oBAAf,SACE,cAAC,GAAD,CACEmE,MAAO,uBAAO+K,QAAQ,QAAf,oEACPqD,QAASqF,KAAgBT,EAAY+I,aAAehN,SAAU,SAACziB,EAAwBmiB,GACjFA,IAAauE,EAAYvE,YAAcA,GACtCniB,EAAE8hB,UAAS4E,EAAY+I,kBAAetb,IAE7CkL,SAAU,SAACrf,EAAemiB,GAA+CA,IAAauE,EAAYvE,YAAcA,IAChHc,MAAO,cAAC,GAAD,CAAU7X,MAAOsb,EAAY+I,aAAcpQ,SAAU,SAACjU,GAC3Dsb,EAAY+I,aAAerkB,KAE7B2T,QAASoB,GAAalB,QAAO,SAACjM,GAAD,MAAmB,WAAWyB,SAASzB,EAAKsL,SACzElT,MAAOic,EAAgBtG,GhBgUlB,EgB/TLqB,WAAW,iBACXD,YAAauE,EAAYvE,mBAI/B,sBAAK5S,UAAU,8BAA8BtC,MAAO,CAACiW,MAAO,OAA5D,UACE,qBAAK3T,UAAU,mBAAf,iBACA,qBAAKA,UAAU,oBAAoBtC,MAAO,CAACiW,MAAO,OAAlD,SACE,cAAC,GAAD,CAAmBjB,SAAO,EACxBvO,MAAO,uBAAO+K,QAAQ,aAAf,gHACPqD,QAASwN,EACT7M,SAAU,SAACziB,EAAwBmiB,GAC7BA,IAAauE,EAAYvE,YAAcA,GACtCniB,EAAE8hB,UAAS4E,EAAYwI,eAAY/a,IAE1C8O,MAAO,cAAC,GAAD,CAAeqD,UAAWA,EACzBtZ,GAAG,aACH5B,MAAO+jB,GAAgBV,GACvBK,QAAS,SAAC1jB,GACRsb,EAAYwI,UAAY9jB,EACxBgkB,EAAgB1I,EAAYwI,YAE9B7P,SAAU,WACRqH,EAAYwI,UAAY9F,EAAasG,eACrCN,EAAgB1I,EAAYwI,cAGtCnQ,QAASoB,GAAalB,QAAO,SAACjM,GAAD,MAAmB,WAAWyB,SAASzB,EAAKsL,SACzElT,MAAOic,EAAgBtG,GhBmSlB,EgBlSLqB,WAAW,aACXD,YAAauE,EAAYvE,mBAI/B,sBAAK5S,UAAU,uBAAf,UACE,qBAAKA,UAAU,mBAAf,iBACA,qBAAKA,UAAU,oBAAf,SACE,cAAC,GAAD,CACEmE,MAAO,uBAAO+K,QAAQ,QAAf,oEACPqD,UAAW4E,EAAY8I,gBAClB,IADmC9I,EAAYvE,YAAYW,WAAU,SAAA9P,GAAI,MAAqB,oBAAnBA,EAAKqP,cAAoCrP,EAAKxB,YAE9HiR,SAAU,SAACziB,EAAwBmiB,GAC7BA,IAAauE,EAAYvE,YAAcA,GACtCniB,EAAE8hB,UAAS4E,EAAY8I,mBAAgBrb,IAE9CkL,SAAU,SAACrf,EAAemiB,GAA+CA,IAAauE,EAAYvE,YAAcA,IAChHc,MAAO,cAAC,GAAD,CAAU7X,MAAOsb,EAAY8I,cAAenQ,SAAU,SAACjU,GAC5Dsb,EAAY8I,cAAgBpkB,KAE9B2T,QAASoB,GAAalB,QAAO,SAACjM,GAAD,MAAmB,WAAWyB,SAASzB,EAAKsL,SACzElT,MAAOic,EAAgBtG,GhB6QlB,EgB5QLqB,WAAW,kBACXD,YAAauE,EAAYvE,eAhB7B,gBAAiDuE,EAAY8I,wBAsBnE,cAAC,GAAD,UC7JSG,GAAmB,CAC9B,CAAErR,KAAM,EAAGvc,KAAM,wHACjB,CAAEuc,KAAM,EAAGvc,KAAM,yHACjB,CAAEuc,KAAM,EAAGvc,KAAM,uEACjB,CAAEuc,KAAM,EAAGvc,KAAM,4BACjB,CAAEuc,KAAM,EAAGvc,KAAM,8EACjB,CAAEuc,KAAM,EAAGvc,KAAM,yKCNN6tB,GAAmB,CAC9B,CAAEtR,KAAM,EAAGvc,KAAM,yMACjB,CAAEuc,KAAM,EAAGvc,KAAM,uNACjB,CAAEuc,KAAM,EAAGvc,KAAM,kECHN8tB,GAAmB,CAC9B,CAAEvR,KAAM,EAAGvc,KAAM,0IACjB,CAAEuc,KAAM,EAAGvc,KAAM,2LACjB,CAAEuc,KAAM,EAAGvc,KAAM,iPACjB,CAAEuc,KAAM,EAAGvc,KAAM,8EACjB,CAAEuc,KAAM,EAAGvc,KAAM,oFACjB,CAAEuc,KAAM,EAAGvc,KAAM,0FACjB,CAAEuc,KAAM,GAAIvc,KAAM,gGAClB,CAAEuc,KAAM,GAAIvc,KAAM,+KAClB,CAAEuc,KAAM,EAAGvc,KAAM,iECTN+tB,GAAkB,CAC7B,CAAExR,KAAM,EAAGvc,KAAM,sDACjB,CAAEuc,KAAM,EAAGvc,KAAM,uSACjB,CAAEuc,KAAM,EAAGvc,KAAM,4DACjB,CAAEuc,KAAM,EAAGvc,KAAM,wEACjB,CAAEuc,KAAM,EAAGvc,KAAM,mEACjB,CAAEuc,KAAM,GAAIvc,KAAM,wCAClB,CAAEuc,KAAM,GAAIvc,KAAM,iECPPguB,GAAkB,CAC7B,CAAEzR,KAAM,EAAGvc,KAAM,8GACjB,CAAEuc,KAAM,EAAGvc,KAAM,sJACjB,CAAEuc,KAAM,EAAGvc,KAAM,8J,UCOEiuB,G,WASnB,WAAY/d,GAAyB,IAAD,gCAR5ByR,SAQ4B,OAP5BuM,WAO4B,OAN5BC,uBAM4B,OAL5BrB,WAK4B,OAJ5BsB,UAI4B,OAH5BC,gBAG4B,OAF5B1N,kBAE4B,EAClCwB,KAAK+L,MAAQhe,EAAMoe,MAAQC,eAC3BpM,KAAKxB,cACH,UAAAzQ,EAAMsS,oBAAN,eAAoB3Q,KAAI,SAACZ,GACvB,OAAO,2BAAKA,GAAZ,IAAkBsL,KAAM8B,GAAgBpN,EAAKsL,aACzC,GACR4F,KAAKR,IAAMzR,EAAMjF,GACjBkX,KAAKgM,kBAAoBje,EAAMse,mBAlBpB,EAmBXrM,KAAKiM,KAAOle,EAAMmH,YACdnH,EAAMue,YAAWtM,KAAKkM,WAAa,IAAI3U,KAAKxJ,EAAMue,YACtDtM,KAAK2K,MAAL,2BACK5c,EAAMwe,MADX,IAEE7L,yBACE,UAAA3S,EAAMwe,YAAN,mBAAYlM,oBAAZ,eAA0B3Q,KAAI,SAACZ,GAC7B,OAAO,2BAAKA,GAAZ,IAAkBsL,KAAM8B,GAAgBpN,EAAKsL,aACzC,KAEVkG,aAAmBN,UAAM/P,EAAW,CAAEsQ,MAAM,I,uCAG9C,WACE,OAAOP,KAAK2K,O,IAEd,SAASzjB,GACP8Y,KAAK2K,MAAQzjB,I,eAEf,WACE,OAAO8Y,KAAKiM,M,IAEd,SAAQ/kB,GACN8Y,KAAKiM,KAAO/kB,I,qBAGd,WACE,OAAO8Y,KAAKkM,Y,IAEd,SAAchlB,GACZ8Y,KAAKkM,WAAahlB,I,uBAEpB,WACE,OAAO8Y,KAAKxB,c,IAEd,SAAgBtX,GACd8Y,KAAKxB,aAAetX,I,qCAItB,WACE,OAAO8Y,KAAKxB,aAAa9O,KAAI,SAACwL,GAC5B,OAAO,eAAKA,Q,2BAIhB,WACE,IAAIsR,EAAM,CAAEH,kBAAmBrM,KAAKgM,kBAAmBG,KAAMnM,KAAK+L,OAMlE,OALI/L,KAAKxB,aAAaxT,OAAS,IAAGwhB,EAAI9L,wBAA0BV,KAAKU,2BACjEV,KAAK2K,QAAO6B,EAAIC,gBAAJ,eAA2BzM,KAAK2K,QAC5C3K,KAAKkM,aAAYM,EAAIF,UAAYtM,KAAKkM,WAAWQ,sBACjD1M,KAAKiM,OAAMO,EAAI7K,uBAAJ,eAAkC3B,KAAKiM,OAClDjM,KAAKR,MAAKgN,EAAI1jB,GAAKkX,KAAKR,KACrBgN,M,KCvEEG,GAAb,WAUE,aAAwD,IAC3C,IADD5e,EAA2C,4DAAXkC,GAAW,0BAT/CuP,SAS+C,OAR/CuM,WAQ+C,OAP/Ca,oBAO+C,OAN/CC,aAM+C,OAL/CC,mBAK+C,OAJ/CC,qBAI+C,OAH/C/L,cAG+C,OAF/CxC,kBAE+C,EACjDzQ,IACFiS,KAAKR,IAAMzR,EAAMjF,GACjBkX,KAAK+L,MAAQhe,EAAMoe,MAAQC,eAC3BpM,KAAK4M,eAAiB7e,EAAMif,eAC5BhN,KAAK6M,QAAU9e,EAAMkf,OACrBjN,KAAK8M,cAAgB/e,EAAMmf,cAC3BlN,KAAKgB,SAAL,2BACKjT,EAAMqT,SADX,IAEEV,yBACE,UAAA3S,EAAMqT,eAAN,mBAAef,oBAAf,eAA6B3Q,KAAI,SAACZ,GAChC,OAAO,2BAAKA,GAAZ,IAAkBsL,KAAM8B,GAAgBpN,EAAKsL,aACzC,KAENrM,EAAMsS,cAAgBtS,EAAMsS,aAAarV,OAAS,EACpDgV,KAAKxB,aAAezQ,EAAMsS,aAAa3Q,KAAI,SAACZ,GAC1C,OAAO,2BAAKA,GAAZ,IAAkBsL,KAAM8B,GAAgBpN,EAAKsL,WAE5C4F,KAAKxB,aAAe,GACrBzQ,EAAMof,kBAAiBnN,KAAK+M,gBAAkB,IAAIjB,GAAe/d,EAAMof,oBAE3EnN,KAAKxB,aAAe,GACpBwB,KAAK+L,MAAQK,gBAEf9L,aAAmBN,UAAM/P,EAAW,CAAEsQ,MAAM,IAlChD,gDAqCE,WACE,OAAOP,KAAK4M,gBAtChB,IAwCE,SAAkB1lB,GAChB8Y,KAAK4M,eAAiB1lB,IAzC1B,kBA2CE,WACE,OAAO8Y,KAAK6M,SA5ChB,IA8CE,SAAW3lB,GACT8Y,KAAK6M,QAAU3lB,IA/CnB,wBAiDE,WACE,OAAO8Y,KAAK8M,eAlDhB,IAoDE,SAAiB5lB,GACf8Y,KAAK8M,cAAgB5lB,IArDzB,0BAuDE,WACE,OAAO8Y,KAAK+M,iBAxDhB,IA0DE,SAAmB7lB,GACjB8Y,KAAK+M,gBAAkB7lB,IA3D3B,uBA6DE,WACE,OAAO8Y,KAAKxB,cA9DhB,IAgEE,SAAgBtX,GACd8Y,KAAKxB,aAAetX,IAjExB,mBAmEE,WACE,OAAO8Y,KAAKgB,UApEhB,IAsEE,SAAY9Z,GACV8Y,KAAKgB,SAAW9Z,IAvEpB,qCA0EE,WACE,OAAO8Y,KAAKxB,aAAa9O,KAAI,SAACwL,GAC5B,OAAO,eAAKA,QA5ElB,2BAgFE,WACE,IAAIkS,EAAU,CAAEjB,KAAMnM,KAAK+L,OAS3B,OARI/L,KAAKxB,aAAaxT,OAAS,IAAGoiB,EAAQ1M,wBAA0BV,KAAKU,2BACrEV,KAAK+M,kBAAiBK,EAAQC,2BAA6BrN,KAAK+M,gBAAgBO,iBAChFtN,KAAK4M,iBAAgBQ,EAAQJ,eAAiBhN,KAAK4M,gBACnD5M,KAAK6M,UAASO,EAAQH,OAASjN,KAAK6M,SACpC7M,KAAK8M,gBAAeM,EAAQF,cAAgBlN,KAAK8M,eACjD9M,KAAKR,MAAK4N,EAAQtkB,GAAKkX,KAAKR,KAC5BQ,KAAKgB,UAAchB,KAAKgB,SAASO,OAAWvB,KAAKgB,SAASQ,oBAC5D4L,EAAQ3L,mBAAR,eAAkCzB,KAAKgB,WAClCoM,MA1FX,K,SCcaG,GAAa,SAACxf,GACzB,MAA0CS,qBAAWC,IAA7CyW,EAAR,EAAQA,aAAclS,EAAtB,EAAsBA,iBACtB,EAAsBtE,mBAAS,IAA/B,mBAAOkT,EAAP,KAAYM,EAAZ,KACME,EAAYpP,EAAiBoP,UACnC,EAAoB1T,mBAASX,EAAMyf,WAAa,IAAIb,GAAU,KAAvDa,EAAP,oBACA,EAAyB9e,mBAAS8e,EAAUC,gBAAkB,IAAI3B,GAAe,KAA1E2B,EAAP,oBACA,EAA8B/e,mBAAS+e,EAAelB,MAAtD,mBAAOnL,EAAP,KAAgBqF,EAAhB,KACA3P,qBAAU,WAAK,IAAD,EACVoL,EAAOuL,EAAe7L,IAAf,UAAwB6L,EAAe7L,IAAIzM,OAA3C,YAAqDsY,EAAe7L,IAAIxM,QAAxE,sBAAmFqY,EAAe7L,WAAlG,aAAmF,EAAoBvM,SAAY,IACtHmY,EAAUC,iBAAiBA,IAAgBD,EAAUC,eAAiBA,GACrE1f,EAAMyf,WAAWzf,EAAMoN,SAASqS,KACrC,CAACzf,EAAOyf,EAAWC,IACrB,IAAM5S,EAAUoB,GAAalB,QAAO,SAACjM,GAAD,MAAmB,MAAMyB,SAASzB,EAAKsL,SACrEwD,GAAqF,IAA3E6P,EAAexP,YAAYW,WAAU,SAAC9P,GAAD,MAA2B,SAAnBA,EAAKqP,eAGlE,OAAS,qCACP,sBAAK9S,UAAU,iBAAiBtC,MAAO,CAACiW,MAAM,OAA9C,UACE,uBAAOzE,QAAQ,SACblP,UAAU,cAActC,MAAO,CAACiW,MAAM,OADxC,qNAEA,qBAAK3T,UAAU,QAAf,SACE,cAAC,KAAD,CAAcvC,GAAG,SAAS5B,MAAOsmB,EAAUP,OAAQS,IAAK,KAAMC,IAAK,GACjExS,SAAU,SAACrf,GACJA,EAAEoL,MAAOsmB,EAAUP,OAAOnxB,EAAEoL,MAC7BsmB,EAAUP,YAAQhd,GAE1BG,KAAK,cAGT,sBAAK/E,UAAU,iBAAiBtC,MAAO,CAACiW,MAAM,OAA9C,UACE,uBAAOzE,QAAQ,gBAAgBlP,UAAU,cAActC,MAAO,CAACiW,MAAM,OAArE,waACA,qBAAK3T,UAAU,QAAf,SACE,cAAC,KAAD,CAAcvC,GAAG,gBAAgB4kB,IAAK,GAAIC,IAAK,EAC7CxS,SAAU,SAACrf,GACJA,EAAEoL,MAAOsmB,EAAUI,aAAa9xB,EAAEoL,MAClCsmB,EAAUI,kBAAa3d,GAE9B/I,MAAOsmB,EAAUI,aAAcxd,KAAK,cAG1C,qBAAK/E,UAAU,kCAAf,SACE,cAAC,GAAD,CACEkT,SAAU,SAACziB,EAAwBmiB,GAC3BniB,EAAE8hB,UAEJ6P,EAAe7L,SAAM3R,EACrBlC,EAAMoN,SAASqS,IAEbvP,IAAawP,EAAexP,YAAcA,IAElDzO,MAAO,uBAAO+K,QAAQ,MAAf,kOACPwE,MAAO,cAAC,KAAD,CAAYjW,GAAG,MAAMsH,KAAK,OACzBlJ,MAAO0a,EACPzG,SAAU,SAACrf,GACTomB,EAAOpmB,EAAEwU,OAAOpJ,OAChB,IAAMmb,EAASvmB,EAAEwU,OAAOpJ,MAAM6a,OAAO1T,MAAM,KAC3C,GAAIgU,GAAUA,EAAOrX,OAAS,EAAG,CAC/B,IAAM6iB,EAAO,CAAC1Y,OAAQkN,EAAO,GAAIjN,QAASiN,EAAO,IAC7CA,EAAO,GAAIwL,EAAKxY,QAAUgN,EAAO,GAChChD,GAAqB,UAAUwO,EAAKxY,QAAQoY,EAAexP,YxBgVpE,GwB/UIwP,EAAe7L,IAAMiM,EACrB9f,EAAMoN,SAASqS,OAG3B3S,QAASA,EACT3T,MxB2US,EwB1UT+W,YAAawP,EAAexP,YAC5BC,WAAW,kBAGf,qBAAK7S,UAAU,kCAAf,SACE,cAAC,GAAD,CACEmE,MAAO,uBAAO+K,QAAQ,YAAf,4HACPgE,SAAU,SAACziB,EAAwBmiB,GAClBniB,EAAE8hB,UACL6P,EAAenB,eAAYrc,GAEzBgO,IAAawP,EAAexP,YAAcA,IAE1D9C,SAAU,SAACrf,EAAemiB,GACpBA,IAAawP,EAAexP,YAAcA,IAChDc,MAAO,cAAC,KAAD,CAAUjW,GAAG,YAAY+a,UAAQ,EAACnJ,WAAW,WAC5CiJ,OAAO,KAAKC,KAAK,aACjB1c,MAAOumB,EAAenB,UACtBnR,SAAU,SAACrf,GACT2xB,EAAenB,UAAYxwB,EAAEwU,OAAOpJ,SAG9C2T,QAASA,EACT3T,MxBmTS,EwBlTT+W,YAAawP,EAAexP,YAC5BC,WAAW,gBAGf,qBAAK7S,UAAU,UAAUtC,MAAO,CAACiW,MAAO,OAAxC,SACE,cAAC,GAAD,CACMxP,MAAO,uBAAO+K,QAAQ,cAAf,8IACPqD,QAASA,EACTW,SAAU,SAACziB,EAAwBmiB,GAC7BA,IAAawP,EAAexP,YAAcA,GACzCniB,EAAE8hB,UAAS6P,EAAelB,UAAOtc,IAExC8O,MAAO,cAAC,GAAD,CAAaqD,UAAWA,EACvBtZ,GAAG,cACH5B,MAAOka,GAAWmJ,GAClBK,QAAS,SAAC1jB,GACRumB,EAAelB,KAAOrlB,EACtBuf,EAAWgH,EAAelB,OAE5BpR,SAAU,WACRsS,EAAelB,KAAOrH,EAAasG,eACnC/E,EAAWgH,EAAelB,SAGpC1R,QAASoB,GAAalB,QAAO,SAACjM,GAAD,MAAmB,WAAWyB,SAASzB,EAAKsL,SACzElT,MxByRK,EwBxRLgX,WAAW,OACXD,YAAawP,EAAexP,gBAGpC,cAAC,GAAD,QCoDWlL,gBA3KK,WAAO,IAAD,MAC1B,EAA2CvE,qBAAWC,IAA9CuE,EAAR,EAAQA,iBAAkBkS,EAA1B,EAA0BA,aAGpBrK,EAAUoB,GAAalB,QAAO,SAACjM,GAAD,MADjB,KAC+CyB,SAASzB,EAAKsL,SAK1EoI,EAAcxP,EAAiBE,KAC/B4a,EAAMtL,EAAYuL,WAClBC,IAAgBF,GAAQA,EAAM,KAAQtL,EAAYyL,WAAa,EAC/DC,EAAeF,GAAexL,EAAY2L,UAAY,GAC5D,EAA8Bzf,mBAAQ,UAAC8T,EAAYgL,iBAAb,aAAC,EAAuBpM,SAA9D,mBAAOA,EAAP,KAAgBqF,EAAhB,KAEA3P,qBAAU,WACJkX,QAAuC/d,IAAxBuS,EAAYgL,UAC9BhL,EAAYgL,UAAY,IAAIb,GACnBqB,QAAuC/d,IAAxBuS,EAAYgL,YAAuBhL,EAAYgL,eAAYvd,KACpF,CAAC+d,EAAaxL,IAEhB,IAAMgL,EAAYhL,EAAYgL,UAC9B1W,qBAAU,YACHoX,GAAgBV,IACjBA,EAAUY,mBAAgBne,EAC1BoP,GAAqB,iBAAiBmO,EAAUY,cAAeZ,EAAUvP,YzBiX/D,MyB/Wd,CAACiQ,EAAcV,IACjB1W,qBAAU,YACHkX,GAAiBxL,EAAYgL,YAChChL,EAAYgL,eAAYvd,EACxBoP,GAAqB,kBAAmBmD,EAAYgL,UAAWhL,EAAYvE,YzB2W/D,MyBzWb,CAAE+P,EAAaxL,IAClB,IAAM6L,EAAU,CAACC,SAAS,QAAS5F,SAAS,QAASjK,UAAW,SAAUT,WAAY,YAChFuQ,EAAY,CAACC,WAAY,UAE/B,OAAQ,mCACJ,cAAC,IAAD,CAAMnjB,UAAU,0BAA0BiP,OAhC/B,WACX,OAAO,+JA+BP,SACI,sBAAKjP,UAAU,4BAAf,UACE,sBAAKA,UAAU,0CAAf,UACE,qBAAKA,UAAU,mBAAf,kBACA,sBAAKA,UAAU,kCAAkCtC,MAAOwlB,EAAxD,UACE,uBAAOhU,QAAQ,iBAAf,yGACA,cAAC,KAAD,CAAUI,QAAQ,iBAAiB5R,MAAOslB,EAAS5T,YAAY,6CAC7DI,QAAS4Q,GAAkBzQ,YAAY,OAAOJ,WAAS,EACvD1T,MAAOukB,GAAiBxQ,MAAK,SAACnM,GAAD,OAAQA,EAAKsL,OAASoI,EAAYiM,cAC/DtT,SAAU,SAACrf,GACT0mB,EAAYiM,WAAa3yB,EAAEoL,MAAMkT,cAIzC,sBAAK/O,UAAU,0CAA0CtC,MAAO,CAACiW,MAAO,OAAxE,UACE,qBAAK3T,UAAU,mBAAf,iBACA,qBAAKA,UAAU,kCAAkCtC,MAAO,CAACiW,MAAO,OAAhE,SACE,cAAC,GAAD,CAAoBpB,QAASsQ,EAC3Bnf,UAAQ,EACRwP,SAAU,SAACziB,EAAwBmiB,GACrBA,GAAeuE,EAAYgL,YAAWhL,EAAYgL,UAAUvP,YAAcA,GACzEniB,EAAE8hB,UAAU4E,EAAYgL,eAAYvd,IAEnDT,MAAO,uBAAO+K,QAAQ,aAAf,4PACPwE,MAAO,cAAC,KAAD,CAAUpE,QAAQ,aAAcF,YAAY,6CAAUG,WAAS,EACpE7R,MAAO,CAACulB,SAAS,QAAS5F,SAAS,SACnC7N,QAASgR,GAAiB7Q,YAAY,OACtC9T,MAAO2kB,GAAgB5Q,MAAK,SAACnM,GAAD,aAAQA,EAAKsL,QAAL,UAAcoI,EAAYgL,iBAA1B,aAAc,EAAuBY,kBACzEjT,SAAU,SAACrf,GACL0mB,EAAYgL,YAAWhL,EAAYgL,UAAUY,cAAgBtyB,EAAEoL,MAAMkT,SAE7ES,QAASA,EACT3T,MzBoUA,EyBnUA+W,YAAW,UAAEuE,EAAYgL,iBAAd,aAAE,EAAuBvP,YACpCC,WAAW,iBAAiBH,SAAO,GAjBrC,qBAA+DmQ,SAqBnE,sBAAK7iB,UAAU,0CAA0CtC,MAAO,CAACiW,MAAO,OAAxE,UACE,qBAAK3T,UAAU,mBAAf,iBACA,qBAAKA,UAAU,kCAAkCtC,MAAO,CAACiW,MAAO,OAAhE,SACE,cAAC,GAAD,CAAoBpB,QAASoQ,EAC3Bjf,UAAQ,EACRwP,SAAU,SAACziB,EAAwBmiB,GACrBA,IAAauE,EAAYvE,YAAcA,GACzCuE,EAAYgL,eAAYvd,GAEpCT,MAAO,uBAAO+K,QAAQ,YAAf,gPACPwE,MAAO,cAAC,GAAD,CAAYyO,UAAWA,EAAWrS,SAAU,SAACuT,GAC9ClM,EAAYgL,YAAckB,IAAOlM,EAAYgL,UAAYkB,MAE/D7T,QAASA,EACT3T,MzBgTA,EyB/SA+W,YAAauE,EAAYvE,YACzBC,WAAW,kBAAkBH,SAAO,GAbtC,oBAA6DiQ,SAiBjE,sBAAK3iB,UAAU,0CAA0CtC,MAAO,CAACiW,MAAO,OAAxE,UACE,qBAAK3T,UAAU,mBAAf,iBACA,qBAAKA,UAAU,kCAAkCtC,MAAO,CAACiW,MAAO,OAAhE,SACE,cAAC,GAAD,CAAoBpB,QAASoQ,EAC3Bjf,UAAQ,EACRwP,SAAU,SAACziB,EAAwBmiB,GAClBuE,EAAYgL,YACbvP,IAAauE,EAAYgL,UAAUvP,YAAcA,GAChDniB,EAAE8hB,UAAS4E,EAAYgL,UAAUpM,aAAUnR,KAE5DT,MAAO,uBAAO+K,QAAQ,mBAAf,wIACPwE,MAAO,cAAC,GAAD,CAAcqD,WAAW,EAC5BtZ,GAAG,mBACH5B,MAAOka,GAAWmJ,GAClBK,QAAS,SAAC1jB,GACHsb,EAAYgL,YACjBhL,EAAYgL,UAAUpM,QAAUla,EAChCuf,EAAWjE,EAAYgL,UAAUpM,WAEnCjG,SAAU,WACHqH,EAAYgL,YACjBhL,EAAYgL,UAAUpM,QAAU8D,EAAasG,eAC7C/E,EAAWjE,EAAYgL,UAAUpM,aAGvCvG,QAASA,EACT3T,MzBgRA,EyB/QA+W,YAAW,UAAEuE,EAAYgL,iBAAd,aAAE,EAAuBvP,YACpCC,WAAW,UAAUH,SAAO,GAzB9B,uBAAgEiQ,SA6BpE,sBAAK3iB,UAAU,0CAAf,UACE,qBAAKA,UAAU,mBAAf,kBACA,sBAAKA,UAAU,kCAAkCtC,MAAOwlB,EAAxD,UACE,uBAAOhU,QAAQ,iBAAf,qHACA,cAAC,KAAD,CAAUI,QAAQ,iBAAiB5R,MAAOslB,EACxC5T,YAAY,6CAAUG,WAAS,EAC/BC,QAAS6Q,GAAkB1Q,YAAY,OACvC9T,MAAOwkB,GAAiBzQ,MAAK,SAACnM,GAAD,OAAQA,EAAKsL,OAASoI,EAAYmM,iBAC/DxT,SAAU,SAACrf,GAAM0mB,EAAYmM,cAAe7yB,EAAEoL,MAAMkT,cAI1D,sBAAK/O,UAAU,0CAAf,UACE,qBAAKA,UAAU,mBAAf,mBACA,sBAAKA,UAAU,kCAAkCtC,MAAOwlB,EAAxD,UACE,uBAAOhU,QAAQ,kBAAf,gFACA,cAAC,KAAD,CAAUI,QAAQ,kBAAkB5R,MAAOslB,EACzC5T,YAAY,6CAAUG,WAAS,EAC/BC,QAAS8Q,GAAkB3Q,YAAY,OACvC9T,MAAOykB,GAAiB1Q,MAAK,SAACnM,GAAD,OAAQA,EAAKsL,OAASoI,EAAYoM,kBAC/DzT,SAAU,SAACrf,GAAM0mB,EAAYoM,eAAiB9yB,EAAEoL,MAAMkT,cAI5D,sBAAK/O,UAAU,0CAAf,UACE,qBAAKA,UAAU,mBAAf,kBACA,sBAAKA,UAAU,kCAAkCtC,MAAOwlB,EAAxD,UACE,uBAAOhU,QAAQ,gBAAf,oEACA,cAAC,KAAD,CAAUI,QAAQ,gBAAgB5R,MAAOslB,EACvC5T,YAAY,6CAAUG,WAAS,EAC/BC,QAAS+Q,GAAiB5Q,YAAY,OACtC9T,MAAO0kB,GAAgB3Q,MAAK,SAACnM,GAAD,OAAQA,EAAKsL,OAASoI,EAAYqM,gBAC9D1T,SAAU,SAACrf,GAAO0mB,EAAYqM,aAAe/yB,EAAEoL,MAAMkT,cAI3D,qBAAK/O,UAAU,0CAA0CtC,MAAO,CAACiW,MAAO,MAAOiG,YAAY,UAA3F,SACE,uXC3LD6J,GAAc,CACzB,CAAE1U,KAAM,EAAGvc,KAAM,mFACjB,CAAEuc,KAAM,EAAGvc,KAAM,yRACjB,CAAEuc,KAAM,EAAGvc,KAAM,4QACjB,CAAEuc,KAAM,EAAGvc,KAAM,oDACjB,CAAEuc,KAAM,EAAGvc,KAAM,4EACjB,CAAEuc,KAAM,EAAGvc,KAAM,+HACjB,CAAEuc,KAAM,EAAGvc,KAAM,qLACjB,CAAEuc,KAAM,EAAGvc,KAAM,sICTNkxB,GAAS,CACpB,CAAE3U,KAAM,EAAGvc,KAAM,gLACjB,CAAEuc,KAAM,EAAGvc,KAAM,uEACjB,CAAEuc,KAAM,EAAGvc,KAAM,sGACjB,CAAEuc,KAAM,EAAGvc,KAAM,iHACjB,CAAEuc,KAAM,EAAGvc,KAAM,sLCLNmxB,GAAkB,CAC7B,CAAE5U,KAAM,EAAGvc,KAAM,uEACjB,CAAEuc,KAAM,EAAGvc,KAAM,2LACjB,CAAEuc,KAAM,EAAGvc,KAAM,yNACjB,CAAEuc,KAAM,EAAGvc,KAAM,qDCoHFkV,gBAtGK,WACpB,IAAQC,EAAqBxE,qBAAWC,IAAhCuE,iBAGF6H,EAAUoB,GAAalB,QAAO,SAACjM,GAAD,MADjB,KAC+CyB,SAASzB,EAAKsL,SAK1EoI,EAAcxP,EAAiBE,KAC/B+b,OAAwChf,IAA1BuS,EAAY0M,WH5BC,IG4B0B1M,EAAY0M,UAIjEb,EAAU,CAACC,SAAS,QAAS5F,SAAS,QAASjK,UAAW,SAAUT,WAAY,YAChFuQ,EAAY,CAACC,WAAY,UAE/B,OAAQ,mCACJ,cAAC,IAAD,CAAMnjB,UAAU,0BAA0BiP,OAZ/B,WACX,OAAO,yMAWP,SACI,sBAAKjP,UAAU,4BAAf,UACE,sBAAKA,UAAU,0CAAf,UACE,qBAAKA,UAAU,mBAAf,kBACA,sBAAKA,UAAU,kCAAkCtC,MAAOwlB,EAAxD,UACE,uBAAOhU,QAAQ,iBAAf,yGACA,cAAC,KAAD,CAAUI,QAAQ,iBAAiB5R,MAAOslB,EAAS5T,YAAY,6CAC7DI,QAASiU,GAAa9T,YAAY,OAAOJ,WAAS,EAClD1T,MAAO4nB,GAAY7T,MAAK,SAACnM,GAAD,OAAQA,EAAKsL,OAASoI,EAAY0M,aAC1D/T,SAAU,SAACrf,GACT0mB,EAAY0M,UAAYpzB,EAAEoL,MAAMkT,cAIxC,sBAAK/O,UAAU,0CAA0CtC,MAAO,CAACiW,MAAO,OAAxE,UACE,qBAAK3T,UAAU,mBAAf,iBACA,qBAAKA,UAAU,kCAAgEtC,MAAO,CAACiW,MAAO,OAA9F,SACE,cAAC,GAAD,CAAmBjB,SAAO,EAAChP,UAAQ,EAAC6O,QAASqR,EAC3Czf,MAAO,uBAAO+K,QAAQ,gBAAf,q/BACPgE,SAAU,SAACziB,EAAwBmiB,GAC1BniB,EAAE8hB,UACL4E,EAAY2M,mBAAgBlf,GAE1BgO,IAAauE,EAAYvE,YAAcA,IAE/C9C,SAAU,SAACrf,EAAemiB,GAClBA,IAAauE,EAAYvE,YAAcA,IAC/Cc,MAAO,sBAAK1T,UAAU,kCAAf,UACC,cAAC,KAAD,CAAUvC,GAAG,gBAAgB+a,UAAQ,EAACxY,UAAU,gBAC9CoP,YAAY,2BAAOC,WAAY,WAC/BiJ,OAAO,KAAKC,KAAK,aAAawL,WAAY,CAACpR,WAAW,SACtD9W,MAAOsb,EAAY2M,cACnBhU,SAAU,SAACrf,GACT0mB,EAAY2M,cAAgBrzB,EAAEwU,OAAOpJ,SAG1C,cAAC,KAAD,CAAU4B,GAAG,aAAauC,UAAU,gBAAgB0Y,UAAQ,EAC5DC,WAAW,KAAKvJ,YAAY,iCAAQkJ,OAAO,KAC3Czc,MAAOsb,EAAY2M,cAChBhU,SAAU,SAACrf,GACT0mB,EAAY2M,cAAgBrzB,EAAEwU,OAAOpJ,OAEzC2c,UAAQ,IACT,cAAC,KAAD,CAAe/a,GAAG,uBAAuB5B,MAAOsb,EAAY6M,qBACzDtK,KAAM,GAAIC,KAAM,EAAGvK,YAAY,uFAC/BU,SAAU,SAACrf,GAAK0mB,EAAY6M,qBAAuBvzB,EAAEwU,OAAOpJ,YAItE2T,QAASA,EACT3T,M7B2UA,E6B1UA+W,YAAauE,EAAYvE,YACzBC,WAAW,qBApCf,iBAAgE+Q,OAwClE,sBAAK5jB,UAAU,0CAAf,UACE,qBAAKA,UAAU,mBAAf,kBACA,sBAAKA,UAAU,kCAAkCtC,MAAOwlB,EAAxD,UACE,uBAAOhU,QAAQ,mBAAf,iKACA,cAAC,KAAD,CAAUI,QAAQ,mBAAmB5R,MAAOslB,EAAS5T,YAAY,6CAC/DI,QAASkU,GAAQ/T,YAAY,OAAOJ,WAAS,EAC7C1T,MAAO6nB,GAAO9T,MAAK,SAACnM,GAAD,OAAQA,EAAKsL,OAASoI,EAAY8M,oBACrDnU,SAAU,SAACrf,GACT0mB,EAAY8M,iBAAmBxzB,EAAEoL,MAAMkT,cAI/C,sBAAK/O,UAAU,0CAAf,UACE,qBAAKA,UAAU,mBAAf,kBACA,sBAAKA,UAAU,kCAAkCtC,MAAOwlB,EAAxD,UACE,uBAAOhU,QAAQ,mBAAf,kFACA,cAAC,KAAD,CAAUI,QAAQ,mBAAmB5R,MAAOslB,EAAS5T,YAAY,6CAC/DI,QAASmU,GAAiBhU,YAAY,OAAOJ,WAAS,EACtD1T,MAAO8nB,GAAgB/T,MAAK,SAACnM,GAAD,OAAQA,EAAKsL,OAASoI,EAAY+M,oBAC9DpU,SAAU,SAACrf,GACT0mB,EAAY+M,iBAAmBzzB,EAAEoL,MAAMkT,wBCxG9CoV,GAAb,WAOE,WAAYzhB,GAAoB,IAAD,4BANvByR,SAMuB,OALvBiQ,kBAKuB,OAJvB1D,WAIuB,OAHvB2D,gBAGuB,OAFvBC,oBAEuB,OADvBnR,kBACuB,EAC7BwB,KAAKR,IAAMzR,EAAMjF,GACjBkX,KAAK+L,MAAQhe,EAAMoe,MAAQC,eAC3BpM,KAAKyP,aAAe1hB,EAAM6hB,aAC1B5P,KAAK0P,WAAa3hB,EAAM8hB,WACpB9hB,EAAM+hB,iBAAgB9P,KAAK2P,eAAiB,IAAIpY,KAAKxJ,EAAM+hB,iBAC/D9P,KAAKxB,cACH,UAAAzQ,EAAMsS,oBAAN,eAAoB3Q,KAAI,SAACZ,GACvB,OAAO,2BAAKA,GAAZ,IAAkBsL,KAAM8B,GAAgBpN,EAAKsL,aACzC,GACRkG,aAAmBN,UAAM/P,EAAW,CAAEsQ,MAAM,IAjBhD,kDAmBE,WACE,IAAIwP,EAAM,CAAE5D,KAAMnM,KAAK+L,OAMvB,OALI/L,KAAKR,KAAOQ,KAAKR,KAAO,IAAGuQ,EAAIjnB,GAAKkX,KAAKR,KACzCQ,KAAK2P,iBAAgBI,EAAID,eAAiB9P,KAAK2P,eAAelY,kBAC9DuI,KAAKyP,eAAcM,EAAIC,gBAAkBhQ,KAAKyP,aAAa3mB,IAC3DkX,KAAK0P,aAAYK,EAAIF,WAAa7P,KAAK0P,YACvC1P,KAAKxB,aAAaxT,OAAS,IAAG+kB,EAAIrP,wBAA0BV,KAAKU,2BAC9DqP,IA1BX,cA4BE,WACE,OAAO/P,KAAKR,KA7BhB,IA+BE,SAAOtY,GACL8Y,KAAKR,IAAMtY,IAhCf,yBAkCE,WACE,OAAO8Y,KAAK2P,gBAnChB,IAqCE,SAAkBzoB,GAChB8Y,KAAK2P,eAAiBzoB,IAtC1B,qBAwCE,WACE,OAAO8Y,KAAK0P,YAzChB,IA2CE,SAAcxoB,GACZ8Y,KAAK0P,WAAaxoB,IA5CtB,uBA8CE,WACE,OAAO8Y,KAAKyP,cA/ChB,IAiDE,SAAgBvoB,GACd8Y,KAAKyP,aAAevoB,IAlDxB,qCAqDE,WACE,OAAO8Y,KAAKxB,aAAa9O,KAAI,SAACwL,GAC5B,OAAO,eAAKA,QAvDlB,gBA2DE,WACE,OAAO8E,KAAK+L,QA5DhB,qBA+DE,WAAmB,IAAD,EAChB,YAA4B9b,IAAxB+P,KAAK2P,eAAqC,GAC9C,UAAO3P,KAAK2P,sBAAZ,aAAO,EAAqBlY,eAC1B,KACmC,IAAnCuI,KAAK2P,eAAeM,YAAyD,IAArCjQ,KAAK2P,eAAeO,aAAqBriB,EAAcN,OAnErG,KCAa4iB,GAAb,WAeE,aAAyC,IAAD,IAA5BpiB,EAA4B,uDAApB,GAAoB,0BAdhCmT,aAcgC,OAbhC1B,SAagC,OAZhC4Q,gBAYgC,OAXhCT,oBAWgC,OAVhCU,YAUgC,OAThCC,aASgC,OARhCC,YAQgC,OAPhCC,WAOgC,OANhCC,YAMgC,OALhCC,cAKgC,OAJhC3E,WAIgC,OAHhC4E,iBAGgC,OAFhCnS,kBAEgC,EACtCwB,KAAKkB,QAAL,eAAoBnT,GACpBiS,KAAKR,IAAMzR,EAAMjF,GACjBkX,KAAK+L,MAAQhe,EAAMoe,MAAQC,eAC3BpM,KAAKoQ,WAAariB,EAAM6iB,WAAa7iB,EAAM8iB,cACvC9iB,EAAM+hB,iBAAgB9P,KAAK2P,eAAiB,IAAIpY,KAAKxJ,EAAM+hB,iBAC/D9P,KAAKwQ,MAAQziB,EAAM+iB,KACnB9Q,KAAKyQ,OAAS1iB,EAAMgjB,MACpB/Q,KAAK0Q,SAAW3iB,EAAMijB,QACtBhR,KAAKsQ,QAAUviB,EAAMkjB,OACrBjR,KAAKuQ,OAASxiB,EAAMmjB,MACpBlR,KAAKqQ,OAAStiB,EAAMojB,MACpBnR,KAAK2Q,aAAc,UAAA5iB,EAAMqjB,kBAAN,eAAkB1hB,KAAI,SAAC2hB,GAAD,OAAU,IAAI7B,GAAU6B,QAAU,GAC3ErR,KAAKxB,cACH,UAAAzQ,EAAMsS,oBAAN,eAAoB3Q,KAAI,SAACZ,GACvB,OAAO,2BAAKA,GAAZ,IAAkBsL,KAAM8B,GAAgBpN,EAAKsL,aACzC,GACRkG,aAAmBN,UAAM/P,EAAW,CAAEsQ,MAAM,IAhChD,qCAkCE,WACE,OAAOP,KAAKR,KAnChB,IAsCE,SAAO1W,GACLkX,KAAKR,IAAM1W,IAvCf,qBA0CE,WACE,OAAOkX,KAAKoQ,YA3ChB,IA6CE,SAAclpB,GACZ8Y,KAAKoQ,WAAalpB,IA9CtB,yBAgDE,WACE,OAAO8Y,KAAK2P,gBAjDhB,IAmDE,SAAkBzoB,GAChB8Y,KAAK2P,eAAiBzoB,IApD1B,iBAsDE,WACE,OAAO8Y,KAAKqQ,QAvDhB,IAyDE,SAAUnpB,GACR8Y,KAAKqQ,OAASnpB,IA1DlB,kBA4DE,WACE,OAAO8Y,KAAKsQ,SA7DhB,IA+DE,SAAWppB,GACT8Y,KAAKsQ,QAAUppB,IAhEnB,iBAkEE,WACE,OAAO8Y,KAAKuQ,QAnEhB,IAqEE,SAAUrpB,GACR8Y,KAAKuQ,OAASrpB,IAtElB,gBAwEE,WACE,OAAO8Y,KAAKwQ,OAzEhB,IA2EE,SAAStpB,GACP8Y,KAAKwQ,MAAQtpB,IA5EjB,iBA8EE,WACE,OAAO8Y,KAAKyQ,QA/EhB,IAiFE,SAAUvpB,GACR8Y,KAAKyQ,OAASvpB,IAlFlB,mBAoFE,WACE,OAAO8Y,KAAK0Q,UArFhB,IAuFE,SAAYxpB,GACV8Y,KAAK0Q,SAAWxpB,IAxFpB,sBA0FE,WACE,OAAO8Y,KAAK2Q,aA3FhB,IA6FE,SAAezpB,GACb8Y,KAAK2Q,YAAczpB,IA9FvB,uBAgGE,WACE,OAAO8Y,KAAKxB,cAjGhB,IAmGE,SAAgBtX,GACd8Y,KAAKxB,aAAetX,IApGxB,qCAwGE,WAA2B,IAAD,EACpBob,EAAUtC,KAAKxB,aAAa9O,KAAI,SAACwL,GACnC,OAAO,eAAKA,MAMd,OAJA,UAAA8E,KAAKkB,QAAQb,oBAAb,SAA2B5M,SAAQ,SAACyH,IACkB,IAAhDoH,EAAQ1D,WAAU,SAACkG,GAAD,OAAQA,EAAGhc,KAAOoS,EAAGpS,OACzCwZ,EAAQpT,KAAK,CAAEpG,GAAIoS,EAAGpS,GAAIsW,YAAalE,EAAGkE,YAAa9R,SAAU,SAE9DgV,IAhHX,uBAkHE,WACE,IAAIA,EAAU,GAMd,OALAtC,KAAK2Q,YAAYld,SAAQ,SAAC4d,GACxB/O,GAAW+O,EAAKC,WAAaD,EAAKE,YAAY1zB,KAC1CwzB,EAAKG,gBAAelP,GAAW,iBAAS+O,EAAK/Z,WACjDgL,GAAW,QAENA,IAzHX,2BA2HE,WAA6C,IAA/BmP,EAA8B,wDACtCC,EAAM,CAAEvF,KAAMnM,KAAK+L,OAevB,GAdI/L,KAAKR,KAAOQ,KAAKR,KAAO,IAAGkS,EAAI5oB,GAAKkX,KAAKR,MACzCQ,KAAKwQ,OAASxQ,KAAKkB,QAAQ4P,QAAMY,EAAIZ,KAAO9Q,KAAKwQ,QACjDxQ,KAAKyQ,QAAUzQ,KAAKkB,QAAQ6P,SAAOW,EAAIX,MAAQ/Q,KAAKyQ,SACpDzQ,KAAK0Q,UAAY1Q,KAAKkB,QAAQ8P,WAASU,EAAIV,QAAUhR,KAAK0Q,WAC1D1Q,KAAKsQ,SAAWtQ,KAAKkB,QAAQ+P,UAAQS,EAAIT,OAASjR,KAAKsQ,UACvDtQ,KAAKuQ,QAAUvQ,KAAKkB,QAAQgQ,SAAOQ,EAAIR,MAAQlR,KAAKuQ,SACpDvQ,KAAKqQ,QAAUrQ,KAAKkB,QAAQiQ,SAAOO,EAAIP,MAAQnR,KAAKqQ,SACpDrQ,KAAK2P,gBAAkB3P,KAAKkB,QAAQ4O,kBAAgB4B,EAAI5B,eAAiB9P,KAAK2P,gBAC9E3P,KAAKoQ,aAAeqB,EAAOC,EAAIC,aAAeC,OAAOC,SAAS7R,KAAKoQ,WAAWtnB,IACzEkX,KAAKkB,QAAQ0P,YAAWc,EAAIC,aAAe,MAChD3R,KAAKoQ,YAAcqB,EAAOC,EAAII,iBAAmBF,OAAOC,SAAS7R,KAAKoQ,WAAWtnB,IAC5EkX,KAAKkB,QAAQ0P,YAAWc,EAAII,iBAAmB,MACpD9R,KAAKxB,aAAaxT,OAAS,IAAG0mB,EAAIhR,wBAA0BV,KAAKU,2BACjEV,KAAK2Q,YAAY3lB,OAAS,IAAG0mB,EAAIK,sBAAwB/R,KAAK2Q,YAAYjhB,KAAI,SAACZ,GAAD,OAAUA,EAAKwe,oBAC7FtN,KAAKkB,QAAQkQ,YAAcpR,KAAKkB,QAAQkQ,WAAWpmB,OAAS,EAAG,CACjE,IAAIgnB,EAAQ,GACZhS,KAAKkB,QAAQkQ,WAAW3d,SAAQ,SAAC3E,GAC1B4iB,EAAIK,wBAA6F,IAApEL,EAAIK,sBAAsBnT,WAAU,SAACqT,GAAD,OAAQA,EAAGnpB,KAAOgG,EAAKhG,OAC3FkpB,EAAM9iB,KAAK,CAAEpG,GAAIgG,EAAKhG,GAAIwE,SAAU,SAEpCokB,EAAIK,uBAAyBC,EAAMhnB,OAAS,EAC9C0mB,EAAIK,sBAAwBL,EAAIK,sBAAsBG,OAAOF,GACtDA,EAAMhnB,OAAS,IAAG0mB,EAAIK,sBAAwBC,GAEzD,OAAON,MArJX,KCLqBS,G,4IACnB,WAA4B3d,GAA5B,0FACSvD,EAAKuF,KAAL,UAAa1F,EAAb,oBAAwC,CAAE8F,EAAGpC,EAAO4d,OAAQ,EAAGlb,MAAO,OAD/E,2C,6HAGA,WAA+B1C,GAA/B,0FACSvD,EAAKuF,KAAL,UAAa1F,EAAb,uBAA2C,CAAE8F,EAAGpC,EAAO4d,OAAQ,EAAGlb,MAAO,OADlF,2C,6HAGA,WAA+B1C,GAA/B,0FACSvD,EAAKuF,KAAL,UAAa1F,EAAb,sBAA0C,CAAE8F,EAAGpC,EAAO4d,OAAQ,EAAGlb,MAAO,OADjF,2C,8DC6OanE,gBAzNiB,SAAChF,GAAwB,IAAD,IAChD8M,EAAUoB,GAAalB,QAAO,SAACjM,GAAD,MAAmB,cAAcyB,SAASzB,EAAKsL,SAC7ErR,EAAQ,CAACiW,MAAM,QACfqT,EAAc,8BACpB,EAA8B3jB,mBAASX,EAAM6P,UAAW,GAAxD,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAkCnP,mBAAuB,IAAzD,mBAAO4jB,EAAP,KAAkBC,EAAlB,KACA,EAA0C7jB,mBAAS,IAAnD,mBAAO8jB,EAAP,KAAsBC,EAAtB,KACA,EAA0C/jB,mBAAS,IAAnD,mBAAOgkB,EAAP,KAAsBC,EAAtB,KACMC,EAAqB,WACpBC,IACDA,EAAY/B,OAAM+B,EAAY/B,KAAM,MACpC+B,EAAYrB,gBAAeqB,EAAYrB,cAAgB,MACvDqB,EAAY9B,QAAO8B,EAAY9B,MAAO,MACtC8B,EAAY7B,UAAS6B,EAAY7B,QAAU,MAC3C6B,EAAY5B,SAAQ4B,EAAY5B,OAAS,MACzC4B,EAAY3B,QAAO2B,EAAY3B,MAAQ,MACvC2B,EAAY1B,QAAO0B,EAAY1B,MAAQ,QA2BvC2B,EAAY/kB,EAAMyU,YAAYa,cACpC,EAAsC3U,mBAAyCX,EAAM8kB,aAArF,mBAAOA,EAAP,KAAoBE,EAApB,KACMC,OAA0B/iB,IAAflC,EAAMklB,KAAqB,6BAAQ,cAAC,KAAD,CAAQljB,KAAK,iBAAiBM,QAAStC,EAAMklB,KAAM5nB,UAAU,+CAC3G6nB,OAA8BjjB,IAAjBlC,EAAMolB,OAAuB,6BAAQ,cAAC,KAAD,CAAQpjB,KAAK,mBAAmBM,QAAStC,EAAMolB,OAAQ9nB,UAAU,wCACnH+nB,EAA0B,SAACC,GAC3B,OACE,iCACE,sBAAMtqB,MAAO,CAACuqB,YAAY,OAA1B,SAAmCD,EAAOE,QAC1C,+BAAOF,EAAOhZ,aAIlBmZ,EAAU5V,GAAaiV,GAAiBC,EAAa,cAAC,GAAD,CACvDlV,QAASA,MAAciV,EAAYrB,gBAA6F,IAA5EqB,EAAY5U,YAAYW,WAAU,SAAA1D,GAAE,MAAmB,mBAAjBA,EAAGiD,gBAE7F3O,MAAO,uUACPqL,QAASA,EAAUkD,SAAO,EAAC7W,MjCyUd,EiCxUb+W,YAAa4U,EAAY5U,YACzBM,SAAU,SAACziB,EAAyBmiB,GAC7BniB,EAAE8hB,SAASgV,IAEZ3U,IAAa4U,EAAY5U,YAAcA,GAE3ClQ,EAAMoN,SAAS0X,GACX9kB,EAAM0lB,eAAe1lB,EAAM0lB,cAAc33B,EAAE8hB,UAEjDzC,SAAU,SAACrf,EAAemiB,GACpBA,IAAa4U,EAAY5U,YAAcA,IAC7CC,WAAW,iBACXa,MACE,sBAAK1T,UAAU,4BAA4BtC,MAAO,CAACiV,WAAW,KAA9D,UACE,sBAAK3S,UAAWgnB,EAAatpB,MAAOA,EAApC,UACE,sBAAMsC,UAAU,qBAAhB,gCACA,cAAC,KAAD,CAAWvC,GAAG,OAAOsH,KAAK,SAASud,IAAK,EAAGD,IAAK,GAC5CvS,SAAU,SAACrf,GACX,IAAMoL,EAAQ0qB,OAAOC,SAAS/1B,EAAEwU,OAAOpJ,OACvC2rB,EAAY1B,MAAkB,IAAVjqB,OAAc+I,EAAY/I,EAC9C6G,EAAMyU,YAAYkR,kBAAkBb,GACpC9kB,EAAMoN,SAAS0X,IAElB3rB,MAAO2rB,EAAY1B,OAAS,OAT/B,aAAsD2B,IAWtD,sBAAKznB,UAAWgnB,EAAatpB,MAAOA,EAApC,UACE,sBAAMsC,UAAU,qBAAhB,gCACA,cAAC,KAAD,CAAWvC,GAAG,QAAQsH,KAAK,SACzBud,IAAK,EAAGD,IAAK,GAAIvS,SAAU,SAACrf,GAC5B,IAAMoL,EAAQ0qB,OAAOC,SAAS/1B,EAAEwU,OAAOpJ,OACvC2rB,EAAY5B,OAAmB,IAAV/pB,OAAc+I,EAAY/I,EAC/C6G,EAAMyU,YAAYkR,kBAAkBb,GACpC9kB,EAAMoN,SAAS0X,IAEjB3rB,MAAO2rB,EAAY5B,QAAU,QAE/B,sBAAK5lB,UAAWgnB,EAAatpB,MAAOA,EAApC,UACE,sBAAMsC,UAAU,qBAAhB,gCACA,cAAC,KAAD,CAAWvC,GAAG,MAAMsH,KAAK,SACzBud,IAAK,EAAGD,IAAK,EAAGvS,SAAU,SAACrf,GACzB,IAAMoL,EAAQ0qB,OAAOC,SAAS/1B,EAAEwU,OAAOpJ,OACvC2rB,EAAY3B,MAAkB,IAAVhqB,OAAc+I,EAAY/I,EAC9C6G,EAAMyU,YAAYkR,kBAAkBb,GACpC9kB,EAAMoN,SAAS0X,IAEjB3rB,MAAO2rB,EAAY3B,OAAS,QAE9B,sBAAK7lB,UAAWgnB,EAAatpB,MAAOA,EAApC,UACE,sBAAMsC,UAAU,qBAAhB,gCACA,cAAC,KAAD,CAAWvC,GAAG,MAAMsH,KAAK,SACzBud,IAAK,EAAGD,IAAK,EAAGvS,SAAU,SAACrf,GACzB,IAAMoL,EAAQ0qB,OAAOC,SAAS/1B,EAAEwU,OAAOpJ,OACvC2rB,EAAY/B,KAAiB,IAAV5pB,OAAc+I,EAAY/I,EACzC6G,EAAMyU,YAAYkR,kBAAkBb,IAAc9kB,EAAMoN,SAAS0X,IAEvE3rB,MAAO2rB,EAAY/B,MAAQ,QAE7B,sBAAKzlB,UAAWgnB,EAAatpB,MAAOA,EAApC,UACE,sBAAMsC,UAAU,qBAAhB,gCACA,cAAC,KAAD,CAAWvC,GAAG,QAAQsH,KAAK,SAC1Bud,IAAK,EAAGD,IAAK,GAAIvS,SAAU,SAACrf,GAC3B,IAAMoL,EAAQ0qB,OAAOC,SAAS/1B,EAAEwU,OAAOpJ,OACvC2rB,EAAY9B,MAAkB,IAAV7pB,OAAc+I,EAAY/I,EAC1C6G,EAAMyU,YAAYkR,kBAAkBb,IAAc9kB,EAAMoN,SAAS0X,IAEtE3rB,MAAO2rB,EAAY9B,OAAS,QAE/B,sBAAK1lB,UAAWgnB,EAAatpB,MAAOA,EAApC,UACE,sBAAMsC,UAAU,qBAAhB,gCACA,cAAC,KAAD,CAAWvC,GAAG,QAAQsH,KAAK,SACzBud,IAAK,EAAGD,IAAK,GAAIvS,SAAU,SAACrf,GAC5B,IAAMoL,EAAQ0qB,OAAOC,SAAS/1B,EAAEwU,OAAOpJ,OACvC2rB,EAAY7B,QAAoB,IAAV9pB,OAAc+I,EAAY/I,EAChD6G,EAAMyU,YAAYkR,kBAAkBb,GACpC9kB,EAAMoN,SAAS0X,IAEhB3rB,MAAO2rB,EAAY7B,SAAW,YAjFkB,aAE5C6B,EAAYrB,gBAmFnB,6BACR,OAAQ,sBAAKnmB,UAAU,oBAAqBtC,MAAO,CAACiW,MAAO,QAAnD,UACN,cAAC,GAAD,CAAmBjQ,SAAUhB,EAAMgB,SAAU6O,QAASA,EACpDW,SAAU,SAACziB,EAAyBmiB,GAElC,GADAJ,EAAW/hB,EAAE8hB,SACT9hB,EAAE8hB,QAAS,CACb,IAAM6J,EAAS,IAAI0I,GACnBpiB,EAAMoN,SAASsM,GACfsL,EAAetL,QAEToL,IACJA,EAAY5U,YAAc,GAC1B2U,IACAC,EAAYjC,eAAY3gB,EACxB4iB,EAAY5U,YAAY/O,KAAK,CAACiP,YAAY,iBAAkB/D,KjCyOtD,IiCxONyY,EAAY5U,YAAY/O,KAAK,CAACiP,YAAY,YAAa/D,KjCwOjD,KiCtORrM,EAAMoN,cAASlL,GAEblC,EAAM4lB,oBAAoB5lB,EAAM4lB,mBAAmB73B,EAAE8hB,QAASK,IAEpEzO,MAAO,gCAAQzB,EAAMyB,QACrBqL,QAASA,EACToD,YAAclQ,EAAM6lB,UAAuC7lB,EAAMyU,YAAYvE,YAAhE,OAAmB4U,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAa5U,YAC7CF,SAAO,EACPG,WAAYnQ,EAAM6lB,WAAa,YAC/B1sB,MjC6NY,EiC5NZ6X,MACE,sBAAK1T,UAAU,4BAAf,UACE,qBAAKA,UAAS,2BAAsB0C,EAAM0jB,MAAQ,UAAY,UAA9D,SACE,cAAC,KAAD,CAAc3oB,GAAG,cAAc2R,YAAY,6CACzC4N,YAAaiK,EAAWuB,MAAO,IAAMlV,UAAQ,EAC7C2J,eA1JU,SAAC3e,GACvB,IAAM0pB,EAAS,GACX1pB,EAAM6K,MAAMuN,OAAO/W,OAAO,IAAGqoB,EAAOS,YAAcnqB,EAAM6K,MAAMuN,QAC5D2Q,GAAiBA,EAAc3Q,OAAO/W,OAAO,IAAGqoB,EAAOU,YAAerB,GACxE3kB,EAAM0jB,MAAOU,GAAiB6B,kBAAkBX,GAAQlsB,MAAK,SAAAqB,GACvDA,EAASoB,KAAKoB,OAAO,EAAGunB,EAAa/pB,EAASoB,MAC7C2oB,EAAa,OACjBpb,OAAM,SAACsQ,GAAD,OAAUlpB,QAAQE,IAAIgpB,MAC9B0K,GAAiB8B,eAAeZ,GAAQlsB,MAAK,SAAAqB,GACxCA,EAASoB,KAAKoB,OAAO,EAAGunB,EAAa/pB,EAASoB,MAC7C2oB,EAAa,OACjBpb,OAAM,SAACsQ,GAAD,OAAUlpB,QAAQE,IAAIgpB,OA+IOyM,aAAcd,EAC5CrU,MAAM,SAAS5D,SAAU,SAACrf,GACgB,IAAD,EAAjC+2B,GAAiB/2B,EAAEoL,MAAMmT,QAC7BwY,EAAYjC,UAAY90B,EAAEoL,MACpB2rB,EAAYjC,WAAW+B,EAAgB,UAACE,EAAYjC,iBAAb,aAAC,EAAuB2C,QAC7Dz3B,EAAEoL,OACJ2rB,IAAaA,EAAYjC,eAAY3gB,GAC3CwiB,EAAiB32B,EAAEoL,SAEf2rB,IAAaA,EAAYjC,eAAY3gB,GACzCwiB,EAAiB,KAEF,MAAbI,GAAmB9kB,EAAMoN,SAAS0X,IAExC3rB,OAAO,UAAA6G,EAAM8kB,mBAAN,eAAmBjC,YAAa4B,MAE3C,qBAAKnnB,UAAU,0BAAf,SACE,cAAC,KAAD,CAAcvC,GAAG,cAAc2R,YAAY,qBACzC4N,YAAaiK,EAAWuB,MAAO,IAAM9U,MAAM,QAC3CmV,aAAcd,EACd9K,eAjKM,SAAC3e,GACbA,EAAM6K,MAAMuN,OAAO/W,OAAO,IACxB+C,EAAM0jB,MAAOU,GAAiB6B,kBAAkB,CAAC,YAAerqB,EAAM6K,MAAMuN,SAAS5a,MAAK,SAAAqB,GACxFA,EAASoB,KAAKoB,OAAO,EAAGunB,EAAa/pB,EAASoB,MAC7C2oB,EAAa,OACjBpb,OAAM,SAACsQ,GAAD,OAAUlpB,QAAQE,IAAIgpB,MAC1B0K,GAAiB8B,eAAe,CAAC,YAAetqB,EAAM6K,MAAMuN,SAAS5a,MAAK,SAAAqB,GACzEA,EAASoB,KAAKoB,OAAO,EAAGunB,EAAa/pB,EAASoB,MAC7C2oB,EAAa,OACjBpb,OAAM,SAACsQ,GAAD,OAAUlpB,QAAQE,IAAIgpB,QAwJGtM,SAAU,SAACrf,GACK,IAAD,EAAjC+2B,GAAiB/2B,EAAEoL,MAAMmT,QAC3BwY,EAAYjC,UAAY90B,EAAEoL,MACpB2rB,EAAYjC,WAAW+B,EAAgB,UAACE,EAAYjC,iBAAb,aAAC,EAAuB2C,QAC/Dz3B,EAAEoL,OACF2rB,IAAaA,EAAYjC,eAAY3gB,GAC7C0iB,EAAiB72B,EAAEoL,SAEb2rB,IAAaA,EAAYjC,eAAY3gB,GAC3C0iB,EAAiB,KAEbE,GAAa9kB,EAAMoN,SAAS0X,IAEpC3rB,OAAO,UAAA6G,EAAM8kB,mBAAN,eAAmBjC,YAAa8B,MAE3C,sBAAKrnB,UAAS,kBAAa0C,EAAM0jB,MAAQ,GAAK,mBAA9C,UACGuB,EACAE,SAnET,qBAA2EL,QAA3E,IAA2EA,OAA3E,EAA2EA,EAAa/pB,GAAxF,mBAA8F+pB,QAA9F,IAA8FA,OAA9F,EAA8FA,EAAajC,YAwE1G4C,QCnPgBW,G,qIAEnB,WAAqBC,GAArB,0FACS7iB,EAAMiF,KAAN,UAAcxF,EAAd,WAAiC,CAAEqjB,SAAUD,KADtD,2C,8DCuDIE,GAAW,SAACC,EAA2B/R,GAA8B,IAAD,4CAClEa,EAAa,UAAGb,EAAYa,qBAAf,aAAG,EAA2B5C,eAC3C+T,EAAS,UAAGhS,EAAYa,qBAAf,aAAG,EAA2BqJ,qBAEvC+H,EAAQpR,EAAyBA,EAAc9b,OAAO,GAA9B,OAOxBmtB,GAAQ,UAAAlS,EAAY1a,cAAZ,eAAoBP,OAAO,GAAGotB,SAAS,EAAG,OAAQ,SAO1DC,EAASL,EAAmB,OAAS,OAIrCM,EAAUxR,EAAwBA,EAAc9b,MAAM,EAAG,GAA/B,MAE1ButB,EAAUN,EAAmBA,EAAUjtB,MAAM,EAAG,GAA1B,KAEtBwtB,EAAUP,EAAmBA,EAAUjtB,MAAM,EAAG,GAA1B,KAEtBytB,EAAUR,EAAqBA,EAAUjtB,OAAO,GAA1B,OAGtB0tB,EAAWzS,EAAYC,QAAQgB,WAC/ByR,EAAW1S,EAAYa,cAGzB8R,EAAO,IACPC,EAAS,MACb,GAAIF,GAAYD,EAAU,CACxB,IAAII,EAAQH,EAASI,cAAgBL,EAASK,cAC1CD,EAAQ,GACVF,EAAO,IACPC,EAASC,EAAMttB,WAAW4sB,SAAS,EAAG,MACnB,IAAVU,GACTA,EAAQH,EAASK,WAAaN,EAASM,YAC3B,GACVJ,EAAO,IACPC,EAAS,QAETD,EAAO,IAEPC,GADAC,EAAQH,EAASK,WAAa,GAAKN,EAASM,YAC7BxtB,WAAW4sB,SAAS,EAAG,OAGxCU,EAAQH,EAASK,WAAaN,EAASM,YAC3B,GACVJ,EAAO,IACPC,EAASC,EAAMttB,WAAW4sB,SAAS,EAAG,MACnB,IAAVU,GACTA,EAAQH,EAASM,UAAYP,EAASO,WAC1B,GACVL,EAAO,IACPC,EAAS,QAETD,EAAO,IAEPC,GADAC,EAAQH,EAASM,UAAY,GAAKP,EAASO,WAC5BztB,WAAW4sB,SAAS,EAAG,OAGxCU,EAAQH,EAASM,UAAYP,EAASO,WAC1B,GACVL,EAAO,IACPC,EAASC,EAAMttB,WAAW4sB,SAAS,EAAG,OAEtCQ,EAAO,IACPC,EAAS,OAajB,IAAIK,EAAM,IACJjT,EAAY0M,WAAa1M,EAAY0M,UAAY,IACrDuG,EAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKjT,EAAY0M,UAAY,IAMzE,IAAIwG,EAAG,UAAGlT,EAAYmT,eAAf,iBAAG,EAAqB/E,iBAAxB,aAAG,EAAgC2C,MAC1CmC,GACGA,KACCA,GAAO,OAASA,GAAO,UACzBA,EAAIE,YAAY,KAAO,GACvBF,EAAInlB,SAAS,SACbmlB,EAAInlB,SAAS,SACbmlB,EAAI1qB,OAAS,EACT,IACA0qB,EAAI5rB,UAAU,EAAG,GAOvB,IAAI+rB,EAAO,UAAGrT,EAAYqT,eAAf,iBAAG,EAAqBjF,iBAAxB,aAAG,EAAgC2C,MAC9CsC,EAAUA,GAAWA,EAAQ73B,QAAQ,IAAK,IAAI83B,OAAO,EAAG,KACxD,IAAIC,EAAO,UAAGvT,EAAYuT,eAAf,iBAAG,EAAqBnF,iBAAxB,aAAG,EAAgC2C,MAC9CwC,EAAUA,GAAWA,EAAQ/3B,QAAQ,IAAK,IAAI83B,OAAO,EAAG,KACxD,IAAIE,EAAO,UAAGxT,EAAYwT,eAAf,iBAAG,EAAqBpF,iBAAxB,aAAG,EAAgC2C,MAC9CyC,EAAUA,GAAWA,EAAQh4B,QAAQ,IAAK,IAAI83B,OAAO,EAAG,KACxD,IAAIH,EAAO,UAAGnT,EAAYmT,eAAf,iBAAG,EAAqB/E,iBAAxB,aAAG,EAAgC2C,MAC9CoC,EAAUA,GAAWA,EAAQ33B,QAAQ,IAAK,IAC9B,MAAR03B,GAAiBC,GACnBA,EAAU,IAAMA,GACJ3qB,OAAS,IAAG2qB,EAAUA,EAAQpuB,MAAM,EAAG,IACxCouB,GAAmB,MAARD,IAAaC,GAAW,IAAMA,GAASG,OAAO,EAAG,MACrEH,GAAWA,EAAQ3qB,OAAS,IAAG2qB,EAAUA,EAAQG,OAAO,EAAG,MAC/D,IAAMG,EAAU,GAChBA,EAAQ,GACNzT,EAAY0T,aAAalrB,OAAS,IAAMupB,GAAxC,UAEI/R,EAAY0T,aAAa,GAAGtF,iBAFhC,WACI3gB,EACA,EAAuCsjB,MAAMv1B,QAAQ,IAAK,IAAI83B,OAAO,EAAG,KAC9EG,EAAQ,GACNzT,EAAY0T,aAAalrB,OAAS,IAAMupB,GAAxC,UAEI/R,EAAY0T,aAAa,GAAGtF,iBAFhC,WACI3gB,EACA,EAAuCsjB,MAAMv1B,QAAQ,IAAK,IAAI83B,OAAO,EAAG,KAC9EG,EAAQ,GACNzT,EAAY0T,aAAalrB,OAAS,IAAMupB,GAAxC,UAEI/R,EAAY0T,aAAa,GAAGtF,iBAFhC,WACI3gB,EACA,EAAuCsjB,MAAMv1B,QAAQ,IAAK,IAAI83B,OAAO,EAAG,KAC9EG,EAAQ,GACNzT,EAAY0T,aAAalrB,OAAS,IAAMupB,GAAxC,UAEI/R,EAAY0T,aAAa,GAAGtF,iBAFhC,WACI3gB,EACA,EAAuCsjB,MAAMv1B,QAAQ,IAAK,IAAI83B,OAAO,EAAG,KAE9ED,EAAUA,GAAWA,EAAQD,YAAY,KAAO,EAAIC,EAAQtuB,MAAM,EAAG,GAAK,IAAMsuB,EAChFE,EAAUA,GAAWA,EAAQH,YAAY,KAAO,EAAIG,EAAQxuB,MAAM,EAAG,GAAK,IAAMwuB,EAChFC,EAAUA,GAAWA,EAAQJ,YAAY,KAAO,EAAII,EAAQzuB,MAAM,EAAG,GAAK,IAAMyuB,EAEhF,IAAMG,EAAaF,EAAQvmB,KAAI,SAAC+X,GAC9B,OAAOA,GAAUA,EAAOmO,YAAY,KAAO,EAAInO,EAAO3d,UAAU,EAAG,GAAK,IAAM2d,KAQ1E2O,EAAQ5T,EAAY+M,iBAA0D,IAAjC/M,EAAY+M,iBAAyB,IAAM,IAAjD,IAGzC8G,EAAO,IACP7T,EAAY8T,sBAAqBD,EAAO,CAAC,IAAK,IAAK,IAAK,KAAK7T,EAAY8T,sBAI7E,IAAMnH,EAAa,UAAG3M,EAAY2M,qBAAf,aAAG,EAA2B1X,iBAC3C8e,EAAYpH,EAAuBA,EAAcrlB,UAAU,EAAG,GAAlC,KAE5B0sB,EAAYrH,EAAuBA,EAAcrlB,UAAU,EAAG,GAAlC,KAE5B2sB,EAAYtH,EAAyBA,EAAcrlB,UAAU,EAAG,IAApC,OAK5B4sB,EAAQlU,EAAY0M,WAAuC,IAA1B1M,EAAY0M,UAAwB,IAAN,IAIjEyH,EAAI,UAAGnU,EAAYmT,eAAf,iBAAG,EAAqB/E,iBAAxB,aAAG,EAAgC2C,MAC3CoD,EAAOA,GAAQA,EAAK3rB,OAAS,EAAI2rB,EAAK7sB,UAAU,EAAG,GAAK,IAExD,IAAI8sB,GAAQ,UAAGpU,EAAYC,QAAQC,cAAvB,iBAAG,EAA4BtB,eAA/B,aAAG,EAAqCG,MAoCpD,OAnCAqV,GAAYA,GAA4BA,GAASjC,SAAS,GAAI,KAAvC,gBAKrBF,EACA,KACAC,EACA,IACAE,EACA,IACAC,EACAC,EACAC,EACAC,EACA,WACAG,EACAC,EACAK,EACA,KACAC,EACA,QAzPa,SACfmB,EACAC,EACAC,EACAC,EACAf,GAEA,IAAI3T,EAAU,GACV2U,EAAU,GA6Bd,OA5BAhB,EAAQxiB,SAAQ,SAAC2G,GACTA,IAAM6c,GAAW,IAAM7c,MAE1B0c,GAAaE,GAAef,EAAQ,IAE5Ba,GAAaC,GAAaC,GAAef,EAAQ,GAEjDa,GAAcC,IAAaC,IAAef,EAAQ,GAC7D3T,EAAUuU,EAAW,IAAMC,EAAW,IAAMC,EAClCD,GAAaE,IAAgBf,EAAQ,GAEpCa,IAAaC,IAAaC,GAAgBf,EAAQ,GAC7D3T,EAAUuU,EAAW,IAAMC,EAAW,IAAMG,EACjCH,GAAcC,IAAaC,GAAgBf,EAAQ,GAC9D3T,EAAUuU,EAAW,IAAMC,EAAW,IAAMC,EAAW,IAAME,EACnDH,IAAcE,GAAef,EAAQ,GAEpCa,IAAaC,GAAcC,IAAef,EAAQ,GAC7D3T,EAAUuU,EAAW,IAAMC,EAAW,IAAME,EACjCF,GAAcC,GAAcC,IAAef,EAAQ,GAC9D3T,EAAUuU,EAAW,IAAMC,EAAW,IAAMC,EAAW,IAAMC,GACnDF,GAAcE,GAAgBf,EAAQ,GAChD3T,EAAUuU,EAAW,IAAMI,EAAU,IAAMD,EAChCF,IAAaC,GAAcC,GAAgBf,EAAQ,GAC9D3T,EAAUuU,EAAW,IAAMC,EAAW,IAAMG,EAAU,IAAMD,EACjDF,GAAcC,GAAcC,GAAgBf,EAAQ,KAC/D3T,EAAUuU,EAAW,IAAMC,EAAW,IAAMC,EAAW,IAAME,EAAU,IAAMD,GAV7E1U,EAAUuU,EAAW,IAAMG,EAN3B1U,EAAUuU,EAAW,IAAMI,EAJ3B3U,EAAUuU,EAAW,IAAMC,EAF3BxU,EAAUuU,EAwBLvU,EAAQwT,OAAO,IAAK,KAqNzBoB,CAASrB,GAAW,OAAQE,EAASC,EAASL,EAASQ,GACvDC,EACA,KACAC,EACA,IACAE,EACAC,EACAC,EACA,OACAC,EACA,iCACAC,EACAC,IACad,OAAO,IAAK,KAAO,KAW9BqB,GAAiB,SAACC,GACtB,IAAIC,EAAM,GACJC,EAAMF,EAAMttB,UAAU,GAAI,IAC1BytB,EAAMH,EAAMttB,UAAU,GAAI,IAC1B0tB,EAASJ,EAAMttB,UAAU,GAAI,IAC7B2tB,EAAQ,MAAQH,EAChBI,EAAQ,MAAQH,EAChBI,EAAW,QAAUH,EAK3B,OAJIC,IAAUC,EAAOL,EAAG,UAAMG,EAAN,YAAgBD,GAC/BE,GAASC,IAAUC,EAAUN,EAAG,UAAMG,EAAN,OAC/BC,IAAUE,GAAY,MAAQH,GAAU,SAAWA,EAAQH,EAAG,UAAMG,EAAN,YAAgBF,IAC9EG,IAAUE,GAAY,IAAMH,IAAQH,EAAG,UAAMG,EAAN,YAAgBD,IAC1DF,GCxJQtkB,gBAxIK,WAAO,IAAD,wBAC1B,EAA0CvE,qBAAWC,IAA7CuE,EAAR,EAAQA,iBAAkBqB,EAA1B,EAA0BA,YAMpBmO,EAAcxP,EAAiBE,KAC/B0kB,EAAe,SAACC,GAAD,OAAqBA,EAAU,0CAA4C,+BAC1FC,IAAmBtV,EAAYuT,QAC/BgC,IAAmBvV,EAAYwT,QAC/BgC,IAAmBxV,EAAYmT,QAE/BsC,EAAmB,SAACC,EAAoBC,GAC5C,GAAKD,EAAMpvB,IAAOqvB,EAAOrvB,GAAzB,CACA,IAAI0W,EAAM0Y,EAAMpvB,GAChBovB,EAAMpvB,GAAKqvB,EAAOrvB,GAClBqvB,EAAOrvB,GAAK0W,IAGd,OAAQ,mCACN,eAAC,IAAD,CAAMnU,UAAU,0BAA0BiP,OAjB7B,WACX,OAAO,qCAAO,sBAAMjP,UAAU,mBAAhB,oBAAP,yFAgBT,UACE,sBAAKA,UAAWusB,IAAepV,EAAYqT,SAAWrT,EAAYqT,UAAUrT,EAAY4V,YACvFrvB,MAAO,CAACiW,MAAO,OADhB,UAEE,qBAAK3T,UAAU,mBAAf,sBACA,cAAC,GAAD,CAAQmE,MAAM,sTACZqjB,YAAarQ,EAAYqT,QAASrT,YAAaA,EAE/CrH,SAAU,SAACsM,GACLA,IAASjF,EAAYqT,UAAYrT,EAAYqT,QAAUpO,EAC3DpT,EAAYnM,QAAU,CAAEqV,SAAU,UAAWtJ,QAAS,6CAAWC,OAAQ,mSAAyDsJ,KAAM,OAE1IzO,UAAQ,EAAC6O,SAAO,EAChBgW,UAAU,WACVT,OAAQ,WACN,GAAK3Q,EAAYqT,SAAYrT,EAAYuT,QAAzC,CACAkC,EAAiBzV,EAAYqT,SAAW,IAAI1F,GAC5C3N,EAAYuT,SAAW,IAAI5F,IAC3B,IAAM1I,EAASjF,EAAYqT,QAC3BrT,EAAYqT,QAAUrT,EAAYuT,QAClCvT,EAAYuT,QAAUtO,KAf1B,wBAEejF,EAAYqT,eAF3B,aAEe,EAAqBrE,kBALtC,uBACmChP,EAAYqT,eAD/C,iBACmC,EAAqBjF,iBADxD,aACmC,EAAgC2C,QAqBnE,sBAAKloB,UAAWusB,IAAepV,EAAYuT,SAAWvT,EAAYuT,UAAUvT,EAAY4V,YAAarvB,MAAO,CAACiW,MAAO,OAApH,UACE,qBAAK3T,UAAU,mBAAf,sBACA,cAAC,GAAD,CAAQmE,MAAM,8eACZqjB,YAAarQ,EAAYuT,QAASvT,YAAaA,EAC/CrH,SAAU,SAACsM,GACLA,IAASjF,EAAYuT,UACzBvT,EAAYuT,QAAUtO,IAExB7J,QAASka,EACTlE,UAAU,WACVT,OAAQ,WACN,GAAK3Q,EAAYuT,SAAYvT,EAAYwT,QAAzC,CACAiC,EAAiBzV,EAAYuT,SAAW,IAAI5F,GAC5C3N,EAAYwT,SAAW,IAAI7F,IAC3B,IAAM1I,EAASjF,EAAYuT,QAC3BvT,EAAYuT,QAAUvT,EAAYwT,QAClCxT,EAAYwT,QAAUvO,IAExBwL,KAAM,WACJ,GAAKzQ,EAAYuT,SAAYvT,EAAYwT,QAAzC,CACAiC,EAAiBzV,EAAYwT,SAAW,IAAI7F,GAC3C3N,EAAYuT,SAAW,IAAI5F,IAC5B,IAAM1I,EAASjF,EAAYuT,QAC3BvT,EAAYuT,QAAUvT,EAAYqT,QAClCrT,EAAYqT,QAAUpO,KAtB1B,wBAC2EjF,EAAYuT,eADvF,aAC2E,EAAqBjtB,OAHlG,uBAAuI0Z,EAAYuT,eAAnJ,iBAAuI,EAAqBnF,iBAA5J,aAAuI,EAAgC2C,QA4BvK,sBAAKloB,UAAWusB,IAAepV,EAAYwT,SAAWxT,EAAYwT,UAAUxT,EAAY4V,YACxFrvB,MAAO,CAACiW,MAAO,OADf,UAEE,qBAAK3T,UAAU,mBAAf,sBACA,cAAC,GAAD,CAAQmE,MAAM,uKACZqjB,YAAarQ,EAAYwT,QAASxT,YAAaA,EAE/CrH,SAAU,SAACsM,GACLA,IAAWjF,EAAYwT,UAASxT,EAAYwT,QAAUvO,IACzDmM,UAAU,WAAWhW,QAASma,EACjC9E,KAAM,WACJ,GAAKzQ,EAAYwT,SAAYxT,EAAYuT,QAAzC,CACAkC,EAAiBzV,EAAYwT,SAAW,IAAI7F,GAC3C3N,EAAYuT,SAAW,IAAI5F,IAC5B,IAAM1I,EAASjF,EAAYwT,QAC3BxT,EAAYwT,QAAUxT,EAAYuT,QAClCvT,EAAYuT,QAAUtO,KAZ1B,cAEcsQ,EAFd,sBAEgCvV,EAAYwT,eAF5C,aAEgC,EAAqBxE,kBALvD,uBACkChP,EAAYwT,eAD9C,iBACkC,EAAqBpF,iBADvD,aACkC,EAAgC2C,QAkBlE,sBAAKloB,UAAWusB,GAAa,GAAS7uB,MAAO,CAACiW,MAAO,OAArD,UACE,qBAAK3T,UAAU,mBAAf,sBACA,cAAC,GAAD,CAAQmE,MAAM,qQACZqjB,YAAarQ,EAAYmT,QAASnT,YAAaA,EAE/CrH,SAAU,SAACsM,GAAwCA,IAASjF,EAAYmT,UAAUnT,EAAYmT,QAAUlO,IAAUmM,UAAU,WAC5HhW,QAASoa,EACTvG,OAAK,GALP,cAEcuG,EAFd,sBAEgCxV,EAAYmT,eAF5C,aAEgC,EAAqBnE,mBAMvD,sBAAKnmB,UAAWusB,GAAa,GAAO,UAAY7uB,MAAO,CAACiW,MAAO,MAAM5D,QAAQ,OAA7E,UACE,cAAC,KAAD,CAAQhL,KAAK,SAASZ,MAAM,OAC1BzG,MAAO,CAACiW,MAAO,OAAQqZ,OAAQ,UAC/BhtB,UAAU,0BACVgF,QAAS,WAAK,IAAD,IACgC,KAA3C,UAAImS,EAAYqT,eAAhB,iBAAI,EAAqBjF,iBAAzB,aAAI,EAAgC2C,QAC9B,UAAA/Q,EAAYwT,eAAZ,mBAAqBpF,iBAArB,eAAgC2C,QAAS/Q,EAAYwT,QAAQpF,UAAU2C,MAAMhjB,SAAS,QACtFiS,EAAY8V,iBAAiB9V,EAAYwT,QAAQpF,UAAU2C,OAC3Dlf,EAAYnM,QAAU,CAAEqV,SAAU,UAAWtJ,QAAS,6CAAWC,OAAO,GAAD,OAAKsO,EAAYwT,QAAQpF,UAAU2C,MAAnC,+KAA2E/V,KAAM,MD4LpJ,SACpBgF,EACA+V,EACAC,GAEA,IAAIlW,GAAW,EACf,IAEE,IAAMmW,EAAcnE,IAAS,EAAM9R,GACnCF,GAAW,EACX,IAAMoW,IAAclW,EAAYmT,WAAanT,EAAYmT,QAAQ/E,aAAepO,EAAYmT,QAAQ/E,UAAU2C,MAGxGoF,EAAcD,EAAYpE,IAAS,EAAO9R,GAAe,GAC/DF,GAAW,EAEX6R,GAAYyE,QAAQH,EAAcE,GAC/BxxB,MAAK,SAACqB,GACL,GAAIA,EAASoB,MAAQpB,EAASoB,KAAKoB,OAAS,IAE1CwtB,EAAQ,wQAAD,OAAuDhwB,EAASoB,WAClE,CAEL,IAAMivB,EAAQrwB,EAASoB,KAAakvB,SAASzqB,MAAM,QAEnD,GADA9P,QAAQE,IAAI,gBAAiB+J,EAASoB,MACjC8uB,EACA,CACH,IAAIK,EAAO,GACPC,EAAS,GACyD,IAAlEpH,OAAOC,SAASgH,EAAK,GAAGtxB,MAAM,EAAG,IAAMsxB,EAAK,GAAGtxB,MAAM,GAAI,MAC3DwxB,EAAO5B,GAAe0B,EAAK,IAC3BG,EAAS7B,GAAe0B,EAAK,MAE7BE,EAAO5B,GAAe0B,EAAK,IAC3BG,EAAS7B,GAAe0B,EAAK,MAE3BE,EAAO,OAASA,EAAO,WAASA,EAAO,IACvC,KAAOA,IAAMA,EAAOC,GACxBT,EAAWQ,QAbGR,EAAWpB,GAAe0B,EAAK,SAiBlD1hB,OAAM,SAACsQ,GACN+Q,EAAQ,uOAAD,OAAoD/Q,OAE/DnF,EAAU,EACV,MAAO1jB,GACP45B,EAAQ,8JAAD,OAAkClW,EAAlC,iFAA2D1jB,KCzOxDq6B,CAAOzW,GAAa,SAAA1b,GAClB0b,EAAY8V,iBAAiBxxB,GAC7BuN,EAAYnM,QAAU,CAAEqV,SAAU,UAAWtJ,QAAS,6CAAWC,OAAO,GAAD,OAAKpN,EAAL,+KAA8C0W,KAAM,QAC3H,SAAAtV,GACAmM,EAAYnM,QAAU,CAAEqV,SAAU,QAAStJ,QAAS,2BAAQC,OAAQhM,EAASsV,KAAM,QAGrFnJ,EAAYnM,QAAU,CAAEqV,SAAU,OAAQtJ,QAAS,oDAAaC,OAAQ,wHAA0BsJ,KAAM,QAI7G,sBAAKnS,UAAU,kBAAf,UACC,uBAAOkP,QAAQ,OACRlP,UAAU,cACVtC,MAAO,CAACiW,MAAM,SAFrB,mLAGA,qBAAK3T,UAAU,kBAAf,SACE,cAAC,KAAD,CAAWvC,GAAG,OAAOsH,KAAK,OACxBrB,UAAQ,EAAC7H,OAAO,UAAAsb,EAAY4V,kBAAZ,mBAAwBxH,iBAAxB,eAAmC2C,QAAS,qBCsGzDxgB,gBA1NK,WACpB,MAAiEvE,qBAAWC,IAApEuE,EAAR,EAAQA,iBAAkBkmB,EAA1B,EAA0BA,iBAAkB3W,EAA5C,EAA4CA,iBACtC4W,EAAc5W,EAAiB8F,YrCgUT,IqChUqCphB,MAAQsb,EAAiB8F,YrCiUzD,IqCjU0FphB,KAGrHub,EAAcxP,EAAiBE,KACrC,EAAkCxE,mBAAS,IAAIyhB,GAAY,CAACrnB,GAAIowB,EAAiBE,qBAAjF,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwC5qB,mBAA0B,IAAlE,mBAAO6qB,EAAP,KAAqBC,EAArB,KACA,EAAsC9qB,mBAAS,IAA/C,mBAAO+qB,EAAP,KAAoBC,EAApB,KACA,EAAsChrB,mBAAS,IAA/C,mBAAOirB,EAAP,KAAoBC,EAApB,KACA,EAAkClrB,mBAA2B,MAA7D,mBAAOmrB,EAAP,KAAkBC,EAAlB,KACA,EAA0CprB,oBAAS,GAAnD,mBAAOqrB,EAAP,KAAsBC,EAAtB,KACA,EAA4CtrB,oBAAS,GAArD,mBAAOurB,EAAP,KAAuBC,EAAvB,KACA,EAAoDxrB,mBAAsB,IAA1E,mBAAOyrB,EAAP,KAA2BC,EAA3B,KACA,EAA8C1rB,mBAAwB,IAAtE,mBAAO2rB,EAAP,KAAwBC,EAAxB,KACAxjB,qBAAU,WACRyL,EAAiB8F,YrCkTS,IqClTmBphB,YAAiCgJ,IAAxBopB,EAAUzI,YAA2D,IAA/ByI,EAAUpb,YAAYjT,SAAyF,IAA3EquB,EAAUpb,YAAYW,WAAU,SAAC9P,GAAD,MAA2B,cAAnBA,EAAKqP,iBAC7KoE,EAAiB8F,YrCkTc,IqClTmBphB,YAAqCgJ,IAA5BopB,EAAU7H,gBAA+G,IAAhF6H,EAAUpb,YAAYW,WAAU,SAAC9P,GAAD,MAA2B,mBAAnBA,EAAKqP,kBACjJ,CAACkb,EAAUzI,UAAWyI,EAAU7H,cAAejP,EAAiB8F,YAAagR,EAAUpb,cACzF,IAoDsB4Z,EAfhB0C,EAAkB,SAACz+B,GACnB+9B,EAAWA,EAAUtI,YAAcz1B,EAAEoL,MACnC4yB,EAAa,IAAItK,GAAU,CAAC1mB,GAAIowB,EAAiBsB,gBAAiB5K,aAAc9zB,EAAEoL,SACxFwyB,EAAe59B,EAAEoL,MAAMrJ,MACvB+7B,EAAe99B,EAAEoL,MAAMuzB,SAEnBC,EAAwB,SAACrH,GACzB,OACE,iCACE,sBAAMtqB,MAAO,CAACuqB,YAAY,OAA1B,SAAmCD,EAAOoH,SAC1C,+BAAOpH,EAAOx1B,WA4BxB,OAAQ,mCACN,eAAC,IAAD,CAAMwN,UAAU,0BAA0BiP,OA5E7B,WACX,OAAO,qCAAE,iCAAM,sBAAMjP,UAAU,mBAAhB,qBAAN,kGACT,cAAC,KAAD,CAAQ0E,KAAK,aAAa1E,UAAU,gEAAgEmE,MAAM,0GACxGT,UAAWoqB,IAAiBE,EAAUzI,WAA2C,IAA9ByI,EAAUjI,WAAWpmB,QAA2B,OAAZ6uB,EACvFxpB,QAAS,WACFmS,EAAY0T,aAAa3lB,SAAS8oB,IAAY7W,EAAY0T,aAAahnB,KAAKmqB,GACjFC,EAAa,IAAInJ,GAAY,CAACrnB,GAAIowB,EAAiBE,wBAGvD,cAAC,KAAD,CAAQrpB,KAAK,cAAc1E,UAAU,8CACnCqK,MAAM,oGAAoB3G,SAAmC,IAAzBsrB,EAAgBrvB,OACpDqF,QAAS,WAAK,IAAD,EACPsqB,EAAQ,UAAGnY,EAAY0T,oBAAf,aAAG,EAA0Bnb,QAAO,SAAA6f,GAAG,OAAKP,EAAgB9pB,SAASqqB,MACjFpY,EAAY0T,aAAeyE,EAC3BL,EAAmB,WA8DzB,UACE,sBAAKjvB,WAzBawsB,GAyBW,EAzBSA,EAAU,0CAA4C,+BA0B3F9uB,MAAO,CAACiW,MAAO,OADhB,UAEE,qBAAK3T,UAAU,mBAAf,gBACA,cAAC,GAAD,CAAQmE,MAAM,ygBACZqjB,YAAawG,EAAW7W,YAAaA,EAErCrH,SAAU,SAACsM,GACLA,GACEA,IAAS4R,IACN5R,EAAO3e,KAAI2e,EAAO3e,GAAKowB,EAAiBE,mBAC7CE,EAAa7R,KAInBkM,mBAAoB,SAAC/V,GAAD,OAAWsc,EAAkBtc,IACjDA,QAASqc,GAZX,cAEcZ,EAAU7H,kBAL1B,aACmC6H,EAAUvwB,GAD7C,YACmDmxB,IAiBnD,sBAAK5uB,UAAU,wCAAwCtC,MAAO,CAACiV,WAAW,QAA1E,UACI,qBAAK3S,UAAU,0BAAf,SACE,cAAC,KAAD,CAAcvC,GAAG,iBAAiB2R,YAAY,2MAC5C4N,YAAakR,EAAc1F,MAAO,IAAMlV,UAAQ,EAChD2J,eAhFS,SAAC3e,GACtB,IAAM0pB,EAAS,GACX1pB,EAAM6K,MAAMuN,OAAO/W,OAAO,IAAGqoB,EAAOwH,UAAYlxB,EAAM6K,MAAMuN,QAC5D4X,EAAY5X,OAAO/W,OAAO,IAAGqoB,EAAOyH,aAAgBnB,GACxDxH,GAAiB4I,kBAAkB1H,GAAQlsB,MAAK,SAAAqB,GACtCA,EAASoB,KAAKoB,OAAO,EAAGwuB,EAAgBhxB,EAASoB,MAChD4vB,EAAgB,OACpBriB,OAAM,SAACsQ,GAAD,OAAUlpB,QAAQE,IAAIgpB,OAyEMyM,aAAcwG,EAC3C3b,MAAM,OAAO5D,SAAU,SAACrf,GAClBA,EAAEoL,MAAMuzB,OAAQF,EAAgBz+B,GAC/B49B,EAAe59B,EAAEoL,QAExBA,MAAOuyB,MAEX,qBAAKpuB,UAAU,0BAAf,SACE,cAAC,KAAD,CAAcvC,GAAG,iBAAiB2R,YAAY,qBAC5C4N,YAAakR,EAAc1F,MAAO,IAAM9U,MAAM,SAC9CmV,aAAcwG,EACdpS,eAlFM,SAAC3e,GACbA,EAAM6K,MAAMuN,OAAO/W,OAAO,GAC5BmnB,GAAiB4I,kBAAkB,CAAC,aAAgBpxB,EAAM6K,MAAMuN,SAAS5a,MAAK,SAAAqB,GACxEA,EAASoB,KAAKoB,OAAO,EAAGwuB,EAAgBhxB,EAASoB,MAChD4vB,EAAgB,OACpBriB,OAAM,SAACsQ,GAAD,OAAUlpB,QAAQE,IAAIgpB,OA6EGtM,SAAU,SAACrf,GAC9BA,EAAEoL,MAAMuzB,OAAQF,EAAgBz+B,GAC/B89B,EAAe99B,EAAEoL,QAEzBA,MAAOyyB,MAEX,qBAAKtuB,UAAU,mBAAf,SACE,cAAC,KAAD,CAAWvC,GAAG,sBAAsBiG,UAAW8qB,EAC/Cpf,YAAY,oSACTU,SAAU,SAAArf,GACL+9B,IAAWA,EAAUvI,UAAYx1B,EAAEwU,OAAOpJ,QAEhDA,OAAgB,OAAT2yB,QAAS,IAATA,OAAA,EAAAA,EAAWvI,YAAa,OAEnC,sBAAKjmB,UAAU,yCAAf,UACE,cAAC,KAAD,CAAUvC,GAAG,gBAAsDuC,UAAU,SAAS2vB,WAAY,CAAChc,MAAM,WACvGic,UAAWlB,EAAerf,WAAW,WAAWiJ,OAAO,KACvDC,KAAMmW,EAAgB,aAAe,mBAAoB3K,WAAY,CAAC8L,OAAO,SAC7Eh0B,MAAK,OAAE2yB,QAAF,IAAEA,OAAF,EAAEA,EAAWrI,cAClBrW,SAAU,SAACrf,GACO,OAAZ+9B,IACA/9B,EAAEwU,OAAOpJ,MACX2yB,EAAUrI,cAAgB11B,EAAEwU,OAAOpJ,MAC9B2yB,EAAUrI,mBAAiBvhB,IAEpC4T,UAAQ,GAVV,uBAAkDkW,IAYlD,sBAAK1uB,UAAU,mBAAf,UACE,cAAC,KAAD,CAAUuS,QAASmc,EACjBpf,QAAQ,UACRQ,SAAU,SAAArf,GAAIk+B,EAAiBl+B,EAAE8hB,YAEnC,uBAAOrD,QAAQ,UAAf,8EAEF,cAAC,KAAD,CAAQxK,KAAK,aAAa1E,UAAU,gEAAiEqK,MAAM,uHAAwB3G,SAAsB,OAAZ8qB,QAA6C5pB,IAAxB4pB,EAAUtI,kBAAmDthB,IAAxB4pB,EAAUvI,UAA0BjhB,QAAS,WAC9OwpB,KACoE,IAAlER,EAAUjI,WAAWxS,WAAU,SAAAqT,GAAE,OAAEA,EAAG9F,OAAS0N,EAAU1N,SAAYkN,EAAUjI,WAAWliB,KAAK2qB,GACnGC,EAAa,MACbF,EAAe,IACfF,EAAe,QAGnB,cAAC,KAAD,CAAQ3pB,KAAK,cAAc1E,UAAU,8CAA+CqK,MAAM,kHAAwB3G,SAAsC,IAA5BorB,EAAmBnvB,OAAYqF,QAAS,WAClK,IAAIsgB,EAAc0I,EAAUjI,WAAWrW,QAAO,SAAA6f,GAAG,OAAKT,EAAmB5pB,SAASqqB,MAClFvB,EAAUjI,WAAaT,EACvByJ,EAAsB,UAG1B,qBAAK/uB,UAAU,mBAAf,SACE,eAAC,IAAD,CAAWnE,MAAOmyB,EAAUjI,WAAY+J,UAAWhB,EACjDiB,iBAAiB,SAASC,QAAS,KACnChwB,UAAU,iBAAiBiwB,aAAa,sHAAuBvyB,MAAO,CAACiW,MAAM,QAC7Euc,kBAAmB,SAAAz/B,GAEjB,GADAs+B,EAAsBt+B,EAAEoL,OACpBpL,EAAEoL,OAASpL,EAAEoL,MAAM8D,OAAO,EAAG,CAAC,IAAD,EACzBinB,EAAKn2B,EAAEoL,MAAM,GACnB4yB,EAAa7H,GACb+H,EAAkD,KAAjC,UAAA/H,EAAGT,qBAAH,eAAkBvB,aAAqD,IAAjCgC,EAAGT,cAActB,cACxE0J,EAAe3H,EAAGV,YAAYkJ,QAC9Bf,EAAezH,EAAGV,YAAY1zB,WAE9Bi8B,EAAa,MACbF,EAAe,IACfF,EAAe,KAdrB,UAiBE,cAAC,IAAD,CAAQ8B,cAAc,WAAWC,YAAa,CAACzc,MAAO,SACtD,cAAC,IAAD,CAAQD,MAAM,mBAAmBzE,OAAO,6EACxC,cAAC,IAAD,CAAQA,OAAO,iCAAQohB,KA5HN,SAACC,GAC5B,OAAOA,EAAQrkB,qBA+HX,eAAC,IAAD,CAAWpQ,MAAOsb,EAAY0T,aAAcntB,MAAO,CAAC0V,UAAU,MAAOT,WAAW,QAC9E3S,UAAU,iBAAiBiwB,aAAa,4HAAwBH,UAAWd,EAC3Ee,iBAAiB,SAASC,QAAS,KAAME,kBAAmB,SAAAz/B,GAC1Dw+B,EAAmBx+B,EAAEoL,OACjBpL,EAAEoL,OAASpL,EAAEoL,MAAM8D,OAAO,EAAGsuB,EAAax9B,EAAEoL,MAAM,IAEpDoyB,EAAa,IAAInJ,GAAY,CAACrnB,GAAIowB,EAAiBE,sBANzD,UASE,cAAC,IAAD,CAAQoC,cAAc,WAAWC,YAAa,CAACzc,MAAO,SACtD,cAAC,IAAD,CAAQ1E,OAAO,yDAAYohB,KA3HJ,SAACC,GAC9B,IAAIC,EAAa,GAGjB,OAFID,EAAQ/K,YAAWgL,EAAaD,EAAQ/K,UAAUvW,OAAO,KACzDshB,EAAQvK,WAAWpmB,OAAO,IAAG4wB,GAAcD,EAAQE,aAChDD,KAwHD,cAAC,IAAD,CAAQthB,OAAO,kFAAiBohB,KAxIT,SAACC,GAC9B,IAAIC,EAAa,GACjB,YAA8B3rB,IAA1B0rB,EAAQnK,gBACRmK,EAAQxK,OAASwK,EAAQxK,MAAQ,IAAGyK,GAAU,6BAAWD,EAAQxK,MAAnB,MAC9CwK,EAAQ1K,QAAU0K,EAAQ1K,OAAS,IAAG2K,GAAU,8BAAYD,EAAQ1K,SACpE0K,EAAQzK,OAASyK,EAAQzK,MAAQ,IAAG0K,GAAU,8BAAYD,EAAQzK,QAClEyK,EAAQ7K,MAAQ6K,EAAQ7K,KAAO,IAAG8K,GAAU,wBAAWD,EAAQ7K,OAC/D6K,EAAQ5K,OAAS4K,EAAQ5K,MAAQ,IAAG6K,GAAU,8BAAYD,EAAQ5K,QAClE4K,EAAQ3K,SAAW2K,EAAQ3K,QAAU,IAAG4K,GAAU,8BAAYD,EAAQ3K,WAN1B4K,KAuI1C,cAAC,IAAD,CAAQ7c,MAAM,kBAAkBzE,OAAO,kDC1OpCwhB,GAAmB,CAC9B,CAAE1hB,KAAM,EAAGvc,KAAM,uFACjB,CAAEuc,KAAM,EAAGvc,KAAM,uHCFNk+B,GAAuB,CAClC,CAAE3hB,KAAM,EAAGvc,KAAM,0RACjB,CAAEuc,KAAM,EAAGvc,KAAM,0FACjB,CAAEuc,KAAM,EAAGvc,KAAM,gPACjB,CAAEuc,KAAM,EAAGvc,KAAM,qPCqDNm+B,GAAc,SAAdA,EAAe9wB,GAC1B,IAAI+wB,EAAW/wB,EACf,GAAIzP,MAAM6L,UAAU40B,cAAcD,GAChC,OAAO/wB,EAET,IAAIixB,EAAS,GAKb,OAJAC,OAAOC,KAAKnxB,GAAKuI,SAAQ,SAAC6L,GACpBpU,EAAIoU,KAAS8c,OAAOlxB,EAAIoU,IAAO6c,EAAO7c,GAAO0c,EAAY9wB,EAAIoU,SAC3CrP,IAAb/E,EAAIoU,KAAoB6c,EAAO7c,GAAOpU,EAAIoU,OAE9C6c,GCvCIG,GAAwB,CACnCnmB,eAAgB,CAAEC,KAAM,CAAC,KAAM,QAASC,QAAS,CAAC,WAAY,SAAU,iBACxE9F,SAAU,CAAC,WAAY,SAAU,gBACjCrC,aAAc,CAAEkI,KAAM,CAAC,KAAM,SAC7ByB,SAAU,CAAEzB,KAAM,CAAC,KAAM,SACzBsM,OAAQ,CAAEtM,KAAM,CAAC,KAAM,SAAUC,QAAS,CAAC,cAAe,UAAW,cCzBlDkmB,G,wIAEnB,WAAwB/nB,GAAxB,0FACSvD,EAAKuF,KAAL,UAAa1F,EAAb,4CAA0C0D,GAA1C,IAAiD4d,OAAQ,EAAGlb,MAAO,KAAQolB,MADpF,2C,wHAIA,WAA0B9nB,GAA1B,0FACSvD,EAAKuF,KAAL,UAAa1F,EAAb,mBAAuC,CAAE8F,EAAGpC,EAAO4d,OAAQ,EAAGlb,MAAO,OAD9E,2C,qHAIA,WAAuBslB,GAAvB,0FACSvrB,EAAKuF,KAAL,UAAa1F,EAAb,iCACL2rB,OAAQD,GACLF,MAHP,2C,wHAQA,WAA0B3qB,GAA1B,0FACSV,EAAKyrB,IAAL,UAAY5rB,EAAZ,wBAAmCa,EAAQ8qB,OAAO3zB,IAAlD,2BACF6I,GACA2qB,MAHP,2C,wHAOA,WAA0BK,GAA1B,0FACS1rB,EAAK2rB,OAAL,UAAe9rB,EAAf,wBAAsC6rB,KAD/C,2C,8DC9BmBE,G,WAInB,WAAY9uB,GAAwB,0BAH5ByR,SAG2B,OAF3Bsd,WAE2B,OAD3BC,eAC2B,EACjC/c,KAAKR,IAAMzR,EAAMjF,GACjBkX,KAAK+c,UAAYhvB,EAAMyuB,OAAO1zB,GAC1BiF,EAAMivB,KAAMhd,KAAK8c,MAAQ,IAAIvlB,KAAKxJ,EAAMivB,MACvChd,KAAK8c,MAAQ,IAAIvlB,KACtB+I,aAAmBN,M,uCAErB,WACE,OAAOA,KAAK8c,O,IAEd,SAAS51B,GACP8Y,KAAK8c,MAAQ51B,I,oBAEf,WACE,OAAO8Y,KAAK+c,W,IAEd,SAAa71B,GACX8Y,KAAK+c,UAAY71B,I,cAEnB,WACE,OAAO8Y,KAAKR,M,2BAGd,WACE,IAAIyd,EAAiB,CAAED,KAAMhd,KAAK8c,OAGlC,OAFI9c,KAAKR,MAAKyd,EAAen0B,GAAKkX,KAAKR,KACnCQ,KAAK+c,YAAWE,EAAeN,UAAY3c,KAAK+c,WAC7CE,M,KCmHMlqB,gBAvIK,WACpB,MAAqDvE,qBAAWC,IAAxDF,EAAR,EAAQA,UAAWyE,EAAnB,EAAmBA,iBAAkBqB,EAArC,EAAqCA,YAC9BmO,EAAcxP,EAAiBE,KACtC,EAA8BxE,mBAAgC,MAA9D,mBAAOwuB,EAAP,KAAgBC,EAAhB,KACArmB,qBAAU,WACM,OAAVomB,GAAkB3uB,EAAUN,UAE9BsuB,GAAca,WAAW,CACvBxmB,EAAE,CAACymB,mBAAoB9uB,EAAUN,SAASC,aAAapF,MACtD3B,MAAK,SAAAqB,GACN,IAAMoB,EAAOpB,EAASoB,KAAK8F,KAAI,SAAA8sB,GAAS,IAAD,IACrC,OAAKA,EAAO9Z,QAAW8Z,EAAO9Z,OAAOxN,YAC9B,CAACpM,GAAI0zB,EAAO1zB,GAAIjL,KAAK,GAAD,OAAK2+B,EAAO9Z,OAAOxN,YAAYC,OAA/B,YAAyCqnB,EAAO9Z,OAAOxN,YAAYE,QAAnE,YAA8EonB,EAAO9Z,OAAOxN,YAAYG,QAAxG,sBAAmHmnB,EAAO3kB,gBAA1H,aAAmH,EAAiBha,OADtG,CAACiL,GAAI0zB,EAAO1zB,GAAIjL,KAAI,UAAE2+B,EAAO3kB,gBAAT,aAAE,EAAiBha,SAE9F+L,GAAMuzB,EAAWvzB,MACpBuN,OAAM,SAACnQ,GAAD,OAAOzI,QAAQE,IAAI,wKAE9B,CAACy+B,EAAS7oB,EAAa9F,EAAUN,WAEnC,IACM4M,EAAUoB,GAAalB,QAAO,SAACjM,GAAD,MADjB,KAC+CyB,SAASzB,EAAKsL,SAM1EkjB,IAAsB9a,EAAY+a,kBAAuG,IAApF/a,EAAYvE,YAAYW,WAAU,SAAC9P,GAAD,MAA2B,qBAAnBA,EAAKqP,eACpGqf,IAA0Bhb,EAAY8T,sBAA+G,IAAxF9T,EAAYvE,YAAYW,WAAU,SAAC9P,GAAD,MAA2B,yBAAnBA,EAAKqP,eAC5Gsf,EAAwB,CAACnP,SAAS,QAAS5F,SAAS,QAASjK,UAAW,SAAUT,WAAY,YAC9F0f,EAAoB,CAACpP,SAAS,QAAS5F,SAAS,QAASjK,UAAW,SAAUT,WAAY,YAC1F2f,EAA4B,CAACnP,WAAY,SAAUxP,MAAO,OAEhE,OAAQ,mCACJ,cAAC,IAAD,CAAM3T,UAAU,0BAA0BiP,OAX/B,WACX,OAAO,8OAUP,SACI,sBAAKjP,UAAU,4BAAf,UACE,sBAAKA,UAAU,0CAA0CtC,MAAO,CAACiW,MAAO,OAAxE,UACE,qBAAK3T,UAAU,mBAAf,iBACA,qBAAKA,UAAU,kCAAkCtC,MAAO,CAACiW,MAAO,OAAhE,SACE,cAAC,GAAD,CAAmBjB,SAAO,EAAEH,QAAS0f,EACnC9tB,MAAO,uBAAO+K,QAAQ,kBAAf,yRACPgE,SAAU,SAACziB,EAAwBmiB,GAC1BniB,EAAE8hB,UAAS4E,EAAY+a,qBAAkBttB,GAC1CgO,IAAauE,EAAYvE,YAAcA,IAE/Cc,MACE,cAAC,KAAD,CAAUpE,QAAQ,kBAAkB5R,MAAO00B,EAAuBhjB,YAAY,6CAC5EI,QAASihB,GAAkB9gB,YAAY,OACvC9T,MAAO40B,GAAiB7gB,MAAK,SAACnM,GAAD,OAASA,EAAKsL,OAASoI,EAAY+a,mBAChEpiB,SAAU,SAACrf,GAAD,OAAM0mB,EAAY+a,gBAAmBzhC,EAAEoL,MAAMkT,QAG3DS,QAASA,EACT3T,M5CgWA,E4C/VA+W,YAAauE,EAAYvE,YACzBC,WAAW,0BAIjB,sBAAK7S,UAAU,0CAA0CtC,MAAO,CAACiW,MAAO,OAAxE,UACE,qBAAK3T,UAAU,mBAAf,iBACA,qBAAKA,UAAU,kCACftC,MAAO,CAACiW,MAAO,OADf,SAEE,cAAC,GAAD,CAAmBjB,SAAO,EAAEH,QAAS4f,EACnChuB,MAAO,uBAAO+K,QAAQ,sBAAf,kVACPgE,SAAU,SAACziB,EAAwBmiB,GAC1BniB,EAAE8hB,UACL4E,EAAY8T,yBAAsBrmB,GAEhCgO,IAAauE,EAAYvE,YAAcA,IAE/C9C,SAAU,SAACrf,EAAemiB,GAClBA,IAAauE,EAAYvE,YAAcA,IAC/Cc,MACE,cAAC,KAAD,CAAUpE,QAAQ,sBAAsB5R,MAAO00B,EAAuBhjB,YAAY,6CAChFI,QAASkhB,GAAsB/gB,YAAY,OAC3C9T,MAAO60B,GAAqB9gB,MAAK,SAACnM,GAAD,OAASA,EAAKsL,OAASoI,EAAY8T,uBACpEnb,SAAU,SAACrf,GACT0mB,EAAY8T,oBAAsBx6B,EAAEoL,MAAMkT,QAIhDS,QAASA,EACT3T,M5CkUA,E4CjUA+W,YAAauE,EAAYvE,YACzBC,WAAW,8BAIjB,qBAAK7S,UAAU,0CAA0CtC,MAAO,CAACiW,MAAO,MAAOiG,YAAY,SAAS5J,WAAW,IAAKuiB,SAAU,UAA9H,wDAGA,sBAAKvyB,UAAU,0CAA0CtC,MAAO,CAACiW,MAAO,OAAxE,UACE,qBAAK3T,UAAU,mBAAf,kBACA,sBAAKA,UAAU,kCAAkCtC,MAAO40B,EAAxD,UACE,uBAAOpjB,QAAQ,SAAf,+YACA,cAAC,KAAD,CAAUI,QAAQ,SAAUF,YAAY,6CAAU1R,MAAO20B,EACvD1iB,YAAY,OAAOJ,WAAS,EAACvP,UAAU,SAAUwP,QAASqiB,GAAW,GACrEh2B,MAAK,OAAEg2B,QAAF,IAAEA,OAAF,EAAEA,EAASjiB,MAAK,SAAAnM,GAAI,aAAEA,EAAKhG,MAAL,UAAY0Z,EAAYqb,cAAxB,aAAY,EAAoBC,aAAWC,WAAS,EAC/E5iB,SAAU,SAACrf,GACLA,EAAEoL,MACJsb,EAAYqb,OAAS,IAAIhB,GAAc,CAACL,OAAQ1gC,EAAEoL,QAC7Csb,EAAYqb,YAAS5tB,KAEhC,uBAAOsK,QAAQ,qBAAf,8NACA,cAAC,KAAD,CAAUI,QAAQ,qBAAsBF,YAAY,6CAAU1R,MAAO20B,EACnE1iB,YAAY,OAAOH,QAASqiB,GAAW,GAAIa,WAAS,EACpD72B,MAAK,OAAEg2B,QAAF,IAAEA,OAAF,EAAEA,EAASjiB,MAAK,SAAAnM,GAAI,aAAEA,EAAKhG,MAAL,UAAY0Z,EAAYwb,0BAAxB,aAAY,EAAgCF,aACvE3iB,SAAU,SAACrf,GACLA,EAAEoL,MACJsb,EAAYwb,mBAAsB,IAAInB,GAAc,CAACL,OAAQ1gC,EAAEoL,QAC1Dsb,EAAYwb,wBAAqB/tB,WAIhD,sBAAK5E,UAAU,0CAA0CtC,MAAO,CAACiW,MAAO,OAAxE,UACE,qBAAK3T,UAAU,mBAAf,kBACA,sBAAKA,UAAU,kCAAkCtC,MAAO40B,EAAxD,UACE,uBAAOpjB,QAAQ,gBAAf,oOACA,cAAC,KAAD,CAAUI,QAAQ,gBAAgBF,YAAY,6CAAU1R,MAAO20B,EAC7D1iB,YAAY,OAAQH,QAASqiB,GAAW,GAAIa,WAAS,EACrD72B,MAAK,OAAEg2B,QAAF,IAAEA,OAAF,EAAEA,EAASjiB,MAAK,SAAAnM,GAAI,aAAEA,EAAKhG,MAAL,UAAU0Z,EAAYyb,qBAAtB,aAAU,EAA2BH,aAChE3iB,SAAU,SAAArf,GACJA,EAAEoL,MACJsb,EAAYyb,cAAiB,IAAIpB,GAAc,CAACL,OAAQ1gC,EAAEoL,QACrDsb,EAAYyb,mBAAgBhuB,WAK3C,qBAAK5E,UAAU,0CAA0CtC,MAAO,CAACiW,MAAO,MAAOiG,YAAY,UAA3F,SACE,oXC1IOiZ,G,WASnB,aAAyC,IAA7BnwB,EAA4B,uDAApB,GAAoB,0BARhCyR,SAQgC,OAPhC8B,aAOgC,OANhC6c,kBAMgC,OALhCC,kBAKgC,OAJhC5d,eAIgC,OAHhC6d,eAGgC,OAFhCnd,aAEgC,EACtClB,KAAKkB,QAAL,eAAoBnT,GAChBA,EAAM2U,OAAQ1C,KAAKsB,QAAU,IAAIT,GAAO9S,EAAM2U,QAC7C1C,KAAKsB,QAAU,IAAIT,GACpB9S,EAAMuwB,aAActe,KAAKme,aAAe,IAAI5mB,KAAKxJ,EAAMuwB,cACtDte,KAAKme,aAAe,IAAI5mB,KACzBxJ,EAAMuV,WAAUtD,KAAKQ,UAAY,IAAIjB,GAASxR,EAAMuV,WACxDtD,KAAKR,IAAMzR,EAAMjF,GACjBkX,KAAKoe,aAAerwB,EAAMwwB,YAC1Bve,KAAKqe,eAA+BpuB,IAAnBlC,EAAMywB,UAAgCzwB,EAAMywB,SAC7Dle,aAAmBN,UAAM/P,EAAW,CAAEsQ,MAAM,I,kDAE9C,WAAiB,IAAD,EACRwP,EAAM,GAOZ,OANI/P,KAAKR,MAAKuQ,EAAIjnB,GAAKkX,KAAKR,KAC5BuQ,EAAIwO,YAAcve,KAAKoe,aACvBrO,EAAIyO,SAAWxe,KAAKqe,UACpBtO,EAAIuO,aAAJ,UAAmBte,KAAKme,oBAAxB,aAAmB,EAAmB1d,eAClCT,KAAKsB,UAASyO,EAAI0O,kBAAoBze,KAAKsB,QAAQgM,iBACnDtN,KAAKQ,YAAWuP,EAAI2O,oBAAsB1e,KAAKQ,UAAU8M,iBACtDyC,I,kBAET,WACE,OAAO/P,KAAKkB,U,oBAEd,WACE,OAAOlB,KAAKqe,W,IAEd,SAAan3B,GACX8Y,KAAKqe,UAAYn3B,I,oBAEnB,WACE,OAAO8Y,KAAKQ,W,IAEd,SAAatZ,GACX8Y,KAAKQ,UAAYtZ,I,uBAEnB,WACE,OAAO8Y,KAAKoe,c,IAEd,SAAgBl3B,GACd8Y,KAAKoe,aAAel3B,I,uBAEtB,WACE,OAAO8Y,KAAKme,c,IAEd,SAAgBj3B,GACd8Y,KAAKme,aAAej3B,I,kBAEtB,WACE,OAAO8Y,KAAKsB,S,IAEd,SAAWpa,GACT8Y,KAAKsB,QAAUpa,I,cAEjB,WACE,OAAO8Y,KAAKR,Q,KC8HDzM,gBAlLO,WAAO,IAAD,QAC1B,EAA4DvE,qBAAWC,IAA/DuE,EAAR,EAAQA,iBAAkBuP,EAA1B,EAA0BA,iBAAkBlO,EAA5C,EAA4CA,YACtCmO,EAAcxP,EAAiBE,KACrC,EAAsBxE,mBAAS8T,EAAYmc,aAAe,IAAIT,IAAvDS,EAAP,oBACMjc,EAASic,EAAYjc,OACrBY,EAAWqb,EAAYrb,SAC7B,EAAoC5U,qBAAWiwB,EAAYrb,UAA3D,mBAAOkB,EAAP,KAAmBC,EAAnB,KACA,EAAiC/V,mBAASwO,GAAcjC,MAAK,SAACnM,GAAD,OAAQA,EAAKsL,QAAL,OAAckJ,QAAd,IAAcA,OAAd,EAAcA,EAAUoB,sBAA7F,mBAAOR,EAAP,KAAiBS,EAAjB,KAIA7N,qBAAU,WAAK,IAAD,KACP,UAAC6nB,EAAYjc,OAAOd,WAApB,aAAC,EAAwBzM,UAAW,UAACwpB,EAAYjc,OAAOd,WAApB,aAAC,EAAwBxM,WAClEmN,EAAiB8F,Y9C+TgB,I8C/TmBphB,MAAO,KAC3D,WAAC03B,EAAYjc,OAAOd,WAApB,aAAC,EAAwBzM,OAAzB,UAAiCwpB,EAAYjc,OAAOd,WAApD,aAAiC,EAAwBxM,QAASmN,EAAiB8F,cACrFvR,qBAAU,WACF6nB,EAAYC,cAClBrc,EAAiB8F,Y9C4TiB,I8C5TmBphB,MAAO,KAC5D,CAAC03B,EAAYC,YAAarc,EAAiB8F,cAC7CvR,qBAAU,YACF6nB,EAAYjc,OAAOvB,OAAWwd,EAAYrb,YAChDf,EAAiB8F,Y9CyTqB,I8CzTmBphB,MAAO,KAChE,CAAC03B,EAAYrb,SAAUqb,EAAYjc,OAAOvB,MAAOoB,EAAiB8F,cAEpE,MAAiDpE,GAAe,CAACC,WAAUZ,aAA3E,mBAAOc,EAAP,KAAoBE,EAApB,KAAiCO,EAAjC,KACMga,IAAmBrc,EAAYmc,eAAiBpc,EAAiB8F,Y9CqT/B,I8CrTuEphB,MACxGsb,EAAiB8F,Y9CmTY,I8CnTwBphB,MACrDsb,EAAiB8F,Y9CiTW,I8CjTwBphB,MAG3D,OAAQ,mCACJ,cAAC,IAAD,CAAMoE,UAAU,0BAA0BiP,OAvB/B,WACX,OAAO,qNAsBmDvR,MAAO,CAACkc,YAAY,QAA9E,SACI,sBAAK5Z,UAAU,4BAAf,UACE,sBAAKA,UAAU,0CAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,uBAAOkP,QAAQ,MAAf,6LACA,cAAC,GAAD,CAAY0H,WAAU,UAAE0c,EAAYjc,cAAd,aAAE,EAAoBd,IAAKQ,WAAW,EAC1DjH,SAAU,SAACjU,GACTy3B,EAAYjc,OAAOd,IAAO1a,QAIhC,sBAAKmE,UAAU,4BAAf,UACE,uBAAOkP,QAAQ,cAAf,6FACA,cAAC,KAAD,CAAWrT,MAAOy3B,EAAYJ,YAC5B9jB,YAAY,kEACZU,SAAU,SAAArf,GAAC,OAAE6iC,EAAYJ,YAAcziC,EAAEwU,OAAOpJ,YAGpD,sBAAKmE,UAAU,4BAAf,UACE,uBAAOkP,QAAQ,cAAf,2EACA,cAAC,KAAD,CAAUzR,GAAG,YAAY+a,UAAQ,EAACnJ,WAAW,WAC3CiJ,OAAO,KAAKC,KAAK,aACjB1c,MAAOy3B,EAAYC,YACnBzjB,SAAU,SAACrf,GACLA,EAAEwU,OAAOpJ,QAAOy3B,EAAYC,YAAc9iC,EAAEwU,OAAOpJ,aAI7D,sBAAKmE,UAAU,4BAAf,UACE,uBAAOkP,QAAQ,QAAf,4CACA,cAAC,KAAD,CAAWzR,GAAG,QACZsH,KAAK,OAAOwT,KAAK,iBACjB1c,MAAK,OAAEwb,QAAF,IAAEA,OAAF,EAAEA,EAAQvB,MACfhG,SAAU,SAACrf,GACT4mB,EAAOvB,MAAQrlB,EAAEoL,eAKzB,sBAAKmE,UAAU,0CAAf,UACE,qBAAKA,UAAU,kCAAf,SACE,cAAC,GAAD,CACEuS,QAAS4G,EAAYjG,SAAU,SAACziB,GAC1BA,EAAE8hB,QACJ+gB,EAAYrb,SAAW,IAAI/D,GAAS,CACpCU,sBAAuB/C,G9CmWlB,G8CnW6C9C,OAE7CukB,EAAYrb,cAAWrT,EAC9BwU,EAAc3oB,EAAE8hB,UAGlBpO,MAAO,uBAAO+K,QAAQ,qBAAf,gOACPwE,MAAO,cAAC,KAAD,CAAUjW,GAAG,qBAAqB5B,MAAOgd,EAC9CtJ,WAAS,EAACC,QAASqC,GAAelC,YAAY,OAC9CG,SAAU,SAACrf,GACLwnB,EAAUA,EAASoB,iBAAmB5oB,EAAEoL,MAAMkT,KAC7CukB,EAAYrb,SAAW,IAAI/D,GAAS,CAAEU,sBAAuBnkB,EAAEoL,MAAMkT,OAC1EuK,EAAYzH,GAAcjC,MAAK,SAACnM,GAAD,OAAUA,EAAKsL,OAASte,EAAEoL,MAAMkT,YAGnES,QAAS,CAACoB,G9CoTV,I8CpT8B/U,M9CoT9B,M8CjTJ,qBAAKmE,UAAU,kCACbtC,MAAO,CAACiV,WAAW,UADrB,SAEE,cAAC,GAAD,CACExO,MAAO,uBAAO+K,QAAQ,SAAf,4CACPqD,QAAS4G,IACuE,KAA9E,UAAAma,EAAYrb,gBAAZ,eAAsBrF,YAAYW,WAAU,SAAAkG,GAAE,MAAmB,WAAjBA,EAAG3G,gBACrDI,SAAU,SAACziB,GACLA,EAAE8hB,SAAW+gB,EAAYrb,SAAUqb,EAAYrb,SAAS9I,OAAS,GAC5DmkB,EAAYrb,WAAUqb,EAAYrb,SAAS9I,YAASvK,IAE/D8O,MAAOqF,EACPlG,WAAW,SACXrD,QAAS,CAACoB,G9CqSV,I8CrS6B/U,M9CqS7B,E8CpSAoX,SAAUkG,KAbd,cAA6DA,IAgB7D,qBAAKnZ,UAAU,kCACbtC,MAAO,CAACiV,WAAW,UADrB,SAEE,cAAC,GAAD,CACExO,MAAO,uBAAO+K,QAAQ,YAAf,4CACPqD,QAAS4G,EACTzF,MAAOuF,EACPzJ,QAAS,CAACoB,G9C2RV,I8C3R6B/U,M9C2R7B,E8C1RAoX,SAAO,KAPX,cAA6DkG,IAU7D,qBAAKnZ,UAAU,kCAA4DtC,MAAO,CAACiV,WAAW,UAA9F,SACE,cAAC,GAAD,CACExO,MAAO,uBAAO+K,QAAQ,eAAf,+DACPqD,QAAS4G,EACTzF,MACE,cAAC,KAAD,CAAejW,GAAG,eAAe5B,MAAK,OAAEoc,QAAF,IAAEA,OAAF,EAAEA,EAAUpD,aAChD6E,KAAM,GAAIC,KAAM,EAChB7J,SAAU,SAACrf,GAASwnB,IAAUA,EAASpD,aAAepkB,EAAEwU,OAAOpJ,UAEnE2T,QAAS,CAACoB,G9C8QV,I8C9Q6B/U,M9C8Q7B,E8C7QAoX,SAAO,KAVX,cAA6DkG,IAa7D,qBAAKnZ,UAAU,kCAAkCtC,MAAO,CAACiV,WAAW,UAApE,SACE,cAAC,GAAD,CACExO,MAAO,uBAAO+K,QAAQ,YAAf,2EACPqD,QAAS4G,EACTzF,MAAO,cAAC,KAAD,CAAWjW,GAAG,YAAYuC,UAAU,SACzCqP,WAAY,WACZiJ,OAAO,KAAKC,KAAK,aACjB1c,MAAK,OAAEoc,QAAF,IAAEA,OAAF,EAAEA,EAAU1C,aACjBzF,SAAU,SAACrf,GAASwnB,IAAUA,EAAS1C,aAAe9kB,EAAEwU,OAAOpJ,QAC/D2c,UAAQ,IAEVhJ,QAAS,CAACoB,G9C+PV,I8C/P6B/U,M9C+P7B,E8C9PAoX,SAAO,KAZX,gBAA6FkG,IAe7F,qBAAKnZ,UAAU,kCACctC,MAAO,CAACiV,WAAW,UADhD,SAEE,cAAC,GAAD,CACExO,MAAO,uBAAO+K,QAAQ,UAAf,+GACPqD,QAAS4G,EACTjG,SAAU,SAACziB,GACLA,EAAE8hB,SAAW+gB,EAAYrb,SAAUqb,EAAYrb,SAASnD,aAAe,GAClEwe,EAAYrb,WAAUqb,EAAYrb,SAASnD,kBAAelQ,IAErE8O,MAAO8F,EACPhK,QAAS,CAACoB,G9CiPV,I8CjP6B/U,M9CiP7B,E8ChPAoX,SAAUkG,EACVtG,WAAW,kBAZf,eACesG,IAcf,cAAC,KAAD,CAAQpU,KAAK,SAASZ,MAAM,uCAASzG,MAAO,CAACsvB,OAAO,UAClDhtB,UAAU,mCACV0D,SAAU8vB,EACVxuB,QAAS,WACPmS,EAAYmc,YAAcA,EAC1Bnc,EAAYpP,UAAYurB,EAAYC,YACpCvqB,EAAYnM,QAAU,CAAEqV,SAAU,UAAWtJ,QAAS,6CAAWC,OAAQ,6aAAqFsJ,KAAM,qB,SC7LzKshB,GAAyB,CAAEC,OAAQ,CAAC,aAAc,eCElDC,GAA6B,2BACrCF,IADqC,IAExCzoB,QAAS,CAAC,kBCJC4oB,GAAuC,CAClD7oB,KAAM,CAAC,KAAM,SAAU,QACvBC,QAAS,CAAC,WCFC6oB,GAAuC,CAClDH,OAAQ,CAAC,eAAgB,aAAc,cACvC1oB,QAAS,CAAC,YAAa,iBCgBZ8oB,GAAkC,CAC7ChpB,eAAgB,CACd4oB,OAAQ,CAAC,eAAgB,aAAc,cACvC1oB,QAAS,CACP,UACA,SACA,sBACA,WACA,WACA,WACA,WACA,WACA,aACA,aACA,YACA,gBACA,cACA,eACA,eAGJ9F,SAAU,CACR,UACA,cACA,YACA,WACA,WACA,WACA,WACA,aACA,aACA,gBACA,cAEF6uB,WAAYJ,GACZvc,QCrDoC,CACpCsc,OAAQ,CAAC,YAAa,aAAc,cACpC1oB,QAAS,CAAC,SAAU,WAAY,iBDoDhCiN,SAAU0b,GACV5d,QAAS4d,GACTK,SAAUH,GACVI,SAAUJ,GACVK,SAAUL,GACVM,SE3DkD,CAClDT,OAAQ,CAAC,mBAAoB,aAAc,cAC3C1oB,QAAS,CAAC,gBAAiB,iBF0D3BwnB,OAAQoB,GACRQ,oBAAqBR,GACrBS,SAAUT,GACVU,cG/DyC,CACzCZ,OAAQ,CAAC,eAAgB,aAAc,cACvC1oB,QAAS,CAAC,YAAa,aAAc,iBH8DrC+a,WIhEsC,CACtC2N,OAAQ,CAAC,kBAAmB,aAAc,cAC1C1oB,QAAS,CAAC,eAAgB,iBJ+D1BupB,WKjEuC,CACvCb,OAAQ,CAAC,qBAAsB,aAAc,cAC7C1oB,QAAS,CAAC,kBAAmB,UAAW,iBLgExC8W,gBMlE4C,CAC5C4R,OAAQ,CAAC,iBAAkB,aAAc,cACzC1oB,QAAS,CAAC,cAAe,OAAQ,iBNiEjCkW,KAAMyS,GACNtc,OOpEmC,CACnCqc,OAAQ,CAAC,aAAc,cACvB1oB,QAAS,CAAC,cAAe,UAAW,iBPmEpCmmB,OQrEyC,CACzCpmB,KAAM,CAAC,KAAM,cAAe,YAC5BC,QAAS,CAAC,cAAe,aRoEzBsoB,YStEwC,CACxCI,OAAQ,CAAC,YAAa,iBAAkB,aAAc,cACtD1oB,QAAS,CAAC,SAAU,aTqEpBwB,SAAU,CAAEzB,KAAM,CAAC,KAAM,SACzBypB,UAAW,CAAEzpB,KAAM,CAAC,KAAM,SAC1BiK,aAAcye,IAGKgB,G,6IAEnB,WAA6BtrB,GAA7B,4FAAyC0jB,EAAzC,+BAAiD,EAAG6H,EAApD,+BAA2D,EAA3D,kBACS9uB,EAAKuF,KAAL,UAAa1F,EAAb,iDACF0D,GADE,IAEL4d,OAAQ8F,EACRhhB,MAAO6oB,EAAO7H,EAAQ,GACnBiH,MALP,2C,oHAUA,WAAsB3qB,GAAtB,0FACSvD,EAAKuF,KAAL,UAAa1F,EAAb,iDAA+C0D,GAA/C,IAAsDwrB,MAAO,QADtE,2C,0HAKA,WAA4Bxd,GAA5B,0FACSvR,EAAKuF,KAAL,UAAa1F,EAAb,sCACLmvB,YAAazd,GACV2c,MAHP,2C,6HAQA,WAA+BxtB,GAA/B,0FACSV,EAAKyrB,IAAL,UAAY5rB,EAAZ,6BAAwCa,EAAQsuB,YAAYn3B,IAA5D,2BACF6I,GACAwtB,MAHP,2C,6HAOA,WAA+Be,GAA/B,0FACSjvB,EAAK2rB,OAAL,UAAe9rB,EAAf,6BAA2CovB,KADpD,2C,kHAIA,WAAoBA,GAApB,0FACSjvB,EAAKoB,IAAL,UAAYvB,EAAZ,6BAAwCovB,KADjD,2C,gFUhHWC,GAAY,2EACzB,SAASC,M,8CA2DF,mBAOUC,EAPV,WAAApuB,EAAA,iGAAAA,EAAA,MAOL,WAA0BquB,GAA1B,SAAAruB,EAAA,yDAC8B,iBAAjBquB,EADb,yCAC+Cx5B,GAD/C,uBAEevN,OAAOC,YAAY6C,YAAnB,UAA+B,0FAEQ,OAFR,kBAEcikC,EAAcv4B,WAF5B,OAI3B,OAJ2B,YAExCjB,EAAOy5B,iBAAmB,oFAFc,KAGxCz5B,EAAO05B,eAAgB,EAHiB,SAIrBjnC,OAAOC,YAAYoD,kBAAkB,kBAJhB,OAK9B,OADN6jC,EAJoC,iBAKxBA,EAAOC,WAAW,GAAI,IALE,QAM7B,OADPC,EALoC,iBAMvBA,EAAIC,aANmB,QAMI,OANJ,sBAMH,IANG,UAMUD,EAAIE,aANd,QAMqC,OANrC,qCAM8B,IAN9B,UAM2CF,EAAIG,aAN/C,QAQzB,OARyB,aAMpCC,EANoC,aAO/Bj6B,EAAOk6B,cAAgB,0IAA8BD,GAPtB,UAQnBN,EAAOQ,QAAQ,IARI,QAQpCC,EARoC,OASxCp6B,EAAOq6B,YAAa,EACpBr6B,EAAOs6B,cAAgB,gJACvBt6B,EAAOu6B,WAAa,+FAAsBH,EAXF,kDAaxCp6B,EAAOs6B,cAAgB,+JAAoC,KAAIl5B,QAbvB,iCAenCpB,GAfmC,yDAgBzCA,GAlBL,oFAPK,uBAOUu5B,EAPV,4CACDv5B,EAAS,CACX05B,eAAe,EACfc,iBAAkB,qGAClBH,YAAY,EACZC,cAAe,8JALZ,SA2BQ7nC,OAAOC,YAAY6C,YAAnB,UAA+B,sFAC3B,OAD2B,SACrB9C,OAAOC,YAAYoD,kBAAkB,kBADhB,YACpC6jC,EADoC,yBAIX,OAD7B35B,EAAOw6B,iBAAmB,wFAHc,SAILb,EAAOc,cAJF,OAK/B,OADHC,EAJkC,iBAKzBnB,EAAWmB,GALc,QAKxC16B,EALwC,wCAOnCA,GAPmC,2CAQzCA,GAnCE,oF,sBA1DPs5B,GAAoB94B,UAAUm6B,YAAc,SAAUh5B,GAGpD,IAFA,IAAI3B,EAAS,EACX46B,EAAI,EACEA,EAAIj5B,EAAIuC,OAAQ02B,IAAoB,MAAXj5B,EAAIi5B,IAAY56B,IACjD,QAASA,EAAS,IAGpBs5B,GAAoB94B,UAAUq6B,QAAU,SAAUC,EAAMC,GACtD,IAAIC,EAAW,GAEXC,EAAQH,EAAK73B,QAAQ83B,GAEzB,GAAIE,GAAS,EAAG,CAEd,IADA,IAAIC,EAAMJ,EAAK73B,QAAQ,KAAMg4B,GACtBC,EAAM,IACPhiB,KAAKyhB,YAAYG,EAAKK,OAAOF,EAAOC,EAAMD,KAC9CC,EAAMJ,EAAK73B,QAAQ,KAAMi4B,EAAM,GAEjCF,EAAWE,EAAM,EAAIJ,EAAKK,OAAOF,GAASH,EAAKK,OAAOF,EAAOC,EAAMD,GAGrE,OAAOD,GAGT1B,GAAoB94B,UAAU46B,YAAc,SAAUC,GACpD,OAAOA,EAAQ,GAAK,IAAMA,EAAQA,GAGpC/B,GAAoB94B,UAAU86B,YAAc,SAAUC,GACpD,IAAIC,EAAW,IAAI/qB,KAAK8qB,GACxB,OACEriB,KAAKkiB,YAAYI,EAASC,cAC1B,IACAviB,KAAKkiB,YAAYI,EAASE,cAAgB,GAC1C,IACAF,EAAShN,cACT,IACAtV,KAAKkiB,YAAYI,EAASG,eAC1B,IACAziB,KAAKkiB,YAAYI,EAASI,iBAC1B,IACA1iB,KAAKkiB,YAAYI,EAASK,kBAI9BvC,GAAoB94B,UAAUs7B,YAAc,SAAUC,GACpD,OAAO7iB,KAAK2hB,QAAQkB,EAAiB,QAGvCzC,GAAoB94B,UAAUw7B,UAAY,SAAUC,GAClD,OAAO/iB,KAAK2hB,QAAQoB,EAAgB,QAGtC3C,GAAoB94B,UAAU07B,kBAAoB,SAAUH,EAAiBI,GAC3E,OAAOjjB,KAAK2hB,QAAQkB,EAAiB,OAAS,qCAAc7iB,KAAKoiB,YAAYa,IAiD/E,IAAMC,GAAkB,SAACC,GAAD,OAAcA,EAAU,SAAW,U,SAG5CC,G,iFAAf,WAA6BlwB,GAA7B,SAAAjB,EAAA,sEACe1Y,OAAOC,YAAY6C,YAAnB,UAA+B,kGAGX,OAF3BgnC,EAAO,GACLC,EAAM/rB,KAAKgsB,MAFyB,KAGhBhsB,KAHgB,SAGLrE,EAAKswB,cAHA,OAIb,OAJa,YAGpCA,EAHoC,oBAIlBjsB,KAJkB,UAIPrE,EAAKuwB,YAJE,QAKpB,OALoB,YAIpCA,EAJoC,yBAKdvwB,EAAKwwB,gBALS,QAQtB,OAHdC,EALoC,OAMtCC,GAAU,EAN4B,oBAQhB1wB,EAAK0wB,UARW,QAS9B,OADJC,EARkC,iBASxBA,EAAUC,OATc,QASxCF,EATwC,0DAWxC7nC,MAAM,uLAAwCxC,OAAOC,YAAYiD,aAAnB,OAXN,QA2BwB,OAd9D6mC,EAAME,EAAcO,UACtBV,EAAKlxB,OAAS,0IACLmxB,EAAMG,EAAYM,UAC3BV,EAAKlxB,OAAS,2GAOdkxB,EAAKlxB,OANKwxB,EAEAC,EAIIzD,GAFZ,moBAHY,mKAlB0B,UA0BlC6D,EAAQd,GAAgBU,IAAYzD,IA1BF,KA2B5B6D,EA3B4B,KA2BpB,IAAI5D,GA3BgB,UA2B8BltB,EAAK+wB,YA3BnC,QA4BpB,OA5BoB,iBA2BgDT,EA3BhD,UA2BMR,kBA3BN,qBA2BxCK,EAAKa,KA3BmC,oBA4BdhxB,EAAKixB,aA5BS,QA4BxCd,EAAKe,aA5BmC,2DA8BxCroC,MAAM,uLAAwCxC,OAAOC,YAAYiD,aAAnB,QA9BN,iCAgCnC4mC,GAhCmC,mEAD9C,oF,oEAoCO,sBAAApxB,EAAA,sEACQ1Y,OAAOC,YAAY6C,YAAnB,UAA+B,4GAG3B,OAFXgoC,GAAgB,EADsB,kBAGrB9qC,OAAOC,YAAYoD,kBAAkB,kBAHhB,UAGpC0nC,EAHoC,8BAKtCvoC,MAAM,6OALgC,mBAM/B,GAN+B,OAQxC,OARwC,UAQlCuoC,EAAOC,OAR2B,0DAUxCxoC,MAAM,4OACNsoC,GAAgB,EAXwB,WAatCv9B,EAAS,CACX09B,UAAW,GACXC,SAAU,IAERC,OAAQz0B,EACR00B,EAAU,GACVN,EAnBsC,iBAqB9B,OArB8B,oBAqBxBC,EAAOM,aArBiB,QAsB5B,OADVF,EArBsC,iBAsBtBA,EAAMG,MAtBgB,QAsBtCF,EAtBsC,0DAwBtC79B,EAAOE,IAAM,mTAAgEzN,OAAOC,YAAYiD,aAAnB,MAxBvC,QA0B/BilC,EAAI,EA1B2B,aA0BxBA,GAAKiD,GA1BmB,iBA4BvB,OA5BuB,oBA4BjBD,EAAMI,KAAKpD,GA5BM,QA4B9BxuB,EA5B8B,OA6BpCpM,EAAO09B,UAAUt1B,KAAKgE,GA7Bc,mDA+BpCpM,EAAOE,IAAM,wRAAyDzN,OAAOC,YAAYiD,aAAnB,MA/BlC,QA0BVilC,IA1BU,wBAkCxC,OAlCwC,UAkClC4C,EAAOS,QAlC2B,QAwCxC,OAxCwC,oBAwClCT,EAAOC,KAAKhrC,OAAOC,YAAY8F,0BAxCG,QAyCvB,OAzCuB,UAyCjBglC,EAAOM,aAzCU,QAyClCI,EAzCkC,OA0C/BC,EAAI,EA1C2B,aA0CxBA,EAAID,EAASh6B,QA1CW,iBA2CzB,OA3CyB,UA2CnBg6B,EAASF,KAAKG,GA3CK,QA2ChC/xB,EA3CgC,OA6ClCgyB,GAAQ,EACHC,EAAI,EA9CyB,aA8CtBA,EAAIT,EAAM15B,QA9CY,iBA+C/B,OA/C+B,UA+CzB05B,EAAMS,GAAGhB,aA/CgB,QA+CG,OA/CH,sBA+CSjxB,EAAKixB,aA/Cd,2DAgDlCe,GAAQ,EAhD0B,6BA8CJC,IA9CI,4BAoDlCD,EApDkC,wDAqDtCp+B,EAAO09B,UAAUt1B,KAAKgE,GArDgB,QA0CH+xB,IA1CG,wBAuDnCvD,EAAI,EAvD+B,aAuD5BA,EAAI56B,EAAO09B,UAAUx5B,QAvDO,iBA0DhB,OA1DgB,oBA0DVo4B,GAAct8B,EAAO09B,UAAU9C,IA1DrB,SA0D9B0D,EA1D8B,SA2DnBt+B,EAAO29B,SAASv1B,KAAhB,eAA0Bk2B,IA3DP,mDA6DpCt+B,EAAOE,IAAM,kOAAgDzN,OAAOC,YAAYiD,aAAnB,MA7DzB,QAuDCilC,IAvDD,wBAgExC,OAhEwC,UAgElC4C,EAAOS,QAhE2B,iCAiEjCj+B,GAjEiC,qCAmExC/K,MAAM,uRAnEkC,4FADvC,oF,oCCMQgX,gBA9GO,WACpB,MAAsCrE,mBAAS,GAA/C,mBAAO22B,EAAP,KAAoBC,EAApB,KACA,EAA0C52B,qBAA1C,mBAAO62B,EAAP,KAAsBC,EAAtB,KACA,EAA0C92B,mBAAwB,MAAlE,mBAAO+2B,EAAP,KAAsBC,EAAtB,KACA,EAA0Bh3B,mBAA6B,MAAvD,mBAAOi3B,EAAP,KAAcC,EAAd,KACA,EAA0Cl3B,qBAA1C,mBAAOm3B,EAAP,KAAsBC,EAAtB,KACA,EAA4Dt3B,qBAAWC,IAA/DuE,EAAR,EAAQA,iBAAkBuP,EAA1B,EAA0BA,iBAAkBlO,EAA5C,EAA4CA,YACtCmO,EAAcxP,EAAiBE,KACrC4D,qBAAU,WACa,OAAhB2uB,GAEH3F,GAAmBiG,OAAOvjB,EAAY1Z,IACrC3B,MAAK,SAAAyC,GACJ87B,EAAiB97B,EAAKA,MACtB07B,EAAe,MAGhBnuB,OAAM,SAAAsQ,GACLie,EAAiB,UAAD,OAAWje,EAAOvf,QAAlB,kBAIpB,CAACsa,EAAY1Z,GAAI28B,EAAepxB,IAClC2xB,mBAAQ,WACN1sC,iBACA,IACFwd,qBAAW,YACJyuB,GAAiBE,GDPnB,WAAP,gCCQMQ,GACC9+B,MAAK,SAAC++B,GACFA,GAAUV,EAAiB,eAAIU,SAGtC,CAACT,EAAeF,EAAhB,OAA+BA,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAe/E,gBAChD1pB,qBAAU,WACI,OAAR6uB,GAAgBJ,GDqEjB,WAAP,gCCpEMY,GAAgBh/B,MAAK,SAAAL,GAEP8+B,EAAR9+B,GACU,YAIpBgQ,qBAAU,WACJyuB,GAAiBA,EAAc/E,gBACnCje,EAAiB8F,Y9D8QS,I8D9QmBphB,MAAO,GAChDs+B,GAAiBA,EAAcpE,aACnC5e,EAAiB8F,Y9D6Qa,I8D7QmBphB,MAAO,KACxD,CAACsb,EAAiB8F,YAAakd,IAEjC,IAcM3d,EAAS,iCACb,cAAC,KAAD,CAAQpY,MAAM,yDAAYO,KAAK,cAAchH,MAAO,CAACuqB,YAAa,SAAUvkB,UAAW82B,IACvF,cAAC,KAAD,CAAQr2B,MAAM,mDAAWO,KAAK,cAAc1E,UAAU,0BAUxD,OACE,cAAC,IAAD,CAAMA,UAAU,0BAA0BiP,OA3B7B,WACX,OAAO,2HA2BPsN,OAAQA,EAAQ7e,MAAO,CAACkc,YAAY,QADtC,SAEE,sBAAK5Z,UAAU,4BAAf,UACE,cAAC,KAAD,CAAOwF,MA3BC,CACZ,CACErB,MAAO,yHAET,CACEA,MAAO,6EAET,CACEA,MAAO,0HAmBgB61B,YAAaA,EAAah6B,UAAU,qBACzD,sBAAKA,UAAU,mBAAf,UACE,uBAAOkP,QAAQ,YAAf,2EACA,qBAAKzR,GAAG,YAAYC,MAAO,CAACq9B,SAAU,OACpC/N,OAAQ,QACRrZ,MAAO,OACPqnB,OAAQ,OACRC,OAAQ,oBACRC,aAAc,MACdnrB,QAAS,UANX,SAQE,cAAC,KAAD,CAAWorB,IAAKf,GAAiB,+IACjCgB,aAAa,SAGjB,qBAAKp7B,UAAU,mBAAf,SACE,cAAC,KAAD,CAAenE,MAAQq+B,GAAa,iBAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAejE,iBAAtB,cAAwD,OAAbiE,QAAa,IAAbA,OAAA,EAAAA,EAAehF,mBAAoB,qGAA9E,oBAAuGgF,QAAvG,IAAuGA,OAAvG,EAAuGA,EAAenE,cAAtH,cAAqJ,OAAbmE,QAAa,IAAbA,OAAA,EAAAA,EAAevE,gBAAiB,KAAS,GAAIhc,KAAM,EAAGD,KAAM,GAAIhW,UAAQ,MAEtP,sBAAK1D,UAAU,mBAAf,UACI,uBAAOkP,QAAQ,cAAf,+IACA,eAAC,IAAD,CAAWzR,GAAG,cAAc5B,OAAY,OAALy+B,QAAK,IAALA,OAAA,EAAAA,EAAOlB,WAAY,GAAInJ,aAAa,kMAAuCF,iBAAiB,SAASG,kBAAmB,SAAAz/B,GAAC,OAAIgqC,EAAiBhqC,EAAEoL,QAAQm0B,QAAQ,eAAeqL,aA3BvM,SAAC98B,GAChB,OAAOA,EAAKuI,SAASguB,GAAY,GAAK,cA2BlCwG,iBAhCc,SAACh9B,GAEnB,OADaA,EAAMC,KACPuI,SAASguB,IA8BkBhF,UAAW0K,EAD9C,UAEE,cAAC,IAAD,CAAQ9mB,MAAM,OAAOzE,OAAO,qDAC5B,cAAC,IAAD,CAAQyE,MAAM,SAASzE,OAAO,uDC+F7BvH,gBApMmC,SAAChF,GACjD,MAAuES,qBAAWC,IAA1EuE,EAAR,EAAQA,iBAAkBzE,EAA1B,EAA0BA,UAAW8F,EAArC,EAAqCA,YAAakO,EAAlD,EAAkDA,iBAClD,EAA4B7T,mBAASkjB,OAAOC,SAAS9jB,EAAMpQ,MAAMipC,OAAO99B,KAAxE,mBAAO+9B,EAAP,KAAeC,EAAf,KACA,EAA8Bp4B,mBAAkC,MAAhE,mBAAOxG,EAAP,KAAgB6+B,EAAhB,KACAjwB,qBAAU,WACF5O,IACJmM,EAAYnM,QAAUA,EACtB6+B,EAAW,SAEb,CAAC1yB,EAAanM,IAChB4O,qBAAU,WAER,GAAI+vB,IAAW7zB,EAAiBE,KAAKpK,KAAgB,IAAV+9B,EAA3C,CAIA,IAAIG,GAAQ,EACNC,EAASj0B,EAAiB0xB,MAC5BuC,EAAOj8B,OAAO,IAChBg8B,EAAOC,EAAOroB,WAAU,SAAA1D,GAAE,OAAEA,EAAGpS,KAAO+9B,MAEpCG,GAAM,GACRh0B,EAAiBk0B,OAAOF,GACxB3yB,EAAY+D,WAAY,GAExBpF,EAAiBm0B,SAASN,GAAQ,WAAKxyB,EAAY+D,WAAY,UAZ/D/D,EAAY+D,WAAY,IAc1B,CAACyuB,EAAQ7zB,EAAkBqB,EAAarB,EAAiBE,KAAKpK,KAChEgO,qBAAU,YACHzC,EAAY+D,WAAe/D,EAAYnM,SAAaqe,EAAMmB,UAC7DnB,EAAMmB,QAAQC,KAAKtT,EAAYnM,SAC/BmM,EAAYnM,QAAU,QAExB,CAACmM,EAAaA,EAAY+D,UAAW/D,EAAYnM,UACnD,IAAMqe,EAAQC,iBAAc,MAiBtBjX,EAAQ,CACR,CACIC,MAAO,iCACPO,KAAM,qBACNZ,QAAS,WACP,IAAI4M,EAAU6V,OAAOC,SAAS9jB,EAAMq5B,SAASC,OAAOt5B,EAAMq5B,SAASC,OAAOr8B,OAAO,IAAI,EACvE,IAAV+Q,GAAaA,IACXA,GAAW,GACfxN,EAAUU,UAAUC,KAApB,UAA4BxD,EAA5B,YAAiDsH,EAAiBE,KAAKpK,GAAvE,cAA+EiT,MAIvF,CACIvM,MAAO,6CACPO,KAAM,uBACNZ,QAAS,WACPkF,EAAY+D,WAAY,EACxB,IAAMtR,EAASkM,EAAiB4pB,SAC3B91B,EAGHA,EAAOK,MAAK,SAAAqB,GACV6L,EAAY+D,WAAY,EACxBpF,EAAiBs0B,QACjBR,EAAU9zB,EAAiBE,KAAKpK,IAChCi+B,EAAW,CAAExpB,SAAU,UAAWtJ,QAAS,6CAAWC,OAAQ,kFAAkBsJ,KAAM,SAEvFrG,OAAM,SAAAsQ,GACLpT,EAAY+D,WAAY,EACxB7Z,QAAQE,IAAIgpB,GACZsf,EAAYzpB,OAXdjJ,EAAY+D,WAAY,IAgBhC,CACI5I,MAAO,yDACPO,KAAM,uBACNZ,QAAS,WAAO,IAAD,EACb,GAAKoT,EAAiB8F,Y/D+KP,G+D/KkCphB,MAASsb,EAAiB8F,Y/DgL1D,G+DhLuFphB,KAAxG,CAIAoN,EAAY+D,WAAY,EACxB,IAAMtR,EAASkM,EAAiBu0B,MAAK,SAAC39B,GAClCm9B,EAAW,CAAExpB,SAAU,UAAWtJ,QAAS,6CAAWC,OAAQ,gHAAuBsJ,KAAM,MAC3FspB,EAAUl9B,EAAKd,OAChB,SAACZ,GACF6+B,EAAWzpB,IACX/e,QAAQE,IAAIyJ,KALC,UAMZqG,EAAUN,gBANE,aAMZ,EAAoBC,aAAas5B,SAC/B1gC,EAGEA,EAAO2gC,SAAQ,WAAKpzB,EAAY+D,WAAY,MAFjD7Z,QAAQE,IAAI,qDACZ4V,EAAY+D,WAAY,QAbvB2uB,EAAW,CAACxpB,SAAS,OAAQtJ,QAAQ,yDAAaC,OAAO,udAA4FsJ,KAAM,QAiBpK,CACIhO,MAAO,6CACPO,KAAM,aACNZ,QAAS,WACP,IACE6D,EAAiB00B,YACjBZ,GAAW,GACXC,EAAW,CAAExpB,SAAU,UAAWtJ,QAAS,mKAAkCC,OAAQ,+UAAkEsJ,KAAM,MAC7J,SACAupB,EAAWzpB,OAInB,CACI9N,MAAO,mDACPO,KAAM,aACNZ,QAAS,WACP,GAAI6D,EAAiBE,KAAKpK,GAAK,IAAMkK,EAAiBE,KAAKE,UACzD2zB,EAAW,CAACxpB,SAAS,OAAQtJ,QAAQ,yDAAaC,OAAO,iRAG3D,IACElB,EAAiBhV,UACjB8oC,GAAW,GACXC,EAAW,CAAExpB,SAAU,UAAWtJ,QAAS,8HAA2BC,OAAQ,oPAAkDsJ,KAAM,MACtI,SACAupB,EAAWzpB,OAInB,CACI9N,MAAO,iCACPO,KAAM,sBACNZ,QAAS,WACP,IAAI4M,EAAU6V,OAAOC,SAAS9jB,EAAMq5B,SAASC,OAAOt5B,EAAMq5B,SAASC,OAAOr8B,OAAO,IAAI,EACvE,IAAV+Q,GAAaA,IACbA,GAAW,GACbxN,EAAUU,UAAUC,KAApB,UAA4BxD,EAA5B,YAAiDsH,EAAiBE,KAAKpK,GAAvE,cAA+EiT,OAgBvF4rB,EAAWplB,EAAiBqlB,sBAK5Bvf,EAAc9F,EAAiB8F,YAClCtN,QAAO,SAACjM,GAAD,OACRA,EAAKiN,UAAYhO,EAAMq5B,SAASC,OAAO9/B,MAAM,MAEzCsgC,EAAe,CACnBnyB,MAAO,gMACP7L,IAAI,GAAD,OAAK6B,EAAL,YAA0Bm7B,GAA1B,OAAmC94B,EAAMq5B,SAASC,QACrDl3B,QAAS,qCACP,sBAAK9E,UAAU,uBAAf,UA3IkB,WACpB,OAAQ0C,EAAMq5B,SAASC,QACrB,IAAK,OAAQ,OAAO,cAAC,GAAD,IACpB,IAAK,OAAQ,OAAO,cAAC,GAAD,IACpB,IAAK,OAAQ,OAAO,cAAC,GAAD,IACpB,IAAK,OAAQ,OAAO,cAAC,GAAD,IACpB,IAAK,OAAQ,OAAO,cAAC,GAAD,IACpB,IAAK,OAAQ,OAAO,cAAC,GAAD,IACpB,IAAK,OAAQ,OAAO,cAAC,GAAD,IACpB,IAAK,OAAQ,OAAO,cAAC,GAAD,IACpB,IAAK,OAAQ,OAAO,cAAC,GAAD,IACpB,IAAK,QAAS,OAAO,cAAC,GAAD,IACrB,IAAK,QAAS,OAAO,cAAC,GAAD,IACrB,QAAS,OAAO,cAAC,GAAD,KA+HbS,GACD,cAAC,IAAD,CAAMz8B,UAAU,6BACWiP,OAfR,WACvB,IAAM1G,EAAsB,IAAb+zB,EAAiB,cAAC,KAAD,CAAQ53B,KAAK,cAAcg4B,MAAM,SAASh/B,MAAO,CAAEsvB,OAAO,SAAUrZ,MAAO,SAAStH,gBAAiB,kBAAmBzB,MAAO,WAAc,cAAC,KAAD,CAAO/O,MAAOygC,EAAW5+B,MAAO,CAAE2O,gBAAiB,iBAAkBzB,MAAO,QAAS+H,WAAY,SAC9Q,OAAO,qCAAE,iJAAiCpK,MAYtC,SAEI,eAAC,IAAD,CAAWvI,UAAU,iBAAiBq7B,aAtB/B,SAAC98B,GAChB,MAAO,CACL,uBAAwBA,EAAK3C,OAqBvBC,MAAOmhB,EAAa+S,iBAAiB,SADrC,UAEE,cAAC,IAAD,CAAQrc,MAAM,OAAOzE,OAAO,uBAC5B,cAAC,IAAD,CAAQyE,MAAM,aAAazE,OAAO,qDAClC,cAAC,IAAD,CAAQohB,KA9BK,SAACC,GACpB,OAAOA,EAAQ10B,KAAO,cAAC,KAAD,CAAQ8I,KAAK,cAAcg4B,MAAM,SAASh/B,MAAO,CAAEkN,MAAO,qBAC9E,UAsBF,gBACe0xB,OASjB,cAAC,KAAD,CAAO/e,IAAKrC,OAEdrM,YAAa3K,GAEf,OACE,mCACE,cAAC,GAAD,eAAgBs4B,S,UClODpL,I,sCAMnB,aAAoC,IAAxB1uB,EAAuB,uDAAf,GAAe,0BAL3ByR,SAK2B,OAJ3B8B,aAI2B,OAH3B0mB,eAG2B,OAF3BC,mBAE2B,OAD3Blc,WAC2B,EACjC/L,KAAKR,IAAMzR,EAAMjF,GACjBkX,KAAK+L,MAAQhe,EAAMoe,MAAQC,eAC3BpM,KAAKsB,QAAUvT,EAAM2U,OAAS,IAAI7B,GAAO9S,EAAM2U,QAAU,IAAI7B,GAC7Db,KAAKioB,cAAgBl6B,EAAMG,mBAAgB+B,EAC3C+P,KAAKgoB,UAAYj6B,EAAM8J,eAAY5H,EACnCqQ,aAAmBN,UAAM/P,EAAW,CAAEsQ,MAAM,I,kDAE9C,WACE,IAAI2nB,EAAU,CAAE/b,KAAMnM,KAAK+L,OAK3B,OAJI/L,KAAKR,MAAK0oB,EAAQp/B,GAAKkX,KAAKR,KAC5BQ,KAAKsB,UAAS4mB,EAAQzJ,kBAAoBze,KAAKsB,QAAQgM,iBACvDtN,KAAKioB,gBAAeC,EAAQC,gBAAkBnoB,KAAKioB,cAAcn/B,IACjEkX,KAAKgoB,YAAWE,EAAQE,YAAcpoB,KAAKgoB,UAAUl/B,IAClDo/B,I,cAET,WACE,OAAOloB,KAAKR,K,IAEd,SAAO1W,GACLkX,KAAKR,IAAM1W,I,kBAEb,WACE,OAAOkX,KAAKsB,U,gBAGd,WACE,OAAOtB,KAAK+L,Q,oBAEd,WACE,OAAO/L,KAAKgoB,W,IAEd,SAAa9gC,GACX8Y,KAAKgoB,UAAY9gC,I,wBAEnB,WACE,OAAO8Y,KAAKioB,e,IAEd,SAAiB/gC,GACf8Y,KAAKioB,cAAgB/gC,M,MCnDZmhC,GAAqB,CAChC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACnH,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAChH,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAChH,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjH,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KCgW5Ft1B,gBAlUS,WAAO,IAAD,QAC1B,EAAkCvE,qBAAWC,IAAtCyW,EAAP,EAAOA,aAAc3W,EAArB,EAAqBA,UACjB+5B,EAAc,CACdp6B,aAAY,UAAEK,EAAUN,gBAAZ,aAAE,EAAoBC,aAClCie,KAAMC,eACN1J,OAAQ,CAAExN,YAAa,CAACC,OAAO,uCAAUC,QAAQ,4BAC/CiM,SAAS,GACTF,MAAO,mBAGb,EAA4BzS,mBAAS,IAAI+tB,GAAO6L,IAAhD,mBAAO9L,EAAP,KAAe+L,EAAf,KACA,EAA8B75B,mBAAoB,IAAlD,mBAAOwuB,EAAP,KAAgBC,EAAhB,KACA,EAAwCzuB,oBAAS,GAAjD,mBAAO85B,EAAP,KAAqBC,EAArB,KACA,EAAoD/5B,oBAAS,GAA7D,mBAAOg6B,EAAP,KAA2BC,EAA3B,KACA,EAAsDj6B,oBAAS,GAA/D,mBAAOk6B,EAAP,KAA4BC,EAA5B,KACA,EAA8Cn6B,mBAAoB,IAAlE,mBAAOo6B,EAAP,KAAwBC,EAAxB,KACA,EAAkCr6B,oBAAS,GAA3C,mBAAO0T,EAAP,KAAkB4mB,EAAlB,KACA,EAA0Bt6B,mBAAmB,CAACu6B,aAAa,GAAIC,MAAK,IAApE,mBAAOvxB,EAAP,KAAcwxB,EAAd,KACA,EAA0Bz6B,mBAAmB,CAACu6B,aAAa,GAAIC,MAAK,IAApE,mBAAOE,EAAP,KAAcC,EAAd,KACA,GAAgC36B,mBAAS,IAAzC,qBAAOmJ,GAAP,MAAiByxB,GAAjB,MACA,GAAkC56B,mBAAyB,IAA3D,qBAAO66B,GAAP,MAAkBC,GAAlB,MACMjjB,GAAQC,iBAAc,MACtBijB,GAAKjjB,iBAAO,MAGlB1P,qBAAU,WACJvI,GAAaA,EAAUN,UAC3BsuB,GAAca,WAAW,CACvBxmB,EAAE,CAACymB,mBAAoB9uB,EAAUN,SAASC,aAAapF,MAExD3B,MAAK,SAAAyC,GACJuzB,EAAWvzB,EAAKA,KAAKmR,QAAO,SAAAyhB,GAAM,OAAEA,EAAO3kB,UAAY2kB,EAAO3kB,SAAS/O,MAAMu/B,UAE9ElxB,OAAM,kBAAIgmB,EAAW,SACrB,CAAC5uB,EAAUN,WAEd,IASMy7B,GAAU,WACRlN,EAAO1zB,IAAIy/B,EAAU,IAAI9L,GAAO6L,IACpCpjB,EAAa9D,QAAU,IAAI4H,GAAQuB,IACnCye,GAAa,GACbP,GAAgB,GAChBU,EAAS,CAACF,aAAa,GAAIC,MAAK,IAChCG,EAAS,CAACJ,aAAa,GAAIC,MAAK,IAChCI,GAAY,KAGVK,GAAa,WACfX,GAAa,GACbP,GAAgB,IAGdmB,GAAyB,WAC3BjB,GAAsB,IAGpBkB,GAA0B,WAC5BhB,GAAuB,IA+ErBiB,GAAgB,SAAChhC,GACnB,OAAOo0B,EAAQte,WAAU,SAAChM,GAAD,OAAWA,EAAQ9J,KAAOA,MAGjDihC,GAAwB,WAC1BlB,GAAuB,IAYrBmB,GAAkB,SAACC,GACvB,IAAIC,EAAkC,KAAvBD,EAAQhB,aACtBgB,EAAQnhC,GAAR,2BAAiBmhC,GAAW58B,GAA5B,eAAkD48B,GAClDA,EAAQnhC,GAAK,CAACA,GAAGmhC,EAAQnhC,GAAIsW,YAAa6qB,EAAQ7qB,YAAa+qB,WAAYF,EAAQE,WAAYlB,aAAcgB,EAAQhB,aAAcC,KAAMe,EAAQf,MAAjJ,eAA6Je,GAE9J,QAD+Bh6B,IAA3BusB,EAAO9Z,OAAOrB,WAAwBmb,EAAO9Z,OAAOrB,SAAW,IAC/D6oB,EAASphC,GAAI,CACb,IAAM+V,EAAM2d,EAAO9Z,OAAOrB,SAASzC,WAAU,SAAA9P,GAAI,OAAEA,EAAKhG,KAAKohC,EAASphC,MAClE+V,GAAK,IAAG2d,EAAO9Z,OAAOrB,SAASxC,GAAOqrB,QACvC1N,EAAO9Z,OAAOrB,SAASnS,KAAKg7B,IAqB/BE,GACF,eAAC,IAAMC,SAAP,WACI,cAAC,KAAD,CAAQ76B,MAAM,uCAASO,KAAK,cAAc1E,UAAU,gBAAgBgF,QAASs5B,KAC7E,cAAC,KAAD,CAAQn6B,MAAM,uCAASO,KAAK,cAAc1E,UAAU,iCAAiCgF,QA7H1E,WAAO,IAAD,MAGrB,GAFA24B,GAAa,IAET,UAAAxM,EAAO9Z,cAAP,mBAAed,WAAf,eAAoBzM,OAAO4M,UAA3B,UAAqCya,EAAO9Z,cAA5C,aAAqC,EAAevB,QAASqb,EAAO3kB,SAAU,CAC9E,IAAIyyB,EAAQ,aAAOpN,GAGnB,GAFA8M,GAAgBZ,GAChBY,GAAgBryB,GACZ6kB,EAAO1zB,GAAI,CACb,IAAM6G,EAAQm6B,GAActN,EAAO1zB,IAC7B6I,EzB3EkB,SAAC44B,EAAmBC,GAAsB,IAAD,kBAC7E,GAAID,EAASzhC,KAAO0hC,EAAS1hC,GAAI,OAAO,EACxC,IAQqD,UARjD2hC,EAAW,CAAEhO,OAAQ,GAAIiO,OAAQ,IAC/BC,EAAc,SAACC,GACnB,IAAIC,EAAUJ,EAASC,OAAO3vB,QAAO,SAACjM,GAAD,OAAkBA,EAAKiQ,QAAU6rB,EAAM7rB,SACxE8rB,GACFA,EAAQ37B,KAAK07B,GACbH,EAASC,OAASG,GACbJ,EAASC,OAAOx7B,KAAK07B,KAE1B,UAAAL,EAAS1yB,gBAAT,eAAmB/O,OAAnB,UAA0B0hC,EAAS3yB,gBAAnC,aAA0B,EAAmB/O,MAC/C2hC,EAAShO,OAAO2L,YAAhB,UAA8BoC,EAAS3yB,gBAAvC,aAA8B,EAAmB/O,GACjD6hC,EAAY,CACV5rB,MAAO,WACP+rB,QAAQ,UAAAP,EAAS1yB,gBAAT,eAAmB/O,IAAK,GAChCiiC,OAAO,UAAAP,EAAS3yB,gBAAT,eAAmB/O,IAAK,GAC/BoL,OAAO,2DAAD,iBAAgBq2B,EAAS1yB,gBAAzB,aAAgB,EAAmBha,KAAnC,yBAA8C2sC,EAAS3yB,gBAAvD,aAA8C,EAAmBha,SAG3E,IAAImtC,EAAqB,GACnBC,EAAYV,EAAS7nB,OACrBwoB,EAAYV,EAAS9nB,QACd,OAATuoB,QAAS,IAATA,OAAA,EAAAA,EAAW9pB,UAAX,OAAqB+pB,QAArB,IAAqBA,OAArB,EAAqBA,EAAW/pB,SAClC6pB,EAAmB7pB,MAAnB,OAA2B+pB,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAW/pB,MACtCwpB,EAAY,CACV5rB,MAAO,eACP+rB,OAAM,OAAEG,QAAF,IAAEA,OAAF,EAAEA,EAAW9pB,MACnB4pB,MAAK,OAAEG,QAAF,IAAEA,OAAF,EAAEA,EAAW/pB,MAClBjN,OAAO,mCAAD,cAAY+2B,QAAZ,IAAYA,OAAZ,EAAYA,EAAW9pB,MAAvB,sBAAmC+pB,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAW/pB,UAGxD,IAAIgqB,EAA0B,GACxBC,EAAM,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAW/1B,YACpBm2B,EAAM,UAAGb,EAAS9nB,cAAZ,aAAG,EAAiBd,IAC1BwpB,GAAYC,IACZD,EAAOj2B,SAAWk2B,EAAOl2B,SAC3Bg2B,EAAwBh2B,OAASk2B,EAAOl2B,OACxCw1B,EAAY,CACV5rB,MAAO,4BACP+rB,OAAQM,EAAOj2B,OACf41B,MAAOM,EAAOl2B,OACdjB,OAAO,+CAAD,OAAck3B,EAAOj2B,OAArB,eAAkCk2B,EAAOl2B,WAG/Ci2B,EAAOh2B,UAAYi2B,EAAOj2B,UAC5B+1B,EAAwB/1B,QAAUi2B,EAAOj2B,QACzCu1B,EAAY,CACV5rB,MAAO,6BACP+rB,OAAQM,EAAOh2B,QACf21B,MAAOM,EAAOj2B,QACdlB,OAAO,uBAAD,OAAUk3B,EAAOh2B,QAAjB,eAA+Bi2B,EAAOj2B,YAG5Cg2B,EAAO/1B,UAAYg2B,EAAOh2B,UAC5B81B,EAAwB91B,QAAUg2B,EAAOh2B,QACzCs1B,EAAY,CACV5rB,MAAO,6BACP+rB,OAAQM,EAAO/1B,QACf01B,MAAOM,EAAOh2B,QACdnB,OAAO,qDAAD,OAAek3B,EAAO/1B,QAAtB,eAAoCg2B,EAAOh2B,aAInD+mB,OAAOC,KAAK8O,GAAyBngC,OAAS,GAC5Cw/B,EAAS9nB,OAAOd,MAClBopB,EAAmBrpB,uBAAnB,aAA8C7Y,GAAI0hC,EAAS9nB,OAAOd,IAAI9Y,IAAOqiC,IACjF,IAAMG,EAAU,UAAGL,EAAU7pB,eAAb,aAAG,EAAmBI,kBAChC+pB,EAAU,UAAGL,EAAU9pB,eAAb,aAAG,EAAmBI,kBAClC8pB,IAAeC,IACjBP,EAAmBvpB,mBAAqBypB,EAAU9pB,QAClDupB,EAAY,CACV5rB,MAAO,iBACP+rB,OAAQQ,EACRP,MAAOQ,EACPr3B,OAAO,mCAAD,OAAYo3B,EAAZ,eAA6BC,MAGvC,IAAMC,EAAW,UAAGP,EAAU5pB,gBAAb,aAAG,EAAoB1O,QAAe,SAAC84B,EAAG38B,GAAJ,gBAAgB28B,EAAhB,YAAqB38B,EAAKm6B,gBAAgB,IAAIlnB,OAC/F2pB,EAAW,UAAGR,EAAU7pB,gBAAb,aAAG,EAAoB1O,QAAe,SAAC84B,EAAG38B,GAAJ,gBAAgB28B,EAAhB,YAAqB38B,EAAKm6B,gBAAgB,IAAIlnB,OACjGypB,IAAgBE,IAClBV,EAAmBtpB,oBAAsBwpB,EAAU7pB,SACnDspB,EAAY,CACV5rB,MAAO,kBACP+rB,OAAQU,EACRT,MAAOW,EACPx3B,OAAO,qDAAD,OAAes3B,EAAf,eAAiCE,MAG3C,IAAMC,EAAc,UAAGV,EAAU5qB,oBAAb,aAAG,EACnB1N,QAAe,SAAC84B,EAAG38B,GAAJ,gBAAgB28B,EAAhB,YAAqB38B,EAAKqP,aAA1B,OAAwCrP,EAAKsL,QAAQ,IACrE2H,OACG6pB,EAAc,UAAGV,EAAUjtB,mBAAb,aAAG,EACnBtL,QAAe,SAAC84B,EAAG38B,GAAJ,gBAAgB28B,EAAhB,YAAqB38B,EAAKqP,aAA1B,OAAwCrP,EAAKsL,QAAQ,IACrE2H,OAaH,OAZI4pB,IAAmBC,IACrBZ,EAAmBa,uBAAyBX,EAAUxqB,0BACtDiqB,EAAY,CACV5rB,MAAO,qBACP+rB,OAAQa,EACRZ,MAAOa,EACP13B,OAAO,2NAIPkoB,OAAOC,KAAK2O,GAAoBhgC,OAAS,IAC3Cy/B,EAAShO,OAAOgC,kBAAhB,aAAsC31B,GAAImiC,EAAUniC,IAAOkiC,IACzD5O,OAAOC,KAAKoO,EAAShO,QAAQzxB,OAAS,IACxCy/B,EAAShO,OAAO3zB,GAAK0hC,EAAS1hC,GACvB2hC,GyBjCmBqB,CAAuBxB,EAAS36B,GAAQ6sB,GACpD7qB,EAAS4qB,GAAcwP,aAAap6B,GAASxK,MAAK,SAACqB,GACrD8hC,EAAS36B,GAASnH,EAASoB,KAC3B6+B,GAAgB,GAChBtL,EAAWmN,GACC,OAAR/jB,IAAgC,OAAhBA,GAAMmB,SAAgBnB,GAAMmB,QAAQC,KAAK,CAAEpK,SAAU,UAAWtJ,QAAS,6CAAWC,OAAQ,8FAAoBsJ,KAAM,SACzIrG,OAAM,SAACsQ,GACRlpB,QAAQE,IAAI,SAASgpB,GACrBghB,GAAgB,GACJ,OAARliB,IAAgC,OAAhBA,GAAMmB,SACxBnB,GAAMmB,QAAQC,KAAKrK,QAGT,OAARiJ,IAAgC,OAAhBA,GAAMmB,SAAgBnB,GAAMmB,QAAQC,KAAK,CAAEpK,SAAU,OAAQtJ,QAAS,yDAAaC,OAAQ,4HAAyBsJ,KAAM,MAC9IirB,GAAgB,SAGlBlM,GAAcyP,UAAUxP,EAAOlP,iBAAiBnmB,MAAK,SAACqB,GAChDA,EAASoB,OACX0gC,EAASp7B,KAAK1G,EAASoB,MACvBuzB,EAAWmN,GACX7B,GAAgB,GAChBU,EAAS,CAACF,aAAa,GAAIC,MAAK,IAChCG,EAAS,CAACJ,aAAa,GAAIC,MAAK,IAChCI,GAAY,IACA,OAAR/iB,IAAgC,OAAhBA,GAAMmB,SAAgBnB,GAAMmB,QAAQC,KAAK,CAAEpK,SAAU,UAAWtJ,QAAS,6CAAWC,OAAQ,8FAAoBsJ,KAAM,UAE3IrG,OAAM,SAACsQ,GACRlpB,QAAQE,IAAI,SAASgpB,GACrBghB,GAAgB,GACJ,OAARliB,IAAgC,OAAhBA,GAAMmB,SACxBnB,GAAMmB,QAAQC,KAAKrK,cAwF3B2uB,GACF,eAAC,IAAM5B,SAAP,WACI,cAAC,KAAD,CAAQ76B,MAAM,qBAAMO,KAAK,cAAc1E,UAAU,gBAAgBgF,QAASu5B,KAC1E,cAAC,KAAD,CAAQp6B,MAAM,eAAKO,KAAK,cAAc1E,UAAU,iCAAiCgF,QApEpE,WACbmsB,EAAO1zB,IAAIyzB,GAAc2P,aAAa1P,EAAO1zB,IAAI3B,MAAK,SAAAqB,GACxD,IAAI8hC,EAAWpN,EAAQniB,QAAO,SAAA6f,GAAG,OAAIA,EAAI9xB,KAAO0zB,EAAO1zB,MACvDq0B,EAAWmN,GACX3B,GAAsB,GACtBJ,EAAU,IAAI9L,GAAO6L,IACT,OAAR/hB,IAAgC,OAAhBA,GAAMmB,SAAgBnB,GAAMmB,QAAQC,KAAK,CAAEpK,SAAU,UAAWtJ,QAAS,6CAAWC,OAAQ,kFAAkBsJ,KAAM,SACvIrG,OAAM,SAAAsQ,GACPlpB,QAAQE,IAAI,SAASgpB,GACT,OAARlB,IAAgC,OAAhBA,GAAMmB,SAClBnB,GAAMmB,QAAQC,KAAKrK,aA6D3B6uB,GACF,eAAC,IAAM9B,SAAP,WACI,cAAC,KAAD,CAAQ76B,MAAM,qBAAMO,KAAK,cAAc1E,UAAU,gBAAgBgF,QAASw5B,KAC1E,cAAC,KAAD,CAAQr6B,MAAM,eAAKO,KAAK,cAAc1E,UAAU,iCAAiCgF,QArD3D,WAC1B,IAAIi6B,EAAWpN,EAAQniB,QAAO,SAAA6f,GAAG,OAAKkO,EAAgBv4B,SAASqqB,MAC/DuC,EAAWmN,GACXzB,GAAuB,GACvBE,EAAmB,IACP,OAARxiB,IAAgC,OAAhBA,GAAMmB,SAAgBnB,GAAMmB,QAAQC,KAAK,CAAEpK,SAAU,UAAWtJ,QAAS,uCAAUC,OAAQ,kFAAkBsJ,KAAM,YAmDrI4uB,GAAkB,SAACC,GAAgB,IAAD,EAChCzqB,EAAG,UAAGyqB,EAAI3pB,cAAP,aAAG,EAAYxN,YAClBpO,EAASgb,GAAqBF,GACpC,OAAO,mCAAG9a,KAEN+gC,GAAe,CACjBnyB,MAAO,iCACP7L,IAAK8B,EACLwE,QACA,gCACI,cAAC,KAAD,CAAOyY,IAAKrC,KACZ,sBAAKlb,UAAU,OAAf,UACI,cAAC,KAAD,CAASA,UAAU,SAASihC,MAhDX,WAC3B,OACE,eAAC,IAAMjC,SAAP,WACE,cAAC,KAAD,CAASt6B,KAAK,aAAaP,MAAM,mDAAWnE,UAAU,0BAA0BgF,QAASq5B,KACzF,cAAC,KAAD,CAAS35B,KAAK,cAAcP,MAAM,6CAAUnE,UAAU,kBAAkBgF,QAAS05B,GAAuBh7B,UAAW+5B,IAAoBA,EAAgB99B,eA6CjJ,eAAC,IAAD,CAAW4d,IAAK6gB,GAAIviC,MAAOg2B,EAAS/B,UAAW2N,EAAiBvN,kBAAmB,SAACz/B,GAAD,OAAOitC,EAAmBjtC,EAAEoL,QAAQk0B,iBAAiB,SACpIC,QAAQ,KADZ,UAEI,cAAC,IAAD,CAAQG,cAAc,WAAWC,YAAa,CAAEzc,MAAO,QAAUutB,YAAY,IAC7E,cAAC,IAAD,CAASjyB,OAAO,qBAAMohB,KAAM0Q,GAAkBrjC,MAAO,CAAEulB,SAAU,WACjE,cAAC,IAAD,CAAQvP,MAAM,gBAAgBzE,OAAO,2DACrC,cAAC,IAAD,CAAQyE,MAAM,eAAezE,OAAO,mCACpC,cAAC,IAAD,CAAQohB,KA9CG,SAACC,GACxB,OACI,eAAC,IAAM0O,SAAP,WACI,cAAC,KAAD,CAAQt6B,KAAK,eAAe1E,UAAU,2CAA2CgF,QAAS,kBArEnF,SAAC63B,GAAsB,IAAD,IACrCmB,EAAS,CAACJ,aAAa,GAAIC,MAAK,IAChCC,EAAS,CAACF,aAAa,GAAIC,MAAK,IAC5BhB,EAAQp/B,KAAO0zB,EAAO1zB,IAAIy/B,EAAU,IAAI9L,GAAOyL,IACnD,UAAA1L,EAAO9Z,OAAOrB,gBAAd,SAAwB5N,SAAQ,SAAC3E,GAAYA,EAAKo6B,KAAMG,EAAS,eAAIv6B,IAChEq6B,EAAS,2BAAIr6B,GAAL,IAAWm6B,aAAcn6B,EAAKm6B,aAAajrC,QAAQ,UAAU,UAE1EsrC,IAAY,UAAA9M,EAAO3kB,gBAAP,eAAiBha,OAAQ,IACrC4qC,GAAgB,GA6DwF+D,CAAW7Q,MAC3G,cAAC,KAAD,CAAQ5rB,KAAK,cAAc1E,UAAU,oCAAoCgF,QAAS,kBA3DjE63B,EA2D2FvM,GA1DxG7yB,KAAO0zB,EAAO1zB,IAAIy/B,EAAU,IAAI9L,GAAOyL,SACnDS,GAAsB,GAFE,IAACT,SAqGqBqE,YAAY,EAAOxjC,MAAO,CAAEulB,SAAU,gBAIhF,cAAC,KAAD,CAAQpG,QAASsgB,EAAcz/B,MAAO,CAAEiW,MAAO,SAAW1E,OAAO,sEAAe8N,OAAK,EACpFR,OAAQwiB,GAAoBjjB,OAAQwiB,GADrC,SAEG,sBAAKt+B,UAAU,4BAAf,UACC,sBAAKA,UAAU,0BAAf,UACI,uBAAOkP,QAAQ,MAAf,6LACA,cAAC,GAAD,CAAY0H,WAAU,UAAEua,EAAO9Z,cAAT,aAAE,EAAed,IAAKQ,UAAWA,EACrDjH,SAAU,SAACjU,GACLs1B,EAAO9Z,SAAQ8Z,EAAO9Z,OAAOd,IAAO1a,SAIhD,sBAAKmE,UAAU,2BAAf,UACI,uBAAOkP,QAAQ,QAAf,4CACA,cAAC,KAAD,CAAWzR,GAAG,QACZsH,KAAK,OAAOwT,KAAK,iBACjB1c,MAAOs1B,EAAO9Z,OAAOvB,MACrBhG,SAAU,SAACrf,GACT0gC,EAAO9Z,OAAOvB,MAAQrlB,EAAEwU,OAAOpJ,OAEjCulC,UAAQ,EAACphC,UAAWgE,YAAW,CAAE,YAAa+S,KAAa,UAACoa,EAAO9Z,cAAR,aAAC,EAAevB,WAE5EiB,KAAa,UAACoa,EAAO9Z,cAAR,aAAC,EAAevB,QAAS,uBAAO9V,UAAU,UAAjB,mHAE3C,sBAAKA,UAAU,2BAAf,UACI,uBAAOkP,QAAQ,WAAf,oEACA,cAAC,KAAD,CAAczR,GAAG,WAAWuf,YAAakhB,GAAWxqB,MAAM,OACxD7X,MAAOs1B,EAAO3kB,UAAYA,GAAWgc,MAAO,IAAMlV,UAAQ,EAC1D2J,eA9NI,SAAC3e,GACnB,IAAM0pB,EAAS,GACX1pB,EAAM6K,MAAMuN,OAAO/W,OAAO,IAAGqoB,EAAOwH,UAAYlxB,EAAM6K,MAAMuN,QAChEwa,GAAcmQ,aAAarZ,GAAQlsB,MAAK,SAAAqB,GAChCA,EAASoB,KAAKoB,OAAO,EAAGw+B,GAAahhC,EAASoB,MAC7C4/B,GAAa,OACnBryB,OAAM,SAACsQ,GAAD,OAAUlpB,QAAQE,IAAIgpB,OAyNjBtM,SAAU,SAACrf,GACTyC,QAAQE,IAAI,UAAU3C,EAAEoL,OACpBpL,EAAEoL,MAAMrJ,MACV2+B,EAAO3kB,SAAW/b,EAAEoL,MACpBoiC,GAAYxtC,EAAEoL,MAAMrJ,OACfyrC,GAAYxtC,EAAEoL,QAErBmE,UAAWgE,YAAW,CAAE,YAAa+S,IAAcoa,EAAO3kB,aAE7DuK,IAAcoa,EAAO3kB,UAAY,uBAAOxM,UAAU,UAAjB,iLAEtC,sBAAKA,UAAU,2BAAf,UACI,uBAAOkP,QAAQ,QAAf,wDACA,cAAC,KAAD,CAAWzR,GAAG,QACZsH,KAAK,OAAOwT,KAAK,mBACjB1c,MAAOkiC,EAAMH,aACb9tB,SAAU,SAACrf,GAAKutC,EAAS,2BAAID,GAAL,IAAYH,aAAcntC,EAAEwU,OAAOpJ,UACtDulC,UAAQ,EAACphC,UAAWgE,YAAW,CAAE,YAAa+S,IAAc,qBAAqBxkB,KAAKwrC,EAAMH,kBAElG7mB,IAAc,qBAAqBxkB,KAAKwrC,EAAMH,eAAiB,uBAAO59B,UAAU,UAAjB,sIAEpE,sBAAKA,UAAU,2BAAf,UACI,uBAAOkP,QAAQ,QAAf,mBACA,cAAC,KAAD,CAAWzR,GAAG,QAAQsH,KAAK,OACzBlJ,MAAOyQ,EAAMsxB,aACb9tB,SAAU,SAACrf,GACTqtC,EAAS,2BAAIxxB,GAAL,IAAYsxB,aAAantC,EAAEwU,OAAOpJ,UACvCmE,UAAWgE,YAAW,CAAE,YAAa+S,KAAe,4CAA4CxkB,KAAK+Z,EAAMsxB,eAAsC,KAArBtxB,EAAMsxB,kBAExI7mB,KAAe,4CAA4CxkB,KAAK+Z,EAAMsxB,eAAsC,KAArBtxB,EAAMsxB,eAAsB,uBAAO59B,UAAU,UAAjB,uEAExH,cAAC,GAAD,CAAcA,UAAU,WAAW+W,UAAWA,EAC5C5S,MAAM,8FACNtI,MAAOs1B,EAAO9Z,OAAOtB,SAAWmJ,GAAiBE,UAAQ,EACzDG,QAAS,SAAC1jB,GACRs1B,EAAO9Z,OAAOtB,QAAd,eAA4Bla,IAE9BiU,SAAU,kBAAIqhB,EAAO9Z,OAAOtB,QAAd,eAA4B8D,EAAasG,wBAI7D,cAAC,GAAD,IACA,cAAC,KAAD,CAAQtD,QAASwgB,EAAoB3/B,MAAO,CAAEiW,MAAO,SAAW1E,OAAO,qEAAc8N,OAAK,EAACR,OAAQqkB,GAA0B9kB,OAAQyiB,GAArI,SACI,sBAAKv+B,UAAU,uBAAf,UACI,mBAAGA,UAAU,oCAAoCtC,MAAO,CAAE60B,SAAU,UACnEpB,GAAU,gNAAsC,4BAAI4P,KAA1C,YAInB,cAAC,KAAD,CAAQlkB,QAAS0gB,EAAqB7/B,MAAO,CAAEiW,MAAO,SAAW1E,OAAO,qEAAc8N,OAAK,EAACR,OAAQukB,GAA2BhlB,OAAQ0iB,GAAvI,SACI,sBAAKx+B,UAAU,uBAAf,UACI,mBAAGA,UAAU,oCAAoCtC,MAAO,CAAE60B,SAAU,UACnEpB,GAAU,qTAK3B,OACA,mCACE,cAAC,GAAD,eAAgBqL,U,SCjWT8E,GAAU,CACrB,CAAEvyB,KAAM,EAAGvc,KAAM,8CACjB,CAAEuc,KAAM,EAAGvc,KAAM,+CCCb+uC,I,cAA8B,CAClCz2B,eAAgB,CAAE4oB,OAAQ,CAAC,aAAc,WAAY1oB,QAAS,CAAC,UAAW,aAC1E9F,SAAU,CAAC,UAAW,YACtB6Q,QAAS,CAAE2d,OAAQ,CAAC,aAAc,cAAe1oB,QAAS,CAAC,mBAExCw2B,G,8IAEnB,uGACS57B,EAAKoB,IAAL,UAAYvB,EAAZ,yBADT,2C,0HAKA,WAA6BhI,GAA7B,0FACSmI,EAAKuF,KAAL,UAAa1F,EAAb,oCAAgDhI,GAAM8jC,KAD/D,2C,8HAIA,WAAgCj7B,GAAhC,0FACSV,EAAKyrB,IAAL,UAAY5rB,EAAZ,8BAAyCa,EAAQm7B,aAAahkC,IAA9D,2BACF6I,GACAi7B,MAHP,2C,8DCwVa75B,gBAnVqB,SAAChF,GAA0B,IAAD,IAC5D,EAAsCS,qBAAWC,IAA1CuE,EAAP,EAAOA,iBAAkBzE,EAAzB,EAAyBA,UACzB,EAAsCG,oBAAS,GAA/C,mBAAOq+B,EAAP,KAAoBC,EAApB,KACA,EAAkCt+B,mBAAiB,IAAnD,mBAAOu+B,EAAP,KAAkBC,EAAlB,KACA,EAAkCx+B,mBAAqB,GAAvD,mBAAOy+B,EAAP,KAAkBC,EAAlB,KACA,EAA8B1+B,qBAA9B,mBAAO2+B,EAAP,KAAgBC,EAAhB,KACA,EAA0C5+B,mBAAgC,MAA1E,mBAAO6+B,EAAP,KAAsBC,EAAtB,KACMC,GAAc,UAAAl/B,EAAUN,gBAAV,eAAoBG,MAAMmC,SAAS,WAAnC,UAA8ChC,EAAUN,gBAAxD,aAA8C,EAAoBG,MAAMmC,SAAS,UAErGuG,qBAAU,WACY,OAAhBy2B,GAAwBE,GAAaZ,GAAoBa,mBAAmBvmC,MAAK,SAAAqB,GAAQ,OAC3FglC,EAAiBhlC,EAASoB,KAAK2jC,kBAC/Bp2B,OAAM,WACNq2B,EAAiB,SACf,CAACC,EAAaF,IAEpBI,KAAWhqB,OAAS,KACpB,IAAM4C,EAAQC,iBAAc,MACtBijB,EAAKjjB,iBAAO,MAElB,EAAgC9X,qBAAhC,mBAAOk/B,EAAP,KAAiBC,EAAjB,KAgBE/2B,qBAAU,WAbNw2B,EAAW,CACX,kBAAqB,CAAEpmC,MAAO,KAAM4mC,UAAWC,KAAgBC,IAC/D,aAAgB,CAAE9mC,MAAO,KAAM4mC,UAAWC,KAAgBC,IAC1D,OAAU,CAAEC,SAAU,MAAOC,YAAa,CAAC,CAAEhnC,MAAO,KAAM4mC,UAAWC,KAAgBI,eACrF,YAAe,CAAEF,SAAU,MAAOC,YAAa,CAAC,CAAEhnC,MAAO,KAAM4mC,UAAWC,KAAgBK,YAC1F,eAAmB,CAAEH,SAAU,MAAOC,YAAa,CAAC,CAAEhnC,MAAO,KAAM4mC,UAAWC,KAAgBM,0BAA0B,CAAEnnC,MAAO,KAAM4mC,UAAWC,KAAgBO,yBAClK,mBAAuB,CAAEL,SAAU,MAAOC,YAAa,CAAC,CAAEhnC,MAAO,KAAM4mC,UAAWC,KAAgBQ,YAAY,CAAErnC,MAAO,KAAM4mC,UAAWC,KAAgBS,eACxJ,mBAAuB,CAAEP,SAAU,MAAOC,YAAa,CAAC,CAAEhnC,MAAO,KAAM4mC,UAAWC,KAAgBQ,YAAY,CAAErnC,MAAO,KAAM4mC,UAAWC,KAAgBS,eACxJ,WAAc,CAAEP,SAAU,MAAOC,YAAa,CAAC,CAAEhnC,MAAO,KAAM4mC,UAAWC,KAAgBQ,YAAY,CAAErnC,MAAO,KAAM4mC,UAAWC,KAAgBS,eAC/I,YAAe,CAAEtnC,MAAO,KAAM4mC,UAAWC,KAAgBC,QAM1D,IAEL,IA+BMS,EAAsB,SAAC5zB,GACvB,OAAO,cAAC,KAAD,CAAQzK,KAAK,SAASL,KAAK,cAAcM,QAASwK,EAAQ6zB,oBAAqBrjC,UAAU,wBAE/FsjC,EAAsB,SAAC9zB,GACxB,OAAO,cAAC,KAAD,CAAQzK,KAAK,SAASL,KAAK,cAClCM,QAASwK,EAAQ+zB,oBAAqBvjC,UAAU,sBA+DhDw0B,EAAY4N,EAChB,cAAC,IAAD,CAASnzB,OAAO,yFAAmBohB,KATP,SAACC,GAA2B,IAAD,EACjDkT,EAAO,UAAGlT,EAAQkE,iBAAX,aAAG,EAAmBhiC,KACnC,OAAKgxC,EACO,sBAAM9lC,MAAO,CAAC60B,SAAS,SAAvB,SAAkCiR,IADzB,IAQjBC,YAAY,eAAeC,sBAAsB,EACnCC,YAAaP,EAAqBQ,YAAaN,EAC/C5zB,QAAM,EAACm0B,cAPK,SAACr0B,GAC3B,OAAO,cAAC,KAAD,CAAa3T,MAAO2T,EAAQ3T,MAAO2T,QAAS0yB,GAAiB,GAAKpyB,SAAU,SAACrf,GAAD,OAAO+e,EAAQs0B,eAAerzC,EAAEoL,QAAQ8T,YAAY,OAAOP,YAAY,0DAAapP,UAAU,qBAOjLtC,MAAO,CAAEqmC,SAAU,EAAGC,UAAW,SAJrC,eAKA,6BAmDIznB,EAAM,yCAAa5U,EAAiBgtB,MAA9B,sFACN6H,EAAe,CACfnyB,MAAO,gHACP7L,IAAK4B,EACL0E,QACA,qCACE,cAAC,KAAD,CAAOyY,IAAKrC,IACZ,qBAAKzd,GAAG,WAAWuC,UAAU,SAA7B,SACI,eAAC,IAAD,CAAWud,IAAK6gB,EAAIviC,MAAO8L,EAAiB0xB,MAAQtJ,iBAAiB,SAASkU,gBAAgB,OAC5FhU,aAAa,iMAAsCiU,YAAU,EAACC,aAAa,OAC3EhU,cAAc,SAASL,UAAWyS,EAAWvS,QAAQ,KAAKoU,KAAK,QAC/D7nB,OAAQA,EAAQ8nB,QAAS3C,EACzBxR,kBAAmB,SAAAz/B,GACjBkX,EAAiBk0B,OAAOl0B,EAAiB0xB,MAAM9lB,WAAU,SAAA1D,GAAE,OAAEA,EAAGpS,KAAOhN,EAAEoL,MAAM4B,OAC/E+kC,EAAY/xC,EAAEoL,QACbyoC,cAAc,OACjBC,SAAU,SAAA9zC,GACRyC,QAAQE,IAAI,IAAI3C,GAChB,IAAI+zC,EAAW,GACXC,EAAmBh0C,EAAEuxC,QAAF,WA2BvB,GA1BIyC,GAAeA,EAAY5B,YAAY,IAAM4B,EAAY5B,YAAY,GAAGhnC,QAC1E2oC,EAAS,aAAD,OAAc1jC,EAAuB2jC,EAAY5B,YAAY,GAAGJ,aAA+CgC,EAAY5B,YAAY,GAAGhnC,OAChJ4oC,GAAeA,EAAY5B,YAAY,IAAM4B,EAAY5B,YAAY,GAAGhnC,QAC1E2oC,EAAS,aAAD,OAAc1jC,EAAuB2jC,EAAY5B,YAAY,GAAGJ,aAA+CgC,EAAY5B,YAAY,GAAGhnC,QAClJ4oC,EAAch0C,EAAEuxC,QAAF,iBACGyC,EAAY5B,YAAY,IAAM4B,EAAY5B,YAAY,GAAGhnC,QAC1E2oC,EAAS,cAAD,OAAe1jC,EAAuB2jC,EAAY5B,YAAY,GAAGJ,aAA+CgC,EAAY5B,YAAY,GAAGhnC,OACjJ4oC,GAAeA,EAAY5B,YAAY,IAAM4B,EAAY5B,YAAY,GAAGhnC,QAC1E2oC,EAAS,cAAD,OAAe1jC,EAAuB2jC,EAAY5B,YAAY,GAAGJ,aAA+CgC,EAAY5B,YAAY,GAAGhnC,QACpJ4oC,EAAch0C,EAAEuxC,QAAF,qBACIyC,EAAY5B,YAAY,IAAM4B,EAAY5B,YAAY,GAAGhnC,QAC1E2oC,EAAS,qBAAD,OAAsB1jC,EAAuB2jC,EAAY5B,YAAY,GAAGJ,aAA+CgC,EAAY5B,YAAY,GAAGhnC,OACxJ4oC,GAAeA,EAAY5B,YAAY,IAAM4B,EAAY5B,YAAY,GAAGhnC,QAC1E2oC,EAAS,qBAAD,OAAsB1jC,EAAuB2jC,EAAY5B,YAAY,GAAGJ,aAA+CgC,EAAY5B,YAAY,GAAGhnC,QAC5J4oC,EAAch0C,EAAEuxC,QAAF,qBACKyC,EAAY5B,YAAY,IAAM4B,EAAY5B,YAAY,GAAGhnC,QAC1E2oC,EAAS,iBAAD,OAAkB1jC,EAAuB2jC,EAAY5B,YAAY,GAAGJ,aAA+CgC,EAAY5B,YAAY,GAAGhnC,OACpJ4oC,GAAeA,EAAY5B,YAAY,IAAM4B,EAAY5B,YAAY,GAAGhnC,QAC1E2oC,EAAS,iBAAD,OAAkB1jC,EAAuB2jC,EAAY5B,YAAY,GAAGJ,aAA+CgC,EAAY5B,YAAY,GAAGhnC,QACxJ4oC,EAAch0C,EAAEuxC,QAAF,SACKyC,EAAY5B,YAAY,IAAM4B,EAAY5B,YAAY,GAAGhnC,QAC1E2oC,EAAS,SAAD,OAAU1jC,EAAuB2jC,EAAY5B,YAAY,GAAGJ,aAA8CgC,EAAY5B,YAAY,GAAGhnC,QAC/I4oC,EAAch0C,EAAEuxC,QAAF,cACKyC,EAAY5B,YAAY,IAAM4B,EAAY5B,YAAY,GAAGhnC,QAC1E2oC,EAAS,cAAD,OAAe1jC,EAAuB2jC,EAAY5B,YAAY,GAAGJ,aAA8CgC,EAAY5B,YAAY,GAAGhnC,QACpJ4oC,EAAch0C,EAAEuxC,QAAF,oBACKyC,EAAY5oC,MAAO,CACpC,IAAMmb,EAASytB,EAAY5oC,MACvB6oC,EAAS,GACb1tB,EAAO3S,KAAI,SAAAZ,GAAI,OAAGihC,EAAO7gC,KAAKJ,EAAKsL,SACnCy1B,EAASG,qBAAuBD,EAGlC,IADAD,EAAch0C,EAAEuxC,QAAF,cACKyC,EAAY5oC,MAAO,CACpC,IAAMmb,EAASytB,EAAY5oC,MACvB6oC,EAAS,GACb1tB,EAAO3S,KAAI,SAAAZ,GAAI,OAAGihC,EAAO7gC,KAAKJ,EAAKsL,SACnCy1B,EAASI,eAAiBF,EAG5B,IADAD,EAAch0C,EAAEuxC,QAAF,eACKyC,EAAY5oC,MAAO,CACpC,IAAMmb,EAASytB,EAAY5oC,MACvB6oC,EAAS,GACb1tB,EAAO3S,KAAI,SAAAZ,GAAI,OAAGihC,EAAO7gC,KAAKJ,EAAKhG,OACnC+mC,EAASK,gBAAkBH,EAE7B/8B,EAAiBq6B,QAAUwC,EAC3B7C,GAAe,GACfh6B,EAAiBm9B,SAAQ,WAAKnD,GAAe,OAE/CoD,uBAAwB,CAAEC,MAAM,EAAMC,WAhGvB,SAAC3mC,GAC1BqjC,GAAe,GACfh6B,EAAiBm9B,SAAQ,WAAKnD,GAAe,KAASrjC,EAAMuuB,MAAOvuB,EAAMo2B,OA8FSwQ,SAAU,EAAG1c,MAAO,KAAMwZ,QAASA,EAASmD,aAAc,KAClIC,iBAAkB,kBAAIliC,EAAUU,UAAUC,KAApB,UAA4BxD,EAA5B,YAAiDsH,EAAiBE,KAAKpK,GAAvE,UACtB4nC,OA9FG,SAAC50C,GAChBkxC,GAAe,GACf,IAAM2D,EAAS70C,EAAEqxC,UAAYrhC,EAAUhQ,EAAEqxC,WAAarhC,EAAU,GAC5DhQ,EAAEmxC,WAA4B,cAAfnxC,EAAEmxC,YACnBj6B,EAAiB+D,MAAQ,CAAC,GAAD,OAAIjb,EAAEmxC,UAAN,YAAmB0D,IAC5C39B,EAAiBm9B,SAAQ,WAAKnD,GAAe,OAE3ClxC,EAAEqxC,WAAWC,EAAatxC,EAAEqxC,WAC5BrxC,EAAEmxC,WAAWC,EAAapxC,EAAEmxC,YAsFFA,UAAWA,EAAWE,UAAWA,EAhErD,UAkEM,cAAC,IAAD,CAAQ7yB,OAAO,uBAASohB,KAtOV,SAACC,GAC/B,OAAO,4BAAIA,EAAQiV,aAqOoDC,UAAQ,EAC7D5D,UAAU,YACVlkC,MAAO,CAAEqmC,SAAU,EAAGC,UAAW,QAAUyB,QAAM,IACnD,cAAC,IAAD,CAAQx2B,OAAO,mFAAkBohB,KAtOlB,SAACC,GAChC,IAAMoV,EAAY52B,GAAWc,MAAK,SAAAC,GAAE,OAAEA,EAAGd,OAAOuhB,EAAQoV,aACxD,OAAO,qCAAGpV,EAAQnhB,OAAX,IAAoBmhB,EAAQ7zB,OAA5B,WAAqCipC,QAArC,IAAqCA,OAArC,EAAqCA,EAAW12B,WAoO0By0B,YAAY,SAC3E/zB,QAAM,EAACi2B,kBAAkB,mFAAkBC,SAAS,OAAOC,oBAAqB,EAChFlC,YAAaP,EAAqBQ,YAAaN,EAAqB1B,UAAU,SAAS4D,UAAQ,EAAC9nC,MAAO,CAAEqmC,SAAU,EAAGC,UAAW,SAAWyB,QAAM,IACpJ,cAAC,IAAD,CAAQx2B,OAAO,oKAAkC42B,oBAAqB,EACrEpC,YAAY,iBAAkBkC,kBAAkB,kCAASj2B,QAAM,EAACk2B,SAAS,UACzEjC,YAAaP,EAAqBQ,YAAaN,EAC9C5lC,MAAO,CAAEqmC,SAAU,EAAGC,UAAW,SAAW3T,KAxOpC,SAACC,GAAyB,IAAD,QAC7CwV,EAAOxV,EAAQyV,YACfvZ,IAAWsZ,EACXE,EAAE,UAAG1V,EAAQ4D,gBAAX,aAAG,EAAkB3O,UACvB0gB,EAAE,UAAG3V,EAAQ0D,gBAAX,aAAG,EAAkBzO,UACvB2gB,EAAE,UAAG5V,EAAQ2D,gBAAX,aAAG,EAAkB1O,UACvB4gB,EAAE,UAAG7V,EAAQ6D,gBAAX,aAAG,EAAkB3O,cACzB/pB,EAAS+wB,GAAYwZ,GAAMF,IAASE,EAAG9d,MAA9B,wBACJ4d,EADI,YACIE,EAAGh3B,OADP,MACsBg3B,EAAF,kBAAaA,EAAG9d,MAAhB,YAAyB8d,EAAGh3B,OAA5B,MAAyC,GAa1E,OAZAvT,GAAW+wB,GAAYyZ,GAAMH,IAASG,EAAG/d,MAA9B,wBAA6C4d,EAA7C,YAAqDG,EAAGj3B,OAAxD,MACHi3B,EAAF,kBAAaA,EAAG/d,MAAhB,YAAyB+d,EAAGj3B,OAA5B,MAAyC,GAC/CvT,GAAW+wB,GAAY0Z,GAAMJ,IAASI,EAAGhe,MAA9B,wBAA6C4d,EAA7C,YAAqDI,EAAGl3B,OAAxD,MACHk3B,EAAF,kBAAaA,EAAGhe,MAAhB,YAAyBge,EAAGl3B,OAA5B,MAAyC,GAC/CvT,GAAW+wB,GAAY2Z,GAAML,IAASK,EAAGje,MAA9B,wBAA6C4d,EAA7C,YAAqDK,EAAGn3B,OAAxD,MACHm3B,EAAF,kBAAaA,EAAGje,MAAhB,YAAyBie,EAAGn3B,OAA5B,MAAyC,GAC3CshB,EAAQgE,eAAiBhE,EAAQgE,cAAc30B,OAAO,IACxDlE,GAAS,mFACT60B,EAAQgE,cAAclsB,SAAQ,SAAAyH,GAAK,IAAD,IAChCpU,GAAM,qBAAOoU,EAAG0V,iBAAV,aAAO,EAAc2C,MAArB,sBAA8BrY,EAAG0V,iBAAjC,aAA8B,EAAcvW,OAA5C,UAGH,sBAAMtR,MAAO,CAAC60B,SAAS,WAAvB,SAAoC92B,OAoN3B,cAAC,IAAD,CAASwT,OAAO,qBAAMohB,KA3KhB,SAACC,GACrB,IAAKA,EAAQlZ,QAAS,MAAO,GACxB,IAAKkZ,EAAQlZ,QAAQC,OAAQ,MAAO,2GACzC,IAAM5b,EAASgb,GAAqB6Z,EAAQlZ,QAAQC,OAAOxN,aAC3D,OAAO,mCAAGpO,KAwKMmmC,UAAU,oCACVgE,SAAS,OAAOC,oBAAqB,EACrCn2B,QAAM,EAAC+zB,YAAY,cAAcE,YAAaP,EAAqBQ,YAAaN,EAAsBO,cA3FhG,SAACr0B,GACrB,OAAO,cAAC,KAAD,CAAW3T,MAAO2T,EAAQ3T,MAAQiU,SAAU,SAACrf,GAAD,OAAO+e,EAAQs0B,eAAerzC,EAAEwU,OAAOpJ,QAASuT,YAAY,4EAAgBpP,UAAU,qBA2F3HwlC,UAAQ,EAAC9nC,MAAO,CAAEqmC,SAAU,EAAGC,UAAW,WAC5C,cAAC,IAAD,CAAS/0B,OAAO,eAAKohB,KA/MhB,SAACC,GAAyB,IAAD,EAC1CrZ,EAAS,GACPmvB,EAAK,UAAG9V,EAAQlZ,eAAX,aAAG,EAAiBgB,WAE/B,OADMguB,IAAOnvB,EAAO,UAAMmvB,EAAMlqC,MAAM,EAAE,IAApB,YAA2BkqC,EAAMlqC,MAAM,EAAE,GAAzC,YAA+CkqC,EAAMlqC,MAAM,EAAE,KAC1E+a,GA2MoDvH,QAAM,EAAC81B,UAAQ,EACvDK,oBAAoB,EAAOD,SAAS,OAAOD,kBAAkB,4EAC/DlC,YAAY,qBAAqB7B,UAAU,qBAC3C+B,YAAaP,EAAqBQ,YAAaN,EAC7C5lC,MAAO,CAAEqmC,SAAU,EAAGC,UAAW,SAJpC,eAKA,cAAC,IAAD,CAAS/0B,OAAO,eAAKohB,KA9MhB,SAACC,GACtB,IAAIrZ,EAAS,GACPovB,EAAS/V,EAAQgW,eAA+EhW,EAAQgW,iBAArEhW,EAAQiW,YAAqBjW,EAAQiW,WAAW7pC,WAMzF,OALI2pC,GAASA,EAAM1mC,OAAO,EACvBsX,EAAO,iBAAMovB,QAAN,IAAMA,OAAN,EAAMA,EAAOnqC,MAAM,EAAE,IAArB,YAA4BmqC,EAAMnqC,MAAM,EAAE,GAA1C,YAAgDmqC,EAAMnqC,MAAM,EAAE,IAC7DmqC,GAASA,EAAM1mC,OAAO,IAC9BsX,EAASovB,GAELpvB,GAsMoDvH,QAAM,EAAC81B,UAAQ,EACvDK,oBAAoB,EAAOD,SAAS,OAAOD,kBAAkB,gEAC/DlC,YAAY,qBAAqB7B,UAAU,iBAC3C+B,YAAaP,EAAqBQ,YAAaN,EAC7C5lC,MAAO,CAAEqmC,SAAU,EAAGC,UAAW,SAJpC,eAKA,cAAC,IAAD,CAAS/0B,OAAO,qBAAMohB,KAzMhB,SAACC,GAAyB,IAAD,IAC/C,IAAKA,EAAQgW,kBAAkB,UAAChW,EAAQlZ,eAAT,aAAC,EAAiBgB,YAAY,MAAO,GACpE,IAAMouB,EAAK,IAAIt6B,KAAKokB,EAAQgW,gBACtBG,EAAK,IAAIv6B,KAAJ,UAASokB,EAAQlZ,eAAjB,aAAS,EAAiBgB,YACjCqK,EAAM+jB,EAAGvc,cAAgBwc,EAAGxc,cAC1Byc,EAAIF,EAAGtc,WAAasc,EAAGtc,WAE7B,OADIwc,EAAI,GAAY,IAANA,GAAWF,EAAGrc,UAAYsc,EAAGtc,YAAY1H,IAChDA,GAmMW/kB,MAAO,CAAEqmC,SAAU,EAAGC,UAAW,QADnC,eAEA,cAAC,IAAD,CAAS/0B,OAAO,qBAAMohB,KAjMb,SAACC,GAAyB,IAAD,EAClD,OAAI,UAACA,EAAQlZ,eAAT,aAAC,EAAiBiB,QACVipB,GAAQhR,EAAQlZ,QAAQiB,OAAO,GAAG7lB,KAAK0J,MAAM,EAAE,GADtB,IAgM2B0lC,UAAU,iBACxD4D,UAAQ,EAAC9nC,MAAO,CAAEqmC,SAAU,EAAGC,UAAW,QAD5C,eAEA,cAAC,IAAD,CAAS/0B,OAAO,8FAAmBu2B,UAAQ,EACzC9xB,MAAM,2CACNhW,MAAO,CAAEqmC,SAAU,EAAGC,UAAW,SAFnC,eAGA,cAAC,IAAD,CAAS/0B,OAAO,sEAAeu2B,UAAQ,EACrC9xB,MAAM,+BACNhW,MAAO,CAAEqmC,SAAU,EAAGC,UAAW,SAFnC,eAGA,cAAC,IAAD,CAAS/0B,OAAO,8FAAmBohB,KA9LtB,SAACC,GAC9B,GAAKA,EAAQqW,YACR,CACJ,IAAMC,EAAQxmB,GAAiBxQ,MAAK,SAAAC,GAAE,OAAEA,EAAGd,OAASuhB,EAAQqW,eAC5D,OAAKC,EACO,sBAAMlpC,MAAO,CAAC60B,SAAS,SAAvB,SAAkCqU,EAAMp0C,OADjC,GAHM,MAAO,IA8LfkxC,sBAAsB,EAAOG,cAtHhB,SAACr0B,GAC5B,OAAO,cAAC,KAAD,CAAa3T,MAAO2T,EAAQ3T,MAAO2T,QAAS4Q,GAAmBtQ,SAAU,SAACrf,GAAD,OAAO+e,EAAQs0B,eAAerzC,EAAEoL,QAAQ8T,YAAY,OAAOP,YAAY,0DAAapP,UAAU,qBAsHhK2jC,YAAaP,EAAqBQ,YAAaN,EAC/C5zB,QAAM,EAAC+zB,YAAY,cAAc7B,UAAU,cAAc4D,UAAQ,EACjE9nC,MAAO,CAAEqmC,SAAU,EAAGC,UAAW,SAJnC,eAKA,cAAC,IAAD,CAAS/0B,OAAO,sHAAuBohB,KA3LpB,SAACC,GACpC,GAAKA,EAAQuW,kBACR,CACJ,IAAMC,EAAQnjB,GAAgB/T,MAAK,SAAAC,GAAE,OAAEA,EAAGd,OAASuhB,EAAQuW,qBAC3D,OAAKC,EACO,sBAAMppC,MAAO,CAAC60B,SAAS,SAAvB,SAAkCuU,EAAMt0C,OADjC,GAHY,MAAO,IA2LrBovC,UAAU,oBAAoB4D,UAAQ,EACtC/B,YAAY,oBAAoBC,sBAAsB,EACtDC,YAAaP,EAAqBQ,YAAaN,EAC/C5zB,QAAM,EAACm0B,cAjIY,SAACr0B,GAClC,OAAO,cAAC,KAAD,CAAa3T,MAAO2T,EAAQ3T,MAAO2T,QAASmU,GAAkB7T,SAAU,SAACrf,GAAD,OAAO+e,EAAQs0B,eAAerzC,EAAEoL,QAAQ8T,YAAY,OAAOP,YAAY,0DAAapP,UAAU,qBAiI/JtC,MAAO,CAAEqmC,SAAU,EAAGC,UAAW,SALnC,eAMCxP,EACD,cAAC,IAAD,CAASvlB,OAAO,+DAAaohB,KA3KpB,SAACC,GAC1B,GAAKA,EAAQkC,OACR,CACH,IAAM/2B,EAASgb,GAAqB6Z,EAAQkC,OAAOrB,OAAOtnB,aAC1D,OAAQ,sBAAMnM,MAAO,CAAC60B,SAAS,SAAvB,SAAkC92B,IAHvB,MAAO,IA2KViC,MAAO,CAAEqmC,SAAU,EAAGC,UAAW,SADnC,eAEA,cAAC,IAAD,CAAS/0B,OAAO,yDAAYohB,KAtKjB,SAACC,GAA2B,IAAD,EACtD,OAAI,UAACA,EAAQkC,cAAT,aAAC,EAAgBrB,OAAO3kB,UACf,sBAAM9O,MAAO,CAAC60B,SAAS,SAAvB,SAAkCjC,EAAQkC,OAAOrB,OAAO3kB,SAASha,OADhC,IAsK5BkL,MAAO,CAAEqmC,SAAU,EAAGC,UAAW,SADnC,eAEA,cAAC,IAAD,CAAS/0B,OAAO,uCAASohB,KApKb,SAACC,GAC7B,IAAMyW,EAAQzW,EAAQ0W,WACtB,OAAKD,EACQ,sBAAMrpC,MAAO,CAAC60B,SAAS,SAAvB,mBAAqCwU,EAAM7qC,MAAM,EAAE,IAAnD,YAA0D6qC,EAAM7qC,MAAM,EAAE,GAAxE,YAA8E6qC,EAAM7qC,MAAM,EAAE,MADrF,IAmKH2pC,oBAAoB,EAAOD,SAAS,OACpCnC,YAAY,aAAa7B,UAAU,aAAa+D,kBAAkB,sEAClEhC,YAAaP,EAAqBQ,YAAaN,EAC/C5zB,QAAM,EAAC81B,UAAQ,EAAC9nC,MAAO,CAAEqmC,SAAU,EAAGC,UAAW,SAJlD,eAKA,cAAC,IAAD,CAAQ3T,KAnKC,SAACC,GACtB,OACI,cAAC,IAAM0O,SAAP,UACI,cAAC,KAAD,CAAQt6B,KAAK,eAAe1E,UAAU,2CAA2CgF,QAAS,kBAAI9B,EAAUU,UAAUC,KAApB,UAA4BxD,EAA5B,YAAiDiwB,EAAQ7yB,GAAzD,eAgKxDyjC,YAAY,EAC5CxjC,MAAO,CAAEqmC,SAAU,EAAGC,UAAW,oBAMtD,OACG,mCACE,cAAC,GAAD,eAAgBxH,SCzWP,OAA0B,qC,iCCgB1ByK,GAhBO,WACpB,OACE,sBAAKjnC,UAAU,cAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,oGACA,gHACA,6EACA,0EACA,6LAEF,qBAAKA,UAAU,eAAf,SACE,8FC6EO0H,gBArEO,WACpB,MAA0BrE,mBAAiB,IAA3C,mBAAOiJ,EAAP,KAAcwxB,EAAd,KACO56B,EAAaC,qBAAWC,IAAxBF,UAcDgkC,EAAQ,uCAAG,WAAO3oC,EAAa4oC,GAApB,SAAAvgC,EAAA,sDACf1D,EAAUkkC,MAAM7oC,EAAK+N,MAAO/N,EAAK8oC,UADlB,2CAAH,wDAGRC,EAAiB,uCAAG,sBAAA1gC,EAAA,sDACxB1D,EAAUqkC,WAAWj7B,GADG,2CAAH,qDAGjBk7B,EAAmB,SAACC,GAAD,SAAkBA,EAAKC,UAAWD,EAAKl0C,QAC1Do0C,EAAsB,SAACF,GAC3B,OAAQD,EAAiBC,IAAS,uBAAOznC,UAAU,UAAjB,SAA4BynC,EAAKl0C,SAErE,OACA,mCACE,qBAAKyM,UAAU,aAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKsI,IAAKs/B,GAAM5nC,UAAU,OAAOwI,IAAI,SACrC,sBAAK/K,GAAG,YAAYuC,UAAU,aAA9B,UACE,oGACA,qIAAuB,cAAC,IAAD,CAAMqI,GAAG,gBAAT,mFACvB,cAAC,KAAD,CAAM6+B,SAAUA,EAAUW,cAAe,CAACv7B,MAAO,GAAI+6B,SAAU,IAC7DS,SAhCK,SAACvpC,GAChB,IAAI8I,EAAc,GASd,OARK9I,EAAK+N,MAEC,4CAA4C/Z,KAAKgM,EAAK+N,QAC/DwxB,EAASv/B,EAAK+N,OAFZjF,EAAOiF,MAAQ,sGAId/N,EAAK8oC,WACNhgC,EAAOggC,SAAW,sIAEfhgC,GAuBD0gC,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,OACR,uBAAOd,SAAUc,EAAehoC,UAAU,UAA1C,UACE,cAAC,KAAD,CAAOxN,KAAK,QAAQu1C,OAAQ,gBAAGhf,EAAH,EAAGA,MAAO0e,EAAV,EAAUA,KAAV,OACxB,sBAAKznC,UAAU,UAAf,UACE,uBAAMA,UAAU,mCAAhB,UACE,mBAAGA,UAAU,mBACb,cAAC,KAAD,yBAAWvC,GAAG,QAAS8R,WAAS,GAAKwZ,GAArC,IAA4C/oB,UAAWgE,YAAW,CAAE,YAAawjC,EAAiBC,QAClG,uBAAOv4B,QAAQ,QACflP,UAAWgE,YAAW,CAAE,UAAWwjC,EAAiBC,KADpD,uBAGDE,EAAoBF,SAGzB,cAAC,KAAD,CAAOj1C,KAAK,WAAYu1C,OAAQ,gBAAGhf,EAAH,EAAGA,MAAO0e,EAAV,EAAUA,KAAV,OAC9B,sBAAKznC,UAAU,UAAf,UACE,uBAAMA,UAAU,mCAAhB,UACE,cAAC,KAAD,yBAAUvC,GAAG,WAAWwqC,aAAa,OAAUlf,GAA/C,IAAsDmf,YAAU,EAACloC,UAAWgE,YAAW,CAAE,YAAawjC,EAAiBC,QACvH,uBAAOv4B,QAAQ,WAAWlP,UAAWgE,YAAW,CAAE,UAAWwjC,EAAiBC,KAA9E,sDAEDE,EAAoBF,SAG7B,cAAC,KAAD,CAAQ1iC,KAAK,SAASZ,MAAM,iCAAQzG,MAAO,CAACyqC,aAAa,UACzD,cAAC,KAAD,CAAQpjC,KAAK,SAASC,QAASsiC,EAAmBnjC,MAAM,mFAAkBnE,UAAU,8BAI1F,cAAC,GAAD,cCzBO0H,gBA5CqB,SAAChF,GACnC,MAAmDS,qBAAWC,IAAvDF,EAAP,EAAOA,UAAWyE,EAAlB,EAAkBA,iBAAkBqB,EAApC,EAAoCA,YACpCyC,qBAAU,WACJvI,EAAUN,WAAU+E,EAAiB/E,SAAWM,EAAUN,UAC9DoG,EAAY+D,WAAY,EACxBpF,EAAiBm9B,SAAQ,WAAK97B,EAAY+D,WAAY,IAAO,EAAE,KAC/D,CAACpF,EAAkBqB,EAAa9F,EAAUN,WAE5C,IAGM45B,EAAc,CAClBnyB,MAAO,6CACP7L,IAAK0B,EACL4E,QAAS5B,EACP,qCACE,sBAAKlD,UAAU,+DAAf,UACE,cAAC,KAAD,CAAQtC,MAAO,CAACulB,SAAS,SAAUjjB,UAAU,2BAA2BmE,MAAM,0GAAsBkG,MAAM,+IAC1GrF,QAAS,SAACvU,GAAKyS,EAAUU,UAAUC,KAApB,UAA4BxD,EAA5B,YAAiDsH,EAAiBE,KAAKpK,GAAvE,YACb,cAAC,KAAD,CAAQC,MAAO,CAACulB,SAAS,SAAUjjB,UAAU,8CAA8CmE,MAAM,yDAAYkG,MAAM,yIAA2BrF,QAAS,SAACvU,GAAK,IAAD,EAACyS,EAAUU,UAAUC,KAApB,UAA4BrD,EAA5B,sBAAiD0C,EAAUN,gBAA3D,aAAiD,EAAoBC,aAAapF,QAC/O,cAAC,KAAD,CAAQC,MAAO,CAACulB,SAAS,SAAUjjB,UAAU,8CAA8CvC,GAAG,UAAU0G,MAAM,uCAASkG,MAAM,wHAC7H,cAAC,KAAD,CAAQ3M,MAAO,CAACulB,SAAS,SAAUjjB,UAAU,2BAA2BmE,MAAM,kKAC9E,cAAC,KAAD,CAAQnE,UAAU,8CAClBvC,GAAG,QAAQC,MAAO,CAACulB,SAAS,SAAU9e,MAAM,uCAASkG,MAAM,yMAC3D,cAAC,KAAD,CAAQ3M,MAAO,CAACulB,SAAS,SAAUjjB,UAAU,4CAA4CmE,MAAM,gHAAsBkG,MAAM,iKAA+BrF,QAAS,SAACvU,GAAKyS,EAAUU,UAAUC,KAAKzD,SAEtM,cAAC,KAAD,CAAS1C,MAAO,CAAC0V,UAAU,OAAQ+0B,aAAa,UAChD,qBAAKnoC,UAAU,+DAAf,SACE,cAAC,IAAD,CAAMA,UAAU,gBAAgBqK,MAAM,gHAAtC,SACE,eAAC,IAAD,CAAWrK,UAAU,iBAAiBnE,MArBpC,CAAC,CAACpJ,QAAQ,QAAQ21C,OAAO,0iBAA6G,CAAC31C,QAAQ,QAAQ21C,OAAO,maAAoF,CAAC31C,QAAQ,QAAQ21C,OAAO,6LACtR,CAAC31C,QAAQ,QAAQ21C,OAAO,wMACxB,CAAC31C,QAAQ,QAAQ21C,OAAO,2JAmBqCrY,iBAAiB,SAApE,UACE,cAAC,IAAD,CAAQrc,MAAM,UAAUzE,OAAO,yCAC/B,cAAC,IAAD,CAAQyE,MAAM,SAASzE,OAAO,sEAKnC,cAAC,KAAD,KAEP,OACE,mCACE,cAAC,GAAD,eAAgButB,SCtDP,OAA0B,gCCIpB6L,I,8IACnB,uGACSziC,EAAKuF,KAAL,UAAa1F,EAAb,eAAmC,CACxCqF,eAAgB,CAAEC,KAAM,CAAC,KAAM,QAAS,QAAS,kBAAmB,iBAFxE,2C,kHAKA,WAAqBtN,GAArB,0FACSmI,EAAKuF,KAAL,UAAa1F,EAAb,4BAAwChI,GAAM,CACnDqN,eAAgB,CAAEC,KAAM,CAAC,KAAM,SAAUC,QAAS,CAAC,cAAe,eAAgB,aAClF9F,SAAU,CAAC,cAAe,eAAgB,YAC1CrC,aAAc,CAAEkI,KAAM,CAAC,KAAM,OAAQ,eAJzC,2C,+DCVa,I,OAAA,IAA0B,sCCgU1BrD,gBAzR6B,SAAChF,GAA6B,IAAD,EACvE,EAAkCS,qBAAWC,IAAtCF,EAAP,EAAOA,UAAW2W,EAAlB,EAAkBA,aAClB,EAA4BxW,mBAAmB,IAA/C,mBAAOg8B,EAAP,KAAeiJ,EAAf,KACA,EAAkCjlC,oBAAS,GAA3C,mBAAO0T,EAAP,KAAkB4mB,EAAlB,KACA,EAA0Bt6B,mBAAmB,CAACu6B,aAAa,GAAIC,MAAK,IAApE,mBAAOvxB,EAAP,KAAcwxB,EAAd,KACA,EAA0Bz6B,mBAAmB,CAACu6B,aAAa,GAAIC,MAAK,IAApE,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAwC36B,mBAA+B,MAAvE,mBAAOR,EAAP,KAAqB0lC,EAArB,KACA,EAAoBllC,mBAAwB,MAA5C,mBAAOmlC,EAAP,KAAWC,EAAX,KACMvtB,EAAQC,iBAAc,MAC5B1P,qBAAU,WACW,OAAf5I,GAAuBA,EAAapF,KAAO+qC,IAC7CxK,EAAS,CAACJ,aAAa,GAAIC,MAAK,IAChCC,EAAS,CAACF,aAAa,GAAIC,MAAK,IAChCh7B,EAAamT,SAAS5N,SAAQ,SAAC3E,GAAYA,EAAKo6B,KAAMG,EAAS,eAAIv6B,IAC5Dq6B,EAAS,2BAAIr6B,GAAL,IAAWm6B,aAAcn6B,EAAKm6B,aAAajrC,QAAQ,UAAU,UAC5E81C,EAAM5lC,EAAapF,OAErB,CAACoF,EAAc2lC,IAEjB/8B,qBAAU,WACW,OAAf5I,GAAuBH,EAAMpQ,MAAMipC,OAAO99B,IAC1C+jC,GAAoBkH,gBAAgBhmC,EAAMpQ,MAAMipC,OAAO99B,IACtD3B,MAAK,SAAAqB,GACJorC,EAAgBprC,EAASoB,SAE1BuN,OAAO,SAAAsQ,GAASlpB,QAAQE,IAAIgpB,GACf,OAARlB,GAAgC,OAAhBA,EAAMmB,SAAgBnB,EAAMmB,QAAQC,KAAKrK,SAGnE,CAACpP,EAAcH,EAAMpQ,MAAMipC,OAAO99B,GAAIyF,EAAUN,WAClD,MAA0CS,mBAAgC,MAA1E,mBAAO6+B,EAAP,KAAsBC,EAAtB,KACA12B,qBAAU,WACY,OAAhBy2B,GAAwBh/B,EAAUN,UAChCM,EAAUN,SAASG,MAAMmC,SAAS,UACxCs8B,GAAoBa,mBAAmBvmC,MAAK,SAAAqB,GAAQ,OAClDglC,EAAiBhlC,EAASoB,KAAK2jC,kBAC/Bp2B,OAAM,WACNq2B,EAAiB,IACL,OAARjnB,GAAgC,OAAhBA,EAAMmB,SAAgBnB,EAAMmB,QAAQC,KAAKrK,SAC3D,CAACiwB,EAAeh/B,EAAUN,WAChC,IAAM+lC,EAAe,SAACpgB,EAAmB7U,EAAewrB,EAAkBC,GACxE,GAAoB,OAAhBt8B,EAAJ,CACA,IAAI28B,EAAUH,EACRE,EAAQC,EAAQ5vB,MAAK,SAAArI,GAAO,OAAEA,EAAQmM,QAAUA,MAAU,CAACA,QAAO+rB,OAAQP,QAC5Dt6B,IAAhB26B,EAAMG,OAAqBF,EAAQ37B,KAAK07B,GAC5CA,EAAMG,MAAQP,EACdI,EAAM12B,OAAN,UAAkB0f,EAAlB,aAAgCgX,EAAME,OAAtC,eAAmDF,EAAMG,OACzD4I,EAAU9I,KAKNb,EAAkB,SAACC,GACrB,GAAqB,OAAjB/7B,EAAJ,CACA,IAAIg8B,EAAkC,KAAvBD,EAAQhB,aACtBgB,EAAQnhC,GAAR,2BAAiBmhC,GAAW58B,GAA5B,eAAkD48B,GAClDA,EAAQnhC,GAAK,CAACA,GAAGmhC,EAAQnhC,GAAIsW,YAAa6qB,EAAQ7qB,YAAa+qB,WAAYF,EAAQE,WAAYlB,aAAcgB,EAAQhB,aAAcC,KAAMe,EAAQf,MAAjJ,eAA6Je,GAE9J,QAD8Bh6B,IAA1B/B,EAAamT,WAAwBnT,EAAamT,SAAW,IAC7D6oB,EAASphC,GAAI,CACb,IAAM+V,EAAM3Q,EAAamT,SAASzC,WAAU,SAAA9P,GAAI,OAAEA,EAAKhG,KAAKohC,EAASphC,MACjE+V,GAAK,IAAG3Q,EAAamT,SAASxC,GAAOqrB,QACtCh8B,EAAamT,SAASnS,KAAKg7B,KAgEhCrC,EAAe,CACnBnyB,MAAO,kIACP7L,IAAKgC,EACLsE,QAASjC,EAAgB,qCACzB,sBAAK7C,UAAU,wBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKsI,IAAKkC,GAAKhC,IAAI,GAAGxI,UAAU,uBAElC,sBAAKA,UAAU,iBAAf,UACA,qBAAKA,UAAU,kBAAf,SACG6C,EAAarQ,MAAQ,KAExB,qBAAKwN,UAAU,oBAAf,SAAoC6C,EAAa+lC,MACjD,sBAAK5oC,UAAU,yBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,mBAAGA,UAAU,gBACb,mFAEF,sBAAKA,UAAU,UAAf,UACE,mBAAGA,UAAU,mBACb,kFAEF,sBAAKA,UAAU,UAAf,UACE,mBAAGA,UAAU,uBACb,gHAIN,qBAAKA,UAAU,OAAOtC,MAAO,CAACmrC,UAAW,QAAzC,SACI,sBAAK7oC,UAAU,4BAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,uBAAOkP,QAAQ,OAAf,sFACA,cAAC,KAAD,CAAWzR,GAAG,OAAO2jC,UAAQ,EAACvlC,MAAOgH,EAAarQ,MAAQ,GACxDsd,SAAU,SAAArf,GACN,IAAImsC,EAAa,eAAO/5B,GACxB8lC,EAAa,2EAAgB,OAAQ/L,EAAcpqC,MAAQ,GAAI/B,EAAEwU,OAAOpJ,OAAS,IAChF+gC,EAAcpqC,KAAO/B,EAAEwU,OAAOpJ,MAC/B0sC,EAAgB3L,IAEpBrtB,WAAS,EAACvP,UAAWgE,YAAW,CAAE,YAAa+S,GAAalU,EAAarQ,OAAQ,UAAAqQ,EAAarQ,YAAb,eAAmBmN,QAAS,QAE9GoX,KAAelU,EAAarQ,MAASqQ,EAAarQ,MAAQqQ,EAAarQ,KAAKmN,OAAS,MAAS,uBAAOK,UAAU,UAAjB,kSAEjG,sBAAKA,UAAU,0BAAf,UACE,uBAAOkP,QAAQ,YAAf,2HACA,cAAC,KAAD,CAAWzR,GAAG,YAAY5B,MAAOgH,EAAaimC,WAAa,GACzDh5B,SAAU,SAAArf,GACN,IAAImsC,EAAa,eAAO/5B,GACxB8lC,EAAa,gHAAuB,YAAa/L,EAAcpqC,MAAQ,GAAI/B,EAAEwU,OAAOpJ,OAAS,IAC7F+gC,EAAckM,UAAYr4C,EAAEwU,OAAOpJ,MACnC0sC,EAAgB3L,IAEpBwE,UAAQ,EAACphC,UAAWgE,YAAW,CAAE,YAAa+S,IAAclU,EAAaimC,cAE1E/xB,IAAclU,EAAaimC,WAAa,uBAAO9oC,UAAU,UAAjB,iMAE3C,sBAAKA,UAAU,mBAAf,UACE,uBAAOkP,QAAQ,UAAf,sWACA,cAAC,KAAD,CAAWzR,GAAG,UAAU5B,MAAOgH,EAAakmC,SAAW,GACrDj5B,SAAU,SAAArf,GACN,IAAImsC,EAAa,eAAO/5B,GACxB8lC,EAAa,mHAA0B,UAAW/L,EAAcmM,SAAW,GAAIt4C,EAAEwU,OAAOpJ,OAAS,IAChG+gC,EAAcmM,QAAUt4C,EAAEwU,OAAOpJ,MAClC0sC,EAAgB3L,SAIxB,sBAAK58B,UAAU,mBAAf,UACE,uBAAOkP,QAAQ,eAAf,ggBACA,cAAC,KAAD,CAAWzR,GAAG,eAAe5B,MAAOgH,EAAammC,cAAgB,GAC/Dl5B,SAAU,SAAArf,GACN,IAAImsC,EAAa,eAAO/5B,GACxB8lC,EAAa,wFAAmB,eAAgB/L,EAAcoM,cAAgB,GAAIv4C,EAAEwU,OAAOpJ,OAAS,IACnG+gC,EAAcoM,aAAev4C,EAAEwU,OAAOpJ,MACvC0sC,EAAgB3L,SAIxB,sBAAK58B,UAAU,0BAAf,UACE,uBAAOkP,QAAQ,OAAf,sCACA,cAAC,KAAD,CAAWzR,GAAG,OAAO5B,MAAOgH,EAAaomC,MAAQ,GAC/Cn5B,SAAU,SAAArf,GACN,IAAImsC,EAAa,eAAO/5B,GACxB8lC,EAAa,2BAAQ,OAAQ/L,EAAcqM,MAAQ,GAAIx4C,EAAEwU,OAAOpJ,OAAS,IACzE+gC,EAAcqM,KAAOx4C,EAAEwU,OAAOpJ,MAC9B0sC,EAAgB3L,SAIxB,sBAAK58B,UAAU,0BAAf,UACE,uBAAOkP,QAAQ,UAAf,qLACA,sBAAKlP,UAAU,eAAf,UACE,sBAAMA,UAAU,qBAAhB,kBACA,cAAC,KAAD,CAAWuY,KAAK,KAAK9a,GAAG,UAAU5B,MAAOgH,EAAas5B,SAAW,GAC/DrsB,SAAU,SAAArf,GACR,IAAImsC,EAAa,eAAO/5B,GACxB8lC,EAAa,oDAAa,UAAW/L,EAAcT,SAAW,GAAI1rC,EAAEwU,OAAOpJ,OAAS,IACpF+gC,EAAcT,QAAU1rC,EAAEoL,MAC1B0sC,EAAgB3L,YAKxB,sBAAK58B,UAAU,0BAAf,UACE,uBAAOkP,QAAQ,QAAf,wDACA,cAAC,KAAD,CAAWzR,GAAG,QAAQ2jC,UAAQ,EAC5Br8B,KAAK,OAAOwT,KAAK,mBACjB1c,MAAOkiC,EAAMH,aACb9tB,SAAU,SAACrf,GACTk4C,EAAa,6CAAW,QAAS5K,EAAMH,cAAgB,GAAIntC,EAAEwU,OAAOpJ,OAAS,IAC7EmiC,EAAS,2BAAID,GAAL,IAAYH,aAAcntC,EAAEwU,OAAOpJ,UAE7CmE,UAAWgE,YAAW,CAAE,YAAa+S,IAAc,qBAAqBxkB,KAAKwrC,EAAMH,kBAEpF7mB,IAAc,qBAAqBxkB,KAAKwrC,EAAMH,eAAiB,uBAAO59B,UAAU,UAAjB,4NAElE,sBAAKA,UAAU,2BAAf,UACE,uBAAOkP,QAAQ,QAAf,mBACA,cAAC,KAAD,CAAWzR,GAAG,QAAQsH,KAAK,OACzBlJ,MAAOyQ,EAAMsxB,aACb9tB,SAAU,SAACrf,GACTk4C,EAAa,QAAS,QAASr8B,EAAMsxB,cAAgB,GAAIntC,EAAEwU,OAAOpJ,OAAS,IAC3EiiC,EAAS,2BAAIxxB,GAAL,IAAYsxB,aAAantC,EAAEwU,OAAOpJ,UAE5CmE,UAAWgE,YAAW,CAAE,YAAa+S,KAAe,4CAA4CxkB,KAAK+Z,EAAMsxB,eAAsC,KAArBtxB,EAAMsxB,kBAEjI7mB,KAAe,4CAA4CxkB,KAAK+Z,EAAMsxB,eAAsC,KAArBtxB,EAAMsxB,eAAsB,uBAAO59B,UAAU,UAAjB,uEAExH,cAAC,GAAD,CAAYA,UAAU,WAAW+W,UAAWA,EAC1C5S,MAAM,sHACNtI,MAAOgH,EAAakT,QAASqJ,UAAQ,EACrCG,QAAS,SAAC1jB,GAAD,OAAoB0sC,EAAgB,2BAAI1lC,GAAL,IAAmBkT,QAAQ,eAAKla,OAC5EiU,SAAU,WAAK,IAAD,IACR8sB,EAAa,2BAAO/5B,GAAP,IAAqBkT,QAAS8D,EAAasG,iBAC5DwoB,EAAa,iCAAS,WAAW,UAAA9lC,EAAakT,eAAb,eAAsBI,oBAAqB,IAAI,UAAAymB,EAAc7mB,eAAd,eAAuBI,oBAAqB,IAC5HoyB,EAAgB3L,MAGpB,qBAAK58B,UAAU,2BAAf,SACE,cAAC,KAAD,CAAQmE,MAAM,yDAAanE,UAAU,mBACnCtC,MAAO,CAAC0V,UAAW,QAASpO,QA7Lf,WACvB,GAAmB,OAAfnC,EAEJ,GADA86B,GAAa,GAbO,WACpB,GAAqB,OAAjB96B,EAAuB,OAAO,EAClC,IAAIoU,EAAUooB,EAAO1/B,OAAS,EAO9B,OAJAsX,GADAA,GADAA,EAAUA,GAAW,qBAAqB1kB,KAAKwrC,EAAMH,iBAC/B,4CAA4CrrC,KAAK+Z,EAAMsxB,eAAsC,KAArBtxB,EAAMsxB,mBAC5E/6B,EAAarQ,OAAUqQ,EAAarQ,MAAQqQ,EAAarQ,KAAKmN,OAAS,SACxEkD,EAAaimC,UAQhCI,GAAiB,CACnBvK,EAAgBZ,GAChBY,EAAgBryB,GAChB,IAAIswB,EAAgB,CAAEn/B,GAAIoF,EAAapF,GACjBjL,KAAMqQ,EAAarQ,KACnBs2C,UAAWjmC,EAAaimC,UACxBC,QAASlmC,EAAakmC,SAAW,KACjCC,aAAcnmC,EAAammC,cAAgB,KAC3CC,KAAMpmC,EAAaomC,MAAQ,KAC3B9M,QAASt5B,EAAas5B,SAAW,KACjC9lB,oBAAqBxT,EAAamT,SAClCI,mBAAoBvT,EAAakT,SAEvDyrB,GAAoB2H,mBAAmB,CAAC1H,aAAc7E,EAAeyC,OAAQA,IAC1EvjC,MAAK,SAAAqB,GACJmrC,EAAU,IACV3K,GAAa,GACb4K,EAAgBprC,EAASoB,MAEb,OAAR2c,GAAgC,OAAhBA,EAAMmB,SAAgBnB,EAAMmB,QAAQC,KAAK,CAAEpK,SAAU,UAAWtJ,QAAS,6CAAWC,OAAQ,gHAAuBsJ,KAAK,SAE7IrG,OAAO,SAAAsQ,GAASlpB,QAAQE,IAAIgpB,GACf,OAARlB,GAAgC,OAAhBA,EAAMmB,SAAgBnB,EAAMmB,QAAQC,KAAKrK,YAEhD,OAARiJ,GAAgC,OAAhBA,EAAMmB,SAAgBnB,EAAMmB,QAAQC,KAAK,CAAEpK,SAAU,OAAQtJ,QAAS,yDAAaC,OAAQ,kNAAyCsJ,KAAK,WAI5JjP,EAAUN,UAAYM,EAAUN,SAASG,MAAMmC,SAAS,SAC/D,mCACC,sBAAKlF,UAAU,mBAAf,UACE,uBAAOkP,QAAQ,eAAf,6IACA,cAAC,KAAD,CAAUzR,GAAG,eAAgB+R,QAAS0yB,GAAiB,GACrDpyB,SAAU,SAACrf,GACT,GAAIA,EAAEoL,MAAM4B,GAAI,CACd,IAAMmG,EAAUV,EAAUU,UACtBwlC,EAAI,UAAM5oC,EAAN,YAA2B/P,EAAEoL,MAAM4B,IAC3C8qC,EAAgB,MAChB3kC,EAAQC,KAAKulC,KAGjB15B,QAAM,EAACgjB,WAAS,EAAC/iB,YAAY,cAGhC,oCAMyCjN,EAAMpQ,MAAMipC,OAAO99B,IA8I/D,cAAC,KAAD,CAAO8f,IAAKrC,IACZ,cAAC,GAAD,OACM,qCAAE,cAAC,KAAD,CAAOqC,IAAKrC,IAAS,cAAC,KAAD,QAE/B,OACE,mCACE,cAAC,GAAD,eAAgBshB,SCjST6M,GAAc,CACzB,CAAEC,KAAMppC,EAAYqpC,UAAWC,IAC/B,CAAEF,K/FpBuB,S+FoBJC,UCxBsB,SAAC7mC,GAK5C,OACE,qCACE,iEACA,4CDiBJ,CAAE4mC,KAAMlpC,EAAYmpC,UAAWE,IAC/B,CAAEH,KAAMjpC,YAA4BkpC,UAAWG,IAC/C,CAAEJ,KAAMhpC,EAAeipC,UAAWI,IAClC,CAAEL,KAAM/oC,YAAqBgpC,UEXkB,SAAC7mC,GAChD,MAAwBW,mBAA2B,MAAnD,mBAAO4H,EAAP,KAAa2+B,EAAb,KACAn+B,qBAAU,WACG,OAAPR,GAAevI,EAAMpQ,MAAMipC,OAAO99B,IAAI4qC,GAAawB,QAAQnnC,EAAMpQ,MAAMipC,OAAO99B,IACjF3B,MAAK,SAAAqB,GAAQ,OAAEysC,EAAQzsC,EAASoB,SAChCuN,OAAM,kBAAI5Y,QAAQE,IAAI,8KAEzB,IAAM02C,EAAS,iBAAM7+B,QAAN,IAAMA,OAAN,EAAMA,EAAMpB,YAAYC,OAAxB,mBAAkCmB,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAMpB,YAAYE,SAC7DggC,EAAS,UAAa,OAAP9+B,GAAeA,EAAKlI,MAAQrC,EAAMuK,EAAKlI,MAAMC,MAAM,KAAK,IAAM,GAApE,mBAA0EiI,QAA1E,IAA0EA,OAA1E,EAA0EA,EAAMpI,aAAarQ,MACtGgqC,EAAe,CACnBnyB,MAAO,sHACP7L,IAAK+B,EACLuE,QAAU,mCACV,sBAAK9E,UAAU,wBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKsI,IAAKkC,GAAKhC,IAAI,GAAGxI,UAAU,uBAElC,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,kBAAf,SAAkC8pC,IAClC,qBAAK9pC,UAAU,oBAAf,SAAoC+pC,IACpC,sBAAK/pC,UAAU,yBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,mBAAGA,UAAU,gBACb,mFAEF,sBAAKA,UAAU,UAAf,UACE,mBAAGA,UAAU,mBACb,kFAEF,sBAAKA,UAAU,UAAf,UACE,mBAAGA,UAAU,uBACb,sHAOV,OACE,mCACE,cAAC,GAAD,eAAgBw8B,QF5BpB,CAAE8M,KAAM9oC,oBAA4B+oC,UAAWS,IAC/C,CAAEV,KAAMnpC,EAAaopC,UAAWC,KAErBS,GAAkB,CAC7B,CAAEX,KAAMnpC,EAAaopC,UAAWW,IAChC,CAAEZ,K/FlC8B,gB+FkCJC,UGlBM,WAClC,IAAM3lC,EAAU8E,cAChB,EAA0CrF,mBAAgC,MAA1E,mBAAO6+B,EAAP,KAAsBC,EAAtB,KACA12B,qBAAU,WACY,OAAhBy2B,GAAsBV,GAAoBa,mBAAmBvmC,MAAK,SAAAqB,GAAQ,OAC5EglC,EAAiBhlC,EAASoB,KAAK2jC,kBAC/Bp2B,OAAM,WACNq2B,EAAiB,IACjBv+B,EAAQC,KAAK,oLACX,CAACq+B,EAAet+B,IACtB,IAAOV,EAAaC,qBAAWC,IAAxBF,UAqBCgkC,EAAQ,uCAAG,WAAO3oC,EAAqB4oC,GAA5B,iBAAAvgC,EAAA,sDACXN,EAAyB,GAC/B,IACU6jC,EAAQ5rC,EAAK/L,KAAKkkB,OAAO1T,MAAM,KACrCsD,EAAQgQ,uBAAyB,CAACxM,OAAQqgC,EAAM,GAAIpgC,QAASogC,EAAM,IAC/DA,EAAMxqC,OAAO,IAAI2G,EAAQgQ,uBAAuBtM,QAASmgC,EAAM,IAC/D5rC,EAAK6rC,eAAc9jC,EAAQ+P,oBAAoB,CAACunB,aAAcr/B,EAAK6rC,aAAcvM,MAAM,IAC3Fv3B,EAAQgG,MAAQ/N,EAAK+N,MACrBhG,EAAQ+gC,SAAW9oC,EAAK8oC,SACxB/gC,EAAQ+jC,sBAAwB9rC,EAAK8rC,sBACrC/jC,EAAQw2B,gBAAkBv+B,EAAKsE,aAAapF,GAC5CyF,EAAUonC,aAAahkC,GACzB,MAAO7V,GACPmT,EAAQC,KAAK,UAAUpT,EAAEoM,SAbV,2CAAH,wDAgBV2qC,EAAmB,SAACC,GAAD,SAAkBA,EAAKC,UAAWD,EAAKl0C,QAC1Do0C,EAAsB,SAACF,GAC3B,OAAQD,EAAiBC,IAAS,uBAAOznC,UAAU,UAAjB,SAA4BynC,EAAKl0C,SAErE,OAAI2uC,EAEJ,mCACE,qBAAKliC,UAAU,aAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKsI,IAAKs/B,GAAM5nC,UAAU,WAAWwI,IAAI,SACzC,sBAAKxI,UAAU,aAAf,UACE,oGACA,cAAC,KAAD,CAAMknC,SAAUA,EAAUW,cAAe,CAACr1C,KAAM,GAAI8Z,MAAO,GAAI+6B,SAAU,GAAIgD,sBAAuB,GAAIxnC,aAAc,KAAMunC,aAAc,IACxItC,SAlDK,SAACvpC,GAChB,IAAI8I,EAAc,GAiBlB,QAhBK9I,EAAK/L,MAAS+L,EAAK/L,KAAKkkB,OAAO1T,MAAM,KAAKrD,OAAS,KAChD0H,EAAO7U,KAAO,4IAEjB+L,EAAK+N,MAEE,4CAA4C/Z,KAAKgM,EAAK+N,SAC/DjF,EAAOiF,MAAQ,2FAFfjF,EAAOiF,MAAQ,sGAIb/N,EAAK8oC,SAEC9oC,EAAK8oC,UAAY9oC,EAAK8oC,WAAW9oC,EAAK8rC,wBAC9ChjC,EAAOgjC,sBAAwB,4GAF/BhjC,EAAOggC,SAAW,qIAII,MAArB9oC,EAAKsE,eACNwE,EAAOxE,aAAe,sLAElBwE,GAiCG0gC,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,OACR,uBAAMd,SAAUc,EAAchoC,UAAU,UAAxC,UACE,cAAC,KAAD,CAAOxN,KAAK,OAAOu1C,OAAQ,gBAAGhf,EAAH,EAAGA,MAAO0e,EAAV,EAAUA,KAAV,OACvB,sBAAKznC,UAAU,UAAf,UACE,uBAAMA,UAAU,mCAAhB,UACC,cAAC,KAAD,yBAAWvC,GAAG,QAAWsrB,GAAzB,IAAgCxZ,WAAS,EAACvP,UAAWgE,YAAW,CAAE,YAAawjC,EAAiBC,QAC/F,uBAAOv4B,QAAQ,OAAOlP,UAAWgE,YAAW,CAAE,UAAWwjC,EAAiBC,KAA1E,gIAEDE,EAAoBF,SAG3B,cAAC,KAAD,CAAOj1C,KAAK,QAAQu1C,OAAQ,gBAAGhf,EAAH,EAAGA,MAAO0e,EAAV,EAAUA,KAAV,OACxB,sBAAKznC,UAAU,UAAf,UACE,uBAAMA,UAAU,mCAAhB,UACE,mBAAGA,UAAU,mBACb,cAAC,KAAD,yBAAWvC,GAAG,SAAYsrB,GAA1B,IAAiC/oB,UAAWgE,YAAW,CAAE,YAAawjC,EAAiBC,QACvF,uBAAOv4B,QAAQ,QACflP,UAAWgE,YAAW,CAAE,UAAWwjC,EAAiBC,KADpD,uBAGDE,EAAoBF,SAGzB,cAAC,KAAD,CAAOj1C,KAAK,WAAWu1C,OAAQ,gBAAGhf,EAAH,EAAGA,MAAO0e,EAAV,EAAUA,KAAV,OAC7B,sBAAKznC,UAAU,UAAf,UACE,uBAAMA,UAAU,mCAAhB,UACE,cAAC,KAAD,yBAAUvC,GAAG,YAAesrB,GAA5B,IAAmCmf,YAAU,EAACloC,UAAWgE,YAAW,CAAE,YAAawjC,EAAiBC,QACpG,uBAAOv4B,QAAQ,WAAWlP,UAAWgE,YAAW,CAAE,UAAWwjC,EAAiBC,KAA9E,sDAEDE,EAAoBF,SAGzB,cAAC,KAAD,CAAOj1C,KAAK,wBAAwBu1C,OAAQ,gBAAGhf,EAAH,EAAGA,MAAO0e,EAAV,EAAUA,KAAV,OAC1C,sBAAKznC,UAAU,UAAf,UACE,uBAAMA,UAAU,mCAAhB,UACE,cAAC,KAAD,yBAAUvC,GAAG,yBAA4BsrB,GAAzC,IAAiDmf,YAAU,EAACloC,UAAWgE,YAAW,CAAE,YAAawjC,EAAiBC,QAClH,uBAAOv4B,QAAQ,wBAAwBlP,UAAWgE,YAAW,CAAE,UAAWwjC,EAAiBC,KAA3F,4FAEDE,EAAoBF,SAGzB,cAAC,KAAD,CAAOj1C,KAAK,eAAeu1C,OAAQ,gBAAGhf,EAAH,EAAGA,MAAO0e,EAAV,EAAUA,KAAV,OACjC,sBAAKznC,UAAU,UAAf,UACE,uBAAMA,UAAU,gBAAhB,UACC,cAAC,KAAD,yBAAUvC,GAAG,gBAAmBsrB,GAAhC,IAAuCvZ,QAAS0yB,EAC/CxyB,QAAM,EAACgjB,WAAS,EAAC/iB,YAAY,OAAO3P,UAAU,0CAC9C,uBAAOkP,QAAQ,eAAelP,UAAWgE,YAAW,CAAE,UAAWwjC,EAAiBC,KAAlF,sGAEDE,EAAoBF,SAGzB,cAAC,KAAD,CAAOj1C,KAAK,QAAQu1C,OAAQ,gBAAGhf,EAAH,EAAGA,MAAO0e,EAAV,EAAUA,KAAV,OAC1B,sBAAKznC,UAAU,UAAf,UACE,uBAAMA,UAAU,mCAAhB,UACE,mBAAGA,UAAU,gBACd,cAAC,KAAD,yBAAWvC,GAAG,SAAYsrB,GAA1B,IAAiCxQ,KAAK,mBAAoBvY,UAAWgE,YAAW,CAAE,YAAawjC,EAAiBC,QAC/G,uBAAOv4B,QAAQ,QAAQlP,UAAWgE,YAAW,CAAE,UAAWwjC,EAAiBC,KAA3E,4GAEDE,EAAoBF,SAG7B,cAAC,KAAD,CAAQ1iC,KAAK,SAASZ,MAAM,+CAIlC,cAAC,GAAD,WAIM,+BH/GZ,CAAEmlC,KAAMiB,sBAA+BhB,UItByB,SAAC7mC,GACjE,IAAOQ,EAAaC,qBAAWC,IAAxBF,UAUDskC,EAAmB,SAACC,GAAD,SAAkBA,EAAKC,UAAWD,EAAKl0C,QAC1Do0C,EAAsB,SAACF,GAC3B,OAAQD,EAAiBC,IAAS,uBAAOznC,UAAU,UAAjB,SAA4BynC,EAAKl0C,SAKrE,OACA,mCACE,qBAAKyM,UAAU,aAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKsI,IAAKs/B,GAAM5nC,UAAU,OAAOwI,IAAI,SACrC,sBAAMxI,UAAU,aAAhB,UACE,+IACA,cAAC,KAAD,CAAMknC,SAXC,SAAC3oC,EAAkB4oC,GACjCjkC,EAAUsnC,UAAUjsC,IAUaspC,cAAe,CAAE4C,gBAAiB/nC,EAAMpQ,MAAMipC,OAAOxsB,KAAKs4B,SAAU,GAAIgD,sBAAuB,IACvHvC,SAzBK,SAACvpC,GAChB,IAAI8I,EAAc,GAMlB,OALK9I,EAAK8oC,SAEC9oC,EAAK8oC,UAAY9oC,EAAK8oC,WAAW9oC,EAAK8rC,wBAC9ChjC,EAAOgjC,sBAAwB,4GAF/BhjC,EAAOggC,SAAW,qIAIdhgC,GAmBG0gC,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,OACR,uBAAOd,SAAUc,EAAehoC,UAAU,UAA1C,UACI,cAAC,KAAD,CAAOxN,KAAK,WAAYu1C,OAAQ,gBAAGhf,EAAH,EAAGA,MAAO0e,EAAV,EAAUA,KAAV,OAC9B,sBAAKznC,UAAU,UAAf,UACE,uBAAMA,UAAU,mCAAhB,UACE,cAAC,KAAD,yBAAUvC,GAAG,WAAWwqC,aAAa,OAAUlf,GAA/C,IAAsDmf,YAAU,EAACloC,UAAWgE,YAAW,CAAE,YAAawjC,EAAiBC,QACvH,uBAAOv4B,QAAQ,WAAWlP,UAAWgE,YAAW,CAAE,UAAWwjC,EAAiBC,KAA9E,qFAEDE,EAAoBF,SAGzB,cAAC,KAAD,CAAOj1C,KAAK,wBAAwBu1C,OAAQ,gBAAGhf,EAAH,EAAGA,MAAO0e,EAAV,EAAUA,KAAV,OAC1C,sBAAKznC,UAAU,UAAf,UACE,uBAAMA,UAAU,mCAAhB,UACE,cAAC,KAAD,yBAAUvC,GAAG,yBAA4BsrB,GAAzC,IAAiDmf,YAAU,EAACloC,UAAWgE,YAAW,CAAE,YAAawjC,EAAiBC,QAClH,uBAAOv4B,QAAQ,wBAAwBlP,UAAWgE,YAAW,CAAE,UAAWwjC,EAAiBC,KAA3F,4FAEDE,EAAoBF,SAG7B,cAAC,KAAD,CAAQ1iC,KAAK,SAASZ,MAAM,iEAIlC,cAAC,GAAD,aJ7BN,CAAEmlC,KAAMppC,EAAYqpC,UAAWW,KAEpBQ,GAAgB,CAC3B,CAAEpB,KAAMqB,oBAA6BpB,UK9BU,SAAC7mC,GAChD,OACE,qCACE,mFACA,gCAAMA,EAAMpQ,MAAMipC,OAAO1+B,QAAzB,YL2BJ,CAAEysC,KAAMsB,gBAAyBrB,UM9BU,SAAC7mC,GAC5C,OACE,mCACE,qBAAK1C,UAAU,aAAf,SACE,sBAAKA,UAAU,eAAf,UACE,uEACA,8BAAM0C,EAAMpQ,MAAMipC,OAAOhoC,kBCYpBs3C,GAxBOnjC,aAAS,WAC7B,IAAM9D,EAAU8E,cACTxF,EAAaC,qBAAWC,IAAxBF,UACD4nC,EAAS5nC,EAAU4nC,QACnBC,EAAU7nC,EAAU6nC,SAC1B7nC,EAAU8nC,WAAWpnC,GACrB6H,qBAAU,WACJq/B,EAAMnrC,OAAO,IAAMorC,GACrB7nC,EAAU+nC,cAEZ,CAACH,EAAO5nC,EAAW6nC,IACrB,IAAMG,EAAgBhoC,EAAU6nC,UAAaD,EAAMnrC,OAAO,EAAM0pC,GAAcY,GAC9E,OACE,eAAC,IAAD,WACIiB,EAAa7mC,KACb,gBAAEilC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,UAAR,OAAqB,cAAC,IAAD,CAAkBD,KAAMA,EAAM6B,UAAW5B,EAAW6B,OAAK,GAA7C9B,MAEjCoB,GAAcrmC,KACd,gBAAEilC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,UAAR,OAAqB,cAAC,IAAD,CAAkBD,KAAMA,EAAM6B,UAAW5B,EAAW6B,OAAK,GAA7C9B,MAEnC,cAAC,IAAD,CAAO6B,UAAWprC,UCZTsrC,I,qBARA,WACb,OACE,cAAC,IAAD,UACE,cAAC,GAAD,QCHeC,G,WAUnB,aAAe,0BATP31B,cASM,OARN41B,eAQM,OAPNC,cAOM,OANNC,qBAMM,OALNC,kBAKM,OAJNC,oBAIM,OAHNC,iBAGM,OAFNC,qBAEM,EACZl3B,KAAK42B,WAAY,EACjB52B,KAAKgB,SAAW,IAAIgI,GAAQuB,IAC5BvK,KAAKg3B,gBAAiB,EACtBh3B,KAAKi3B,aAAc,EACnB32B,aAAmBN,M,uDAGrB,WAAsB,IAAD,OACbm3B,EAAWplC,aAAaC,QAAQ,WAClCmlC,GACFn3B,KAAK82B,gBAAkBl7C,KAAKw7C,MAAMD,GAClCn3B,KAAKq3B,iBAELxuB,GAAYyuB,aACTnwC,MAAK,SAACqB,GACL,EAAKsuC,gBAAkBtuC,EAASoB,KAAKA,KAAK8F,KAAI,SAACZ,GAAU,IAAD,EACtD,MAAO,CAAEsL,KAAI,UAAEtL,EAAKsL,YAAP,aAAE,EAAW6nB,OAAO,EAAG,GAAIpkC,KAAMiR,EAAK0S,sBAErDzP,aAAaO,QAAQ,UAAW1W,KAAKC,UAAU,EAAKi7C,kBACpD,EAAKO,mBAEN5P,SAAQ,kBAAO,EAAKmP,WAAY,O,8DAGvC,WAAgBpiC,GAAhB,6BAAAvC,EAAA,6DAA+B6W,EAA/B,+BAA0CjN,GACxCmE,KAAK42B,WAAY,EADnB,kBAG2B/tB,GAAYN,UAAU/T,EAAOsU,GAHxD,cAGUtgB,EAHV,QAIiBoB,KAAKA,KAAMoW,KAAK+2B,aAAevuC,EAASoB,KAAKA,KACrDoW,KAAK+2B,aAAe,GAL7B,kBAMW/2B,KAAK+2B,cANhB,yCAQIx4C,QAAQE,IAAR,MARJ,kBASW,IATX,yBAWIuhB,KAAK42B,WAAY,EAXrB,6E,kFAcA,WAAiB,IAAD,EACd,iBAAO52B,KAAK82B,uBAAZ,aAAO,EAAsB77B,MAAK,SAACnM,GAAD,OAAUA,EAAKsL,OAASyB,Q,kEAE5D,WAAoB6K,EAAgBroB,GAApC,6BAAA4T,EAAA,6DAAmDuC,EAAnD,+BAA2D,GACzDwL,KAAK42B,WAAY,EADnB,kBAG2B/tB,GAAYrB,cAAcd,EAAQroB,EAAOmW,GAHpE,cAGUhM,EAHV,QAIiBoB,KAAKA,KAChBoW,KAAK+2B,aAAevuC,EAASoB,KAAKA,KAAK8F,KAAI,SAACZ,GAE1C,MADmB,aAAfA,EAAKzQ,QAAsByQ,EAAKjR,KAAL,UAAeiR,EAAKjR,KAApB,YAA4BiR,EAAKub,YACzDvb,KAENkR,KAAK+2B,aAAe,GAT7B,kBAUW/2B,KAAK+2B,cAVhB,uBAYI/2B,KAAK42B,WAAY,EAZrB,yE,wFAoBA,WACE,IAAMrqB,EAAOvM,KAAKgB,SAClB,MAAM,GAAN,OAAUuL,EAAK/K,mBAAf,OAAmC+K,EAAK5D,KAAO,KAAO4D,EAAK5D,KAAO,IAAlE,OACE4D,EAAK5F,WAAa,KAAO4F,EAAK5F,WAAa,M,+BAG/C,WACE,IAAM4F,EAAOvM,KAAKgB,SAOlB,OALA3B,GAAqB,aAAckN,EAAK5F,WAAY4F,EAAKtO,aAEzDoB,GAAqB,SAAUkN,EAAK3F,OAAQ2F,EAAKtO,aAEjDoB,GAAqB,YAAakN,EAAKzF,UAAWyF,EAAKtO,aAChDsO,EAAK7L,4B,2BAGd,WACE,IAAM6L,EAAOvM,KAAKgB,SAClB,OAAQuL,EAAK3F,SAAW2F,EAAKzF,YAAcyF,EAAK5F,a,0BAIlD,WAA2B,IAAD,EAClB4F,EAAOvM,KAAKgB,SACZsB,EAAU,CACdxZ,GAAIyjB,EAAKzjB,GACTyY,MAAK,UAAEgL,EAAKhL,aAAP,aAAE,EAAYnH,KACnBoH,kBAAmBxB,KAAKwB,oBACxBoF,OAAQ2F,EAAK3F,OACbE,UAAWyF,EAAKzF,UAChBH,WAAY4F,EAAK5F,WACjBoD,aAAcwC,EAAKtG,SACnBgE,cAAesC,EAAKtF,SACpB+C,gBAAiBuC,EAAKvF,SACtBkD,YAAaqC,EAAK5D,KAClBvJ,YAAamN,EAAK7F,OAClBhG,wBAAwB,aAAKV,KAAKu3B,sBAEpC,OAAOvb,GAAY1Z,K,mBAMrB,WACE,OAAOtC,KAAK62B,U,IAJd,SAAY5nC,GACV+Q,KAAK62B,SAAW5nC,I,qBASlB,WACE,OAAO+Q,KAAK42B,W,IAJd,SAAcY,GACZx3B,KAAK42B,UAAYY,I,mBAKnB,WACE,OAAOx3B,KAAKgB,U,IAEd,SAAY9Z,GACV8Y,KAAKgB,SAAW9Z,I,0BAElB,WACE,OAAO8Y,KAAK82B,kB,uBAEd,WACE,OAAO92B,KAAK+2B,e,mBAEd,WAAS,IAAD,OACgB9mC,IAAlB+P,KAAKgB,WACThB,KAAKgB,SAAS2F,gBAAa1W,EAC3B+P,KAAKgB,SAASyE,cAAWxV,EACzB+P,KAAKgB,SAAS2E,UAAO1V,EACrB+P,KAAKgB,SAAS8F,eAAY7W,EAC1B+P,KAAKgB,SAAS4F,YAAS3W,EACvB+P,KAAKgB,SAAS+E,YAAS9V,EACvB+P,KAAKgB,SAAS6E,UAAO5V,EACrB+P,KAAKgB,SAASiF,cAAWhW,EACzB+P,KAAKgB,SAASgG,cAAW/W,EACzB+P,KAAKgB,SAASiG,cAAWhX,EACzB+P,KAAKgB,SAASQ,mBAAoB,UAAAxB,KAAKgB,SAASO,aAAd,eAAqB1jB,MAAO,OAAQ,K,yBAExE,WACE,OAAOmiB,KAAKg3B,gB,IAEd,SAAkB9vC,GAChB8Y,KAAKg3B,eAAiB9vC,I,sBAGxB,WACE,OAAO8Y,KAAKi3B,a,IAEd,SAAe/vC,GACb8Y,KAAKi3B,YAAc/vC,I,0BAGrB,WACE,OAAO8Y,KAAKk3B,iB,IAEd,SAAmBhwC,GACjB8Y,KAAKk3B,gBAAkBhwC,M,KCzKNuwC,G,WAYnB,aAAqC,IAAD,EAAxB1pC,EAAwB,uDAAhB,GAAgB,0BAX5ByR,SAW4B,OAV5B8B,aAU4B,OAT5Bo2B,aAS4B,OAR5BC,iBAQ4B,OAP5BC,iBAO4B,OAN5BC,4BAM4B,OAL5BC,eAK4B,OAJ5B/rB,WAI4B,OAH5BvL,eAG4B,OAF5BhC,kBAE4B,OAD5B0C,aAC4B,EAClClB,KAAK+L,MAAQhe,EAAMoe,MAAQC,eAC3BpM,KAAKkB,QAAL,eAAoBnT,GAChBA,EAAM2U,SAAQ1C,KAAKsB,QAAU,IAAIT,GAAO9S,EAAM2U,SAClD1C,KAAK63B,uBAAyB9pC,EAAMo6B,gBAChCp6B,EAAM2V,SAAQ1D,KAAK03B,QAAU3pC,EAAM2V,QACvC1D,KAAK83B,UAAY/pC,EAAMgqC,WAnBc,EAoBjChqC,EAAM0V,aAAYzD,KAAK23B,YAAc,IAAIpgC,KAAKxJ,EAAM0V,aACpD1V,EAAMjF,KAAIkX,KAAKR,IAAMzR,EAAMjF,IAC3BiF,EAAM4U,aAAY3C,KAAK43B,YAAc7pC,EAAM4U,YAC3C5U,EAAMuV,WAAUtD,KAAKQ,UAAY,IAAIjB,GAASxR,EAAMuV,WACxDtD,KAAKxB,cACH,UAAAzQ,EAAMsS,oBAAN,eAAoB3Q,KAAI,SAACZ,GACvB,OAAO,2BAAKA,GAAZ,IAAkBsL,KAAM8B,GAAgBpN,EAAKsL,aACzC,GAERkG,aAAmBN,UAAM/P,EAAW,CAAEsQ,MAAM,I,kDAE9C,WAA4B,IAAD,IACrBy3B,EAAW,CAAE7rB,KAAMnM,KAAK+L,OAa5B,OAZI/L,KAAKR,MAAKw4B,EAASlvC,GAAKkX,KAAKlX,IAC7BkX,KAAK83B,YAAWE,EAASD,UAAY/3B,KAAK83B,WAC1C93B,KAAK23B,cAAaK,EAASv0B,WAAazD,KAAK23B,YAAYl3B,gBACzDT,KAAK43B,cAAaI,EAASr1B,WAAa3C,KAAK43B,aAC7C53B,KAAK03B,UAASM,EAASt0B,OAAS1D,KAAK03B,SACrC13B,KAAKQ,UAAWw3B,EAAStZ,oBAAsB1e,KAAKQ,UAAU8M,iBAC7D,UAAItN,KAAKkB,eAAT,iBAAI,EAAcoC,gBAAlB,aAAI,EAAwBxa,MAC/BkvC,EAAStZ,oBAAsB,CAAE51B,GAAIkX,KAAKkB,QAAQoC,SAASxa,GAAIwE,SAAU,MACvE0S,KAAK63B,yBAAwBG,EAAS7P,gBAAkBnoB,KAAK63B,wBAC7D73B,KAAKsB,QAAS02B,EAASvZ,kBAAoBze,KAAKsB,QAAQgM,gBACvD0qB,EAASC,UAAY,KACtBj4B,KAAK/B,YAAYjT,OAAS,IAAGgtC,EAASt3B,wBAA0BV,KAAKU,2BAClEs3B,I,cAET,WACE,OAAOh4B,KAAKR,K,IAEd,SAAO1W,GACLkX,KAAKR,IAAM1W,I,kBAEb,WACE,OAAOkX,KAAKsB,S,IAGd,SAAWpa,GACT8Y,KAAKsB,QAAUpa,I,kBAGjB,WACE,OAAO8Y,KAAK03B,S,IAEd,SAAWh0B,GACT1D,KAAK03B,QAAUh0B,I,sBAEjB,WACE,OAAO1D,KAAK23B,a,IAEd,SAAel0B,GACbzD,KAAK23B,YAAcl0B,I,gBAErB,WACE,OAAOzD,KAAK+L,Q,uBAGd,WACE,OAAO/L,KAAKxB,c,IAEd,SAAgBP,GACd+B,KAAKxB,aAAeP,I,qCAItB,WACE,OAAO+B,KAAKxB,aAAa9O,KAAI,SAACwL,GAC5B,OAAO,eAAKA,Q,qBAIhB,WACE,OAAO8E,KAAK83B,W,IAEd,SAAcC,GACZ/3B,KAAK83B,UAAYC,I,iCAEnB,WACE,OAAO/3B,KAAK63B,wB,IAEd,SAA0BK,GACxBl4B,KAAK63B,uBAAyBK,I,sBAEhC,WACE,OAAOl4B,KAAK43B,a,IAEd,SAAej1B,GACb3C,KAAK43B,YAAcj1B,I,oBAErB,WACE,OAAO3C,KAAKQ,W,IAEd,SAAa8C,GACXtD,KAAKQ,UAAY8C,I,yBAGnB,SAAYpc,EAAyBixC,GAC/BjxC,IAAUixC,QACaloC,IAArB+P,KAAK23B,cACP33B,KAAK/B,YAAc+B,KAAK/B,YAAYlD,QAAO,SAACnI,GAAD,MAAqC,eAAxBA,EAAQuL,gBAClE6B,KAAKyD,WAAavc,EAClB8Y,KAAK2C,gBAAa1S,GACT/I,GAASixC,QACMloC,IAApB+P,KAAKyD,aACPzD,KAAK/B,YAAc+B,KAAK/B,YAAYlD,QAAO,SAACnI,GAAD,MAAqC,eAAxBA,EAAQuL,gBAClE6B,KAAKyD,WAAavc,EAClB8Y,KAAK2C,WAAc3C,KAAKyD,WAAoB6R,gBAE5CtV,KAAKyD,gBAAaxT,EAClB+P,KAAK2C,gBAAa1S,O,KCzHHgwB,G,WA+CnB,WAAYlyB,GAAsB,IAAD,yCA9CzByR,SA8CyB,OA7CzBE,aA6CyB,OA5CzBC,aA4CyB,OA3CzBy4B,gBA2CyB,OA1CzBC,eA0CyB,OAzCzBC,iBAyCyB,OAxCzBC,iBAwCyB,OAvCzBC,kBAuCyB,OAtCzBR,cAsCyB,OArCzBS,mBAqCyB,OApCzBC,oBAoCyB,OAnCzBC,oBAmCyB,OAlCzBC,gBAkCyB,OAjCzBC,iBAiCyB,OAhCzBC,iBAgCyB,OA/BzBC,oBA+ByB,OA9BzBC,qBA8ByB,OA7BzBC,mBA6ByB,OA5BzBC,gBA4ByB,OA3BzBC,oBA2ByB,OA1BzBC,2BA0ByB,OAzBzBC,cAyByB,OAxBzBC,cAwByB,OAvBzBC,cAuByB,OAtBzBC,cAsByB,OArBzBC,mBAqByB,OApBzBC,iBAoByB,OAnBzBC,gBAmByB,OAlBzB5tB,WAkByB,OAjBzB6tB,gBAiByB,OAhBzBC,gBAgByB,OAfzBC,uBAeyB,OAdzBC,uBAcyB,OAbzBC,sBAayB,OAZzBC,0BAYyB,OAXzBC,aAWyB,OAVzBC,eAUyB,OATzBC,yBASyB,OARzB57B,kBAQyB,OAPzBqsB,aAOyB,OANzBwP,mBAMyB,OALzBC,kBAKyB,OAJzBp5B,aAIyB,OAHzBq5B,gBAGyB,OAFjCC,eAEiC,EAC3BzsC,EAAMsS,cAAgBtS,EAAMsS,aAAarV,OAAS,EACpDgV,KAAKxB,aAAezQ,EAAMsS,aAAa3Q,KAAI,SAACZ,GAC1C,OAAO,2BAAKA,GAAZ,IAAkBsL,KAAM8B,GAAgBpN,EAAKsL,WAE5C4F,KAAKxB,aAAe,GACzBwB,KAAKkB,QAAL,eAAoBnT,GACpBiS,KAAKu6B,WAAaxsC,EAAM0sC,WACxBz6B,KAAK6qB,QAAU,GACf7qB,KAAKR,IAAMzR,EAAMjF,KAAO,EACxBkX,KAAK+L,MAAQhe,EAAMoe,MAAQC,eAC3BpM,KAAKq6B,eAAgB,UAAAtsC,EAAM8xB,iBAAN,eAAiB/2B,MAAjB,UAAuBiF,EAAM0U,eAA7B,aAAuB,EAAe0lB,iBAC3DnoB,KAAKg4B,SAAWjqC,EAAM0U,QAAU,IAAIg1B,GAAQ1pC,EAAM0U,SAAW,IAAIg1B,GAC7D1pC,EAAMskC,aAAYryB,KAAKo4B,WAAa,IAAI7gC,KAAKxJ,EAAMskC,aACvDryB,KAAKq4B,UAAYtqC,EAAMgjC,UACvB/wB,KAAKN,QAAU3R,EAAMyM,QzFqXG,KyFpXxBwF,KAAKL,QAAU5R,EAAMjG,OACfiG,EAAM4jC,iBAAgB3xB,KAAK24B,eAAiB,IAAIphC,KAAKxJ,EAAM4jC,iBACjE3xB,KAAK44B,WAAa7qC,EAAM6jC,WACxB5xB,KAAKu4B,YAAcxqC,EAAM2sC,YACzB16B,KAAKs4B,YAAcvqC,EAAM4sC,YACzB36B,KAAK45B,WAAa7rC,EAAM6sC,WACxB56B,KAAKy4B,cAAgB1qC,EAAM8sC,eAC3B76B,KAAK04B,eAAiB3qC,EAAM+sC,gBAC5B96B,KAAK25B,WAAL,2BACK5rC,EAAMqxB,YADX,IAEE1e,yBACE,UAAA3S,EAAMqxB,kBAAN,mBAAkB/e,oBAAlB,eAAgC3Q,KAAI,SAACZ,GACnC,OAAO,2BAAKA,GAAZ,IAAkBsL,KAAM8B,GAAgBpN,EAAKsL,aACzC,KAEV4F,KAAK84B,YAAc/qC,EAAMikC,YACzBhyB,KAAKk5B,WAAanrC,EAAMgtC,WACxB/6B,KAAKg5B,gBAAkBjrC,EAAMitC,gBAC7Bh7B,KAAK+4B,eAAiBhrC,EAAMktC,eAC5Bj7B,KAAKi5B,cAAgBlrC,EAAMmtC,cACvBntC,EAAMotC,gBAAen7B,KAAKw4B,aAAe,IAAIjhC,KAAKxJ,EAAMotC,gBACxDptC,EAAM6xB,aAAY5f,KAAK65B,WAAa,IAAIltB,GAAU5e,EAAM6xB,aACxD7xB,EAAM8vB,SAAQ7d,KAAKk6B,QAAU,IAAIrd,GAAc9uB,EAAM8vB,SACrD9vB,EAAM2xB,WAAU1f,KAAKm6B,UAAY,IAAItd,GAAc9uB,EAAM2xB,WACzD3xB,EAAM0xB,sBAAqBzf,KAAKo6B,oBAAsB,IAAIvd,GAAc9uB,EAAM0xB,sBAC9E1xB,EAAMqtC,kBAAiBp7B,KAAKm5B,eAAiB,IAAI5hC,KAAKxJ,EAAMqtC,kBAChEp7B,KAAKo5B,sBAAwBrrC,EAAMstC,uBACnCr7B,KAAK85B,kBAAoB/rC,EAAMutC,kBAC/Bt7B,KAAK+5B,kBAAoBhsC,EAAMmkC,kBAC/BlyB,KAAKg6B,iBAAmBjsC,EAAMwtC,iBAC9Bv7B,KAAKi6B,qBAAuBlsC,EAAMytC,qBAE9BztC,EAAMsxB,SAAUrf,KAAKq5B,SAAW,IAAIlpB,GAAYpiB,EAAMsxB,UACrDrf,KAAKq5B,SAAW,IAAIlpB,GAAY,IACjCpiB,EAAMuxB,WAAUtf,KAAKs5B,SAAW,IAAInpB,GAAYpiB,EAAMuxB,WACtDvxB,EAAMwxB,WAAUvf,KAAKu5B,SAAW,IAAIppB,GAAYpiB,EAAMwxB,WACtDxxB,EAAMqjC,aAAapxB,KAAKsY,iBAAiBvqB,EAAMqjC,aAE/CrjC,EAAMyxB,WAAUxf,KAAKw5B,SAAW,IAAIrpB,GAAYpiB,EAAMyxB,WACtDzxB,EAAM4xB,cAAe3f,KAAKy5B,cAAgB1rC,EAAM4xB,cAAcjwB,KAAI,SAAC+X,GAAD,OAAY,IAAI0I,GAAY1I,MAC7FzH,KAAKy5B,cAAgB,GACtB1rC,EAAM4wB,cAAa3e,KAAKs6B,aAAe,IAAIpc,GAAYnwB,EAAM4wB,cACjEre,aAAmBN,UAAM/P,EAAW,CAAEsQ,MAAM,IAC5CP,KAAKw6B,UAAY,GACjBx6B,KAAKw6B,UAAU,GAAKiB,cAAQ,kBAAMp8B,GAAqB,WAAY,EAAK0W,QAAS,EAAKvX,azFsSxE,MyFrSdwB,KAAKw6B,UAAU,GAAKiB,cAAQ,kBAAMp8B,GAAqB,WAAY,EAAKk6B,SAAU,EAAK/6B,azFqSzE,MyFpSdwB,KAAKw6B,UAAU,GAAKiB,cAAQ,kBAAMp8B,GAAqB,WAAY,EAAKsW,QAAS,EAAKnX,azFoSxE,M,4DyFhShB,WACE,OAAOwB,KAAKxB,aAAa9O,KAAI,SAACwL,GAC5B,OAAO,eAAKA,Q,8BAIhB,SAAiBhU,GAET,IAAD,YADAA,GAAS,KAAOA,EAEfA,KAAK,UAAK8Y,KAAKq5B,gBAAV,iBAAK,EAAezoB,iBAApB,aAAK,EAA0B2C,OAAOvT,KAAK05B,YAAc15B,KAAKq5B,SAC9DnyC,KAAK,UAAK8Y,KAAKs5B,gBAAV,iBAAK,EAAe1oB,iBAApB,aAAK,EAA0B2C,OAAOvT,KAAK05B,YAAc15B,KAAKs5B,SACnEpyC,KAAK,UAAK8Y,KAAKu5B,gBAAV,iBAAK,EAAe3oB,iBAApB,aAAK,EAA0B2C,OAAOvT,KAAK05B,YAAc15B,KAAKu5B,SACvEv5B,KAAK05B,iBAAczpC,EALE+P,KAAK05B,iBAAczpC,I,wBAQjD,WAEE,IAAMgC,EAAI+N,KAAKg4B,SAASv0B,WACxB,QAAUxT,IAANgC,EAAiB,OAAO,EAC5B,IAAMypC,EAAOnkC,KAAKokC,IAAI1pC,EAAEqjB,cAAerjB,EAAEsjB,WAAYtjB,EAAEujB,UAAWvjB,EAAEge,WAAYhe,EAAEie,cAC5E0rB,EAAI57B,KAAK24B,eACf,YAAU1oC,IAAN2rC,GACSrkC,KAAKokC,IAAIC,EAAEtmB,cAAesmB,EAAErmB,WAAYqmB,EAAEpmB,UAAWomB,EAAE3rB,WAAY2rB,EAAE1rB,cACpEwrB,I,sBAEhB,WACE,IACMG,EAAK77B,KAAK87B,aAChB,QAAID,GAAWE,KAAKC,MAAMH,EAFL,Q,qBAKvB,WACE,IACMA,EAAK77B,KAAK87B,aAChB,QAAID,GAAWE,KAAKC,MAAMH,EAFN,S,sBAKtB,WACE,IAAMhK,EAAK7xB,KAAK24B,eACV7G,EAAK9xB,KAAKg4B,SAASv0B,WACzB,SAAMouB,IAAQC,IAAWD,EAAGvc,cAAgBwc,EAAGxc,gB,yBAGjD,SAAYpuB,EAAyBixC,GAC/BjxC,IAAUixC,GACZn4B,KAAKqD,cAAgBnc,EACrB8Y,KAAK8C,eAAY7S,GACR/I,GAASixC,GAClBn4B,KAAKqD,cAAgBnc,EACrB8Y,KAAK8C,UAAa9C,KAAKqD,cAAuBiS,gBAE9CtV,KAAKqD,mBAAgBpT,EACrB+P,KAAK8C,eAAY7S,K,+BAIrB,SAAkBwX,GAChB,IAAKzH,KAAK24B,eAAgB,OAAO,EACjC,IAAI7xC,EAAS,IAAIyQ,KAAKyI,KAAK24B,gBAQ3B,OAPIlxB,EAAOuJ,SAASlqB,EAAOm1C,WAAWn1C,EAAOopB,aAAezI,EAAOuJ,SAC/DvJ,EAAOsJ,OAAOjqB,EAAOo1C,SAASp1C,EAAOmpB,WAAaxI,EAAOsJ,OACzDtJ,EAAOqJ,MAAMhqB,EAAOq1C,QAAQr1C,EAAO0uB,UAAY/N,EAAOqJ,MACtDrJ,EAAOyJ,OAAOpqB,EAAOq1C,QAAQr1C,EAAO0uB,UAA2B,EAAf/N,EAAOyJ,OACvDzJ,EAAOwJ,QAAQnqB,EAAOs1C,SAASt1C,EAAOyuB,WAAa9N,EAAOwJ,QAC1DxJ,EAAO0J,OAAOrqB,EAAOu1C,YAAYv1C,EAAOwuB,cAAgB7N,EAAO0J,OACnE1J,EAAO+J,cAAgB1qB,GAChB,I,2BAGT,WAAgC,IAAD,QAOT,IAMF,IAKY,IAjB1Bw1C,EAAQ,CAAEnwB,KAAMnM,KAAK+L,QACrB/L,KAAKR,KAAO,IAAG88B,EAAMxzC,GAAKkX,KAAKR,KAC/BQ,KAAKo4B,aAAYkE,EAAMjK,WAAaryB,KAAKo4B,WAAW33B,gBACxD67B,EAAM5B,YAAc16B,KAAKu4B,YACzB+D,EAAM3B,YAAc36B,KAAKs4B,YACzBgE,EAAMnB,cAAN,UAAsBn7B,KAAKw4B,oBAA3B,aAAsB,EAAmB/3B,eACrCT,KAAKm6B,YACPmC,EAAMC,oBAAsBv8B,KAAKm6B,UAAU7sB,iBACtCgvB,EAAMC,oBAAoBzzC,KAAO,UAACkX,KAAKkB,eAAN,iBAAC,EAAcwe,gBAAf,aAAC,EAAwB52B,MAC7DwzC,EAAMC,oBAAoBzzC,GAAKkX,KAAKkB,QAAQwe,SAAS52B,KAC9CkX,KAAKkB,SAAWlB,KAAKkB,QAAQwe,WACtC4c,EAAMC,oBAAsB,CAAEzzC,GAAIkX,KAAKkB,QAAQwe,SAAS52B,GAAIwE,SAAU,MACpE0S,KAAKk6B,SACPoC,EAAME,kBAAoBx8B,KAAKk6B,QAAQ5sB,iBAClCgvB,EAAME,kBAAkB1zC,KAAO,UAACkX,KAAKkB,eAAN,iBAAC,EAAc2c,cAAf,aAAC,EAAsB/0B,MAAIwzC,EAAME,kBAAkB1zC,GAAKkX,KAAKkB,QAAQ2c,OAAO/0B,KACvGkX,KAAKkB,SAAWlB,KAAKkB,QAAQ2c,SACtCye,EAAME,kBAAoB,CAAE1zC,GAAIkX,KAAKkB,QAAQ2c,OAAO/0B,GAAIwE,SAAU,MAChE0S,KAAKo6B,qBACPkC,EAAMG,+BAAiCz8B,KAAKo6B,oBAAoB9sB,iBAC3DgvB,EAAMG,+BAA+B3zC,KAAO,UAACkX,KAAKkB,eAAN,iBAAC,EAAcue,2BAAf,aAAC,EAAmC32B,MACnFwzC,EAAMG,+BAA+B3zC,GAAKkX,KAAKkB,QAAQue,oBAAoB32B,KACpEkX,KAAKkB,SAAWlB,KAAKkB,QAAQue,sBACtC6c,EAAMG,+BAAiC,CAAE3zC,GAAIkX,KAAKkB,QAAQue,oBAAoB32B,GAAIwE,SAAU,MAgB9F,GAfI0S,KAAK+5B,oBAAmBuC,EAAMpK,kBAAoBlyB,KAAK+5B,mBACvD/5B,KAAKq4B,YAAWiE,EAAMvL,UAAY/wB,KAAKq4B,WACvCr4B,KAAK65B,WAAYyC,EAAMI,sBAAwB18B,KAAK65B,WAAWvsB,gBAC1DtN,KAAKkB,SAAWlB,KAAKkB,QAAQ0e,aAAY0c,EAAMI,sBAAwB,CAAEpvC,SAAU,MACxF0S,KAAK25B,YAAgB35B,KAAK25B,WAAWp4B,OAAWvB,KAAK25B,WAAWn4B,kBAClE86B,EAAMK,sBAAN,eAAmC38B,KAAK25B,YACjC35B,KAAKkB,SAAWlB,KAAKkB,QAAQke,aACpCkd,EAAMK,sBAAwB,CAAE7zC,GAAIkX,KAAKkB,QAAQke,WAAWt2B,GAAIwE,SAAU,MACxE0S,KAAK04B,iBAAgB4D,EAAMxB,gBAAkB96B,KAAK04B,gBAClD14B,KAAK24B,iBAAgB2D,EAAM3K,eAAiB3xB,KAAK24B,gBACjD34B,KAAK44B,aAAY0D,EAAM1K,WAAa5xB,KAAK44B,YACzC54B,KAAKk5B,aAAYoD,EAAMvB,WAAa/6B,KAAKk5B,YACzCl5B,KAAK84B,cAAawD,EAAMtK,YAAchyB,KAAKyO,YAC3CzO,KAAKy5B,cAAczuC,OAAS,IAC9BsxC,EAAMM,yBAA2B58B,KAAKy5B,cAAc/pC,KAAI,SAACZ,GAAD,OAAUA,EAAKwe,qBACrE,UAAAtN,KAAKkB,eAAL,eAAcye,gBAAiB3f,KAAKkB,QAAQye,cAAc30B,OAAS,EAAG,CACxE,IAAIgnB,EAAQ,GACZhS,KAAKkB,QAAQye,cAAclsB,SAAQ,SAAC3E,GAE/BwtC,EAAMM,2BACkE,IAAzEN,EAAMM,yBAAyBh+B,WAAU,SAAC1D,GAAD,OAAQA,EAAGpS,KAAOgG,EAAKhG,OAEhEkpB,EAAM9iB,KAAK,CAAEpG,GAAIgG,EAAKhG,GAAIwE,SAAU,SAEpCgvC,EAAMM,0BAA4B5qB,EAAMhnB,OAAS,EACnDsxC,EAAMM,yBAA2BN,EAAMM,yBAAyB1qB,OAAOF,GAChEA,EAAMhnB,OAAS,IAAGsxC,EAAMM,yBAA2B5qB,GA+B9D,OA7BIhS,KAAKg5B,kBAAiBsD,EAAMtB,gBAAkBh7B,KAAKg5B,iBACnDh5B,KAAK85B,oBAAmBwC,EAAMhB,kBAAoBt7B,KAAK85B,mBACvD95B,KAAKo5B,wBAAuBkD,EAAMjB,uBAAyBr7B,KAAKqP,sBAChErP,KAAKm5B,iBAAgBmD,EAAMlB,gBAAkBp7B,KAAKm5B,gBAClDn5B,KAAKy4B,gBAAe6D,EAAMzB,eAAiB76B,KAAKy4B,eAChDz4B,KAAK45B,aAAY0C,EAAM1B,WAAa56B,KAAK45B,YACzC55B,KAAKi6B,uBAAsBqC,EAAMd,qBAAuBx7B,KAAKsW,qBAC7DtW,KAAK+4B,iBAAgBuD,EAAMrB,eAAiBj7B,KAAK+4B,gBACjD/4B,KAAK/B,YAAYjT,OAAS,IAAGsxC,EAAM57B,wBAA0BV,KAAKU,2BAClEV,KAAKq5B,UAAYr5B,KAAKq5B,SAASzoB,UAAW0rB,EAAMO,oBAAsB78B,KAAKq5B,SAAS/rB,gBAC/EtN,KAAKkB,SAAWlB,KAAKkB,QAAQme,WACpCid,EAAMO,oBAAsB,CAAE/zC,GAAIkX,KAAKkB,QAAQme,SAASv2B,GAAIwE,SAAU,MACpE0S,KAAK05B,cAAa4C,EAAMlL,YAAN,UAAoBpxB,KAAK05B,YAAY9oB,iBAArC,aAAoB,EAA4B2C,OAClEvT,KAAKs5B,UAAYt5B,KAAKs5B,SAAS1oB,UAAW0rB,EAAMQ,oBAAsB98B,KAAKs5B,SAAShsB,gBAC/EtN,KAAKkB,SAAWlB,KAAKkB,QAAQoe,WACpCgd,EAAMQ,oBAAsB,CAAEh0C,GAAIkX,KAAKkB,QAAQoe,SAASx2B,GAAIwE,SAAU,MACpE0S,KAAKu5B,UAAYv5B,KAAKu5B,SAAS3oB,UAAW0rB,EAAMS,oBAAsB/8B,KAAKu5B,SAASjsB,gBAC/EtN,KAAKkB,SAAWlB,KAAKkB,QAAQqe,WACpC+c,EAAMS,oBAAsB,CAAEj0C,GAAIkX,KAAKkB,QAAQqe,SAASz2B,GAAIwE,SAAU,MACpE0S,KAAKw5B,UAAYx5B,KAAKw5B,SAAS5oB,UAAW0rB,EAAMU,oBAAsBh9B,KAAKw5B,SAASlsB,eAAc,GAC7FtN,KAAKkB,SAAWlB,KAAKkB,QAAQse,WACpC8c,EAAMU,oBAAsB,CAAEl0C,GAAIkX,KAAKkB,QAAQse,SAAS12B,GAAIwE,SAAU,MACpE0S,KAAKN,UAAS48B,EAAM9hC,OAASwF,KAAKN,SAClCM,KAAKi5B,gBAAeqD,EAAMpB,cAAgBl7B,KAAKi5B,eAC/Cj5B,KAAKg6B,mBAAkBsC,EAAMf,iBAAmBv7B,KAAKg6B,kBACrDh6B,KAAKg4B,WAAUsE,EAAMW,mBAAqBj9B,KAAKg4B,SAAS1qB,iBAC5DgvB,EAAMY,aAAel9B,KAAKq6B,gBAAL,UAAsBiC,EAAMW,0BAA5B,aAAsB,EAA0B9U,iBACjEnoB,KAAKs6B,eAAcgC,EAAMa,uBAAyBn9B,KAAKs6B,aAAahtB,iBAEjEgvB,I,cAGT,WACE,OAAOt8B,KAAKR,K,IAEd,SAAO1W,GACLkX,KAAKR,IAAM1W,I,kBAEb,WACE,OAAOkX,KAAKN,S,IAEd,SAAWlF,GACTwF,KAAKN,QAAUlF,I,kBAEjB,WACE,OAAOwF,KAAKL,S,IAEd,SAAW7X,GACTkY,KAAKL,QAAU7X,I,qBAEjB,WACE,OAAOkY,KAAKo4B,Y,IAEd,SAAchlC,GACZ4M,KAAKo4B,WAAahlC,I,yBAEpB,WACE,OAAO4M,KAAK24B,gB,IAEd,SAAkBhH,GAChB3xB,KAAK24B,eAAiBhH,I,oBAExB,WACE,OAAO3xB,KAAKq4B,W,IAEd,SAAatH,GACX/wB,KAAKq4B,UAAYtH,I,sBAEnB,WACE,OAAO/wB,KAAKs4B,a,IAEd,SAAe99B,GACbwF,KAAKs4B,YAAc99B,I,sBAErB,WACE,OAAOwF,KAAKu4B,a,IAEd,SAAezwC,GACbkY,KAAKu4B,YAAczwC,I,gBAErB,WACE,OAAOkY,KAAK+L,Q,kBAEd,WACE,OAAO/L,KAAKk6B,S,IAEd,SAAWhzC,GACT8Y,KAAKk6B,QAAUhzC,I,yBAEjB,WACE,OAAO8Y,KAAKm6B,W,IAEd,SAAkBjzC,GAChB8Y,KAAKm6B,UAAYjzC,I,8BAEnB,WACE,OAAO8Y,KAAKo6B,qB,IAEd,SAAuBlzC,GACrB8Y,KAAKo6B,oBAAsBlzC,I,yBAG7B,WACE,OAAO8Y,KAAKm5B,gB,IAEd,SAAkBjyC,GAChB8Y,KAAKm5B,eAAiBjyC,I,4BAExB,WACE,OAAO8Y,KAAK85B,mB,IAEd,SAAqB5yC,GACnB8Y,KAAK85B,kBAAoB5yC,I,4BAE3B,WACE,OAAO8Y,KAAK+5B,mB,IAEd,SAAqB7yC,GACnB8Y,KAAK+5B,kBAAoB7yC,I,2BAE3B,WACE,OAAO8Y,KAAKg6B,kB,IAEd,SAAoB9yC,GAClB8Y,KAAKg6B,iBAAmB9yC,I,+BAE1B,WACE,OAAO8Y,KAAKi6B,sB,IAEd,SAAwB/yC,GACtB8Y,KAAKi6B,qBAAuB/yC,I,mBAG9B,WACE,OAAO8Y,KAAKg4B,W,uBAEd,WACE,OAAOh4B,KAAKw4B,c,IAEd,SAAgB4E,GACdp9B,KAAKw4B,aAAe4E,I,qBAEtB,WACE,OAAOp9B,KAAK44B,Y,IAEd,SAAchH,GACZ5xB,KAAK44B,WAAahH,I,qBAGpB,WACE,OAAO5xB,KAAK45B,YAAc,I,IAG5B,SAAcr2B,GACZvD,KAAK45B,WAAar2B,I,wBAGpB,WACE,OAAOvD,KAAKy4B,e,IAEd,SAAiB4E,GACfr9B,KAAKy4B,cAAgB4E,I,yBAEvB,WACE,OAAOr9B,KAAK04B,gB,IAEd,SAAkB4E,GAChBt9B,KAAK04B,eAAiB4E,I,qBAGxB,WACE,OAAOt9B,KAAK25B,Y,IAEd,SAAczyC,GACZ8Y,KAAK25B,WAAazyC,I,qBAEpB,WACE,OAAO8Y,KAAKk5B,Y,IAEd,SAAchyC,GACZ8Y,KAAKk5B,WAAahyC,I,wBAEpB,WACE,OAAO8Y,KAAKi5B,e,IAEd,SAAiB/xC,GACf8Y,KAAKi5B,cAAgB/xC,I,0BAEvB,WACE,OAAO8Y,KAAKg5B,iB,IAEd,SAAmB9xC,GACjB8Y,KAAKg5B,gBAAkB9xC,I,yBAEzB,WACE,OAAO8Y,KAAK+4B,gB,IAEd,SAAkB7xC,GAChB8Y,KAAK+4B,eAAiB7xC,I,sBAExB,WACE,OAAO8Y,KAAK84B,a,IAEd,SAAe5xC,GACb8Y,KAAK84B,YAAc5xC,I,sBAErB,WACE,OAAO8Y,KAAK64B,a,IAEd,SAAe3xC,GACb8Y,KAAK64B,YAAc3xC,I,qBAErB,WACE,OAAO8Y,KAAK65B,Y,IAEd,SAAc3yC,GACZ8Y,KAAK65B,WAAa3yC,I,gCAEpB,WACE,OAAO8Y,KAAKo5B,uB,IAEd,SAAyBlyC,GACvB8Y,KAAKo5B,sBAAwBlyC,I,mBAE/B,WACE,OAAO8Y,KAAKq5B,U,IAEd,SAAYnyC,GACV8Y,KAAKq5B,SAAWnyC,I,mBAElB,WACE,OAAO8Y,KAAKs5B,U,IAEd,SAAYpyC,GACV8Y,KAAKs5B,SAAWpyC,I,mBAElB,WACE,OAAO8Y,KAAKu5B,U,IAEd,SAAYryC,GACV8Y,KAAKu5B,SAAWryC,I,mBAElB,WACE,OAAO8Y,KAAKw5B,U,IAEd,SAAYtyC,GACV8Y,KAAKw5B,SAAWtyC,I,sBAElB,WACE,OAAO8Y,KAAK05B,a,IAEd,SAAexyC,GACb8Y,KAAK05B,YAAcxyC,I,wBAErB,WACE,OAAO8Y,KAAKy5B,e,IAEd,SAAiBvyC,GACf8Y,KAAKy5B,cAAgBvyC,I,kBAEvB,WACE,OAAO8Y,KAAK6qB,U,uBAEd,WACE,OAAO7qB,KAAKxB,c,IAGd,SAAgBP,GACd+B,KAAKxB,aAAeP,I,uBAGtB,WACE,OAAO+B,KAAKs6B,c,IAEd,SAAgBpzC,GACd8Y,KAAKs6B,aAAepzC,I,qBAEtB,WACE,OAAO8Y,KAAKu6B,Y,IAEd,SAAcrzC,GACZ8Y,KAAKu6B,WAAarzC,I,kBAGpB,WACE,OAAO8Y,KAAKkB,U,qBAKd,WAGElB,KAAKw6B,UAAU/mC,SAAQ,SAAC8pC,GAAD,OAAcA,W,KCthBzCC,aAAU,CACRC,eAAgB,U,IAEGC,G,WAenB,aAAe,IAAD,qCAdNpB,WAcM,OAbNqB,gBAaM,OAZNC,eAYM,OAXNC,YAWM,OAVNC,eAUM,OATNC,YASM,OARNlO,cAQM,OAPNmO,YAOM,OANNC,WAMM,OALNC,WAKM,OAJNC,YAIM,OAHNC,gBAGM,OADd5D,eACc,EACZx6B,KAAK29B,YAAa,EAClB39B,KAAKw6B,UAAY,GACjBx6B,KAAK69B,OAAS,GACd79B,KAAK6vB,SAAW,GAChB7vB,KAAKg+B,OAAS,EACdh+B,KAAKi+B,MAAQ,EACbj+B,KAAKk+B,MAAQ,EACbl+B,KAAKm+B,OAAS,EACdn+B,KAAKo+B,YAAa,EAClBp+B,KAAKs8B,MAAQ,IAAIrc,GAAY,CAC3BJ,UAAS,UAAE7f,KAAK49B,iBAAP,aAAE,EAAgB1vC,aAC3BuU,QAAS,CACP0lB,gBAAe,UAAEnoB,KAAK49B,iBAAP,aAAE,EAAgB1vC,aAAapF,GAC9Cwa,SAAU,CACRrD,sBAAuB/C,G1FuZN,G0FvZiC9C,MAEpDsI,OAAQ,CAAExN,YAAa,CAAEC,OAAQ,GAAIC,QAAS,GAAIC,QAAS,QAG/D2K,KAAK89B,UAAY,EACjBx9B,aAAmBN,UAAM/P,EAAW,CAAEsQ,MAAM,IAG5CP,KAAKw6B,UAAU,GAAKiB,cAAQ,WAAO,IAAD,EAC5B4C,EAAE,eAAQ,EAAKxO,UAEf,EAAK+N,YAAc,EAAKA,UAAUxvC,MAAMmC,SAAS,UAAS8tC,EAAGC,gBAAH,UAAqB,EAAKV,iBAA1B,aAAqB,EAAgB1vC,aAAapF,IAC5G,EAAK+mC,WACP,EAAKuO,YAAa,EAClBte,GAAmBye,SAAS,CAAE3nC,EAAGynC,IAC9Bl3C,MAAK,SAACD,GACL,EAAKi3C,OAASj3C,EAAM0C,QAGrBuN,OAAM,SAACsQ,GAAD,OAAYlpB,QAAQE,IAAIgpB,UAGrCzH,KAAKw6B,UAAU,GAAKiB,cAAQ,WACtB,EAAKsC,SAAQ,EAAKK,YAAa,M,uCAKvC,WACE,OAAOp+B,KAAKs8B,O,IAEd,SAASp1C,GACP8Y,KAAKs8B,MAAQp1C,I,qBAGf,WACE,OAAO8Y,KAAK29B,Y,IAEd,SAAcz2C,GACZ8Y,KAAK29B,WAAaz2C,I,iBAEpB,WACE,OAAO8Y,KAAK69B,OAAOnuC,KAAI,SAACwL,GACtB,OAAO,eAAKA,Q,oBAGhB,WACE,OAAO8E,KAAK49B,W,IAEd,SAAa12C,GACX8Y,KAAK49B,UAAY12C,I,iBAEnB,WACE,OAAO8Y,KAAK+9B,Q,IAEd,SAAU72C,GACR8Y,KAAK+9B,OAAS72C,I,mBAEhB,WACE,OAAO8Y,KAAK6vB,U,IAEd,SAAY3oC,GACV8Y,KAAK6vB,SAAW3oC,I,iBAElB,WACE,OAAO8Y,KAAKg+B,Q,IAEd,SAAU92C,GACR8Y,KAAKg+B,OAAS92C,I,gBAEhB,WACE,OAAO8Y,KAAKk+B,O,IAEd,SAASh3C,GACP8Y,KAAKk+B,MAAQh3C,I,iBAEf,WACE,OAAO8Y,KAAKm+B,Q,IAEd,SAAUj3C,GACR8Y,KAAKm+B,OAASj3C,I,uBAGhB,WAAoB,IAAD,IAAT4B,EAAS,wDAAH,EACdkX,KAAKs8B,MAAQ,IAAIrc,GAAY,CAC3Bn3B,GAAIA,EACJ+2B,UAAS,UAAE7f,KAAK49B,iBAAP,aAAE,EAAgB1vC,aAC3BuU,QAAS,CACP0lB,gBAAe,UAAEnoB,KAAK49B,iBAAP,aAAE,EAAgB1vC,aAAapF,GAC9Cwa,SAAU,CACRrD,sBAAuB/C,G1F4TN,G0F5TiC9C,MAEpDsI,OAAQ,CAAExN,YAAa,CAAEC,OAAQ,GAAIC,QAAS,GAAIC,QAAS,U,qBAIjE,WAAW,IAAD,mBACF6J,EAAMc,KAAK69B,OAAO5iC,MAAK,SAAC/H,GAAD,OAAUA,EAAKpK,KAAO,EAAKwzC,MAAMxzC,MACzDoW,IACLc,KAAKs8B,MAAQ,IAAIrc,GAAY,CAC3Bn3B,IAAK,EACL+2B,UAAW3gB,EAAI2gB,UACfpd,QAASvD,EAAIuD,QACbyvB,kBAAmBhzB,EAAIgzB,kBACvBnB,UAA6B,IAAlB7xB,EAAI6xB,UAAkB,EAAI,EACrC+J,gBAAiB57B,EAAI47B,gBACrBC,WAAY77B,EAAI67B,WAChBpJ,eAAgBzyB,EAAIyyB,eACpBK,YAAa9yB,EAAI8yB,YACjBJ,WAAY1yB,EAAI0yB,WAChBoJ,gBAAiB97B,EAAI87B,gBACrBG,cAAej8B,EAAImzB,WACnBiJ,kBAAmBp8B,EAAIo8B,kBACvBD,uBAAwBn8B,EAAIm8B,uBAC5BD,gBAAiBl8B,EAAIk8B,gBACrBP,eAAgB37B,EAAI27B,eACpBI,eAAgB/7B,EAAI+7B,eACpBP,YAAax7B,EAAIpX,OACjB8yC,WAAY17B,EAAI07B,WAChBY,qBAAsBt8B,EAAIs8B,qBAC1BpK,YAAalyB,EAAIkyB,YACjBuJ,YAAaz7B,EAAI1E,OACjB0gC,cAAeh8B,EAAIg8B,cACnBK,iBAAkBr8B,EAAIq8B,mBAEpBr8B,EAAImgB,SACNrf,KAAKs8B,MAAMzmB,QAAU,IAAI1F,GAAY,CACnCW,KAAM5R,EAAImgB,SAASvO,KACnBF,UAAW1R,EAAImgB,SAASzO,UACxBd,eAAgB5Q,EAAImgB,SAASvP,eAC7BiB,MAAO7R,EAAImgB,SAAStO,MACpB1Q,aAAY,UAAEnB,EAAImgB,SAAShf,oBAAf,aAAE,EAA2B3Q,KAAI,SAACZ,GAC5C,MAAO,CAAEsL,KAAMtL,EAAKsL,KAAM+D,YAAarP,EAAKqP,gBAE9C6S,QAAS9R,EAAImgB,SAASrO,QACtBC,OAAQ/R,EAAImgB,SAASpO,OACrBE,MAAOjS,EAAImgB,SAASlO,MACpBD,MAAOhS,EAAImgB,SAASnO,QAEnBlR,KAAKs8B,MAAMzmB,QAAU,IAAI1F,GAAY,IACtCjR,EAAIogB,WACNtf,KAAKs8B,MAAMvmB,QAAU,IAAI5F,GAAY,CACnCW,KAAM5R,EAAIogB,SAASxO,KACnBF,UAAW1R,EAAIogB,SAAS1O,UACxBd,eAAgB5Q,EAAIogB,SAASxP,eAC7BiB,MAAO7R,EAAIogB,SAASvO,MACpB1Q,aAAY,UAAEnB,EAAIogB,SAASjf,oBAAf,aAAE,EAA2B3Q,KAAI,SAACZ,GAC5C,MAAO,CAAEsL,KAAMtL,EAAKsL,KAAM+D,YAAarP,EAAKqP,gBAE9C6S,QAAS9R,EAAIogB,SAAStO,QACtBC,OAAQ/R,EAAIogB,SAASrO,OACrBE,MAAOjS,EAAIogB,SAASnO,MACpBD,MAAOhS,EAAIogB,SAASpO,SAEpBhS,EAAIqgB,WACNvf,KAAKs8B,MAAMtmB,QAAU,IAAI7F,GAAY,CACnCW,KAAM5R,EAAIqgB,SAASzO,KACnBF,UAAW1R,EAAIqgB,SAAS3O,UACxBd,eAAgB5Q,EAAIqgB,SAASzP,eAC7BiB,MAAO7R,EAAIqgB,SAASxO,MACpB1Q,aAAY,UAAEnB,EAAIqgB,SAASlf,oBAAf,aAAE,EAA2B3Q,KAAI,SAACZ,GAC5C,MAAO,CAAEsL,KAAMtL,EAAKsL,KAAM+D,YAAarP,EAAKqP,gBAE9C6S,QAAS9R,EAAIqgB,SAASvO,QACtBC,OAAQ/R,EAAIqgB,SAAStO,OACrBE,MAAOjS,EAAIqgB,SAASpO,MACpBD,MAAOhS,EAAIqgB,SAASrO,SAEpBhS,EAAIsgB,WACNxf,KAAKs8B,MAAM3mB,QAAU,IAAIxF,GAAY,CACnCW,KAAM5R,EAAIsgB,SAAS1O,KACnBF,UAAW1R,EAAIsgB,SAAS3O,cACxBf,eAAgB5Q,EAAIsgB,SAAS1P,eAC7BiB,MAAO7R,EAAIsgB,SAASzO,MACpB1Q,aAAY,UAAEnB,EAAIsgB,SAASnf,oBAAf,aAAE,EAA2B3Q,KAAI,SAACZ,GAC5C,MAAO,CAAEsL,KAAMtL,EAAKsL,KAAM+D,YAAarP,EAAKqP,gBAE9C6S,QAAS9R,EAAIsgB,SAASxO,QACtBC,OAAQ/R,EAAIsgB,SAASvO,OACrBE,MAAOjS,EAAIsgB,SAASrO,MACpBD,MAAOhS,EAAIsgB,SAAStO,SAEpBhS,EAAIygB,cACN3f,KAAKs8B,MAAMpmB,aAAehX,EAAIygB,cAAcjwB,KAC1C,SAAC+X,GAAD,eACE,IAAI0I,GAAY,CACdW,KAAMrJ,EAAOqJ,KACbF,UAAWnJ,EAAOmJ,UAClBd,eAAgBrI,EAAOqI,eACvBiB,MAAOtJ,EAAOsJ,MACd1Q,aAAY,UAAEoH,EAAOpH,oBAAT,aAAE,EAAqB3Q,KAAI,SAACZ,GACtC,MAAO,CAAEsL,KAAMtL,EAAKsL,KAAM+D,YAAarP,EAAKqP,gBAE9C6S,QAASvJ,EAAOuJ,QAChBC,OAAQxJ,EAAOwJ,OACfE,MAAO1J,EAAO0J,MACdD,MAAOzJ,EAAOyJ,MACdE,WAAU,UAAE3J,EAAO2J,kBAAT,aAAE,EAAmB1hB,KAAI,SAACZ,GAAU,IAAD,EAC3C,MAAO,CACLghB,eAAgBhhB,EAAKghB,eACrBF,aAAc9gB,EAAK8gB,aACnBC,WAAY/gB,EAAK+gB,WACjBxP,aAAY,UAAEvR,EAAKuR,oBAAP,aAAE,EAAmB3Q,KAAI,SAACZ,GACpC,MAAO,CAAEsL,KAAMtL,EAAKsL,KAAM+D,YAAarP,EAAKqP,yBAMrD6B,KAAKs8B,MAAMpmB,aAAe,GAC3BhX,EAAIkgB,aACNpf,KAAKs8B,MAAMtxB,UAAX,2BACK9L,EAAIkgB,YADT,IAEE1e,yBACE,UAAAxB,EAAIkgB,kBAAJ,mBAAgB/e,oBAAhB,eAA8B3Q,KAAI,SAACZ,GACjC,MAAO,CAAEqP,YAAarP,EAAKqP,YAAa/D,KAAM8B,GAAgBpN,EAAKsL,YAC/D,GACRtR,QAAImH,EACJmP,iBAAanP,EACboQ,aAAc,QAGlBnB,EAAIu7B,WAAaz6B,KAAKs8B,MAAMv0B,U,kBAG9B,SAAKy2B,EAA0ChmB,EAAqCgP,GAAmB,IAAD,SACpG,IAAKxnB,KAAK49B,UAAW,OAAO,EACvB59B,KAAKs8B,MAAM75B,QAAQy1B,wBACtBl4B,KAAKs8B,MAAM75B,QAAQy1B,sBAAnB,UAA2Cl4B,KAAK/R,gBAAhD,aAA2C,EAAeC,aAAapF,IACzE,IAC4B,EAEU,EAHhC6I,EAAUqO,KAAKs8B,MAAMhvB,iBACtB3b,EAAQ7I,IAAM0+B,IACjB71B,EAAQ7J,OAAS0/B,GACjB,UAAI71B,EAAQsrC,0BAAZ,aAAI,EAA4Bn0C,MAC9B6I,EAAQ8sC,WAAR,UAAqB9sC,EAAQsrC,0BAA7B,aAAqB,EAA4Bn0C,GACjD6I,EAAQsrC,wBAAqBhtC,IAIjC,OAAQ0B,EAAQ7I,GAkBZg3B,GAAmB4e,kBAAkB,CAAEze,YAAatuB,IACjDxK,MAAK,SAACqB,GACL,IAAMm2C,EAAQn2C,EAASoB,KACvB,GAAI+0C,EAAO,CACT,IAAM9/B,EAAM,EAAKg/B,OAAOj/B,WAAU,SAAC1L,GAAD,OAAUA,EAAKpK,KAAO61C,EAAM71C,MAC9D,EAAK+0C,OAAOh/B,GAAO8/B,EAEnB,EAAKzX,OAAOroB,GACR2/B,GAAWA,EAAUG,QAErBnmB,GACFA,EAAQ,keAGbrhB,OAAM,SAACsQ,GACF+Q,GAASA,EAAQ/Q,MAhCzBqY,GAAmB8e,eAAejtC,GAC/BxK,MAAK,SAACqB,GACL,IAAMm2C,EAAQn2C,EAASoB,KACvB,GAAI+0C,EAAO,CACT,IAAM9/B,EAAM,EAAKg/B,OAAO7yC,OACxB,EAAK6yC,OAAO3uC,KAAKyvC,GACjB,EAAKzX,OAAOroB,GACR2/B,GAAWA,EAAUG,QAGrBnmB,GACFA,EAAQ,6dAGbrhB,OAAM,SAACsQ,GACF+Q,GAASA,EAAQ/Q,Q,oBAoB/B,WACE,OAAuB,IAAnBzH,KAAKs8B,MAAMxzC,IACHg3B,GAAmB+e,kBAAkB7+B,KAAKs8B,MAAMxzC,M,mBAG9D,WAA6B,IAAvBg2C,EAAsB,uDAAhB9+B,KAAK89B,UACf,IACE99B,KAAK69B,OAAO1/C,OAAO2gD,GACnB,IAAMC,EAAa/+B,KAAK69B,OAAO7yC,OAC3B+zC,EAAa,EACf/+B,KAAKknB,OAAOlnB,KAAK89B,UAAYiB,EAAa,EAAIA,EAAa,EAAI/+B,KAAK89B,YAEpE99B,KAAK0nB,WAAW,GAChB1nB,KAAK89B,UAAY,GAEnB,SACA,MAAMrrC,MAAM,mC,oBAIhB,SAAOqsC,GACL9+B,KAAKs8B,MAAQ,IAAIrc,GAAYjgB,KAAK69B,OAAOiB,IACzC9+B,KAAK89B,UAAYgB,I,qBAGnB,SAAQE,GAA6E,IAAD,SAAtD9mB,EAAsD,uDAA9ClY,KAAKg+B,OAAQje,EAAiC,uDAA1B/f,KAAKg+B,OAASh+B,KAAKk+B,MACvEG,EAAE,2BAAQr+B,KAAK6vB,UAAb,IAAuB94B,MAAOiJ,KAAK+9B,SACzC,GAAI/9B,KAAK49B,YAAc59B,KAAK49B,UAAUxvC,MAAMmC,SAAS,QAAS8tC,EAAGC,gBAAH,UAAqBt+B,KAAK49B,iBAA1B,aAAqB,EAAgB1vC,aAAapF,QAC3G,IAAKkX,KAAK49B,UAAW,OAAO,EACjC,IAAMqB,GAASj/B,KAAKo+B,YAAclmB,IAAUlY,KAAKkY,MAEjD4H,GAAmBof,gBAAgB,CAAEtoC,EAAGynC,GAAMY,EAAQj/B,KAAKi+B,MAAQ,EAAI/lB,EAAO6H,GAC3E54B,MAAK,SAACqB,GACL,IAAIy2C,IAAS,EAAKb,WAAlB,CACA,IAAIU,EAAMG,EAAQ,EAAKpB,OAAO7yC,OAAS,EACjC6yC,EAASoB,EACX,EAAKpB,OAAO3rB,OACV1pB,EAASoB,KAAK8F,KAAI,SAACwD,GACjB,OAAO,2BAAKA,GAAZ,IAAkB09B,YAAakO,QAGnCt2C,EAASoB,KAAK8F,KAAI,SAACwD,GACjB,OAAO,2BAAKA,GAAZ,IAAkB09B,YAAakO,OAErC,EAAKjB,OAASA,EACd,IAAMkB,EAAav2C,EAASoB,KAAKoB,OAC7B+zC,EAAa,IACf,EAAKb,MAAQ,EAAKL,OAAO7yC,OACzB,EAAKozC,YAAa,EAClB,EAAKlX,OAAO,EAAK4W,UAAYiB,EAAaA,EAAa,EAAI,EAAKjB,gBAGnE3mC,OAAM,SAACnQ,GAAD,OAASzI,QAAQE,IAAIuI,MAC3BygC,SAAQ,WACHuX,GAASA,OAEjBh/B,KAAKg+B,OAAS9lB,EACdlY,KAAKi+B,MAAQle,I,sBAGf,SAASG,EAAwB8e,GAAuB,IAAD,OACrD,IAAKh/B,KAAK49B,UAAW,OAAO,EAC5B9d,GAAmBof,gBAAgB,CACjCtoC,EAAG,CAAE0nC,gBAAiBt+B,KAAK49B,UAAU1vC,aAAapF,GAAIq2C,MAAOjf,KAE5D/4B,MAAK,SAACqB,GACDA,EAASoB,MAAQpB,EAASoB,KAAKoB,OAAS,IAAG,EAAKsxC,MAAQ,IAAIrc,GAAYz3B,EAASoB,KAAK,KACtFpB,EAASoB,OACX,EAAK86B,MAAMx1B,KAAK1G,EAASoB,KAAK,IAC9B,EAAKs9B,OAAO,OAGf/vB,OAAM,SAACnQ,GAAD,OAASzI,QAAQE,IAAIuI,MAC3BygC,SAAQ,WACHuX,GAASA,S,qBAGnB,WAGEh/B,KAAKw6B,UAAU/mC,SAAQ,SAAC8pC,GAAD,OAAcA,W,KC5YpB6B,G,WASnB,aAAe,0BARPC,uBAQM,OAPNC,6BAOM,OANNC,2BAMM,OALNC,0BAKM,OAJNC,gCAIM,OAHNC,gBAGM,OAFNC,cAEM,EACZ3/B,KAAKq/B,mBAAoB,EACzBr/B,KAAKs/B,yBAA0B,EAC/Bt/B,KAAKu/B,uBAAwB,EAC7Bv/B,KAAKw/B,sBAAuB,EAC5Bx/B,KAAKy/B,4BAA6B,EAClCz/B,KAAK0/B,YAAa,EAClB1/B,KAAK2/B,SAAW,KAChBr/B,aAAmBN,M,sDAErB,SAAkBkI,GAChBlI,KAAKq/B,kBAAoBn3B,I,4BAE3B,WACE,OAAOlI,KAAKq/B,oB,2BAEd,WACEr/B,KAAKs/B,yBAA2Bt/B,KAAKs/B,0B,qCAEvC,SAAwBM,GACtB5/B,KAAKs/B,wBAA0BM,I,kCAEjC,WACE,OAAO5/B,KAAKs/B,0B,gCAEd,WACE,OAAOt/B,KAAKu/B,wB,mCAEd,SAAsBM,GACpB7/B,KAAKu/B,sBAAwBM,I,+BAE/B,WACE,OAAO7/B,KAAKw/B,uB,kCAEd,SAAqB9qC,GACnBsL,KAAKw/B,qBAAuB9qC,I,qCAE9B,WACE,OAAOsL,KAAKy/B,6B,wCAEd,SAA2B7qC,GACzBoL,KAAKy/B,2BAA6B7qC,I,qBAEpC,WACE,OAAOoL,KAAK0/B,Y,IAEd,SAAcx4C,GACZ8Y,KAAK0/B,WAAax4C,I,mBAGpB,WACE,OAAO8Y,KAAK2/B,U,IAEd,SAAYz4C,GACV8Y,KAAK2/B,SAAWz4C,M,KCVC44C,G,WAMnB,WAAYC,GAA2B,IAAD,iCAL9BC,aAK8B,OAJ9BC,kBAI8B,OAH9BC,iBAG8B,OAF9BC,oBAE8B,OADtC3F,eACsC,EACpCx6B,KAAKggC,QAAUD,EACf//B,KAAKw6B,UAAY,GACjBx6B,KAAKkgC,aAAc,EACnBlgC,KAAKmgC,gBAAiB,EACtBngC,KAAKigC,aAAenkC,GACpBwE,aAAmBN,MAGnBA,KAAKw6B,UAAU,GAAKiB,cAAQ,WAC1B,EAAKwE,a5F2OkB,G4F3OUh5C,OAAS,EAAK+4C,QAAQ9sC,KAAK4H,YAG9DkF,KAAKw6B,UAAU,GAAKiB,cAAQ,WAC1B,EAAKwE,a5FyOuB,G4FzOUh5C,OAAS,EAAK+4C,QAAQ9sC,KAAKuP,QAAQiB,UAE3E1D,KAAKw6B,UAAU,GAAKiB,cAAQ,WAC1B,GAAK,EAAKuE,QAAQ9sC,KAAlB,CACA,IAAMuP,EAAU,EAAKu9B,QAAQ9sC,KAAKuP,QAC5B29B,GACH39B,EAAQgB,aAGD,IAFRhB,EAAQxE,YAAYW,WAAU,SAAChM,GAC7B,MAA+B,eAAxBA,EAAQuL,cAAiCvL,EAAQtF,YAE5D,EAAK2yC,a5FgOyB,G4FhOUh5C,MAAQm5C,MAElDpgC,KAAKw6B,UAAU,GAAKiB,cAAQ,WAC1B,GAAK,EAAKuE,QAAQ9sC,KAAlB,CACA,IAAMA,EAAO,EAAK8sC,QAAQ9sC,KACpBmtC,GACHntC,EAAKmQ,gBAAwG,IAAvFnQ,EAAK+K,YAAYW,WAAU,SAAChM,GAAD,MAAqC,mBAAxBA,EAAQuL,eACzE,EAAK8hC,a5F0NyB,G4F1NUh5C,MAAQo5C,MAElDrgC,KAAKw6B,UAAU,GAAKiB,cAAQ,WAC1B,GAAK,EAAKuE,QAAQ9sC,KAAlB,CACA,IAAMwP,EAAS,EAAKs9B,QAAQ9sC,KAAKuP,QAAQC,OACnC49B,GACF59B,GAAU,EAAKw9B,aAChBx9B,KACGA,EAAOvB,OAASuB,EAAOvB,MAAMnW,OAAS,MACwC,IAAhF0X,EAAOzE,YAAYW,WAAU,SAAChM,GAAD,MAAqC,UAAxBA,EAAQuL,eACtD,EAAK8hC,a5FsNc,I4FtNUh5C,MAAQq5C,MAEvCtgC,KAAKw6B,UAAU,GAAKiB,cAAQ,WAC1B,GAAK,EAAKuE,QAAQ9sC,KAAlB,CACA,IAAMqtC,EAAM,EAAKP,QAAQ9sC,KAAKqQ,UACxBi9B,IACFD,GAAOA,EAAIv1C,OAAS,KAC0E,IAAhG,EAAKg1C,QAAQ9sC,KAAK+K,YAAYW,WAAU,SAAChM,GAAD,MAAqC,eAAxBA,EAAQuL,eAC/D,EAAK8hC,a5F+MY,I4F/MUh5C,MAAQu5C,MAErCxgC,KAAKw6B,UAAU,GAAKiB,cAAQ,WAC1B,GAAK,EAAKuE,QAAQ9sC,KAAlB,CACA,IAAMuP,EAAU,EAAKu9B,QAAQ9sC,KAAKuP,QAC5Ba,EAAWb,EAAQa,SACnBlJ,EAAI,OAAGkJ,QAAH,IAAGA,OAAH,EAAGA,EAAUnD,aACjBsgC,GACFn9B,IAAgG,IAApFb,EAAQxE,YAAYW,WAAU,SAAChM,GAAD,MAAqC,aAAxBA,EAAQuL,gBAChEmF,KACGlJ,GAAQA,EAAKpP,OAAS,KACiE,IAAzFsY,EAASrF,YAAYW,WAAU,SAAChM,GAAD,MAAqC,iBAAxBA,EAAQuL,eACxD,EAAK8hC,a5FiMiB,G4FjMUh5C,MAAQw5C,MAE1CzgC,KAAKw6B,UAAU,GAAKiB,cAAQ,WAAO,IAAD,EAChC,GAAK,EAAKuE,QAAQ9sC,KAAlB,CACA,IAAMuP,EAAU,EAAKu9B,QAAQ9sC,KAAKuP,QAC5Bi+B,GACFj+B,EAAQa,WAAgG,IAApFb,EAAQxE,YAAYW,WAAU,SAAChM,GAAD,MAAqC,aAAxBA,EAAQuL,gBACxEsE,EAAQa,YAAY,UAACb,EAAQa,gBAAT,aAAC,EAAkB1C,cAC1C,EAAKq/B,a5FwLiB,G4FxLUh5C,MAAQy5C,MAE1C1gC,KAAKw6B,UAAU,GAAKiB,cAAQ,WAAO,IAAD,EAChC,GAAK,EAAKuE,QAAQ9sC,KAAlB,CACA,IAAMuP,EAAU,EAAKu9B,QAAQ9sC,KAAKuP,QAC5Bk+B,GACFl+B,EAAQa,WAAgG,IAApFb,EAAQxE,YAAYW,WAAU,SAAChM,GAAD,MAAqC,aAAxBA,EAAQuL,gBACxEsE,EAAQa,aAAa,UAACb,EAAQa,gBAAT,aAAC,EAAkBpD,eAAgBuC,EAAQa,SAASpD,aAAalV,OAAS,IAClG,EAAKi1C,a5F+KiB,G4F/KUh5C,MAAQ05C,MAE1C3gC,KAAKw6B,UAAU,GAAKiB,cAAQ,WAAO,IAAD,EAChC,GAAK,EAAKuE,QAAQ9sC,KAAlB,CACA,IAAMuP,EAAU,EAAKu9B,QAAQ9sC,KAAKuP,QAC5Ba,EAAWb,EAAQa,SACnB9I,EAAM,UAAGiI,EAAQa,gBAAX,aAAG,EAAkB9I,OAC3BomC,GACFt9B,IAAgG,IAApFb,EAAQxE,YAAYW,WAAU,SAAChM,GAAD,MAAqC,aAAxBA,EAAQuL,gBAChEmF,KACG9I,GAAUA,EAAOxP,OAAS,KACuD,IAAnFsY,EAASrF,YAAYW,WAAU,SAAChM,GAAD,MAAqC,WAAxBA,EAAQuL,eACxD,EAAK8hC,a5FiKiB,G4FjKUh5C,MAAQ25C,MAE1C5gC,KAAKw6B,UAAU,IAAMiB,cAAQ,WAC3B,GAAK,EAAKuE,QAAQ9sC,KAAlB,CACA,IAAMuP,EAAU,EAAKu9B,QAAQ9sC,KAAKuP,QAC5Bo+B,GACFp+B,EAAQa,WACiG,IAAzGb,EAAQxE,YAAYW,WAAU,SAAChM,GAAD,MAAqC,aAAxBA,EAAQuL,cAA+BvL,EAAQtF,aAC3FmV,EAAQa,WAAab,EAAQa,SAASxb,OACzC,EAAKm4C,a5FyJiB,G4FzJUh5C,MAAQ45C,MAE1C7gC,KAAKw6B,UAAU,IAAMiB,cAAQ,WAC3B,IAAM/4B,EAAS,EAAKs9B,QAAQ9sC,KAAKuP,QAAQC,OACnCo+B,GACFp+B,GAAU,EAAKw9B,aAChBx9B,KACGA,EAAOtB,UACNsB,EAAOtB,QAAQI,mBAChBkB,EAAOtB,QAAQI,kBAAkBnT,MAAM,KAAKrD,OAAS,KAC2B,IAAlF0X,EAAOzE,YAAYW,WAAU,SAAChM,GAAD,MAAqC,YAAxBA,EAAQuL,eACtD,EAAK8hC,a5FqJmB,I4FrJUh5C,MAAQ65C,KAE5C9gC,KAAKw6B,UAAU,IAAMiB,cAAQ,WAC3B,IAAMsF,IACF,EAAKf,QAAQ9sC,KAAK8X,YACjB,EAAKg1B,QAAQ9sC,KAAK8X,UAAUxJ,mBAC7B,EAAKw+B,QAAQ9sC,KAAK8X,UAAUxJ,kBAAkBnT,MAAM,KAAKrD,OAAS,KAC4B,IAAhG,EAAKg1C,QAAQ9sC,KAAK+K,YAAYW,WAAU,SAAChM,GAAD,MAAqC,eAAxBA,EAAQuL,eAC/D,EAAK8hC,a5F8IoB,I4F9IUh5C,MAAQ85C,KAE7C/gC,KAAKw6B,UAAU,IAAMiB,cAAQ,WAC3B,GAAK,EAAKuE,QAAQ9sC,KAAlB,CACA,IAAM8tC,OACgC/wC,IAApC,EAAK+vC,QAAQ9sC,KAAKoY,gBACmF,IAArG,EAAK00B,QAAQ9sC,KAAK+K,YAAYW,WAAU,SAAChM,GAAD,MAAqC,oBAAxBA,EAAQuL,eAC/D,EAAK8hC,a5FwImB,I4FxIUh5C,MAAQ+5C,MAE5ChhC,KAAKw6B,UAAU,IAAMiB,cAAQ,WAC3B,GAAK,EAAKuE,QAAQ9sC,KAAlB,CACA,IAAM+tC,OAC+BhxC,IAAnC,EAAK+vC,QAAQ9sC,KAAKqY,eACkF,IAApG,EAAKy0B,QAAQ9sC,KAAK+K,YAAYW,WAAU,SAAChM,GAAD,MAAqC,mBAAxBA,EAAQuL,eAC/D,EAAK8hC,a5F8HkB,I4F9HUh5C,MAAQg6C,MAE3CjhC,KAAKw6B,UAAU,IAAMiB,cAAQ,WACtB,EAAKuE,QAAQ9sC,OAClB,EAAK+sC,a5F8HyB,I4F9HUh5C,UAAwCgJ,IAAjC,EAAK+vC,QAAQ9sC,KAAKub,eAEnEzO,KAAKw6B,UAAU,IAAMiB,cAAQ,WAC3B,GAAK,EAAKuE,QAAQ9sC,KAAlB,CACA,IAAMsa,EAAY,EAAKwyB,QAAQ9sC,KAAKsa,UAC9B0zB,OACUjxC,IAAdud,QAC4Bvd,IAA5Bud,EAAUY,gBACkF,IAA5FZ,EAAUvP,YAAYW,WAAU,SAAChM,GAAD,MAAqC,mBAAxBA,EAAQuL,eACvD,EAAK8hC,a5FsHwB,I4FtHUh5C,KAAOi6C,MAEhDlhC,KAAKw6B,UAAU,IAAMiB,cAAQ,WAC3B,GAAK,EAAKuE,QAAQ9sC,KAAlB,CACA,IAAMsa,EAAY,EAAKwyB,QAAQ9sC,KAAKsa,UAC9B2zB,OAA+BlxC,IAAdud,QAAgDvd,IAArBud,EAAUP,OAC5D,EAAKgzB,a5FiHqB,I4FjHUh5C,KAAOk6C,MAE7CnhC,KAAKw6B,UAAU,IAAMiB,cAAQ,WAC3B,GAAK,EAAKuE,QAAQ9sC,KAAlB,CACA,IAAMsa,EAAY,EAAKwyB,QAAQ9sC,KAAKsa,UAC9B4zB,GAAsB5zB,KAAeA,EAAUI,aACrD,EAAKqyB,a5F4GyB,I4F5GUh5C,KAAOm6C,MAEjDphC,KAAKw6B,UAAU,IAAMiB,cAAQ,WAC3B,GAAK,EAAKuE,QAAQ9sC,KAAlB,CACA,IAAMsa,EAAY,EAAKwyB,QAAQ9sC,KAAKsa,UAC9B6zB,GACH7zB,KACEA,EAAUC,kBACwF,IAAlGD,EAAUC,eAAexP,YAAYW,WAAU,SAAC9P,GAAD,MAA+B,gBAArBA,EAAKqP,kBAC3DqP,EAAUC,eAAe7L,KACjC,EAAKq+B,a5FmGmB,I4FnGUh5C,KAAOo6C,MAE3CrhC,KAAKw6B,UAAU,IAAMiB,cAAQ,WAC3B,GAAK,EAAKuE,QAAQ9sC,KAAlB,CACA,IAAMsa,EAAY,EAAKwyB,QAAQ9sC,KAAKsa,UAC9B8zB,GACH9zB,KACEA,EAAUC,kBACsF,IAAhGD,EAAUC,eAAexP,YAAYW,WAAU,SAAC9P,GAAD,MAA+B,cAArBA,EAAKqP,kBAC3DqP,EAAUC,eAAenB,WACjC,EAAK2zB,a5F0FwB,I4F1FUh5C,KAAOq6C,MAEhDthC,KAAKw6B,UAAU,IAAMiB,cAAQ,WAC3B,GAAK,EAAKuE,QAAQ9sC,KAAlB,CACA,IAAMsa,EAAY,EAAKwyB,QAAQ9sC,KAAKsa,UAC9B+zB,GACH/zB,KACEA,EAAUC,kBACiF,IAA3FD,EAAUC,eAAexP,YAAYW,WAAU,SAAC9P,GAAD,MAA+B,SAArBA,EAAKqP,kBAC1DqP,EAAUC,eAAelB,QAAUiB,EAAUC,eAAelB,KAAKzF,WAC1E,EAAKm5B,a5FiFuB,I4FjFUh5C,KAAOs6C,MAE/CvhC,KAAKw6B,UAAU,IAAMiB,cAAQ,WAC3B,EAAKwE,a5F+EuB,I4F/EUh5C,OAAS,EAAK+4C,QAAQ9sC,QAAU,EAAK8sC,QAAQ9sC,KAAKyb,iBAE1F3O,KAAKw6B,UAAU,IAAMiB,cAAQ,WAC3B,EAAKwE,a5F6EwB,I4F7EUh5C,OAAS,EAAK+4C,QAAQ9sC,QAAU,EAAK8sC,QAAQ9sC,KAAK0b,kBAE3F5O,KAAKw6B,UAAU,IAAMiB,cAAQ,WAC3B,EAAKwE,a5F2EsB,I4F3EUh5C,OAAS,EAAK+4C,QAAQ9sC,QAAU,EAAK8sC,QAAQ9sC,KAAK2b,gBAEzF7O,KAAKw6B,UAAU,IAAMiB,cAAQ,WAC3B,EAAKwE,a5FyEoB,I4FzEUh5C,OAAS,EAAK+4C,QAAQ9sC,QAAU,EAAK8sC,QAAQ9sC,KAAKgc,aAEvFlP,KAAKw6B,UAAU,IAAMiB,cAAQ,WACtB,EAAKuE,QAAQ9sC,OAClB,EAAK+sC,a5FsE0B,I4FtEUh5C,OACpC,EAAK+4C,QAAQ9sC,KAAKgc,WlEvQM,IkEuQO,EAAK8wB,QAAQ9sC,KAAKgc,aACjD,EAAK8wB,QAAQ9sC,KAAKic,iBAAmB,EAAK6wB,QAAQ9sC,KAAKmc,yBAE9DrP,KAAKw6B,UAAU,IAAMiB,cAAQ,WACtB,EAAKuE,QAAQ9sC,OAClB,EAAK+sC,a5FiEkB,I4FjEUh5C,OAAS,EAAK+4C,QAAQ9sC,KAAKoc,qBAE9DtP,KAAKw6B,UAAU,IAAMiB,cAAQ,WACtB,EAAKuE,QAAQ9sC,OAClB,EAAK+sC,a5F8DwB,I4F9DUh5C,OAAS,EAAK+4C,QAAQ9sC,KAAKqc,qBAEpEvP,KAAKw6B,UAAU,IAAMiB,cAAQ,WAAO,IAAD,EAC5B,EAAKuE,QAAQ9sC,OAClB,EAAK+sC,a5F2DiB,I4F3DUh5C,QAAQ,UAAC,EAAK+4C,QAAQ9sC,KAAK2iB,eAAnB,aAAC,EAA2BjF,eAEtE5Q,KAAKw6B,UAAU,IAAMiB,cAAQ,WAAO,IAAD,IAC5B,EAAKuE,QAAQ9sC,OAClB,EAAK+sC,a5FwDsB,I4FxDUh5C,QAClC,UAAC,EAAK+4C,QAAQ9sC,KAAK2iB,eAAnB,aAAC,EAA2BrE,iBAGtB,KAFP,YAAKwuB,QAAQ9sC,KAAK2iB,eAAlB,eAA2B5X,YAAYW,WACrC,SAAC9P,GAAD,MAA+B,mBAArBA,EAAKqP,cAAqCrP,EAAKxB,iBAG/D0S,KAAKw6B,UAAU,IAAMiB,cAAQ,WAAO,IAAD,EAC5B,EAAKuE,QAAQ9sC,OAClB,EAAK+sC,a5FiDiB,I4FjDUh5C,QAC7B,UAAC,EAAK+4C,QAAQ9sC,KAAK6iB,eAAnB,aAAC,EAA2BnF,aAC6E,IAA1G,EAAKovB,QAAQ9sC,KAAK+K,YAAYW,WAAU,SAAC9P,GAAD,MAA+B,aAArBA,EAAKqP,cAA+BrP,EAAKxB,gBAE/F0S,KAAKw6B,UAAU,IAAMiB,cAAQ,WAAO,IAAD,EAC5B,EAAKuE,QAAQ9sC,OAClB,EAAK+sC,a5F4CsB,I4F5CUh5C,MAClC,EAAK+4C,QAAQ9sC,KAAK6iB,WACjB,EAAKiqB,QAAQ9sC,KAAK6iB,QAAQvE,gBAGrB,KAFP,YAAKwuB,QAAQ9sC,KAAK6iB,eAAlB,eAA2B9X,YAAYW,WACrC,SAAC9P,GAAD,MAA+B,mBAArBA,EAAKqP,cAAqCrP,EAAKxB,iBAG/D0S,KAAKw6B,UAAU,IAAMiB,cAAQ,WAAO,IAAD,EAC5B,EAAKuE,QAAQ9sC,OAClB,EAAK+sC,a5FoCiB,I4FpCUh5C,QAC7B,UAAC,EAAK+4C,QAAQ9sC,KAAK8iB,eAAnB,aAAC,EAA2BpF,aAC6E,IAA1G,EAAKovB,QAAQ9sC,KAAK+K,YAAYW,WAAU,SAAC9P,GAAD,MAA+B,aAArBA,EAAKqP,cAA+BrP,EAAKxB,gBAE/F0S,KAAKw6B,UAAU,IAAMiB,cAAQ,WAAO,IAAD,EAC5B,EAAKuE,QAAQ9sC,OAClB,EAAK+sC,a5F+BsB,I4F/BUh5C,MAClC,EAAK+4C,QAAQ9sC,KAAK8iB,WACjB,EAAKgqB,QAAQ9sC,KAAK8iB,QAAQxE,gBAGrB,KAFP,YAAKwuB,QAAQ9sC,KAAK8iB,eAAlB,eAA2B/X,YAAYW,WACrC,SAAC9P,GAAD,MAA+B,mBAArBA,EAAKqP,cAAqCrP,EAAKxB,iBAG/D0S,KAAKw6B,UAAU,IAAMiB,cAAQ,WAAO,IAAD,EAC5B,EAAKuE,QAAQ9sC,OAClB,EAAK+sC,a5FuBiB,I4FvBUh5C,UACWgJ,KAAzC,YAAK+vC,QAAQ9sC,KAAKyiB,eAAlB,eAA2B/E,aAC+E,IAA1G,EAAKovB,QAAQ9sC,KAAK+K,YAAYW,WAAU,SAAC9P,GAAD,MAA+B,aAArBA,EAAKqP,cAA+BrP,EAAKxB,gBAE/F0S,KAAKw6B,UAAU,IAAMiB,cAAQ,WAAO,IAAD,EAC5B,EAAKuE,QAAQ9sC,OAClB,EAAK+sC,a5FkBsB,I4FlBUh5C,MAClC,EAAK+4C,QAAQ9sC,KAAKyiB,WACjB,EAAKqqB,QAAQ9sC,KAAKyiB,QAAQnE,gBAGrB,KAFP,YAAKwuB,QAAQ9sC,KAAKyiB,eAAlB,eAA2B1X,YAAYW,WACrC,SAAC9P,GAAD,MAA+B,mBAArBA,EAAKqP,cAAqCrP,EAAKxB,iBAG/D0S,KAAKw6B,UAAU,IAAMiB,cAAQ,WACtB,EAAKuE,QAAQ9sC,OAClB,EAAK+sC,a5FY0B,I4FZUh5C,OACrC,EAAK+4C,QAAQ9sC,KAAKqqB,kBAEjB,IADH,EAAKyiB,QAAQ9sC,KAAK+K,YAAYW,WAAU,SAAC9P,GAAD,MAA+B,qBAArBA,EAAKqP,cAAuCrP,EAAKxB,gBAGvG0S,KAAKw6B,UAAU,IAAMiB,cAAQ,WACtB,EAAKuE,QAAQ9sC,OAClB,EAAK+sC,a5FM6B,I4FNUh5C,OACxC,EAAK+4C,QAAQ9sC,KAAKojB,sBAGb,IAFP,EAAK0pB,QAAQ9sC,KAAK+K,YAAYW,WAC5B,SAAC9P,GAAD,MAA+B,yBAArBA,EAAKqP,cAA2CrP,EAAKxB,gBAGrE0S,KAAKw6B,UAAU,IAAMiB,cAAQ,WACtB,EAAKuE,QAAQ9sC,OAClB,EAAK+sC,a5FDe,I4FCUh5C,OAAS,EAAK+4C,QAAQ9sC,KAAK2qB,WAE3D7d,KAAKw6B,UAAU,IAAMiB,cAAQ,WACtB,EAAKuE,QAAQ9sC,OAClB,EAAK+sC,a5FJsB,I4FIUh5C,OAAS,EAAK+4C,QAAQ9sC,KAAK+qB,kBAElEje,KAAKw6B,UAAU,IAAMiB,cAAQ,WACtB,EAAKuE,QAAQ9sC,OAClB,EAAK+sC,a5FP4B,I4FOUh5C,OAAS,EAAK+4C,QAAQ9sC,KAAK8qB,uBAExEhe,KAAKw6B,UAAU,IAAMiB,cAAQ,WAC3B,EAAKyE,cACD,EAAKF,QAAQ9sC,KAAKuP,QAAQC,SAC8E,IAA1G,EAAKs9B,QAAQ9sC,KAAKuP,QAAQxE,YAAYW,WAAU,SAAC1D,GAAD,MAA2B,WAAnBA,EAAGiD,cAA6BjD,EAAG5N,eAE/F0S,KAAKw6B,UAAU,IAAMiB,cAAQ,WACtB,EAAKuE,QAAQ9sC,OAClB,EAAKitC,eAAiB,EAAKD,aAAe,EAAKF,QAAQ9sC,KAAKuP,UAAY,EAAKu9B,QAAQ9sC,KAAKuP,QAAQa,aAEpGtD,KAAKw6B,UAAU,IAAMiB,cAAQ,WAAO,IAAD,EAC3B/4B,EAAM,UAAG,EAAKs9B,QAAQ9sC,KAAKuP,eAArB,aAAG,EAA2BC,OACpCd,EAAG,OAAGc,QAAH,IAAGA,OAAH,EAAGA,EAAQd,IACd4/B,GACF9+B,GAAU,EAAKw9B,eACdt+B,IAC6B,IAA7BA,EAAIzM,OAAO4M,OAAO/W,QACa,IAA9B4W,EAAIxM,QAAQ2M,OAAO/W,UAChB4W,EAAIvM,SAAyC,IAA9BuM,EAAIvM,QAAQ0M,OAAO/W,QAC3C,EAAKi1C,a5FtEoB,G4FsEUh5C,MAAQu6C,K,4CAG/C,WAGExhC,KAAKw6B,UAAU/mC,SAAQ,SAAC8pC,GAAD,OAAcA,S,iCAEvC,WACE,OAAOv9B,KAAKqI,YAAY1V,QAAO,SAAC7L,EAAQgI,EAAMa,GAe5C,OAZIb,EAAK7H,MACL0I,IACE,C5F/CkB,GACK,GAME,GACC,GACI,O4F+ChC7I,EACGA,IACN,K,sBAEL,WACE,OAAOkZ,KAAKkgC,a,IAEd,SAAeh5C,GACb8Y,KAAKkgC,YAAch5C,I,yBAErB,WACE,OAAO8Y,KAAKmgC,gB,IAEd,SAAkBj5C,GAChB8Y,KAAKmgC,eAAiBj5C,I,uBAExB,WACE,OAAO8Y,KAAKigC,iB,KClaKwB,G,WAKnB,aAAe,0BAJPC,wBAIM,OAHNC,wBAGM,OAFNC,sBAEM,EACZ5hC,KAAK0hC,oBAAsB,EAC3B1hC,KAAK2hC,oBAAsB,EAC3B3hC,KAAK4hC,kBAAoB,E,oDAE3B,WACE,OAAO5hC,KAAK0hC,uB,6BAEd,WACE,OAAO1hC,KAAK2hC,uB,2BAEd,WACE,OAAO3hC,KAAK4hC,uB,KCZKC,G,mIACnB,WAAmBlqC,EAAe+6B,GAAlC,0FACSzhC,EAAKuF,KAAK,aAAc,CAAEmB,QAAO+6B,cAD1C,2C,0HAGA,WAA0Bp8B,GAA1B,0FACSrF,EAAKuF,KAAK,oBAAqB,CAAEF,UAD1C,2C,sHAGA,WAAwBqB,GAAxB,0FACS1G,EAAKuF,KAAK,kBAAmB,CAAEmB,WADxC,2C,qHAGA,WAAuBrB,GAAvB,0FACSrF,EAAKuF,KAAK,iBAAV,eAAiCF,KAD1C,2C,kHAGA,uGACSrF,EAAKuF,KAAK,gBADnB,2C,6DCDIjI,GAAY,I,WCGhB,aAAe,0BAPPuzC,aAOM,OANNC,WAMM,OALNnL,eAKM,OAJNC,cAIM,OAHNmL,YAGM,OAFNpE,eAEM,EACZ59B,KAAK+hC,MAAQ,GACb/hC,KAAK42B,WAAY,EACjB52B,KAAKgiC,OAASjwC,aAAaC,QAAQ,UAAY,GAC/CgO,KAAK8hC,QAA0B,KAAhB9hC,KAAKgiC,OAChBhiC,KAAK8hC,SAAS9hC,KAAKs2B,YACvBh2B,aAAmBN,M,4CAGrB,SAAQo2B,GACNp2B,KAAK8hC,QAAU1L,I,oBAEjB,WACE,OAAOp2B,KAAK8hC,U,qBAEd,SAAQxrC,GACN0J,KAAK+hC,MAAQzrC,I,kBAEf,WACE,OAAO0J,KAAK+hC,Q,wBAEd,SAAWvK,GACTx3B,KAAK42B,UAAYY,I,uBAEnB,WACE,OAAOx3B,KAAK42B,Y,wBAEd,SAAW3nC,GACT+Q,KAAK62B,SAAW5nC,I,sBAGlB,SAASgzC,GACPjiC,KAAKgiC,OAASC,I,mBAEhB,WACE,OAAOjiC,KAAKgiC,S,0DAEd,WAAYrqC,EAAe+6B,GAA3B,oBAAAzgC,EAAA,sDACE4vC,GAAYpP,MAAM96B,EAAO+6B,GACtBvrC,MAAK,SAACqB,GACDA,EAASoB,MACXmI,aAAaO,QAAQ,QAAS9J,EAASoB,KAAK2I,OAAOC,QACnD,EAAK0vC,SAAQ,GACb,EAAKjN,QAAQzsC,EAASoB,KAAK0M,MAC3B,EAAKugC,SAAS3nC,KAAK3D,IAEnB,EAAKsrC,SAAS3nC,KAAK,qPAGtBiI,OAAM,SAACsQ,GACN,EAAKovB,SAAS3nC,KAAK,gBAAkBuY,EAAOvf,YAblD,2C,0HAgBA,WAAmBoO,GAAnB,SAAArE,EAAA,+EAEU4vC,GAAYlM,aAAar/B,GAFnC,OAGI0J,KAAK62B,SAAS3nC,KACZ,kjBAJN,+CAOI8Q,KAAK62B,SAAS3nC,KAAK,UAAY,KAAEhH,SAPrC,wD,qHAUA,WAAgBoO,GAAhB,SAAArE,EAAA,+EAEU4vC,GAAYhM,UAAUv/B,GAFhC,OAGI0J,KAAK62B,SAAS3nC,KAAK,0JAHvB,uDAKI8Q,KAAK62B,SAAS3nC,KAAK,UAAY,KAAEhH,SALrC,mBAMW,GANX,yD,sHASA,WAAiByP,GAAjB,SAAA1F,EAAA,+EAEU4vC,GAAYjP,WAAWj7B,GAFjC,OAGIqI,KAAK62B,SAAS3nC,KAAK,0XAHvB,uDAKI8Q,KAAK62B,SAAS3nC,KAAK,UAAY,KAAEhH,SALrC,mBAMW,GANX,yD,kHASA,sBAAA+J,EAAA,+EAEU4vC,GAAYxuC,SAFtB,OAGI2M,KAAKkiC,SAAQ,GACbnwC,aAAaowC,WAAW,SACxBniC,KAAKoiC,SAAS,IACdpiC,KAAKi1B,QAAQ,IACbj1B,KAAK49B,eAAY3tC,EACjB+P,KAAK62B,SAAS3nC,KAAK1D,GARvB,kDAUIwU,KAAK62B,SAAS3nC,KAAK,UAAY,KAAEhH,SAVrC,0D,oHAaA,8BAAA+J,EAAA,sEAEI+N,KAAKqiC,YAAW,GAFpB,SAG2BnxC,IAAMmB,IAAN,UAA2BvB,EAA3B,gBAAkD,CAAEM,iBAAiB,IAHhG,OAGU5I,EAHV,OAIIuJ,aAAaO,QAAQ,QAAS9J,EAASoB,KAAK2I,OAAOC,QACnDwN,KAAKoiC,SAAS55C,EAASoB,KAAK2I,OAAOC,QACnCwN,KAAKkiC,SAAQ,GACbliC,KAAKi1B,QAAQzsC,EAASoB,KAAK0M,MAP/B,mDASI,UAAI,KAAEpO,eAAN,aAAI,EAAWqI,SAAS,SACtByP,KAAK8hC,SAAU,EACf9hC,KAAKgiC,OAAS,GACdjwC,aAAaowC,WAAW,SACxBniC,KAAK+hC,MAAQ,GACb/hC,KAAK62B,SAAS3nC,KAAK1D,IACdwU,KAAK62B,SAAS3nC,KAAK,gBAAkB,KAAEhH,SAflD,yBAiBI8X,KAAKqiC,YAAW,GAjBpB,6E,sHAoBA,WAAkBv5C,GAAlB,eAAAmJ,EAAA,8DACahC,IAAPnH,EADN,0CAC+B,GAD/B,uBAGIkX,KAAKqiC,YAAW,GAHpB,SAI2B3O,GAAawB,QAAQpsC,GAJhD,cAIUN,EAJV,yBAKWA,EAASoB,MALpB,kCAOIoW,KAAK62B,SAAS3nC,KAAK,gBAAkB,KAAEhH,SAP3C,yBASI8X,KAAKqiC,YAAW,GATpB,6E,4EAYA,WACE,OAAOriC,KAAK62B,W,oBAEd,WAAgB,IAAD,OACb,OAAI72B,KAAK49B,UAAkB59B,KAAK49B,WACvB59B,KAAK+hC,MAAMj5C,IAClBkX,KAAKsiC,YAAYtiC,KAAK+hC,MAAMj5C,IAAI3B,MAAK,SAACqB,GACtB,EAAKo1C,UAAfp1C,QACkByH,KAEnB,U,MD1ILoE,GAAc,IAAI+qC,GAClBpsC,GAAmB,IAAI0qC,GACvBn7B,GAAmB,IAAIu9B,GAAiB9sC,IACxCkS,GAAe,IAAIyxB,GACnBzd,GAAmB,IAAIuoB,GAC7Bv8B,GAAagC,qBACN,IAAMzY,GAAU8zC,wBAAsB,CAACh0C,aAAW8F,eAAa6Q,gBAAclS,oBAAkBkmB,oBAAiB3W,sBACvHigC,IAASpP,OACP,cAAC3kC,GAAQg0C,SAAT,CAAkBv7C,MAAO,CAACqH,aAAW8F,eAAa6Q,gBAAclS,oBAAkBkmB,oBAAkB3W,qBAApG,SACE,cAAC,GAAD,MAEFjnB,SAAS4N,eAAe,U,iSEPxBw5C,EACAA,E,8ECvBA,SAAa,GAEbC,EAAI,OAAS,SAAG,EAAS,GACrB,WAAU,EAAE,EAAS,I,2CA6LvB,SAAoB,EAAG,GACrB,OAAO,IAAC,EAAY,MA/KtB,oBAAuB,MAEvB,I,EAAA,EAAa,CACd,U,WAEG,WACF,UACA,UACA,eACA,eACA,SACA,aACA,cACA,QACA,UAwBA,SAAO,EAAS,KAChB,KAAO,gBAAgB,GACvB,OAAW,IAAE,EAAY,EAAO,GAGhC,IAAM,EAAS,MAqFf,SAAsB,GACpB,QAAS,IAAM,EAAE,EAAU,OAAS,IAAM,IAC1CC,EAAO,EAAS,IAAE,GAtFpB,CAAO,GACPA,EAAO,IAAW,EAAM,GACxBA,EAAO,oBAAe,oB,mIAKtB,EAAI,OAAW,EAAO,wBACpBA,EAAO,IAAK,EAAO,MAAO,KAC3B,a,kDAGDA,EAAO,eAAgBA,EAAU,IAAC,eAClC,EAAI,SAAO,EAAe,uEACxBA,EAAO,WAAW,GAKjB,EAAO,IAAM,QAChB,EAAO,GAAS,cAAa,IAI3B,EAAO,eAAI,mBACZ,kBACF,8BAEG,EAAC,EAAW,WAvDd,SAAY,CACZ,OACA,wBACA,kBACA,UACA,UACA,eACD,Y,UAED,WACE,YACE,QACD,a,QAED,MACA,QACA,SACA,gBACA,kBAwCE,OAAU,SACV,OAAO,OAAC,YACT,cAGH,OAFC,c,QAMG,OAAU,OACV,OAAO,KAAG,SAAY,G,kEA6DxB,EAAS,UAAY,CACtB,e,SAGC,MA8yBE,SAAWC,GACX,IAAAD,EAAY,K,cAEZ,MAAQ,WAEP,Y,mEAGC,GAAO,OAAP,EACA,OAAM,EAAI,GAEQ,kBAAT,IACR,EAAM,cAEN,QACF,K,KAED,IAAQ,EAAY,KAClB,EAAO,IAEL,GAcI,OAVJ,EAAQ,gB,aAEH,OAAD,GACJ,SACA,EAAQ,UAEV,EAAW,UAIJ,EAAG,OACJ,a,GACEA,EAAO,yBACF,WAAL,EACE,SAED,EAAM,KACL,S,KAEH,mBACF,OACD,SAEF,KAAM,EAAD,KACH,GAAAA,EAAO,UAAU,EAAS,YAE3B,IADC,IAAM,EAAC,IACF,sBACD,EAAC,IAAe,OACPA,EAAM,gBAClB,aACc,OAAL,GACF,EAAM,OACP,YAEN,YAIC,EAAO,6BAED,MAAL,GAAU,oCAId,gCACD,EAAQ,qCAEH,QACA,EAAQ,MAAE,cAEd,EAAM,cATLA,EAAOrhC,MAAUuhC,EAAA,UAClB,EAAM,6BAWN,S,sBAKG,EAAM,MAAK,gBAEbF,EAAO,QAAW,EAIlB,SAED,OAAM,cACE,MAAP,EACAA,EAAO,MAAU,aAEjBA,EAAO,QAAU,MACjBA,EAAO,QAAY,QAEnB,SAEA,OAAI,UAEF,GAAQ,MAAP,EACF,oBACDA,EAAO,SAAY,QACZ,KAAc,SACtB,UACD,EAAQ,iB,iBAEH,GAAS,MAAT,EACD,EAAO,MAAC,EAAQ,UAClB,EAAS,QAAQ,QACV,GAAU,MAAV,EACPA,EAAO,MAAQ,EAAG,UAClBA,EAAO,aAAU,sBACZ,CAGL,GAFA,EAAY,EAAK,eAEX,EAAC,iBAAa,cACrB,IAAM,EAAKA,EAAO,SAAc,mBAC/B,EAAO,IAAM,MAAI,QAAO,OAEtB,YAAiB,MACf,eAEJ,SAED,OAAM,UAvzBN,aAwzBC,EAAS,SAAQ,kBACjB,EAAO,EAAW,eAClBA,EAAOrhC,MAAU,QAClB,EAAU,SAAU,GACnBqhC,EAAO,MAAU,IACV,EAAQ,SAAK,UACrB,EAAM,gBACLA,EAAO,QAAY,GACpB,eA/zBM,aAg0BC,6B,mBAEH,WAAgB,YAChB,EAAY,EAAG,+CAElBA,EAAQ,QAAK,GACd,eACkB,MAAZ,GACP,EAAQ,kC,cAEJ,EAAC,MAAO,QACC,EAAE,IACbA,EAAOrhC,MAAU,mBACjB,EAAS,UAAQ,GAElB,EAAM,YAEL,SAEC,wBACC,IAAO,EAAQ,IACfqhC,EAAO,MAAK,YACb,QAEH,EAAQ,Y,SAGR,OAAO,QACG,MAAL,GACHA,EAAQ,MAAK,OACb,EAAO,EAAU,YAAO,WACzB,e,aAGI,QACC,EAAC,MAAY,cACJ,OACbA,EAAOrhC,MAAU,iBAClB,EAAU,MAGV,S,sBAGH,EAAO,WACC,IAAC,EAAW,IACd,EAAM,KACRqhC,EAAOrhC,MAAU,EAAAwhC,SAElB,S,mBAGH,EAAO,SAAO,EACF,MAAL,EACHH,EAAOrhC,MAAU,UACZ,OACLqhC,EAAO,MAAO,EAAI,mBACnB,O,SAID,KAAM,EAAD,mBACHA,EAAO,SAAU,EACjB,IAAO,EAAU,IACjB,EAAI,MAAO,EAAO,YAChB,IAAS,IAEX,SAEA,eACO,MAAP,EACD,yB,aAID,S,+BAIEA,EAAO,MAAO,EAAI,cAClBA,EAAO,QAAU,EAAO,iBACnB,WACL,EAAY,EAAK,YAAI,WAEvB,EAAQ,aAEJ,EAAM,eACN,EAAM,MAAK,WAEd,SAEA,qBACO,MAARI,G,yBAIEJ,EAAO,SAAU,OAClB,EAAM,iBAELA,EAAOrhC,MAAU,OAEnB,SAEF,KAAO,EAAA0hC,MACK,MAAL,EACH,EAAI,MAAY,EAAE,aAEjB,WAED,SAED,OAAM,aACE,MAAP,EACD,EAAM,wBAELL,EAAO,OAAU,IAAK,EACvB,iB,SAID,KAAM,EAAD,eACI,MAAP,GACK,EAAI,OACT,EAAY,EAAK,UAAc,SAE/B,EAAO,EAAY,gBACpB,WACD,EAAQ,c,QAEJ,EAAC,OAAc,KAEjB,EAAQ,cACT,EAAU,MAAM,EAAG,OAEnB,SAEA,iBACO,MAARI,E,2BAEK,EAAgB,GACjB,EAAM,MAAK,iBAEX,EAAM,cAAO,EAEd,SAED,sBACD,IAAM,qBACL,SACiB,MAAV,EACR,2B,kBAID,SAEC,OAAM,iBACE,MAAP,GACA,EAAU,EAAK,2BACb,KAAQJ,EAAM,aACf,KAAM,EAAU,eAEhB,EAAM,+BACL,EAAK,QAAY,OAEhB,sBACDA,EAAOrhC,MAAQuhC,EAAE,gBAEpB,S,gBAGI,IAAc,GACf,EAAM,SAAK,GAEb,EAASF,GACJ,QACL,EAAWA,GACM,MAAL,EACb,0B,MAGI,EAAM,mCAEP,QAAiB,WAGnB,SAEA,sBACS,MAAV,GACC,EAAO,GAAU,GACjB,EAAO,KAER,EAAM,oDACL,QAAiB,EAAE,QAErB,SAEF,KAAO,EAAAM,OAEH,KAAiB,GAClB,SACkB,MAAN,EACX,EAAO,GACO,MAAP,EACP,EAAQ,MAAO,iBACN,IAAiB,IAC1BN,EAAO,WAAU,EAClB,EAAU,YAAQ,GACjBA,EAAO,MAAU,eAEjBO,EAAWP,EAAQ,0BAErB,SAEF,KAAO,EAAAQ,YACK,MAAL,EACHR,EAAOrhC,MAAU,EAAA8hC,aACR,SACT,EAAQ,6BACT,EAAM,yBACL,KACA,EAAU,IACH,EAAgB,GACvB,EAAS,MAAQ,wBACT,EAAO,EAAU,GACvB,EAAO,YAAE,EAEX,EAAO,EAAa,0BAElB,SAEA,6BACA,GAAO,MAAP,EACD,EAAM,yBACL,MAAmB,GACnB,SAEH,+BACD,EAAQ,gC,iBAEJ,EAAC,EAAY,eACb,OAAe,WACjB,MAAQ,KAERT,EAAQ,WAAI,GACA,MAAN,EACP,EAAM,GACM,EAAQ,MACnBA,EAAO,WAAU,EACjBA,EAAO,MAAW,EAAG,cAEvB,EAAQ,4B,kBAIN,SAEC,oBACC,KAAO,GACR,SACO,MACT,MACD,EAAO,MAAO,wBAEd,EAAe,EAAE,4BACjB,EAAQ,8B,iBAGR,SAEC,OAAM,oBACL,OAAQA,EAAO,GACL,MAAL,EACLA,EAAOrhC,MAAU,wBAEjB,EAAW,aAAQ,EAEnB,SAED,EAAM,GACL,IAAW,GACZ,8BACD,SAEF,KAAO,sBACA,EAAc,GACjB,EAAK,MAAU,SACE,MAAR,EACR,EAAM,GACE,QACR,yBACO,QACT,wCACD,EAAO,WAAO,EACV,EAAM,YAAK,GACb,EAAQ,MAAO,eAEf,EAAY,EAAK,0BAEnB,SAEF,KAAO,wBACL,IAAK,EAAc,GAAE,CACf,QACF,EAAQ,8BAER,EAAI,aAAe,EAEjB,SAEA,KACD,QACF,EAAM,GAEN,iBAED,SAEA,iBACD,GAAM,EAAI,QAaQ,MAAf,EACF,EAAQ,GACT,OACG,EAAM,SAAK,EACJqhC,EAAO,QACjB,EAAM,uBACL,UAAmB,GACpB,mB,MAGI,EAAY,oCAEb,EAAC,iCAzBa,CAChB,GAAM,EAAW,GACjB,SACY,EAAK,EAAM,GAClB,UACA,UAAiB,OACpB,EAAW,MAAQ,UAEf,EAAW,qC,YAmBnB,SAEE,KAAKE,EAAA,oBACH,KAAe,GACf,S,QAGF,EAAO,GAEL,EAAS,uC,SAIT,mBACA,6BACA,6BACH,M,EAED,OAAU,EAAK,OACb,KAAO,cACP,EAAgB,EAAE,KAClB,EAAY,WACb,MAEA,KAAM,wBACL,EAAiB,EAAE,oBACnB,EAAa,cACb,MAED,6B,0BAED,EAAQ,cAIX,SACF,W,YAES,EAAC,MAAY,GACJ,EAAO,EAAC,qBAC1B,aAEF,wC,4CAMO,SAEA,QACE,UAAS,MAAE,EAAM,2BAIrB,EAAS,UAAK,uBAl4CV,SAAiB,GAGnB,I,IAFE,EAAK,iC,IAEF,IAAO,oB,IACV,IAAS,EAAQ,W,GACjB,EAAM,EAKN,OAAM,EAAO,IACb,IAAK,W,KAEP,MAED,YACF,uBACD,EAAY,MAAS,GACtB,MAEO,IAAI,SACL,IAAmB,WAAa,EAAC,QACzC,Y,MAGM,QACI,EAAO,EAAO,+BAAE,M,gBAMzB,IAAI,EAAM,EAAC,kBAAc,EACvB,sBAA4B,EAAAF,EAAY,SAk2CtC,CAAa,GAEX,OAAO,GA10Cb,kBAEF,O,gBAAS,MAER,iB,yBAGC,MAAM,WAxBR,IAAsB,EACpB,EADoB,EAyBP,MAvBD,KAAP,EAAO,QACZ,EAAQ,EAAY,UAAY,EAAO,OACvC,EAAO,MAAY,IAEpB,gB,yBAEG,EAAM,aAsBR,IACA,EAAK,IAAW,OAChB,MAAK,G,eAIL,IAAI,EAAc,EAAG,eAAY,YAC/B,MAAa,UAAN,GAAO,a,gBAQd,KAAG,gBAAgB,GACpB,kB,cAKC,aAAO,MAAmB,EAAW,GACnC,KAAG,UAAE,EACH,eAAU,EAEZ,MAAK,K,KAED,QAAG,iB,EACH,KAAG,QAGL,aAAQ,QAAI,YACb,kBAIH,sBAGJ,KAAS,SAAU,KAEf,EAAO,SAAS,YACjB,gCACD,e,0BAGI,IAAO,SAAM,GACf,IAAO,EAGC,OAFD,qBAAgB,GAClB,EAAK,QAAQ,KAAE,KACTU,EAEV,WAEF,c,4DAOH,YAAU,CACJ,MAAK,KAIT,EAAO,UAAI,kBACZ,yE,mBAED,IAAU,MAAe,cACjB,KAAG,SAAI,cAET,EAAC,KAAQ,SAAU,MAAG,GAKzB,OAFG,KAAG,QAAK,MAAQ,EAAM,YACvB,qBACF,GAGF,4BAKG,O,2BADA,KAAK,QAAG,OACA,GAGZ,EAAU,UAAU,YAAe,EAAK,G,WAUpC,O,8KAAA,EAAW,0BAKf,IAEC,yC,kCAED,EAAS,CAAO,IAAK,WAQrB,EACE,4J,EAGF,gMAEC,E,6JAEK,EACF,iMAEF,WAAqB,GACrB,MAAS,sCAGT,SAAS,EAAK,GACd,eAAqB,QAGrB,WAAgB,GAChB,eAAqB,EAAE,GAGvB,WAAiB,EAAE,GACnB,SAAe,KAAG,GAGlB,WAAiB,EAAE,GACnB,OAAS,EAAK,KAGd,MAAQ,EAsTR,IAAI,IAAI,KArTR,SACA,MAAS,IACT,iBAAgB,IAChB,SACA,YAAe,IACf,cACA,cACA,qBACA,YACA,mBACA,YAAc,IACd,mBAAsB,IACtB,iBAAW,IACX,QAAAR,IACD,mB,kBAEG,UACF,aAAU,IACV,eAAS,IACT,UAAS,IACT,eAAW,IACX,iBAAW,IACZ,a,mBAEG,OAAQ,IACV,YAAU,IACV,sBAAS,IACT,aAAS,IACT,oBAAW,IACX,oBAAW,IACX,sBAAY,IACZ,sBAAa,IACb,sBAAY,IACZ,UAAa,IACb,oBAAY,IACZ,OAAU,IACV,cAAW,KAGX,eAAa,CACb,IAAO,IACP,OACA,GAAM,IACN,KAAQ,IACR,KAAO,KAGP,WAAa,CACb,QACA,OACA,OACA,KAAQ,IACR,KAAQ,IACR,MAAQ,IACR,OAAS,IACT,MAAQ,IACR,OAAS,IACT,MAAQ,IACR,OAAQ,IACR,KAAQ,IACR,OAAU,IACV,IAAO,IACP,OAAS,IACT,MAAQ,IACR,OAAS,IACT,KAAQ,IACR,OAAQ,IACR,MAAQ,IACR,OAAU,IACV,KAAO,IACP,OAAU,IACV,OAAU,IACV,MAAQ,IACR,OAAU,IACV,OAAS,IACT,OAAU,IACV,KAAQ,IACR,MAAQ,IACR,OAAU,IACV,MAAS,IACT,OAAU,IACV,KAAQ,IACR,OAAU,IACV,OAAQ,IACR,MAAS,IACT,MAAS,IACT,OAAU,IACV,MAAS,IACT,OAAU,IACV,KAAQ,IACR,OAAU,IACV,OAAQ,IACR,MAAQ,IACR,OAAU,IACV,IAAM,IACN,KAAO,IACP,OAAQ,IACR,MAAS,IACT,OAAU,IACV,KAAO,IACP,OAAU,IACV,OAAQ,IACR,MAAO,IACP,OAAQ,IACR,OAAS,IACT,OAAU,IACV,KAAO,IACP,MAAQ,IACR,MAAO,IACP,OAAU,IACV,MAAQ,IACR,OAAQ,IACR,KAAQ,IACR,OAAS,IACT,KAAO,IACP,KAAQ,IACR,QACA,KAAO,IACP,MAAQ,IACR,KAAO,IACP,MAAQ,IACR,OAAU,IACV,QACA,OAAU,IACV,KAAO,IACP,QACA,KAAO,IACP,MAAS,IACT,QACA,QACA,KAAQ,IACR,IAAM,IACN,OAAQ,IACR,KAAO,IACP,KAAO,IACP,KAAQ,IACR,MAAS,IACT,MAAS,IACT,SACA,OAAQ,IACR,MAAO,IACP,KAAO,IACP,MAAQ,IACR,OAAS,IACT,OAAU,IACV,OAAS,IACT,OAAS,IACT,MAAS,IACT,OAAS,IACT,MAAS,IACT,MAAO,IACP,OAAS,IACT,OAAU,IACV,SACA,KAAO,IACP,KAAO,IACP,MAAO,IACP,MAAS,IACT,KAAO,IACP,MAAQ,IACR,MAAS,IACT,QAAS,IACT,SACA,IAAM,IACN,MAAO,IACP,KAAO,IACP,MAAQ,IACR,OAAS,IACT,OACA,GAAM,IACN,GAAM,IACN,QAAS,IACT,OACA,IAAM,IACN,MAAO,IACP,QACA,QAAS,IACT,IAAO,IACP,QACA,IAAO,IACP,MAAO,IACP,MAAO,IACP,KAAO,IACP,UACA,MAAS,IACT,QAAU,IACV,KAAQ,IACR,IAAM,IACN,MAAQ,IACR,KAAQ,IACR,MAAO,IACP,OAAO,IACP,GAAK,IACL,OACA,OACA,QAAS,IACT,OACA,IAAO,IACP,OAAS,IACT,MAAS,IACT,IAAO,IACP,QAAU,IACV,QACA,IAAM,IACN,QACA,MAAQ,IACR,SAAS,IACT,MAAS,IACT,QACA,KAAQ,KACR,KAAO,KACP,OAAS,KACT,KAAQ,KACR,IAAO,KACP,SACA,IAAM,KACN,MAAS,KACT,MAAS,KACT,MAAQ,KACR,MAAQ,KACR,MAAQ,KACR,MAAQ,KACR,MAAQ,KACR,MAAS,KACT,OAAQ,KACR,OAAQ,KACR,KAAQ,KACR,OAAQ,KACR,OAAQ,KACR,MAAQ,KACR,MAAQ,KACR,OAAS,KACT,OAAS,KACT,MAAS,KACT,MAAQ,KACR,KAAO,KACP,MAAM,KACN,OAAQ,KACR,KAAO,KACP,MAAS,KACT,QAAU,KACV,KAAO,KACP,KAAQ,KACR,KAAO,KACP,KAAO,KACP,KAAO,KACP,MAAM,KACN,KAAO,KACP,KAAO,KACP,KAAO,KACP,KAAQ,KACR,KAAO,KACP,OAAQ,KACR,KAAO,KACP,MAAM,KACN,MAAS,KACT,MAAM,KACN,KAAM,KACN,MAAO,KACP,GAAK,KACL,KAAQ,KACR,IAAM,KACN,MAAQ,KACR,OAAS,KACT,MAAQ,KACR,KAAQ,KACR,MAAQ,KACR,IAAO,KACP,IAAO,KACP,QACA,SACA,IAAM,KACN,IAAM,KACN,OAAO,KACP,SACA,KAAO,KACP,MAAQ,KACR,QACD,W,QAED,GAAO,KACL,IAAK,KACL,IAAK,KACL,KAAI,KACJ,U,UAEF,MAAU,KACR,OAAU,KACX,U,qBAGG,MAAI,K,YAER,OAAS,KACP,KAAO,KACR,U,SAED,OAAS,KACP,MAAI,KACJ,OAAK,KACN,YAGC,OAAO,OAAQ,UAAW,SAAQ,SAAK,GACvC,IAAI,EAAM,EAAC,SAAU,GACf,EAAc,kBAAJ,EAAI,yBACrB,mBAGe,EAAI,MAClB,EAAI,MAAI,QAAW,IAAO,EAM1B,SAAI,EAAO,IAAe,GACxB,EAAM,IAAU,EAAG,GAAW,GAG/B,kBACI,EAAI,UAAS,KAClB,EAAO,EAAQ,EAAE,GAGlB,c,+BAED,EAAc,UAAQ,yBACpB,EAAI,SAAc,GAGf,SAAM,EAAM,EAAO,GAGtB,OAFE,EAAM,OAAQ,YACf,uCACQ,EAGT,SAAK,EAAQ,EAAQ,GAQpB,OAPD,EAAU,GACV,EAAa,gBACd,2DAED,EAAS,UAAU,GACjB,EAAI,MAAa,EACf,IAAU,UAAM,GACjB,EAGA,cAUC,OATH,mD,mEAED,EAAS,EAAQ,kBAEf,EAAU,GACV,EAAO,EAAG,G,yBAGV,EAAW,KAAI,EAAO,gBACb,EAGT,SAAS,EAAQ,KAClB,0C,0CAGM,EAAQ,QACT,IAAY,G,cAKZ,EAAS,SAAQ,EAAK,QAAS,0BACjC,MAAS,EAAO,yBAChB,EAAU,qCAGZ,EAAS,IAAQ,QAClB,WAED,EAAS,WAAQ,OAAQ,EACvB,EAAW,EAAO,iBAAE,G,gBAIpB,IACE,EADQ,EAAC,QAAW,KACT,EAAW,OAAc,EAAC,MAAO,KAC5C,EAAO,EAAa,GACpB,EAAM,KAQN,OALE,GAAkB,UAAP,IACb,EAAS,QACT,EAAU,IAGN,CAAAS,OAAW,EAAS,SAGpB,WAAU,GAKR,GAJA,WACA,aAAaX,EAAO,WAAY,iBAIA,IAAhC,aAAa,QAAO,eACvB,EAAM,4CAEL,EAAI,WAASA,EAAY,YAAY,OAJnC,C,GAQF,EAAO,UAAS,CACjB,yBACF,W,yBAKD,GAAkB,QAAX,GAAiBA,EAAO,cAAmB,EAC7C,uE,kCAEC,EACE,EACA,kCAAiB,EAAjB,aAAiB,mBAEvB,CACH,Y,6BAEM,OAAa,EAAO,KAC5B,0BAEQ,KAAO,GAAU,cAOtB,EAAI,WAAY,KAAM,mC,6CAItB,EAAQ,EAAW,cAAS,CAC1B,OAAW,WACT,MAAK,EAAS,cAIlB,EAAI,WAAgB,EAAK,YAAY,IAGjC,WAASA,EAAQ,G,GACf,MAAS,OAEV,MAAC,M,0EAQA,EAAE,SAAU,QAChB,EAAa,EAAG,wDAChB,EAAI,IAAQ,EAAG,QAGf,IAAI,EAAQ,EAAQ,KAAC,EAAK,kBACtB,EAAG,IAAG,EAAW,KAAO,EAAI,IAChC,OAAQ,gCACN,EAAU,qBACV,OAAY,EACZ,IAAQ,KAAM,QAQd,UAAW,IAAM,EAAE,oBAA4B,OAC7C,MAAK,EAAS,WAAS,GACvB,EAAM,KACT,OACK,EAAK,EAAW/kD,GAAK,GAC3B,EAAe,EAAE,OAClB,UACM,EAAiB,KAAjB,EAAqB,eAC7B,G,OAEM,MAAI,E,iBAGJ,OAKA,GAAmB,UAAZ,IAA2B,IACrC,EAAe,EAAE,6BAAM,mBACxB,EAAM,OAEN,sBACD,EAAa,EAAI,iBAElB,sBAGF,wBAGC,EAAK,SAAc,EACjB,OAAW,KAAM,EAAE,KACnB,EAAO,EAAQ,YAAS,OACxB,IAED,+CAGK+kD,EAAO,MAAO,O,iBAEhBA,EAAOY,IAAA,KACPZ,EAAO,QAAU,IAElB,8BACD,aAAiB,OAAU,E,4BAQzB,O,8BAFA,EAAI,UAAY,WAChB,EAAO,MAAG,EAAO,MAIrB,GAAI,EAAO,OAAG,CACd,GAAY,WAAJ,EAAI,QAIR,OAHE,EAAK,QAAU,KAAO,cACtB,EAAM,QAAS,Q,kBAIjB,EAAK,uBACN,YAKD,QAAW,KAAQ,OACnB,EAAO,EAAY,QACnBA,EAAY,SACZ,EAAM,kBAGR,IADA,IAAM,EAAQ,EACN,KAAM,CAEZ,GADc,UACJ,OAAU,EAIhB,MAFJ,EAAe,EAAE,wBAOjB,GAAI,IAIA,OAHJ,EAAW,EAAS,0BAA0B,W,oCAE5C,EAAO,MAAQ,EAAC,MAGf,EAAC,UAEL,IADE,oBACF,SACG,IAAE,EAAOA,EAAO,MAAa,KAAI,MACrCA,EAAOa,QAAUb,EAAO,SACxB,EAAO,EAAW,aAAU,WAE7B,S,kBAED,EAAS,QAAa,GAGhB,IAAG,6BACH,EAAS,IAAE,oBAEX,OAAO,OAAS,IAAM,SAAG,YAC3B,IAAO,EAAO,QACf,4CAIQ,IAAH,IAAG,EAAQ,eACjB,EAAI,QAAe,EAAM,YAAK,gBAC5B,EAAI,WAAc,OAAO,EACvB,QAAS,EAAM,KAGhB,SAAM,KACL,IAEA9D,EAFA4E,EAAS,EAAO,OAChB,EAAM,EAAS,cAEhB,KAEH,OAAM,EAAG,SAAO,GACN,EAAQ,SAAO,GAEvB,EAAU,SAAU,GACrB,eAGF,OADC,EAAO,GACR,Y,mBAED,EAAS,EAAe,MAAE,GAEtB,GADG,EAAK,SAAK,OACI,eAElB,EAAW,QAAe,G,oCAKzB,EAAO,EAAS,QAAK,UACtB,+BACF,gC,kBAIS,OAAM,cAAQ,IAGtB,SAAO,EAAM,KACd,S,oBAED,EAAS,iBAAc,YACR,EAAI,KAGhB,wCACGd,EAAO,SAAQ,EACjB,EAAO,MAAM,EAAM,MAInB,SAAO,EAAI,EAAO,GACnB,SAID,OAHI,IAAY,SACd,EAAQC,EAAM,OAAQ,IAEhB,EAhVV,IAAS,MAq3BD,sB,eAEE,EAAa,oBACb,OAAY,MACZ,EAAgB,WAChB,IAED,EACG,EAHF,QACA,EAAM,GAGN,GAAU,EACX,EAAM,iB,MAEL,SAGA,IADA,WACA,EAAe,IAChB,2BACD,IACE,SAAU,IACV,EAAU,GACX,WACF,SAEF,2CAES,GAAC,MAEP,EAAO,SAKH,EAA8B,QAD/B,WACkB,IACxB,eACC,cAEmD,uB,+BC1hDlD,OAAE,GAGN,sB,8CAEM,MAAO,EACf,gB,cCRC,OAAUc,cAAiC,E,GFA7C,CEIA,MAGI,EACE,SAAY,GACb,qBACF,iB,sDAOA,I,EAGH,SAAoB,GAClB,IAAI,EACF,EAAO,GACR,WACF,sB,WAIG,U,gBAIJ,KAAe,GAA0B,mBAAT9oC,EAAS,KACvC,EAAS,IAAQ,I,cH9BjB+oC,gBAAmC,IAAS,sD,qBAMvC,SAAgB,KAChB,EAAGlB,QAAM,GAA0B,kBAAb,EAAa,WAC1CA,IAAO,SAAiB,YAAmB,EAAE,IAS7CA,EAAO,EAgDP,SAAI,EAAQ,GACV,gB,IACG,SACAkB,S,IAED,IAAe,cAChB,kBAEgB,UAAf,GAGA18C,EAGA,WAAY,EAAK,G,IACf,E,GACE,EAAI,SAaR,IAXK,EAAM,cACL,EAAI,EAAO,cAAW,uDAEtB,EAAM2T,EAAQ,UAAkB,IAEnC,mCACF,+BAEC+oC,SAAQ,GAA8B,kBAAP,IACjC,IAAe,EAAQ,MAAI,EAAS,IAEpC,oBAA2B,kBAAmB,4BAC/C,WACF,GAAM,oBACA,qBAAuB,EAC1B,KAAe/oC,EAAQ,cAAkB,cAC1C,CACG,IAAQ,EAAK,YACF,EAAC,GACR,EAAK,oBAAe,UAKzB,iBACD,EAAe,EAAQ,EAAI,gBAEzB,EAAQA,EAAQ,UAAsB,MAEpC,CACD,mBACF,EAAM,mB,IAEH,EAAM,G,GACP,eACO,gBAAR,EAAgB,CACjB,WACF,GAAM,oBACD,MAGJjI,EAAQiI,EAAQ,SACjB,qDACGA,EAAQ,0BACVjI,EAAQiI,EAAQ,eAAa,KAAe,iBAC7C,sBACD,EAAc,EAAQ,eAAc,EAAK,cAAS,2B,sBAI7C,OAAqB,cAAY,WAEtC,EAAU,EAAU,gBAAc,EAAU,SAGxC,EAAI,WACR,EAAY,IAAY,YAEpB,EAAIA,EAAQ,EAAM,QAAW,EAE3B,cACD,kBAED,EAAI,eAA4B,KAAE,I,SAIjC,KAQP,IAAI,EAJJ,GAHK,wBACF,wBAGJ,gF,EAIC,IAAI,OACF,GAAI,EAAW,eAAG,KACd,EAAM,yBACF,EAAQ,uBACdgpC,EAAW,GAAS,EAAW,EAAY,KAE7C,qBAAa,IACd,mCACG,oBAAiB,GAAkB,CACjC,MAAQ,YACH,KACR,iCAKD,OAAI,EAGL,SAAM,KACL,MAAY,G,GACV,EAAO,kEAGP,IAFD,IACG,EADH,sDAE4C,QAA3C,EAAY,EAAO,KAAY,EAAY,QAC5C,yBAED,EAAY,K,GAEsB,QAAhC,EAAM,KAAW,cAAe,CACjC,KAAM,kBACL,OAEF,EAAS,EAAa,gBAAS,GAChC,wBACF,wCAED,EAAS,YACH,EAAQ,sCAEV,CACA,GAAI,EAAQ,kBACb,OAEG,SACF,EAAc,KAAC,EAAkB,KAAE,QAErC,IAAI,EAAQ,GACV,EAAY,0BAAC,uBACb,EAAK,EAAQ,SACX,IAAgB,QAAc,eAAM,GAEpC,EAAK,EAAO,MAAY,OAEpB,gBAAgB,IAItB,gB,IACE,E,GACS,kBAARD,IACD,eACA,UAEF,EAAI,EAAyBA,GAC3B,kBAAmB,IACpB,wBAEC,UAAe,CAIlB,IAAM,EAFH,GADD,EAAM,IACL,oBAA+B,yBAGjC,IAAK,KAFJ,sBAEI,EACH,EAAe,eAAQ,KACxB,8BAKC,KAAQ,KACT,gEAEC,EAAe,GAAC,IAElBE,EAAe,KAAQ,EAAa,EAAc,MACnD,aAED,EAAc,EAAW,IAC1B,aAED,EAAoB,GAAE,OAGnB,mBACG,EAAY,EAAK,aAAQ,KAE5B,MACGjpC,EAAc,mBAChB,EAAO,EAAS,SAAG,GACpB,+CACG,EAAQ,iBAAY,GAEvB,mBACG,EAAQ,EAAQ,aAAE,IAErB,yBAEF,iB,IAIG,WAAO,GACR,eAGA,4C,SAIH,EAAS,UAEH,EAAQ,aACV,EAAO,MAET,aACD,qEAED,EAAS,OAAQ,IAGd,cACGA,EAAQ,gBAGZ,EAAS,OACV,YAED,EAAS,UAAU,IAGhB,cACD,MAAkB,EAAiB,EAAC,WAChCA,EAAQ,kBACF,EAAc,EAAG,WAE3B,EAAS,EAGX,SAAS,EAAQ,GACf,EAAU,cAGZ,EAAiB,O,YAGf,EAAI,QAAY,IAGhB,SAAQ,EAAE,G,kBAIR,EAAO,EAAS,QAAG,SACnB,EAAO,OACP,EAAO,EAAS,QAEhB,EAAO,UAAU,IAGjB,WAAO,GACR,EASA,O,IAGC,EAAO,SAAW,EAAK,GACxB,IAIA,kB,KIlVD,GJoVA,EAAW,EAET,EAzUF6nC,SAAO,G,OACPA,IAAwB,GACxBA,EAAO,oBAAiC,GACxCA,EAAuB,oBAAsB,GAC7CA,EAAuB,mBAAe7nC,GACtC6nC,EAAuB,aAAc7nC,GACrC6nC,EAAuB,gBAAiB,GACxCA,EAAuB,cAAW7nC,GAClC6nC,EAAuB,gBAAkB,GACzCA,EAAuB,UAAW7nC,GAClC6nC,EAAuB,iBAAiB,GACxCA,EAAuB,YAAQ7nC,GAC/B6nC,EAAuB,UACvBA,EAAuB,aAAU7nC,GAWjC,EAAe,0BAChB,gB,gCAED,EAA2B,kCACzB,EAA2B,GAC3B,EAAoB,iBAClB,EAAc,iBACf,kBACD,EAA8B,OAAG,GACjC,EAAuB,aACrB,EAAY,WACb,EAA4B,UAAE,GAC7B,EAAa,UACd,YACD,EAAa,cACd,c,EAkSU,CAAe,GAGvB,0B,cAED,EAAO,OAAO,E,cAEf,e,YItWD,EAASkpC,UACP,EAAI,UAAUrB,EACdA,0BAA0B,EAI5B,QAAiB,WAGb,EAAS,EAAM,aAAS,CAC1B,MAAY,IAAa,oB,iBAEzB,EAAI,EAAW,aAAe,SACrB,EAAK,KAGb,U,MChBGsB,E,kBAEO,EAAS/tC,EAAd,W,IAAA,MAFR,K,6EASaguC,OACFA,EAFgB,K,IAGVA,cAHjBD,O,6BCRME,uCAAqB,EAA+C,2BAA5CrmD,kBAA4C,QAAC,MAAD,+BAAtCsmD,0BAAsC,qD,gEAIxD,IAAN,W,yCACA,K,IAAsDA,4D,IAH1D,uD,gHAUSF,SAFc,G,MAGpBA,EAHoB,M,IAIdA,MAJjBC,gB,ivBCVA,E,cC2BME,SAAU,QAAK,GAAGvmD,SAAMwmD,sBAAwE,UAA9DR,O,cDlBxCS,S,GAAwB,E,GAEbL,EAFXK,SCHA,I,IACW,IAAP,EAAW7oD,EAAJ,SAAP,qC,iBAGK8oD,KAAT,SAAiC,GAH7B,O,cAOJ,IARA,Q,KAWW,GAAIjpD,UAAJ,EAAwB,S,sBAMnC,SAIwCuoD,MAAmBW,6E,kBAChDC,IAD2F,KAChFC,IADgF,MAG5FC,EAAUle,gBAAD,cAAf,qC,qFAGI,kB,0CAkBU,EAAN,K,IAAgD4d,SAlBpD,e,IAmBK,M,kBAAgC,EAAN,W,IAA6B,Y,EAC3C,uB,WAAM,EAAN,GAAmDE,IAAnD,G,EACA,sB,WAAA,c,MArBjB,C,OAsBiB,2B,oBAAM,GAAStuC,IAvBpC,oBALJ,mBAiCoB,M,qDAZF,SAAO,U,SAAb,6B,KAaFguC,GADU,M,IAKHA,sBAAiBW,OALd,gC,IAMJX,sBAAiBW,OANb,uBAOHX,qBAAeW,0BAPhCR,sE,IAUMS,G,IAA8D,cAChE,O,SACI,G,IACW,gBAAP,CACC,SAAL,E,MACI,EACC,YAAL,G,EAAA,E,UArCcC,UAAN,M,WAsCJ,EACC,YAAL,K,qBAKI,O,2CAzCOC,G,qBACC,SAAe,EAAf,QA2BA,CAAD,kB,0DAiBbC,GAAW,IAAK,qBAA+D,CAAC,MAAD,mCCtDzEC,kBAAL,SAAoB,G,QACrB,SAHJ,UAbF,gB,eAqBAC,IAAsB,Y,OAEXjB,MDsDKA,SAJK,S,OAKJA,cALjBe,e,WCtFMG,WAAe,iBAAC,IAAD,8B,IAAA,UAER,OAFQ,qB,IAGA,MAHA,E,OAAA,K,SAAA,WAML,WANK,aAOP,MAPO,EAQJ,cARjB,a,sEAWA,kB,QAEMD,gBAAoBE,YAAOC,yBAAoD,GAAxCC,YAAY7e,MAA4B,EAA5BA,MAAgB14B,MAAY,E,gBAE7Ew3C,IAAN,c,4BAEI,YACKC,cAAP,YACK/pD,OAAL,KACS6pD,MAAP,E,gBAGF,Q,cAWkB,c,EAKLrB,WALjBiB,iC,4BAQAA,gBAAyB,mD,YAAA,qBAAzBA,O,8RF/CuBhhB,WAAMkhB,EAAY,QAAZA,IAAY,G,4CAC/Bhf,OAAN,I,OAEI,E","file":"static/js/main.73540c1f.chunk.js","sourcesContent":["export const cadesplagin = () => {\r\n  //already loaded\r\n  if (window.cadesplugin) return\r\n\r\n  var pluginObject\r\n  var plugin_resolved = 0\r\n  var plugin_reject\r\n  var plugin_resolve\r\n  var isOpera = 0\r\n  var isFireFox = 0\r\n  var isSafari = 0\r\n  var isYandex = 0\r\n  var canPromise = !!window.Promise\r\n  var cadesplugin_loaded_event_recieved = false\r\n  var isFireFoxExtensionLoaded = false\r\n  var cadesplugin\r\n\r\n  if (canPromise) {\r\n    cadesplugin = new Promise(function (resolve, reject) {\r\n      plugin_resolve = resolve\r\n      plugin_reject = reject\r\n    })\r\n  } else {\r\n    cadesplugin = {}\r\n  }\r\n\r\n  function check_browser() {\r\n    var ua = navigator.userAgent,\r\n      tem,\r\n      M = ua.match(/(opera|yabrowser|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || []\r\n    if (/trident/i.test(M[1])) {\r\n      tem = /\\brv[ :]+(\\d+)/g.exec(ua) || []\r\n      return { name: \"IE\", version: tem[1] || \"\" }\r\n    }\r\n    if (M[1] === \"Chrome\") {\r\n      tem = ua.match(/\\b(OPR|Edg|YaBrowser)\\/(\\d+)/)\r\n      if (tem != null) return { name: tem[1].replace(\"OPR\", \"Opera\"), version: tem[2] }\r\n    }\r\n    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, \"-?\"]\r\n    if ((tem = ua.match(/version\\/(\\d+)/i)) != null) M.splice(1, 1, tem[1])\r\n    return { name: M[0], version: M[1] }\r\n  }\r\n  var browserSpecs = check_browser()\r\n\r\n  function cpcsp_console_log(level, msg) {\r\n    //IE9 не может писать в консоль если не открыта вкладка developer tools\r\n    if (typeof console === \"undefined\") return\r\n    if (level <= cadesplugin.current_log_level) {\r\n      if (level === cadesplugin.LOG_LEVEL_DEBUG) console.log(\"DEBUG: %s\", msg)\r\n      if (level === cadesplugin.LOG_LEVEL_INFO) console.info(\"INFO: %s\", msg)\r\n      if (level === cadesplugin.LOG_LEVEL_ERROR) console.error(\"ERROR: %s\", msg)\r\n      return\r\n    }\r\n  }\r\n\r\n  function set_log_level(level) {\r\n    if (\r\n      !(\r\n        level === cadesplugin.LOG_LEVEL_DEBUG ||\r\n        level === cadesplugin.LOG_LEVEL_INFO ||\r\n        level === cadesplugin.LOG_LEVEL_ERROR\r\n      )\r\n    ) {\r\n      cpcsp_console_log(cadesplugin.LOG_LEVEL_ERROR, \"cadesplugin_api.js: Incorrect log_level: \" + level)\r\n      return\r\n    }\r\n    cadesplugin.current_log_level = level\r\n    if (cadesplugin.current_log_level === cadesplugin.LOG_LEVEL_DEBUG)\r\n      cpcsp_console_log(cadesplugin.LOG_LEVEL_INFO, \"cadesplugin_api.js: log_level = DEBUG\")\r\n    if (cadesplugin.current_log_level === cadesplugin.LOG_LEVEL_INFO)\r\n      cpcsp_console_log(cadesplugin.LOG_LEVEL_INFO, \"cadesplugin_api.js: log_level = INFO\")\r\n    if (cadesplugin.current_log_level === cadesplugin.LOG_LEVEL_ERROR)\r\n      cpcsp_console_log(cadesplugin.LOG_LEVEL_INFO, \"cadesplugin_api.js: log_level = ERROR\")\r\n    if (isNativeMessageSupported()) {\r\n      if (cadesplugin.current_log_level === cadesplugin.LOG_LEVEL_DEBUG) window.postMessage(\"set_log_level=debug\", \"*\")\r\n      if (cadesplugin.current_log_level === cadesplugin.LOG_LEVEL_INFO) window.postMessage(\"set_log_level=info\", \"*\")\r\n      if (cadesplugin.current_log_level === cadesplugin.LOG_LEVEL_ERROR) window.postMessage(\"set_log_level=error\", \"*\")\r\n    }\r\n  }\r\n\r\n  function set_constantValues() {\r\n    cadesplugin.CAPICOM_MEMORY_STORE = 0\r\n    cadesplugin.CAPICOM_LOCAL_MACHINE_STORE = 1\r\n    cadesplugin.CAPICOM_CURRENT_USER_STORE = 2\r\n    cadesplugin.CAPICOM_SMART_CARD_USER_STORE = 4\r\n    cadesplugin.CADESCOM_MEMORY_STORE = 0\r\n    cadesplugin.CADESCOM_LOCAL_MACHINE_STORE = 1\r\n    cadesplugin.CADESCOM_CURRENT_USER_STORE = 2\r\n    cadesplugin.CADESCOM_SMART_CARD_USER_STORE = 4\r\n    cadesplugin.CADESCOM_CONTAINER_STORE = 100\r\n\r\n    cadesplugin.CAPICOM_MY_STORE = \"My\"\r\n\r\n    cadesplugin.CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED = 2\r\n\r\n    cadesplugin.CAPICOM_CERTIFICATE_FIND_SUBJECT_NAME = 1\r\n\r\n    cadesplugin.CADESCOM_XML_SIGNATURE_TYPE_ENVELOPED = 0\r\n    cadesplugin.CADESCOM_XML_SIGNATURE_TYPE_ENVELOPING = 1\r\n    cadesplugin.CADESCOM_XML_SIGNATURE_TYPE_TEMPLATE = 2\r\n\r\n    cadesplugin.CADESCOM_XADES_DEFAULT = 0x00000010\r\n    cadesplugin.CADESCOM_XADES_BES = 0x00000020\r\n    cadesplugin.CADESCOM_XADES_T = 0x00000050\r\n    cadesplugin.CADESCOM_XADES_X_LONG_TYPE_1 = 0x000005d0\r\n    cadesplugin.CADESCOM_XMLDSIG_TYPE = 0x00000000\r\n\r\n    cadesplugin.XmlDsigGost3410UrlObsolete = \"http://www.w3.org/2001/04/xmldsig-more#gostr34102001-gostr3411\"\r\n    cadesplugin.XmlDsigGost3411UrlObsolete = \"http://www.w3.org/2001/04/xmldsig-more#gostr3411\"\r\n    cadesplugin.XmlDsigGost3410Url = \"urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34102001-gostr3411\"\r\n    cadesplugin.XmlDsigGost3411Url = \"urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr3411\"\r\n\r\n    cadesplugin.XmlDsigGost3411Url2012256 = \"urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34112012-256\"\r\n    cadesplugin.XmlDsigGost3410Url2012256 = \"urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34102012-gostr34112012-256\"\r\n    cadesplugin.XmlDsigGost3411Url2012512 = \"urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34112012-512\"\r\n    cadesplugin.XmlDsigGost3410Url2012512 = \"urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34102012-gostr34112012-512\"\r\n\r\n    cadesplugin.CADESCOM_CADES_DEFAULT = 0\r\n    cadesplugin.CADESCOM_CADES_BES = 1\r\n    cadesplugin.CADESCOM_CADES_T = 0x5\r\n    cadesplugin.CADESCOM_CADES_X_LONG_TYPE_1 = 0x5d\r\n    cadesplugin.CADESCOM_PKCS7_TYPE = 0xffff\r\n\r\n    cadesplugin.CADESCOM_ENCODE_BASE64 = 0\r\n    cadesplugin.CADESCOM_ENCODE_BINARY = 1\r\n    cadesplugin.CADESCOM_ENCODE_ANY = -1\r\n\r\n    cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_CHAIN_EXCEPT_ROOT = 0\r\n    cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN = 1\r\n    cadesplugin.CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY = 2\r\n\r\n    cadesplugin.CAPICOM_CERT_INFO_SUBJECT_SIMPLE_NAME = 0\r\n    cadesplugin.CAPICOM_CERT_INFO_ISSUER_SIMPLE_NAME = 1\r\n\r\n    cadesplugin.CAPICOM_CERTIFICATE_FIND_SHA1_HASH = 0\r\n    cadesplugin.CAPICOM_CERTIFICATE_FIND_SUBJECT_NAME = 1\r\n    cadesplugin.CAPICOM_CERTIFICATE_FIND_ISSUER_NAME = 2\r\n    cadesplugin.CAPICOM_CERTIFICATE_FIND_ROOT_NAME = 3\r\n    cadesplugin.CAPICOM_CERTIFICATE_FIND_TEMPLATE_NAME = 4\r\n    cadesplugin.CAPICOM_CERTIFICATE_FIND_EXTENSION = 5\r\n    cadesplugin.CAPICOM_CERTIFICATE_FIND_EXTENDED_PROPERTY = 6\r\n    cadesplugin.CAPICOM_CERTIFICATE_FIND_APPLICATION_POLICY = 7\r\n    cadesplugin.CAPICOM_CERTIFICATE_FIND_CERTIFICATE_POLICY = 8\r\n    cadesplugin.CAPICOM_CERTIFICATE_FIND_TIME_VALID = 9\r\n    cadesplugin.CAPICOM_CERTIFICATE_FIND_TIME_NOT_YET_VALID = 10\r\n    cadesplugin.CAPICOM_CERTIFICATE_FIND_TIME_EXPIRED = 11\r\n    cadesplugin.CAPICOM_CERTIFICATE_FIND_KEY_USAGE = 12\r\n\r\n    cadesplugin.CAPICOM_DIGITAL_SIGNATURE_KEY_USAGE = 128\r\n\r\n    cadesplugin.CAPICOM_PROPID_ENHKEY_USAGE = 9\r\n\r\n    cadesplugin.CAPICOM_OID_OTHER = 0\r\n    cadesplugin.CAPICOM_OID_KEY_USAGE_EXTENSION = 10\r\n\r\n    cadesplugin.CAPICOM_EKU_CLIENT_AUTH = 2\r\n    cadesplugin.CAPICOM_EKU_SMARTCARD_LOGON = 5\r\n    cadesplugin.CAPICOM_EKU_OTHER = 0\r\n\r\n    cadesplugin.CAPICOM_AUTHENTICATED_ATTRIBUTE_SIGNING_TIME = 0\r\n    cadesplugin.CAPICOM_AUTHENTICATED_ATTRIBUTE_DOCUMENT_NAME = 1\r\n    cadesplugin.CAPICOM_AUTHENTICATED_ATTRIBUTE_DOCUMENT_DESCRIPTION = 2\r\n    cadesplugin.CADESCOM_AUTHENTICATED_ATTRIBUTE_SIGNING_TIME = 0\r\n    cadesplugin.CADESCOM_AUTHENTICATED_ATTRIBUTE_DOCUMENT_NAME = 1\r\n    cadesplugin.CADESCOM_AUTHENTICATED_ATTRIBUTE_DOCUMENT_DESCRIPTION = 2\r\n    cadesplugin.CADESCOM_AUTHENTICATED_ATTRIBUTE_MACHINE_INFO = 0x100\r\n    cadesplugin.CADESCOM_ATTRIBUTE_OTHER = -1\r\n\r\n    cadesplugin.CADESCOM_STRING_TO_UCS2LE = 0\r\n    cadesplugin.CADESCOM_BASE64_TO_BINARY = 1\r\n\r\n    cadesplugin.CADESCOM_DISPLAY_DATA_NONE = 0\r\n    cadesplugin.CADESCOM_DISPLAY_DATA_CONTENT = 1\r\n    cadesplugin.CADESCOM_DISPLAY_DATA_ATTRIBUTE = 2\r\n\r\n    cadesplugin.CADESCOM_ENCRYPTION_ALGORITHM_RC2 = 0\r\n    cadesplugin.CADESCOM_ENCRYPTION_ALGORITHM_RC4 = 1\r\n    cadesplugin.CADESCOM_ENCRYPTION_ALGORITHM_DES = 2\r\n    cadesplugin.CADESCOM_ENCRYPTION_ALGORITHM_3DES = 3\r\n    cadesplugin.CADESCOM_ENCRYPTION_ALGORITHM_AES = 4\r\n    cadesplugin.CADESCOM_ENCRYPTION_ALGORITHM_GOST_28147_89 = 25\r\n\r\n    cadesplugin.CADESCOM_HASH_ALGORITHM_SHA1 = 0\r\n    cadesplugin.CADESCOM_HASH_ALGORITHM_MD2 = 1\r\n    cadesplugin.CADESCOM_HASH_ALGORITHM_MD4 = 2\r\n    cadesplugin.CADESCOM_HASH_ALGORITHM_MD5 = 3\r\n    cadesplugin.CADESCOM_HASH_ALGORITHM_SHA_256 = 4\r\n    cadesplugin.CADESCOM_HASH_ALGORITHM_SHA_384 = 5\r\n    cadesplugin.CADESCOM_HASH_ALGORITHM_SHA_512 = 6\r\n    cadesplugin.CADESCOM_HASH_ALGORITHM_CP_GOST_3411 = 100\r\n    cadesplugin.CADESCOM_HASH_ALGORITHM_CP_GOST_3411_2012_256 = 101\r\n    cadesplugin.CADESCOM_HASH_ALGORITHM_CP_GOST_3411_2012_512 = 102\r\n    cadesplugin.CADESCOM_HASH_ALGORITHM_CP_GOST_3411_HMAC = 110\r\n    cadesplugin.CADESCOM_HASH_ALGORITHM_CP_GOST_3411_2012_256_HMAC = 111\r\n    cadesplugin.CADESCOM_HASH_ALGORITHM_CP_GOST_3411_2012_512_HMAC = 112\r\n\r\n    cadesplugin.LOG_LEVEL_DEBUG = 4\r\n    cadesplugin.LOG_LEVEL_INFO = 2\r\n    cadesplugin.LOG_LEVEL_ERROR = 1\r\n\r\n    cadesplugin.CADESCOM_AllowNone = 0\r\n    cadesplugin.CADESCOM_AllowNoOutstandingRequest = 0x1\r\n    cadesplugin.CADESCOM_AllowUntrustedCertificate = 0x2\r\n    cadesplugin.CADESCOM_AllowUntrustedRoot = 0x4\r\n    cadesplugin.CADESCOM_SkipInstallToStore = 0x10000000\r\n    cadesplugin.CADESCOM_InstallCertChainToContainer = 0x20000000\r\n    cadesplugin.CADESCOM_UseContainerStore = 0x40000000\r\n\r\n    cadesplugin.ENABLE_CARRIER_TYPE_CSP = 0x01\r\n    cadesplugin.ENABLE_CARRIER_TYPE_FKC_NO_SM = 0x02\r\n    cadesplugin.ENABLE_CARRIER_TYPE_FKC_SM = 0x04\r\n    cadesplugin.ENABLE_ANY_CARRIER_TYPE = 0x07\r\n\r\n    cadesplugin.DISABLE_EVERY_CARRIER_OPERATION = 0x00\r\n    cadesplugin.ENABLE_CARRIER_OPEN_ENUM = 0x01\r\n    cadesplugin.ENABLE_CARRIER_CREATE = 0x02\r\n    cadesplugin.ENABLE_ANY_OPERATION = 0x03\r\n\r\n    cadesplugin.CADESCOM_PRODUCT_CSP = 0\r\n    cadesplugin.CADESCOM_PRODUCT_OCSP = 1\r\n    cadesplugin.CADESCOM_PRODUCT_TSP = 2\r\n\r\n    cadesplugin.MEDIA_TYPE_REGISTRY = 0x00000001\r\n    cadesplugin.MEDIA_TYPE_HDIMAGE = 0x00000002\r\n    cadesplugin.MEDIA_TYPE_CLOUD = 0x00000004\r\n    cadesplugin.MEDIA_TYPE_SCARD = 0x00000008\r\n\r\n    cadesplugin.XCN_CRYPT_STRING_BASE64HEADER = 0\r\n    cadesplugin.AT_KEYEXCHANGE = 1\r\n    cadesplugin.AT_SIGNATURE = 2\r\n\r\n    cadesplugin.CARRIER_FLAG_REMOVABLE = 1\r\n    cadesplugin.CARRIER_FLAG_UNIQUE = 2\r\n    cadesplugin.CARRIER_FLAG_PROTECTED = 4\r\n    cadesplugin.CARRIER_FLAG_FUNCTIONAL_CARRIER = 8\r\n    cadesplugin.CARRIER_FLAG_SECURE_MESSAGING = 16\r\n    cadesplugin.CARRIER_FLAG_ABLE_VISUALISE_SIGNATURE = 64\r\n    cadesplugin.CARRIER_FLAG_VIRTUAL = 128\r\n  }\r\n\r\n  function async_spawn(generatorFunc) {\r\n    function continuer(verb, arg) {\r\n      var result\r\n      try {\r\n        result = generator[verb](arg)\r\n      } catch (err) {\r\n        return Promise.reject(err)\r\n      }\r\n      if (result.done) {\r\n        return result.value\r\n      } else {\r\n        return Promise.resolve(result.value).then(onFulfilled, onRejected)\r\n      }\r\n    }\r\n    var generator = generatorFunc(Array.prototype.slice.call(arguments, 1))\r\n    var onFulfilled = continuer.bind(continuer, \"next\")\r\n    var onRejected = continuer.bind(continuer, \"throw\")\r\n    return onFulfilled()\r\n  }\r\n\r\n  function isIE() {\r\n    // var retVal = ((\"Microsoft Internet Explorer\" == navigator.appName) || // IE < 11\r\n    //     navigator.userAgent.match(/Trident\\/./i)); // IE 11\r\n    return browserSpecs.name === \"IE\" || browserSpecs.name === \"MSIE\"\r\n  }\r\n\r\n  function isIOS() {\r\n    return (\r\n      navigator.userAgent.match(/ipod/i) || navigator.userAgent.match(/ipad/i) || navigator.userAgent.match(/iphone/i)\r\n    )\r\n  }\r\n\r\n  function isNativeMessageSupported() {\r\n    // В IE работаем через NPAPI\r\n    if (isIE()) return false\r\n    // В Edge работаем через NativeMessage\r\n    if (browserSpecs.name === \"Edg\") {\r\n      return true\r\n    }\r\n    if (browserSpecs.name === \"YaBrowser\") {\r\n      isYandex = true\r\n      return true\r\n    }\r\n    // В Chrome, Firefox, Safari и Opera работаем через асинхронную версию в зависимости от версии\r\n    if (browserSpecs.name === \"Opera\") {\r\n      isOpera = true\r\n      if (browserSpecs.version >= 33) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n    if (browserSpecs.name === \"Firefox\") {\r\n      isFireFox = true\r\n      if (browserSpecs.version >= 52) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n    if (browserSpecs.name === \"Chrome\") {\r\n      if (browserSpecs.version >= 42) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n    //В Сафари начиная с 12 версии нет NPAPI\r\n    if (browserSpecs.name === \"Safari\") {\r\n      isSafari = true\r\n      if (browserSpecs.version >= 12) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n\r\n  // Функция активации объектов КриптоПро ЭЦП Browser plug-in\r\n  function CreateObject(name) {\r\n    if (isIOS()) {\r\n      // На iOS для создания объектов используется функция\r\n      // call_ru_cryptopro_npcades_10_native_bridge, определенная в IOS_npcades_supp.js\r\n      return call_ru_cryptopro_npcades_10_native_bridge(\"CreateObject\", [name])\r\n    }\r\n    // создаются объекты NPAPI\r\n    return pluginObject.CreateObject(name)\r\n  }\r\n\r\n  function decimalToHexString(number) {\r\n    if (number < 0) {\r\n      number = 0xffffffff + number + 1\r\n    }\r\n\r\n    return number.toString(16).toUpperCase()\r\n  }\r\n\r\n  function GetMessageFromException(e) {\r\n    var err = e.message\r\n    if (!err) {\r\n      err = e\r\n    } else if (e.number) {\r\n      err += \" (0x\" + decimalToHexString(e.number) + \")\"\r\n    }\r\n    return err\r\n  }\r\n\r\n  function getLastError(exception) {\r\n    if (isNativeMessageSupported() || isIE() || isIOS()) {\r\n      return GetMessageFromException(exception)\r\n    }\r\n\r\n    try {\r\n      return pluginObject.getLastError()\r\n    } catch (e) {\r\n      return GetMessageFromException(exception)\r\n    }\r\n  }\r\n\r\n  // Функция для удаления созданных объектов\r\n  function ReleasePluginObjects() {\r\n    return window.cpcsp_chrome_nmcades.ReleasePluginObjects()\r\n  }\r\n\r\n  // Функция активации асинхронных объектов КриптоПро ЭЦП Browser plug-in\r\n  function CreateObjectAsync(name) {\r\n    if (pluginObject) return pluginObject.CreateObjectAsync(name)\r\n  }\r\n\r\n  //Функции для IOS\r\n  var ru_cryptopro_npcades_10_native_bridge = {\r\n    callbacksCount: 1,\r\n    callbacks: {},\r\n\r\n    // Automatically called by native layer when a result is available\r\n    resultForCallback: function resultForCallback(callbackId, resultArray) {\r\n      var callback = ru_cryptopro_npcades_10_native_bridge.callbacks[callbackId]\r\n      if (!callback) return\r\n      callback.apply(null, resultArray)\r\n    },\r\n\r\n    // Use this in javascript to request native objective-c code\r\n    // functionName : string (I think the name is explicit :p)\r\n    // args : array of arguments\r\n    // callback : function with n-arguments that is going to be called when the native code returned\r\n    call: function call(functionName, args, callback) {\r\n      var hasCallback = callback && typeof callback === \"function\"\r\n      var callbackId = hasCallback ? ru_cryptopro_npcades_10_native_bridge.callbacksCount++ : 0\r\n\r\n      if (hasCallback) ru_cryptopro_npcades_10_native_bridge.callbacks[callbackId] = callback\r\n\r\n      var iframe = document.createElement(\"IFRAME\")\r\n      var arrObjs = new Array(\"_CPNP_handle\")\r\n      try {\r\n        iframe.setAttribute(\r\n          \"src\",\r\n          \"cpnp-js-call:\" + functionName + \":\" + callbackId + \":\" + encodeURIComponent(JSON.stringify(args, arrObjs))\r\n        )\r\n      } catch (e) {\r\n        alert(e)\r\n      }\r\n      document.documentElement.appendChild(iframe)\r\n      iframe.parentNode.removeChild(iframe)\r\n      iframe = null\r\n    },\r\n  }\r\n\r\n  function call_ru_cryptopro_npcades_10_native_bridge(functionName, array) {\r\n    var tmpobj\r\n    var ex\r\n    ru_cryptopro_npcades_10_native_bridge.call(functionName, array, function (e, response) {\r\n      ex = e\r\n      var str = \"tmpobj=\" + response\r\n      eval(str)\r\n      if (typeof tmpobj === \"string\") {\r\n        tmpobj = tmpobj.replace(/\\\\\\n/gm, \"\\n\")\r\n        tmpobj = tmpobj.replace(/\\\\\\r/gm, \"\\r\")\r\n      }\r\n    })\r\n    if (ex) throw ex\r\n    return tmpobj\r\n  }\r\n\r\n  function show_firefox_missing_extension_dialog() {\r\n    if (!window.cadesplugin_skip_extension_install) {\r\n      var ovr = document.createElement(\"div\")\r\n      ovr.id = \"cadesplugin_ovr\"\r\n      ovr.style =\r\n        \"visibility: hidden; position: fixed; left: 0px; top: 0px; width:100%; height:100%; background-color: rgba(0,0,0,0.7)\"\r\n      ovr.innerHTML =\r\n        \"<div id='cadesplugin_ovr_item' style='position:relative; width:400px; margin:100px auto; background-color:#fff; border:2px solid #000; padding:10px; text-align:center; opacity: 1; z-index: 1500'>\" +\r\n        \"<button id='cadesplugin_close_install' style='float: right; font-size: 10px; background: transparent; border: 1; margin: -5px'>X</button>\" +\r\n        \"<p>Для работы КриптоПро ЭЦП Browser plugin на данном сайте необходимо расширение для браузера. Убедитесь, что оно у Вас включено или установите его.\" +\r\n        \"<p><a href='https://www.cryptopro.ru/sites/default/files/products/cades/extensions/firefox_cryptopro_extension_latest.xpi'>Скачать расширение</a></p>\" +\r\n        \"</div>\"\r\n      document.getElementsByTagName(\"Body\")[0].appendChild(ovr)\r\n      document.getElementById(\"cadesplugin_close_install\").addEventListener(\"click\", function () {\r\n        plugin_loaded_error(\"Плагин недоступен\")\r\n        document.getElementById(\"cadesplugin_ovr\").style.visibility = \"hidden\"\r\n      })\r\n\r\n      ovr.addEventListener(\"click\", function () {\r\n        plugin_loaded_error(\"Плагин недоступен\")\r\n        document.getElementById(\"cadesplugin_ovr\").style.visibility = \"hidden\"\r\n      })\r\n      ovr.style.visibility = \"visible\"\r\n    }\r\n  }\r\n  function firefox_or_safari_nmcades_onload() {\r\n    if (window.cadesplugin_extension_loaded_callback) window.cadesplugin_extension_loaded_callback()\r\n    isFireFoxExtensionLoaded = true\r\n    window.cpcsp_chrome_nmcades.check_chrome_plugin(plugin_loaded, plugin_loaded_error)\r\n  }\r\n\r\n  function nmcades_api_onload() {\r\n    if (!isIE() && !isFireFox && !isSafari) {\r\n      if (window.cadesplugin_extension_loaded_callback) window.cadesplugin_extension_loaded_callback()\r\n    }\r\n    window.postMessage(\"cadesplugin_echo_request\", \"*\")\r\n    window.addEventListener(\r\n      \"message\",\r\n      function (event) {\r\n        if (typeof event.data !== \"string\" || !event.data.match(\"cadesplugin_loaded\")) return\r\n        if (cadesplugin_loaded_event_recieved) return\r\n        if (isFireFox || isSafari) {\r\n          // Для Firefox, Сафари вместе с сообщением cadesplugin_loaded прилетает url для загрузки nmcades_plugin_api.js\r\n          var url = event.data.substring(event.data.indexOf(\"url:\") + 4)\r\n          if (\r\n            !url.match(\"^moz-extension://[a-zA-Z0-9-]+/nmcades_plugin_api.js$\") &&\r\n            !url.match(\"^safari-extension://[a-zA-Z0-9-]+/[a-zA-Z0-9]+/nmcades_plugin_api.js$\")\r\n          ) {\r\n            cpcsp_console_log(\r\n              cadesplugin.LOG_LEVEL_ERROR,\r\n              'Bad url \"' + url + '\" for load CryptoPro Extension for CAdES Browser plug-in'\r\n            )\r\n            plugin_loaded_error()\r\n            return\r\n          }\r\n          var fileref = document.createElement(\"script\")\r\n          fileref.setAttribute(\"type\", \"text/javascript\")\r\n          fileref.setAttribute(\"src\", url)\r\n          fileref.onerror = plugin_loaded_error\r\n          fileref.onload = firefox_or_safari_nmcades_onload\r\n          document.getElementsByTagName(\"head\")[0].appendChild(fileref)\r\n        } else {\r\n          window.cpcsp_chrome_nmcades.check_chrome_plugin(plugin_loaded, plugin_loaded_error)\r\n        }\r\n        cadesplugin_loaded_event_recieved = true\r\n        cadesplugin.cadesplugin_loaded = true\r\n      },\r\n      false\r\n    )\r\n  }\r\n\r\n  //Загружаем расширения для Chrome, Opera, YaBrowser, FireFox, Edge, Safari\r\n  function load_extension() {\r\n    if (isFireFox || isSafari) {\r\n      // вызываем callback руками т.к. нам нужно узнать ID расширения. Он уникальный для браузера.\r\n      nmcades_api_onload()\r\n    } else {\r\n      // в асинхронном варианте для Yandex и Opera подключаем расширение из Opera store.\r\n      if (isOpera || isYandex) {\r\n        var fileref = document.createElement(\"script\")\r\n        fileref.setAttribute(\"type\", \"text/javascript\")\r\n        fileref.setAttribute(\"src\", \"chrome-extension://epebfcehmdedogndhlcacafjaacknbcm/nmcades_plugin_api.js\")\r\n        fileref.onerror = plugin_loaded_error\r\n        fileref.onload = nmcades_api_onload\r\n        document.getElementsByTagName(\"head\")[0].appendChild(fileref)\r\n      } else {\r\n        // для Chrome, Chromium, Chromium Edge расширение из Chrome store\r\n        var fileref = document.createElement(\"script\")\r\n        fileref.setAttribute(\"type\", \"text/javascript\")\r\n        fileref.setAttribute(\"src\", \"chrome-extension://iifchhfnnmpdbibifmljnfjhpififfog/nmcades_plugin_api.js\")\r\n        fileref.onerror = plugin_loaded_error\r\n        fileref.onload = nmcades_api_onload\r\n        document.getElementsByTagName(\"head\")[0].appendChild(fileref)\r\n      }\r\n    }\r\n  }\r\n\r\n  //Загружаем плагин для NPAPI\r\n  function load_npapi_plugin() {\r\n    var elem = document.createElement(\"object\")\r\n    elem.setAttribute(\"id\", \"cadesplugin_object\")\r\n    elem.setAttribute(\"type\", \"application/x-cades\")\r\n    elem.setAttribute(\"style\", \"visibility: hidden\")\r\n    document.getElementsByTagName(\"body\")[0].appendChild(elem)\r\n    pluginObject = document.getElementById(\"cadesplugin_object\")\r\n    if (isIE()) {\r\n      var elem1 = document.createElement(\"object\")\r\n      elem1.setAttribute(\"id\", \"certEnrollClassFactory\")\r\n      elem1.setAttribute(\"classid\", \"clsid:884e2049-217d-11da-b2a4-000e7bbb2b09\")\r\n      elem1.setAttribute(\"style\", \"visibility: hidden\")\r\n      document.getElementsByTagName(\"body\")[0].appendChild(elem1)\r\n      var elem2 = document.createElement(\"object\")\r\n      elem2.setAttribute(\"id\", \"webClassFactory\")\r\n      elem2.setAttribute(\"classid\", \"clsid:B04C8637-10BD-484E-B0DA-B8A039F60024\")\r\n      elem2.setAttribute(\"style\", \"visibility: hidden\")\r\n      document.getElementsByTagName(\"body\")[0].appendChild(elem2)\r\n    }\r\n  }\r\n\r\n  //Отправляем событие что все ок.\r\n  function plugin_loaded() {\r\n    plugin_resolved = 1\r\n    if (canPromise) {\r\n      plugin_resolve()\r\n    } else {\r\n      window.postMessage(\"cadesplugin_loaded\", \"*\")\r\n    }\r\n  }\r\n\r\n  //Отправляем событие что сломались.\r\n  function plugin_loaded_error(msg) {\r\n    if (typeof msg === \"undefined\" || typeof msg === \"object\") msg = \"Плагин недоступен\"\r\n    plugin_resolved = 1\r\n    if (canPromise) {\r\n      plugin_reject(msg)\r\n    } else {\r\n      window.postMessage(\"cadesplugin_load_error\", \"*\")\r\n    }\r\n  }\r\n\r\n  //проверяем что у нас хоть какое то событие ушло, и если не уходило кидаем еще раз ошибку\r\n  function check_load_timeout() {\r\n    if (plugin_resolved === 1) return\r\n    if (isFireFox) {\r\n      if (!isFireFoxExtensionLoaded) show_firefox_missing_extension_dialog()\r\n    }\r\n    plugin_resolved = 1\r\n    if (canPromise) {\r\n      plugin_reject(\"Истекло время ожидания загрузки плагина\")\r\n    } else {\r\n      window.postMessage(\"cadesplugin_load_error\", \"*\")\r\n    }\r\n  }\r\n\r\n  //Вспомогательная функция для NPAPI\r\n  function createPromise(arg) {\r\n    return new Promise(arg)\r\n  }\r\n\r\n  function check_npapi_plugin() {\r\n    try {\r\n      var oAbout = CreateObject(\"CAdESCOM.About\")\r\n      plugin_loaded()\r\n    } catch (err) {\r\n      document.getElementById(\"cadesplugin_object\").style.display = \"none\"\r\n      // Объект создать не удалось, проверим, установлен ли\r\n      // вообще плагин. Такая возможность есть не во всех браузерах\r\n      var mimetype = navigator.mimeTypes[\"application/x-cades\"]\r\n      if (mimetype) {\r\n        var plugin = mimetype.enabledPlugin\r\n        if (plugin) {\r\n          plugin_loaded_error(\"Плагин загружен, но не создаются обьекты\")\r\n        } else {\r\n          plugin_loaded_error(\"Ошибка при загрузке плагина\")\r\n        }\r\n      } else {\r\n        plugin_loaded_error(\"Плагин недоступен\")\r\n      }\r\n    }\r\n  }\r\n\r\n  //Проверяем работает ли плагин\r\n  function check_plugin_working() {\r\n    var div = document.createElement(\"div\")\r\n    div.innerHTML = \"<!--[if lt IE 9]><i></i><![endif]-->\"\r\n    var isIeLessThan9 = div.getElementsByTagName(\"i\").length === 1\r\n    if (isIeLessThan9) {\r\n      plugin_loaded_error(\"Internet Explorer версии 8 и ниже не поддерживается\")\r\n      return\r\n    }\r\n\r\n    if (isNativeMessageSupported()) {\r\n      load_extension()\r\n    } else if (!canPromise) {\r\n      window.addEventListener(\r\n        \"message\",\r\n        function (event) {\r\n          if (event.data !== \"cadesplugin_echo_request\") return\r\n          load_npapi_plugin()\r\n          check_npapi_plugin()\r\n        },\r\n        false\r\n      )\r\n    } else {\r\n      if (document.readyState === \"complete\") {\r\n        load_npapi_plugin()\r\n        check_npapi_plugin()\r\n      } else {\r\n        window.addEventListener(\r\n          \"load\",\r\n          function (event) {\r\n            load_npapi_plugin()\r\n            check_npapi_plugin()\r\n          },\r\n          false\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  function set_pluginObject(obj) {\r\n    pluginObject = obj\r\n  }\r\n\r\n  function is_capilite_enabled() {\r\n    if (typeof cadesplugin.EnableInternalCSP !== \"undefined\" && cadesplugin.EnableInternalCSP) return true\r\n    return false\r\n  }\r\n\r\n  //Export\r\n  cadesplugin.JSModuleVersion = \"2.3.2\"\r\n  cadesplugin.async_spawn = async_spawn\r\n  cadesplugin.set = set_pluginObject\r\n  cadesplugin.set_log_level = set_log_level\r\n  cadesplugin.getLastError = getLastError\r\n  cadesplugin.is_capilite_enabled = is_capilite_enabled\r\n\r\n  if (isNativeMessageSupported()) {\r\n    cadesplugin.CreateObjectAsync = CreateObjectAsync\r\n    cadesplugin.ReleasePluginObjects = ReleasePluginObjects\r\n  }\r\n\r\n  if (!isNativeMessageSupported()) {\r\n    cadesplugin.CreateObject = CreateObject\r\n  }\r\n\r\n  if (window.cadesplugin_load_timeout) {\r\n    setTimeout(check_load_timeout, window.cadesplugin_load_timeout)\r\n  } else {\r\n    setTimeout(check_load_timeout, 1000)\r\n  }\r\n\r\n  set_constantValues()\r\n\r\n  cadesplugin.current_log_level = cadesplugin.LOG_LEVEL_ERROR\r\n  window.cadesplugin = cadesplugin\r\n  check_plugin_working()\r\n}\r\n","\r\nimport { FC } from 'react'\r\nimport '../styles/simplePage.css'\r\nimport '../styles/root.css'\r\nexport const NoMatchPage: FC = () => {  \r\n\r\n  return (\r\n    <>\r\n      <div className=\"exception-body\">\r\n        <div className=\"nopage-block\">\r\n          <h1 className=\"nopage_h1\">Неверный адрес страницы</h1>\r\n          <div className=\"nopage_text\">Проверьте, правильно ли вы ввели его. Если данные верны, пожалуйста, сообщите нам об ошибке.</div>\r\n          <a className=\"nopage-button\" href=\"../\">На главную</a><a className=\"nopage-button\" href=\"../\">Сообщить об ошибке</a>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","export interface IObjectKeys {\r\n  [key: string]: string | number | undefined\r\n}\r\nexport const HOME_ROUTE = \"/\"\r\nexport const LOGIN_ROUTE = \"/login\"\r\nexport const REGISTRATION_ROUTE = \"/registration\"\r\nexport const PWD_RECOVERY_ROUTE = \"/pwd_recovery\"\r\nexport const MESSAGE_ROUTE = \"/message\"\r\nexport const ERROR_ROUTE = \"/error\"\r\nexport const ADMIN_ROUTE = \"/admin\"\r\nexport const LIST_ROUTE = \"/list\"\r\nexport const CERTIFICATE_ROUTE = \"/cert\"\r\nexport const REPORT_ROUTE = \"/report\"\r\nexport const DOCTORS_ROUTE = \"/doctors\"\r\nexport const USER_ROUTE = \"/user\"\r\nexport const MO_SETTINGS_ROUTE = \"/organization\"\r\nexport const DIRECTION = [\"asc\", \"desc\"]\r\nexport const ROLES: IObjectKeys = {\r\n  USER: \"ПОЛЬЗОВАТЕЛЬ\",\r\n  ADMIN: \"АДМИНИСТРАТОР\",\r\n  STATS: \"СТАТИСТИК\",\r\n}\r\nexport const RunsackFilterMatchMode = {\r\n  startsWith: \"_start\",\r\n  contains: \"_cont\",\r\n  notContains: \"_not_cont\",\r\n  endsWith: \"_end\",\r\n  equals: \"_eq\",\r\n  notEquals: \"_not_eq\",\r\n  in: \"_in\",\r\n  lt: \"_lt\",\r\n  lte: \"lteq\",\r\n  gt: \"_gt\",\r\n  gte: \"_gteq\",\r\n  between: \"\",\r\n  dateIs: \"_eq\",\r\n  dateIsNot: \"_not_eq\",\r\n  dateBefore: \"_lt\",\r\n  dateAfter: \"_gt\",\r\n  custom: \"\",\r\n}\r\n// маркер удаления для использования в запросах на обновление\r\n// destroy-marker for using in nested_attributes\r\nexport const DESTROY_OPTION = { _destroy: \"1\" }\r\n\r\n//формат дата & время\r\nexport const TIME_FORMAT = {\r\n  year: \"2-digit\",\r\n  month: \"2-digit\",\r\n  day: \"2-digit\",\r\n  hour: \"2-digit\",\r\n  minute: \"2-digit\",\r\n} as Intl.DateTimeFormatOptions\r\n\r\n// формат даты\r\nexport const DATE_FORMAT = { year: \"2-digit\", month: \"short\", day: \"2-digit\" } as Intl.DateTimeFormatOptions\r\n","import { IUserInfo } from \"../../models/responses/IUserInfo\"\r\nimport {ROLES}  from \"../../utils/consts\"\r\n\r\ntype FooterLayoutProps = {userInfo: IUserInfo | null}\r\nconst FooterLayout = (props: FooterLayoutProps) => {\r\n  const orgName = props.userInfo!==null && props.userInfo.organization ? props.userInfo.organization.name : ''\r\n  const profile = props.userInfo!==null && props.userInfo.roles ? ROLES[props.userInfo.roles.split(' ')[0]]: ''  \r\n  return (\r\n    <div className=\"layout-footer\">\r\n      <div className=\"footer-logo-container\">\r\n        <span className=\"app-name\">{orgName}:</span>\r\n        <span className=\"app-profile\">{profile}</span>\r\n      </div>\r\n      <span className=\"copyright\">2022 © ГБУЗ АО \"АМИАЦ\"</span>\r\n    </div>       \r\n  )\r\n}\r\nexport default FooterLayout","export default __webpack_public_path__ + \"static/media/favicon.b5c775a4.png\";","import React, { FC,  useContext,  useState } from 'react'\r\nimport { MenuItem } from 'primereact/menuitem'\r\nimport { classNames, UniqueComponentId } from 'primereact/utils'\r\nimport { IMenuProps } from './IMenuProps'\r\nimport { HOME_ROUTE } from '../../utils/consts'\r\nimport { Context } from '../..'\r\n\r\n\r\nexport const SideBarMenu:FC<IMenuProps> = (props: IMenuProps) =>{ \r\n  const { userStore } = useContext(Context)\r\n  const [activeItem, setActiveItem] = useState<MenuItem>({})\r\n  const onItemClick = (event: React.MouseEvent, item:MenuItem)=> {\r\n        if (item.disabled) {\r\n            event.preventDefault()\r\n            return\r\n        }\r\n        if (!item.url) {\r\n           event.preventDefault()\r\n        } else if (item.url.startsWith(HOME_ROUTE)) {\r\n           userStore.history().push(item.url) \r\n           event.preventDefault()          \r\n        }\r\n        if (item.command) item.command({           \r\n              originalEvent: event,\r\n              item,\r\n            })        \r\n        if (item!==activeItem) {\r\n          if (activeItem.className) activeItem.className=''\r\n          item.className='active-menuitem'\r\n          setActiveItem(item)\r\n        } else {\r\n          item.className=''\r\n          setActiveItem({})\r\n        }\r\n  }\r\n\r\n  const className = classNames(\"layout-menu-container\", props.className)\r\n  const menu = (items: MenuItem[], label: string)=> {\r\n    const renderMenu = ()=> {\r\n      if (items.length>0) {\r\n        const renderItem = (item:MenuItem, index:number) => {\r\n          const renderSeparator = (index:number)=><li key={\"separator_\" + index} className='menu-separator' role='separator'></li>\r\n          const renderMenuItem =(item:MenuItem, index:number) => {\r\n          const submenuIconClassName = \"pi pi-fw pi-angle-down layout-submenu-toggler\"\r\n          const iconClassName = classNames(\"layout-menuitem-icon pi pi-fw\", item.icon)\r\n          const linkClassName = classNames(\"p-ripple\", { \"p-link\": item.url === undefined }, \r\n          { \"p-disabled\": item.disabled })\r\n          const submenuIcon = item.items && <span className={submenuIconClassName}></span>\r\n          const icon = item.icon && <span className={iconClassName}></span>\r\n          const label = item.label && <span className='layout-menuitem-text'>{item.label}</span>\r\n          const content = item.className || item.items ?             [\r\n              <button key={`bt_${item.label}_${index}`} type='button' onClick={(e:React.MouseEvent)=>onItemClick(e, item)} className=\"p-ripple p-link\">\r\n                {icon}\r\n                {label}\r\n                {submenuIcon}                                \r\n              </button>,              \r\n            ] :  [<a href={item.url} target={item.target}\r\n                    key={`a_${item.disabled ? label : index}`}  \r\n                    className={linkClassName} \r\n                    onClick={(e:React.MouseEvent)=>onItemClick(e, item)} \r\n                    aria-disabled={item.disabled}>\r\n                    {icon}{label}</a>,]\r\n            if (item.className?.includes('layout-root-menuitem')) \r\n               content.push(<div key={`dv_${item.label}_${index}`} className={item.className}><div className='layout-menuitem-root-text'>{item.label}</div></div>)\r\n            const submenu = (item.items && item.className) && menu(item.items, item.label || UniqueComponentId())      \r\n            return (\r\n              <li key={`li_${index}_${item.className}`} \r\n                className={item.className} style={item.style}       \r\n                role='menuitem'>\r\n                {content}\r\n                {submenu}\r\n              </li>\r\n            )\r\n          }\r\n          if (item.separator) return renderSeparator(index)\r\n          else return renderMenuItem(item, index) \r\n        }\r\n        return items.map((item, index) => {\r\n          return renderItem(item, index)\r\n        })\r\n      }\r\n      return null\r\n    }\r\n    \r\n    return (\r\n      <ul key={label} className=\"layout-menu\" role=\"menu\">\r\n        {renderMenu()}\r\n      </ul>\r\n    )\r\n  }  \r\n  return (\r\n    <div id={props.id || \"sidebar_menu\"} className={className} style={props.style}>\r\n      {menu(props.model || [], \"global\")}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import axios, { AxiosRequestConfig } from \"axios\"\r\nimport { AuthResponse } from \"../models/responses/AuthResponse\"\r\n\r\n// настройки на back-end\r\n//Main API service (Основной API) URL\r\nexport const API_URL = \"http://10.33.3.250:5000/REST_API/v1/\"\r\n//FIAS service (Сервис адресов ФИАС) URL\r\nexport const FIAS_URL = \"http://fias.int.amurzdrav.ru/fias\"\r\n//АСМЕ service (Сервис взаимодействия с АСМЕ) URL\r\nexport const ACME_URL = \"http://acme.int.amurzdrav.ru/\"\r\n\r\nconst $api = axios.create({\r\n  withCredentials: true,\r\n  baseURL: API_URL,\r\n})\r\n\r\nexport const $fias = axios.create({\r\n  baseURL: FIAS_URL,\r\n})\r\n\r\nexport const $acme = axios.create({\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json; charset=utf-8\",\r\n    \"X-Requested-With\": \"XMLHttpRequest\",\r\n  },\r\n  baseURL: ACME_URL,\r\n})\r\n\r\n$api.interceptors.request.use((config: AxiosRequestConfig) => {\r\n  config.headers.Authorization = `Bearer ${localStorage.getItem(\"token\")}`\r\n  return config\r\n})\r\n\r\n$api.interceptors.response.use(\r\n  (config) => config,\r\n  async (error) => {\r\n    const originalRequest = error.config\r\n    if (error.response && error.response.status === 401 && error.config && !error.config._isRetry) {\r\n      originalRequest._isRetry = true\r\n      try {\r\n        const response = await axios.get<AuthResponse>(`${API_URL}auth/refresh`, { withCredentials: true })\r\n        localStorage.setItem(\"token\", response.data.tokens.access)\r\n        return $api.request(originalRequest)\r\n      } catch (e) {\r\n        throw new Error(\"API error 401, Сеанс не авторизован\")\r\n      }\r\n    } else if (error.response && [406, 422].includes(error.response.status)) {\r\n      if (error.response.data && error.response.data.errors) {\r\n        let message = error.response.data.errors.reduce((result: string, element: string) => {\r\n          result = `${result}, ${element}`\r\n          return result\r\n        }, `API error ${error.response.status}`)\r\n        throw new Error(message)\r\n      } else throw new Error(`API error ${JSON.stringify(error)}`)\r\n    }\r\n    throw error\r\n  }\r\n)\r\n\r\n$fias.interceptors.response.use(\r\n  (config) => config,\r\n  async (error) => {\r\n    if (error.response && error.response.status && [406, 422].includes(error.response.status)) {\r\n      if (error.response.data && error.response.data.errors) {\r\n        let message = error.response.data.errors.reduce((result: string, element: string) => {\r\n          result = `${result}, ${element}`\r\n          return result\r\n        }, `API error ${error.response.status}`)\r\n        throw new Error(message)\r\n      } else throw new Error(`API error ${error.response.status}`)\r\n    } else if (error.message.includes(\"Network Error\")) new Error(\"Ошибка сети: соединение не может быть установлено\")\r\n    throw error\r\n  }\r\n)\r\nexport default $api\r\n","import { IPersonName } from \"../IPersonName\"\r\n\r\nexport const ACTIONS = new Map<string, IActionAttribute>([\r\n  [\"added\", { title: \"Добавлено:\", icon: \"pi pi-plus\", color: \"rgb(104, 159, 56)\" }],\r\n  [\"updated\", { title: \"Изменено:\", icon: \"pi pi-pencil\", color: \"rgb(2, 136, 209)\" }],\r\n  [\"removed\", { title: \"Удалено:\", icon: \"pi pi-trash\", color: \"rgb(251, 192, 45)\" }],\r\n  [\"archived\", { title: \"Архивировано:\", icon: \"pi pi-inbox\", color: \"rgb(96, 125, 139)\" }],\r\n  [\"commented\", { title: \"Комментарий:\", icon: \"pi pi-comment\", color: \"rgb(96, 125, 139)\" }],\r\n  [\"imported\", { title: \"Импорт:\", icon: \"pi pi-download\", color: \"rgb(156, 39, 176)\" }],\r\n  [\"exported\", { title: \"Экспорт:\", icon: \"pi pi-upload\", color: \"rgb(156, 39, 176)\" }],\r\n  [\"signed_in\", { title: \"Подписано:\", icon: \"pi pi-user-edit\", color: \"rgb(104, 159, 56)\" }],\r\n  [\"signed_out\", { title: \"Отозвано:\", icon: \"pi pi-user-minus\", color: \"rgb(251, 192, 45)\" }],\r\n])\r\nexport enum Severity {\r\n  success,\r\n  info,\r\n  warning,\r\n  error,\r\n}\r\nexport interface IActionAttribute {\r\n  title: string\r\n  icon: string\r\n  color: string\r\n}\r\n\r\nexport interface ITimeEvent {\r\n  id: number\r\n  action: string\r\n  severity: Severity\r\n  detail: string\r\n  table?: string\r\n  summary?: string\r\n  user: { id: number; email: string; person_name: IPersonName }\r\n  organization: { id: number; name: string }\r\n  created_at: string\r\n}\r\n","import avatar from \"../../images/favicon.png\"\r\nimport { useContext } from \"react\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { Context } from \"../..\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { CERTIFICATE_ROUTE, HOME_ROUTE, LIST_ROUTE } from \"../../utils/consts\"\r\nimport { SideBarMenu } from \"../menus/SideBarMenu\"\r\nimport { MenuItem } from \"primereact/menuitem\"\r\nimport { API_URL } from \"../../http\"\r\ntype SideBarLayoutProps = {activeUrl: string}\r\nconst SideBarLayout = observer((props: SideBarLayoutProps) => {\r\n   const {userStore, certificateStore} = useContext(Context)\r\n   const cert_id =  certificateStore.cert.id?.toString() || 'new'\r\n   const cert_route_id = `${CERTIFICATE_ROUTE}/${cert_id}`\r\n   const items:MenuItem[] = [    \r\n      { label: \"Свидетельство\", className: \"layout-root-menuitem\",     \r\n        items:[{label:\"Секции\", icon:\"pi-file\", items:[\r\n          {label:\"Сведения о документе\", \r\n          url:`${cert_route_id}?q=0`}, \r\n          {label:\"Начало(п.1-3,7)\", url:`${cert_route_id}?q=1`},{label:\"Документы(п.4-6)\", url:`${cert_route_id}?q=2`},{label:\"Адреса.(п.8-11)\", url:`${cert_route_id}?q=3`},{label:\"п.12-17\", url:`${cert_route_id}?q=5`},{label:\"п.18-21\", url:`${cert_route_id}?q=6`},{label:\"Причины (п.22 I)\", url:`${cert_route_id}?q=7`},{label:\"Прочие (п.22 II)\", url:`${cert_route_id}?q=8`},{label:\"п.23-26\", url:`${cert_route_id}?q=9`},{label:\"Получатель\", url:`${cert_route_id}?q=10`},{label:\"Выгрузка\", url:`${cert_route_id}?q=11`}]},\r\n        { label: \"Печать\", disabled: !certificateStore.cert.issueDate,  icon:\"pi-print\", items: [{label:\"Лицевая\", icon:\"pi-file\", target:\"_blank\", url:`${API_URL}print/face/${cert_id}`},{ label:\"Оборотная\", icon:\"pi-file\", target:\"_blank\", url:`${API_URL}print/back/${cert_id}`}]},  \r\n        { label: \"Списки\",  icon:\"pi-list\", items: [{label:\"Свидетельства\", icon:\"pi-id-card\", url:LIST_ROUTE},{label:\"Журнал\", icon:\"pi-align-left\", url:\"/#\"}]},]}, \r\n      {separator: true},\r\n      { label: \"Сеанс\", className: \"layout-root-menuitem\",      \r\n        items: [{label:\"Главная\", icon:\"pi-home\", url:HOME_ROUTE},{label:\"Свидетельства\", icon:\"pi-list\", url:LIST_ROUTE},{label:\"Выход\", icon:\"pi-sign-out\", command:()=>{userStore.logout()}}]     \r\n      },     \r\n   ]   \r\n  const url = props.activeUrl\r\n  const findActive = (items: MenuItem[])=>{\r\n    let isActive = false    \r\n    items.forEach((item)=>{        \r\n      if (item.url === url)  { \r\n        item.className='active-menuitem' \r\n        isActive = true \r\n      }\r\n      if (isActive) return true\r\n      if (item.items) {         \r\n        if (findActive(item.items)) { \r\n          item.className = item.className || 'active-menuitem'\r\n          isActive = true  \r\n        }  \r\n      } \r\n    })      \r\n    return isActive\r\n  }\r\n  findActive(items)  \r\n  return (\r\n    <div className='layout-sidebar'>      \r\n        <Link className='logo' to='#/'>\r\n          <img id='app-logo' className='logo-image' src={avatar} alt='РРМСС V3.0' />\r\n          <span className='app-name'>МедСС</span>\r\n        </Link>       \r\n        <SideBarMenu model={items} />  \r\n    </div>      \r\n  )\r\n})\r\nexport default SideBarLayout","export default __webpack_public_path__ + \"static/media/ava.0f62058a.png\";","import { MenuItem } from 'primereact/menuitem'\r\nimport { classNames } from 'primereact/utils'\r\nimport { FC } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { HOME_ROUTE } from '../../utils/consts'\r\nimport { IMenuProps } from './IMenuProps'\r\n\r\nexport const ProfileMenu: FC<IMenuProps> = (props: IMenuProps)=> { \r\n  const history = useHistory()  \r\n  const onItemClick = (event: React.MouseEvent, item:MenuItem)=> {\r\n    if (item.disabled) {\r\n      event.preventDefault()\r\n      return\r\n    }\r\n    if (!item.url) {\r\n      event.preventDefault()\r\n    } else if (item.url.startsWith(HOME_ROUTE)) {\r\n      history.push(item.url)\r\n      event.preventDefault()\r\n    }\r\n    if (item.command) item.command({           \r\n      originalEvent: event,\r\n      item,\r\n    })  \r\n  }\r\n  const className = \"profile-menu fade-in-up\"\r\n  const renderMenu = (items:MenuItem[]) => {\r\n    const renderItem = (item:MenuItem, index:number) => {\r\n        const renderSeparator = (index:number)=><li key={\"separator_\" + index} className='menu-separator' role='separator'></li>\r\n        const renderMenuItem =(item:MenuItem, index:number) => {          \r\n          const iconClassName = classNames(\"pi\", item.icon)          \r\n          const icon = item.icon && <i className={iconClassName}></i>\r\n          const label = item.label && <span>{item.label}</span>\r\n          const content = <button key={`bt_${item.label}_${index}`} \r\n              type='button' \r\n              onClick={(e:React.MouseEvent)=>onItemClick(e, item)} \r\n              className=\"p-link\">\r\n                {icon}\r\n                {label}                                                \r\n            </button> \r\n          return <li key={`pfi_${index}`}>{content}</li> \r\n            \r\n        }\r\n        if (item.separator) return renderSeparator(index)\r\n        else return renderMenuItem(item, index) \r\n      }\r\n    if (items.length > 0) {\r\n      return items.map((item, index) => {\r\n          return renderItem(item, index)\r\n      })\r\n    } else return null\r\n  }\r\n  return (\r\n    <ul className={className}>\r\n        {renderMenu(props.model || [])}\r\n    </ul>\r\n  )\r\n}","\r\nimport { classNames } from 'primereact/utils'\r\nimport { FC } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { HOME_ROUTE } from '../../utils/consts'\r\nimport { ExtMenuItem, INotificationMenuProps } from './IMenuProps'\r\n\r\nexport const NotificationsMenu: FC<INotificationMenuProps> = (props: INotificationMenuProps)=> {\r\n  const history = useHistory()   \r\n  const onItemClick = (event: React.MouseEvent, item:ExtMenuItem)=> {\r\n    if (item.disabled) {\r\n      event.preventDefault()\r\n      return\r\n    }\r\n    if (!item.url) {\r\n      event.preventDefault()\r\n    } else if (item.url.startsWith(HOME_ROUTE)) {\r\n      history.push(item.url)\r\n      event.preventDefault()\r\n    }\r\n    if (item.command) item.command({           \r\n      originalEvent: event,\r\n      item,\r\n    })  \r\n  }\r\n  const className = \"notifications-menu fade-in-up\"\r\n  const renderMenu = (items:ExtMenuItem[]) => {\r\n    const renderItem = (item:ExtMenuItem, index:number) => {\r\n        const renderSeparator = (index:number)=><li key={\"separator_\" + index} className='menu-separator' role='separator'></li>\r\n        const renderMenuItem =(item:ExtMenuItem, index:number) => { \r\n          const className =  classNames(\"notification-item\", item.className)                           \r\n          const iconClassName = classNames(\"pi\", item.icon, item.className)          \r\n          const icon = item.icon && <i className={iconClassName}></i>\r\n          const summary = item.summary && <div className=\"notification-summary\">{item.summary}</div>\r\n          const label = (item.label && item.label.split('detail'))||[\"\",\"\"]\r\n          const content = <button key={`bt_${item.summary}_${index}`} \r\n              type='button' className=\"p-link\" \r\n              onClick={(e:React.MouseEvent)=>onItemClick(e, item)}>\r\n                {icon}\r\n              <div className={className}>\r\n                {summary}\r\n                <div className=\"notification-detail\">\r\n                  {label[0]} <b>{item.detail}</b> {label[1]}  \r\n                </div>\r\n              </div>                                                               \r\n            </button> \r\n          return <li key={`nmi_${index}`}>{content}</li> \r\n            \r\n        }\r\n        if (item.separator) return renderSeparator(index)\r\n        else return renderMenuItem(item, index) \r\n      }\r\n    if (items.length > 0) {\r\n      return items.map((item, index) => {\r\n          return renderItem(item, index)\r\n      })\r\n    } else return null\r\n  }\r\n  return (\r\n    <ul className={className}>\r\n        {renderMenu(props.model || [])}\r\n    </ul>\r\n  )\r\n}","import { observer } from 'mobx-react-lite'\r\nimport { useContext } from 'react'\r\nimport { Context } from '../..'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport ava from \"../../images/ava.png\"\r\nimport { classNames } from 'primereact/utils'\r\nimport { MenuItem } from 'primereact/menuitem'\r\nimport { ProfileMenu } from '../menus/ProfileMenu'\r\nimport { ExtMenuItem } from '../menus/IMenuProps'\r\nimport { NotificationsMenu } from '../menus/NotificationsMenu'\r\nimport { IUserInfo } from '../../models/responses/IUserInfo'\r\nimport { DOCTORS_ROUTE, MO_SETTINGS_ROUTE, USER_ROUTE } from '../../utils/consts'\r\ntype TopBarLayoutProps = {title: string,  userInfo: IUserInfo | null }\r\nconst detail_templ =\"detail\"\r\nexport const TopBarLayout = observer((props: TopBarLayoutProps) =>{\r\n  const {layoutStore, userStore} = useContext(Context)\r\n  const isTOM = useMediaQuery({ query: \"(max-width: 991px)\" })\r\n  const profileMenuClassName = classNames(\"profile-item\",{\"active-menuitem fadeInDown\":layoutStore.profileMenuActive()})\r\n  const notificationsMenuClassName = classNames(\"notifications-item\", {\"active-menuitem\":layoutStore.notificationsMenuActive()})\r\n  const menuToggle=()=>{    \r\n    if (isTOM && layoutStore.tabletOrMobile()) layoutStore.setTabletOrMobile(false) \r\n    else if (isTOM && !layoutStore.tabletOrMobile()) layoutStore.setTabletOrMobile(true)\r\n    else layoutStore.sideBarToggle()          \r\n  } \r\n  const items:MenuItem[] = [    \r\n      {label:\"Пользователь\", icon:\"pi-user\", url:`${USER_ROUTE}/${userStore.userInfo?.id}`},\r\n      {label:\"Медорганизация\", icon:\"pi-building\", url:`${MO_SETTINGS_ROUTE}/${userStore.userInfo?.organization.id}`}, \r\n      {label:\"Врачи\", icon:\"pi-users\", url:`${DOCTORS_ROUTE}`},     \r\n      {label:\"Выход\", icon:\"pi-power-off\", command:()=>{userStore.logout()}},       \r\n   ]\r\n  const notif_items:ExtMenuItem[] = [    \r\n      {label:`Создано ${detail_templ} свидетельств`, summary:\"Новых\", className:'p-success', icon:\"pi-user\", detail:3, url:\"/#\"},\r\n      {label:`Заменено ${detail_templ} свидетельств`, summary:\"Замены\", className:'p-info', icon:\"pi-cog\", detail:2, url:\"/#\"},      \r\n      {label:`Выданы родственникам ${detail_templ} свидетельств`, summary:\"Выданно\", icon:\"pi-cog\", detail:5, url:\"/#\"}, \r\n      {label:`С замечаниями ${detail_templ} свидетельств`, className:'p-danger', summary:\"Замечаний\", icon:\"pi-cog\", detail:1, url:\"/#\"},\r\n      {label:`Проверены ${detail_templ} свидетельств`, summary:\"Проверенно\",  className:'p-success', icon:\"pi-cog\", detail:3, url:\"/#\"},  \r\n      {label:`Отправлены в ФРМСИ ${detail_templ}`, summary:\"Отправлено\", className:'p-success', icon:\"pi-cog\", detail:2, url:\"/#\"},\r\n   ]\r\n   const notif_amount = notif_items.reduce((previtem, item, sum)=>{\r\n    return sum += item.detail\r\n   },0)\r\n   \r\n   const userName = props.userInfo!==null && props.userInfo.person_name ? \r\n   `${props.userInfo.person_name?.family} ${props.userInfo.person_name?.given_1[0]} ${props.userInfo.person_name?.given_2?.charAt(0) ||''}` : ''     \r\n  return (\r\n    <div className=\"layout-topbar\">\r\n      <div className=\"topbar-left\">\r\n        <button type=\"button\" className=\"menu-button p-link\" onClick={()=>menuToggle()}>\r\n          <i className=\"pi pi-chevron-left\"> </i>\r\n        </button>\r\n        <span className=\"topbar-separator\"></span>\r\n        <div className=\"layout-breadcrumb viewname\">\r\n          <span>{props.title}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"topbar-right\">\r\n        <ul className=\"topbar-menu\">          \r\n          <li className={notificationsMenuClassName}>\r\n            <button type=\"button\" className=\"p-link\"\r\n            onClick={()=>layoutStore.setNotificationsMenuActive(true)}>\r\n              <i className=\"pi pi-bell\"></i>\r\n              <span className=\"topbar-badge\">{notif_amount}</span>\r\n            </button>\r\n            <NotificationsMenu model={notif_items}/>\r\n          </li>\r\n          <li className={profileMenuClassName}>\r\n            <button type=\"button\" className=\"p-link\" onClick={()=>layoutStore.setProfileMenuActive(true)}>\r\n              <img src={ava} alt=\"\" className=\"profile-image\"/>\r\n              <span className=\"profile-name\">{userName}</span>\r\n            </button>\r\n            <ProfileMenu model={items}/>\r\n          </li> \r\n          <li className=\"right-sidebar-item\">\r\n            <button type=\"button\" className=\"p-link\" onClick={()=>layoutStore.setRightSideBarActive(true)}>\r\n              <i className=\"pi pi-align-right\"></i>\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n})","import { AxiosResponse } from \"axios\"\r\nimport $api, { API_URL } from \"../http\"\r\nimport { ITimeEvent } from \"../models/responses/ITimeEvent\"\r\n\r\n//Стандартные настройки JSON рендеринга модели timeEvent\r\nexport const TIME_EVENT_OPTIONS = {\r\n  render_options: {\r\n    only: [\"id\", \"summary\", \"table\", \"action\", \"detail\", \"created_at\"],\r\n    include: [\"user\", \"organization\"],\r\n  },\r\n  includes: [\"user\", \"organization\"],\r\n  user: { only: [\"id\", \"email\"], include: [\"person_name\"] },\r\n  organization: { only: [\"id\", \"name\"] },\r\n}\r\nexport default class AuditService {\r\n  //POST request for get audit's list\r\n  static async getAudits(query: any): Promise<AxiosResponse<ITimeEvent[]>> {\r\n    return $api.post(`${API_URL}model/Audit/`, { ...query, ...TIME_EVENT_OPTIONS })\r\n  }\r\n}\r\n","import { observer } from 'mobx-react-lite'\r\nimport { classNames } from 'primereact/utils'\r\nimport { FC, useContext, useEffect, useState } from 'react'\r\nimport { Context } from '../..'\r\nimport { ACTIONS,  ITimeEvent } from '../../models/responses/ITimeEvent'\r\nimport {  TIME_FORMAT } from '../../utils/consts'\r\nimport AuditService from '../../services/AuditService'\r\n\r\n\r\ntype RightSideBarLayoutProps = {}\r\n\r\nconst RightSideBarLayout: FC<RightSideBarLayoutProps> = (props: RightSideBarLayoutProps) =>{ \r\n  const {layoutStore, userStore} = useContext(Context)\r\n  const className = classNames(\"layout-sidebar-right\", {\"layout-sidebar-right-active\": layoutStore.rightSideBarActive() }) \r\n  const [timeEvents, setTimeEvents] = useState<ITimeEvent[] | null>(null)\r\n  const [q , setQ] = useState<any | null>(null) \r\n  useEffect(()=>{\r\n    if (q === null && userStore.userInfo) {      \r\n      if (userStore.userInfo.roles.includes('ADMIN'))\r\n        setQ({ sorts: [ 'created_at desc']})\r\n      else \r\n        setQ({user_organization_id_eq: userStore.userInfo?.organization.id, sorts: [ 'created_at desc']})\r\n    }  \r\n  }, [q, userStore.userInfo, userStore.userInfo?.organization] ) \r\n  \r\n  useEffect(()=>{\r\n    if (timeEvents===null && q!==null) AuditService.getAudits({q:q, limit: 200})\r\n    .then(response=>setTimeEvents(response.data))\r\n    .catch(()=>setTimeEvents([]))\r\n  },[timeEvents, q]) \r\n    \r\n   \r\n  return (  \r\n  <div className={className}>\r\n    <h5>Активность</h5>\r\n    <div className=\"widget-timeline\">\r\n      { timeEvents===null || timeEvents.length===0 ? 'Событий не найдено' : timeEvents.map(item=>{        \r\n        const ACTION_ATTRIBUTES = ACTIONS.get(item.action)\r\n        if (ACTION_ATTRIBUTES === undefined) throw Error('неверный action')\r\n        const timeStr = new Date(item.created_at).toLocaleString(\r\n      \"ru\", TIME_FORMAT)\r\n        return (\r\n      <div className=\"timeline-event\" key={item.id}>\r\n        <span className=\"timeline-event-icon\" style={{ backgroundColor: ACTION_ATTRIBUTES.color }}>\r\n                <i className={ACTION_ATTRIBUTES.icon}></i>\r\n        </span>\r\n        <div className='timeline-event-title'>{timeStr} {ACTION_ATTRIBUTES.title}</div>\r\n        <div className='timeline-event-detail'>\r\n          {item.summary ? <><b>где: </b> <em>{item.summary}</em></> : ''}\r\n          {item.detail ? <p><b>что: </b>{item.detail}</p> : ''}          \r\n          <b>кем: </b> <em>{item.user.email}</em>         \r\n        </div>\r\n      </div>)})}\r\n    </div> \r\n        \r\n  </div>\r\n)}\r\nexport default observer(RightSideBarLayout)\r\n\r\n","\r\nimport  { FC } from 'react'\r\nimport '../../styles/components/ActionButtonLayout.css'\r\nimport '../../styles/components/Tooltip.css'\r\nimport { SpeedDial } from 'primereact/speeddial'\r\nimport { Tooltip } from 'primereact/tooltip'\r\n\r\nexport interface IActionItem {\r\n  label: string\r\n  icon: string\r\n  command: ()=>void\r\n}\r\n\r\ntype ActionButtonLayoutProps = {items?: IActionItem[]}\r\n\r\nexport const ActionButtonLayout: FC<ActionButtonLayoutProps> = (props: ActionButtonLayoutProps) =>{   \r\n  if (props.items)\r\n  return (\r\n  <div className=\"layout-action\"> \r\n    <Tooltip target=\".layout-action .p-speeddial-semi-circle.p-speeddial-direction-left .p-speeddial-action\" position=\"left\"  />   \r\n    <SpeedDial model={props.items} radius={80}  direction=\"left\" type=\"semi-circle\" />\r\n  </div>)\r\n  else return<></> \r\n}","import React, { FC, useContext, useEffect, useState } from 'react'\r\nimport '../../styles/layout.css'\r\nimport { Context } from '../..'\r\nimport FooterLayout from './FooterLayout'\r\nimport SideBarLayout from './SideBarLayout'\r\nimport { TopBarLayout } from './TopBarLayout'\r\nimport { classNames } from 'primereact/utils'\r\nimport { observer } from 'mobx-react-lite'\r\nimport RightSideBarLayout  from './RightSideBarLayout'\r\nimport { IUserInfo } from '../../models/responses/IUserInfo'\r\nimport { ActionButtonLayout, IActionItem } from './ActionButtonLayout'\r\nimport { ProgressSpinner } from 'primereact/progressspinner'\r\nimport { addLocale } from 'primereact/api'\r\ntype MainLayoutProps = {\r\n  title: string,\r\n  url:string, \r\n  content:React.ReactElement\r\n  actionItems?: IActionItem[]\r\n }\r\n\r\nconst MainLayout: FC<MainLayoutProps>=(props: MainLayoutProps) => { \r\n  const {layoutStore, userStore} = useContext(Context)\r\n  const rightSideBarActive = layoutStore.rightSideBarActive()\r\n  const layoutStaticInactive = layoutStore.layoutStaticInactive()\r\n  const profileMenuActive = layoutStore.profileMenuActive()\r\n  const notificationsMenuActive = layoutStore.notificationsMenuActive()  \r\n  const onClickOutside = ()=>{\r\n    if (rightSideBarActive) layoutStore.setRightSideBarActive(false)\r\n    else if (profileMenuActive) layoutStore.setProfileMenuActive(false)\r\n    else if (notificationsMenuActive) layoutStore.setNotificationsMenuActive(false)\r\n  } \r\n  const wrapperClass = classNames(\"layout-wrapper layout-static p-ripple layout-sidebar-indigo\",{\"layout-static-inactive\": layoutStaticInactive}, {\"layout-mobile-active\": layoutStore.tabletOrMobile()})\r\n  const [userInfo, setUserInfo] = useState<IUserInfo | null>(null)   \r\n  const userId = userStore.user().id   \r\n  useEffect(()=>{ \r\n     if (userId!== undefined && userInfo === null) \r\n     setUserInfo(userStore.userInfo)     \r\n    },[userId, userInfo, userStore.userInfo]\r\n  )\r\n  const content =  layoutStore.isLoading ? <ProgressSpinner/> : props.content \r\n  addLocale('ru', {\r\n    startsWith: 'Начинается с',\r\n    contains: 'Содержит',\r\n    notContains: 'Не содержит',\r\n    endsWith: 'Оканчивается на',\r\n    equals: 'Равно',\r\n    notEquals: 'Не равно',\r\n    noFilter: 'Любое',\r\n    lt: 'Меньше чем',\r\n    lte: 'Меньше или равно',\r\n    gt: 'Больше',\r\n    gte: 'Больше либо равно',\r\n    dateIs: 'Равна',\r\n    dateIsNot: 'Не равна',\r\n    dateBefore: 'Ранее чем',\r\n    dateAfter: 'Позже чем',\r\n    custom: 'Свое',\r\n    clear: 'Очистить',\r\n    apply: 'Применить',\r\n    matchAll: 'условия (И)',\r\n    matchAny: 'условия (ИЛИ)' ,\r\n    addRule: '+ условие',\r\n    removeRule: ' - условие',\r\n    accept: 'ДА',\r\n    reject: 'НЕТ',\r\n    closeText: 'закрыть',\r\n    prevText: 'назад',\r\n    nextText: 'вперед',\r\n    currentText: 'текущий',\r\n    monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь',\r\n        'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\r\n    monthNamesShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн',\r\n        'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\r\n    dayNames: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\r\n    dayNamesShort: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\r\n    dayNamesMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\r\n    weekHeader: 'Нед',\r\n    firstDay: 1,\r\n    isRTL: false,\r\n    showMonthAfterYear: false,\r\n    yearSuffix: '',\r\n    month: 'Мес',\r\n    week: 'Неделя',\r\n    day: 'День',\r\n    timeOnlyTitle: 'Выбор времени',\r\n    timeText: 'Время',\r\n    hourText: 'Часы',\r\n    minuteText: 'Минуты',\r\n    secondText: 'Секунды',\r\n    allDayText: 'Полный день',      \r\n  })\r\n  return (\r\n  <div className={wrapperClass} data-theme='light'>    \r\n    <div className='layout-content-wrapper' onClick={()=>onClickOutside()}>  \r\n      <TopBarLayout  title = {props.title}  userInfo={userInfo} />        \r\n      <div className='layout-content'>{content}\r\n        <ActionButtonLayout items={props.actionItems}/>\r\n      </div>\r\n      <FooterLayout userInfo={userInfo} />\r\n    </div>\r\n    <SideBarLayout  activeUrl={props.url} /> \r\n    <RightSideBarLayout />     \r\n    <div className=\"layout-search\"></div>        \r\n    <div className='layout-mask modal-in' onClick={()=>{layoutStore.setTabletOrMobile(false)}}></div>\r\n  </div>  \r\n  ) \r\n}\r\nexport default observer(MainLayout)\r\n\r\n","//\"Вид медицинского свидетельства о смерти\r\n//OID: 1.2.643.5.1.13.13.99.2.19 Версия: 1.1\r\nexport const CERT_TYPES = [\r\n  { code: 1, name: \"окончательное\", s_name: \"ОКН\" },\r\n  { code: 2, name: \"предварительное\", s_name: \"ПРВ\" },\r\n  { code: 3, name: \"взамен предварительного\", s_name: \"ВП\" },\r\n  { code: 4, name: \"взамен окончательного\", s_name: \"ВO\" },\r\n]\r\n","import { observer } from 'mobx-react-lite'\r\nimport { FC, useContext } from 'react'\r\nimport { Context } from '../..'\r\nimport { Dropdown } from 'primereact/dropdown'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { Calendar } from 'primereact/calendar'\r\nimport { Divider } from 'primereact/divider'\r\nimport { Card } from 'primereact/card'\r\nimport '../../styles/pages/CertificatePage.css'\r\nimport { CERT_TYPES } from '../../NSI/1.2.643.5.1.13.13.99.2.19'\r\nimport { DATE_FORMAT } from '../../utils/consts'\r\n const Section0: FC = () => {\r\n   const { certificateStore } = useContext(Context)\r\n   const cert =  certificateStore.cert  \r\n   const header = () => {\r\n      return <span>Сведения о документе</span>\r\n    }\r\n  return (<>    \r\n      <Card className=\"c-section p-mr-2 p-mb-2\" header={header} key={certificateStore.cert.id}>\r\n        <div className=\"p-fluid p-formgrid p-grid\">\r\n          <div className=\"p-field p-col-6 p-md-2\">\r\n            <label htmlFor=\"series\">Серия</label>\r\n            <InputText id=\"series\" value={cert.series} type=\"text\" \r\n              placeholder='Заполняется автоматически' disabled/>\r\n          </div>\r\n          <div className=\"p-field p-col-6 p-md-4\">\r\n            <label htmlFor=\"number\">Номер</label>\r\n            <InputText id=\"number\" value={cert.number} disabled type=\"text\" placeholder='Заполняется автоматически'/>\r\n          </div>\r\n          <div className=\"p-field p-col-12 p-md-6\">                    \r\n            <label htmlFor=\"icon\">Дата</label>\r\n            <Calendar id=\"icon\"  dateFormat=\"dd.mm.yy\" value={cert.issueDate} disabled />\r\n          </div>\r\n          <div className=\"p-field p-col-12 p-md-6\">\r\n            <label htmlFor=\"cert_type\">Вид свидетельства</label>\r\n            <Dropdown inputId=\"cert_type\"  placeholder=\"Выбрать\" autoFocus \r\n              options={cert.certType ? ([3, 4].includes(cert.certType) ? CERT_TYPES.filter((item)=>[4,3,1].includes(item.code)) : CERT_TYPES) : CERT_TYPES.filter((item)=>[1,2].includes(item.code)) } optionLabel=\"name\"\r\n              value={CERT_TYPES.find(el=>el.code===cert.certType)} onChange={(e) =>certificateStore.cert.certType = e.value.code} disabled={cert.id > -1} />\r\n          </div>\r\n          \r\n        </div>\r\n        <Divider/>\r\n        <div className=\"p-grid p-mt-2\">              \r\n          <div className=\"p-col-6 p-d-flex p-flex-column p-jc-left p-ai-center p-flex-md-row p-flex-wrap\">\r\n            <div className=\"overview-number p-mr-1 p-mb-1\" style={{padding:'0.1rem'}}>РАНЕЕ ВЫДАННОГО:</div>\r\n             <div className=\"overview-subtext p-mr-1 p-mb-1\" style={{fontWeight:600,padding:'0.2rem'}}>{!!cert.numberPrev ? `${cert.seriesPrev} ${cert.numberPrev} от ${cert.effTimePrev?.toLocaleString('ru', DATE_FORMAT)}` : 'НЕТ'}</div>\r\n          </div>\r\n          <div className=\"p-col-6 p-d-flex p-flex-column p-jc-left p-ai-center p-flex-md-row p-flex-wrap\"\r\n            style={{borderLeft:'1px #dee2e6', borderLeftStyle:'solid'}}>\r\n            <div className=\"overview-number p-mr-1 p-mb-1\" style={{padding:'0.1rem'}}>Статус:</div>\r\n            <div className=\"overview-subtext p-mr-1 p-mb-1\"style={{fontWeight:600,background: cert.latestOne ? 'rgb(211 47 47 / 22%)': '#c8e6c9', color: cert.latestOne ? 'rgb(211 47 47)' : '#256029', padding:'0.2rem'}}>{cert.latestOne ? 'ЗАМЕНЕНО' : 'АКТУАЛЬНОЕ'}</div>\r\n          </div>              \r\n        </div>\r\n      </Card>  \r\n    </>)\r\n  }\r\n  export default observer(Section0) ","export const HOME_REGION_CODE = \"28\"\r\nexport const DEFAULT_CERT_SUGGESTIONS = [\r\n  { section: \"0\", code: \"0\", suggestion: \"Необходимо выбрать тип свидетельства\", done: false },\r\n  {\r\n    section: \"1\",\r\n    code: \"п.1\",\r\n    suggestion: \"Поля ФИО должны быть заполнены, если умерший идентифицирован\",\r\n    done: false,\r\n  },\r\n  { section: \"1\", code: \"п.2\", suggestion: \"Указание пола умершего является обязательным для заполнения\", done: false },\r\n  {\r\n    section: \"1\",\r\n    code: \"п.3\",\r\n    suggestion: \"Указание даты рождения или причины ее отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"1\",\r\n    code: \"п.7\",\r\n    suggestion: \"Указание даты смерти или причины ее отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"2\",\r\n    code: \"п.4.1\",\r\n    suggestion: \"Указание серии ДУЛ умершего или причины его отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"2\",\r\n    code: \"п.4.2\",\r\n    suggestion: \"Указание номера ДУЛ умершего или причины его отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"2\",\r\n    code: \"п.4.3\",\r\n    suggestion: \"Указание органа выдавшего ДУЛ умершего или причины его отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"2\",\r\n    code: \"п.4.4\",\r\n    suggestion: \"Указание даты выдачи ДУЛ умершего или причины его отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"2\",\r\n    code: \"п.4.5\",\r\n    suggestion: \"Указание кода подразделения ДУЛ умершего или причины его отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"2\",\r\n    code: \"п.5\",\r\n    suggestion: \"Указание SNILS умершего или причины его отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"2\",\r\n    code: \"п.6\",\r\n    suggestion: \"Указание полиса ОМС или причины его отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"3\",\r\n    code: \"п.8\",\r\n    suggestion: \"Место жительства или причина его отсутствия - обязательны для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"3\",\r\n    code: \"п.9\",\r\n    suggestion: \"Вид места жительства или причина его отсутствия - обязательны для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"3\",\r\n    code: \"п.10\",\r\n    suggestion: \"Вид места смерти или причина его отсутствия - обязательны для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"3\",\r\n    code: \"п.11\",\r\n    suggestion: \"Вид места смерти или причина его отсутствия - обязательны для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.12\",\r\n    suggestion: \"Выбор места наступления смерти - обязателен для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.13\",\r\n    suggestion: \"Выбор срока береммености для детей от 168 ч до 1месяца  - обязателен для заполнения\",\r\n    done: true,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.14.1\",\r\n    suggestion: \"Внесение весса для детей от 168 ч до года  - обязательно для заполнения\",\r\n    done: true,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.14.2\",\r\n    suggestion:\r\n      \"Внесение порядкового номера беременности матери для детей от 168 ч до года  - обязательно для заполнения\",\r\n    done: true,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.14.3\",\r\n    suggestion: \"Внесение ФИО матери для детей от 168 ч до года  - обязательно для заполнения\",\r\n    done: true,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.14.4\",\r\n    suggestion: \"Внесение даты рождения матери для детей от 168 ч до года  - обязательно для заполнения\",\r\n    done: true,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.14.5\",\r\n    suggestion: \"Внесение адреса жительства матери для детей от 168 ч до года  - обязательно для заполнения\",\r\n    done: true,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.15\",\r\n    suggestion: \"Указание семейного положения - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.16\",\r\n    suggestion: \"Указание образования - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"5\",\r\n    code: \"п.17\",\r\n    suggestion: \"Указание занятости - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"6\",\r\n    code: \"п.18\",\r\n    suggestion: \"Указание рода причины смерти - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"6\",\r\n    code: \"п.19\",\r\n    suggestion:\r\n      \"Указание указать дату, время и обстоятельства травмы (отравления), в случае смерти не от заболевания - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"6\",\r\n    code: \"п.20\",\r\n    suggestion: \"Указание типа медицинского работника, установившего причины смерти - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"6\",\r\n    code: \"п.21\",\r\n    suggestion: \"Указание основание установления причины смерти - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"7\",\r\n    code: \"п.22.a)\",\r\n    suggestion: \"Указание причины а) - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"7\",\r\n    code: \"п.22.a)т\",\r\n    suggestion: \"Период времени между началом патол. состояния и смертью в причине а) - обязателен для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"7\",\r\n    code: \"п.22.б)\",\r\n    suggestion: \"Указание причины б) или ее отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"7\",\r\n    code: \"п.22.б)т\",\r\n    suggestion:\r\n      \"Период времени между началом патол. состояния и смертью в причине б) или его отсутствие - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"7\",\r\n    code: \"п.22.в)\",\r\n    suggestion: \"Указание причины в) или ее отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"7\",\r\n    code: \"п.22.в)т\",\r\n    suggestion:\r\n      \"Период времени между началом патол. состояния и смертью в причине в) или его отсутствие - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"7\",\r\n    code: \"п.22.г)\",\r\n    suggestion: \"Указание причины г) или ее отсутствия - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"7\",\r\n    code: \"п.22.г)т\",\r\n    suggestion:\r\n      \"Период времени между началом патол. состояния и смертью в причине г) или его отсутствие - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"8\",\r\n    code: \"п.22.II.1\",\r\n    suggestion: \"Указание кода прочего состояния или причины его отсутствия - обязательно для заполнения\",\r\n    done: true,\r\n  },\r\n  {\r\n    section: \"8\",\r\n    code: \"п.22.II.2\",\r\n    suggestion:\r\n      \"Указание периода времени между началом патол. состояния и смертью или причины его отсутствия - обязательно для заполнения\",\r\n    done: true,\r\n  },\r\n  {\r\n    section: \"9\",\r\n    code: \"п.23\",\r\n    suggestion: \"Указание периода наступления смерти в случае ДТП  - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"9\",\r\n    code: \"п.24\",\r\n    suggestion: \"Указание срока в случае наступления смерти при беременности  - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"9\",\r\n    code: \"п.25.1\",\r\n    suggestion:\r\n      \"Указание данных о враче (судебно-медицинском эксперте, фельдшере, акушерке), заполнившем свидетельство - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"9\",\r\n    code: \"п.25.2\",\r\n    suggestion: \"Указание данных о руководителе медицинской организации - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"9\",\r\n    code: \"п.26\",\r\n    suggestion:\r\n      \"Указание данных об ответственном за проверку медицинских свидетельств лице - обязательно для заполнения\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"10\",\r\n    code: \"*A\",\r\n    suggestion: \"Указание ФИО получателя - обязательно для печати\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"10\",\r\n    code: \"*B\",\r\n    suggestion: \"Указание даты выдачи - обязательно для печати\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"10\",\r\n    code: \"*С\",\r\n    suggestion: \"Указание СНИЛС или иного документа удостоверения личности - обязательно для печати\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"11\",\r\n    code: \"1\",\r\n    suggestion: \"КриптоПро ЭЦП Browser plug-in должен быть доступен\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"11\",\r\n    code: \"2\",\r\n    suggestion: \"Криптопровайдер должен быть доступен\",\r\n    done: false,\r\n  },\r\n  {\r\n    section: \"11\",\r\n    code: \"3\",\r\n    suggestion: \"Сертификат подписи должен быть выбран\",\r\n    done: false,\r\n  },\r\n]\r\nexport const CERT_TYPE_SUG = 0\r\nexport const PERSON_NAME_SUG = 1\r\nexport const PATIENT_GENDER_SUG = 2\r\nexport const PATIENT_BIRTHDAY_SUG = 3\r\nexport const CERT_DEATH_THIME_SUG = 4\r\nexport const IDSERIES_SUG = 5\r\nexport const IDNUMBER_SUG = 6\r\nexport const IORGNAME_SUG = 7\r\nexport const IORGDATE_SUG = 8\r\nexport const IORGCODE_SUG = 9\r\nexport const SNILS_SUG = 10\r\nexport const OMS_SUG = 11\r\nexport const LIFE_AREA_SUG = 13\r\nexport const LIFE_PLACE_SUG = 12\r\nexport const DEATH_PLACE_SUG = 14\r\nexport const DEATH_AREA_SUG = 15\r\nexport const DEATH_PLACE_TYPE_SUG = 16\r\nexport const TERMS_PREGNANCY_SUG = 17\r\nexport const CHILD_WEIGHT_SUG = 18\r\nexport const NUMBER_PREGNANCY_SUG = 19\r\nexport const MOTHER_FIO_SUG = 20\r\nexport const MOTHER_BIRTHDAY_SUG = 21\r\nexport const MOTHER_ADDRESS_SUG = 22\r\nexport const MARITAL_STATUS_SUG = 23\r\nexport const EDUCATION_LEVEL_SUG = 24\r\nexport const SOCIAL_STATUS_SUG = 25\r\nexport const DEATH_KINDS_SUG = 26\r\nexport const KIND_DEATH_REASON_SUG = 27\r\nexport const EST_MEDIC_SUG = 28\r\nexport const BASIS_DERMINING_SUG = 29\r\nexport const REASON_A_SUG = 30\r\nexport const REASON_A_TIME_SUG = 31\r\nexport const REASON_B_SUG = 32\r\nexport const REASON_B_TIME_SUG = 33\r\nexport const REASON_C_SUG = 34\r\nexport const REASON_C_TIME_SUG = 35\r\nexport const REASON_D_SUG = 36\r\nexport const REASON_D_TIME_SUG = 37\r\nexport const EXT_REASON_SUG = 38\r\nexport const EXT_REASON_TIME_SUG = 39\r\nexport const TRAFFFIC_ACCIDENT_SUG = 40\r\nexport const PREGNANCY_CONNECTION_SUG = 41\r\nexport const AUTHOR_SUG = 42\r\nexport const AUTHENTICATOR_SUG = 44\r\nexport const LEGAL_AUTHENTICATOR_SUG = 43\r\nexport const PARTIPICIPANT_FIO_SUG = 45\r\nexport const PARTIPICIPANT_DATE_SUG = 46\r\nexport const PARTIPICIPANT_IDENTITY_SUG = 47\r\nexport const CSP_PLAGIN_SUG = 48\r\nexport const CRIPTO_PRO_CSP_SUG = 49\r\nexport const CSP_SELECT_SUG = 50\r\n\r\nexport const changeSuggestion = (code: string, suggestions: any[], done: boolean) => {\r\n  const suggestion = suggestions.find((item) => item.code === code)\r\n  if (suggestion) suggestion.done = done\r\n}\r\n\r\nexport const NULL_FLAVORS = [\r\n  { code: \"NI\", name: \"Нет информации\" },\r\n  { code: \"INV\", name: \"Недопустимое значение\" },\r\n  { code: \"DER\", name: \"Извлекаемое значение\" },\r\n  { code: \"OTH\", name: \"Другое\" },\r\n  { code: \"NINF\", name: \"Минус бесконечность\" },\r\n  { code: \"PINF\", name: \"Плюс бесконечность\" },\r\n  { code: \"UNC\", name: \"Кодирование не проводилось\" },\r\n  { code: \"MSK\", name: \"Скрыто\" },\r\n  { code: \"NA\", name: \"Неприменимо\" },\r\n  { code: \"UNK\", name: \"Неизвестно\" },\r\n  { code: \"ASKU\", name: \"Запрошено, но неизвестно\" },\r\n  { code: \"NAV\", name: \"Временно недоступно\" },\r\n  { code: \"NASK\", name: \"Не запрашивалось\" },\r\n  { code: \"QS\", name: \"Достаточное количество\" },\r\n  { code: \"TRC\", name: \"Трудноразличимо\" },\r\n]\r\nexport type NULL_FLAVOR_CODES =\r\n  | \"NI\"\r\n  | \"INV\"\r\n  | \"DER\"\r\n  | \"OTH\"\r\n  | \"NINF\"\r\n  | \"PINF\"\r\n  | \"UNC\"\r\n  | \"MSK\"\r\n  | \"NA\"\r\n  | \"UNK\"\r\n  | \"ASKU\"\r\n  | \"NAV\"\r\n  | \"NASK\"\r\n  | \"QS\"\r\n  | \"TRC\"\r\n\r\nexport type INullFlavorIdx = {\r\n  [index in NULL_FLAVOR_CODES]: number\r\n}\r\nexport const NULL_FLAVOR_IDX: INullFlavorIdx = {\r\n  NI: 0,\r\n  INV: 1,\r\n  DER: 2,\r\n  OTH: 3,\r\n  NINF: 4,\r\n  PINF: 5,\r\n  UNC: 6,\r\n  MSK: 7,\r\n  NA: 8,\r\n  UNK: 9,\r\n  ASKU: 10,\r\n  NAV: 11,\r\n  NASK: 12,\r\n  QS: 13,\r\n  TRC: 14,\r\n}\r\nexport const ASKU = 10\r\nexport const NA = 8\r\nexport const UNK = 9\r\n\r\nexport const MALE = 1\r\nexport const FEMALE = 2\r\nexport const NOGENDER = 4\r\n\r\nexport const URBAN_AREA_TYPE = 1\r\nexport const VILAGE_AREA_TYPE = 2\r\nexport interface ID_CARD_TYPE {\r\n  code: number\r\n  name: string\r\n  s_mask?: string\r\n  n_mask?: string\r\n  c_mask?: string\r\n}\r\nexport const ID_CARD_TYPES: Array<ID_CARD_TYPE> = [\r\n  { code: 1, name: \"Паспорт гр. РФ\", s_mask: \"99 99\", n_mask: \"999999\", c_mask: \"999-999\" },\r\n  { code: 2, name: \"Заграничный паспорт гр. РФ\", s_mask: \"99\", n_mask: \"9999999\", c_mask: \"ФМС 99999\" },\r\n  { code: 3, name: \"Служебный паспорт\" },\r\n  { code: 4, name: \"Врем. уд. личности(форма № 2П)\" },\r\n  { code: 6, name: \"Свидетельство о рождении\", n_mask: \"999999\" },\r\n  { code: 8, name: \"Удостоверение личности военнослужащего\" },\r\n  { code: 9, name: \"Военный билет\" },\r\n  { code: 10, name: \"Паспорт иностранного гражданина\" },\r\n  { code: 11, name: \"Вид на жительство\" },\r\n  { code: 17, name: \"Разрешение на временное проживание в РФ\" },\r\n  { code: 25, name: \"Справка об освобождении из места лишения свободы\" },\r\n  { code: 36, name: \"Водительское удостоверение\" },\r\n  { code: 38, name: \"Охотничий билет\" },\r\n]\r\n\r\nexport const PASSPORT_RF = 0\r\nexport const REGION = { code: \"28\", name: \"Амурская область\" }\r\nexport const REGION_OKATO = \"10\"\r\nexport const DEFAULT_ERROR_TOAST = {\r\n  severity: \"error\",\r\n  summary: \"Сбой\",\r\n  detail: \"Что-то пошло не так, по-пробуйте позднее\",\r\n  life: 3000,\r\n  baseZIndex: 999,\r\n}\r\n","import React, {FC} from 'react'\r\nimport { IReference } from '../models/IReference'\r\nimport { Checkbox, CheckboxChangeParams } from \"primereact/checkbox\"\r\nimport { Dropdown, DropdownChangeParams } from \"primereact/dropdown\"\r\nimport { useState } from 'react'\r\nimport { NULL_FLAVORS } from '../utils/defaults'\r\nimport { INullFlavorR } from '../models/INullFlavor'\r\nimport { useEffect } from 'react'\r\n\r\ntype NullFlavorWrapperProps = {\r\n  paraNum?: boolean,  \r\n  label: React.ReactElement,  \r\n  checked?: boolean, \r\n  setCheck?: ((e: CheckboxChangeParams, nullFlavors?: INullFlavorR[]) => void), \r\n  disabled?: boolean,\r\n  field: React.ReactElement,\r\n  field_name?: string,\r\n  options: IReference[],\r\n  nullFlavors?: INullFlavorR[], \r\n  value?: number,  \r\n  onChange?: ((e: IReference, nullFlavors: INullFlavorR[] | undefined) => void),\r\n  lincked?: boolean\r\n}\r\n\r\nconst NullFlavorWrapper: FC<NullFlavorWrapperProps>=(props: NullFlavorWrapperProps) => {   \r\n  const [value, setValue] = useState<IReference | null>(props.value? NULL_FLAVORS[props.value] : null)\r\n  const [checked, setChecked] = useState<boolean>(props.checked || false) \r\n  const fieldStyle = props.paraNum ? {marginLeft: '-0.76rem'} : {}\r\n  const ddStyle = {width: '200px'}\r\n  const nullFlavors = (props.nullFlavors && props.nullFlavors.length>0 && props.field_name ) ? props.nullFlavors.filter((element: INullFlavorR)=>element.parent_attr!==props.field_name) : []\r\n  const nullFlavor = (props.nullFlavors && props.nullFlavors.length>0 && props.field_name ) ? props.nullFlavors.find((element: INullFlavorR)=>element.parent_attr===props.field_name) : false\r\n  useEffect(()=>{   \r\n    if (props.nullFlavors) {\r\n      const nullFlavor = props.nullFlavors.find(item=>item.parent_attr===props.field_name && !item._destroy)\r\n      if (nullFlavor) {\r\n        setValue(NULL_FLAVORS[nullFlavor.code])\r\n        if (props.checked!==true) setChecked(false)\r\n      } else if (props.checked!==false) setChecked(true)\r\n    }    \r\n  },[props.nullFlavors, props.field_name, props.checked])   \r\n  \r\n  const checkbox  = !props.lincked && <Checkbox        \r\n        style={{ marginLeft: \"0.4rem\" }}\r\n        checked={checked}\r\n        disabled={props.disabled} \r\n        onChange={(e)=>{\r\n            setChecked(e.checked)\r\n            if (props.nullFlavors) {\r\n              if (props.setCheck && e.checked ) { \r\n                if (nullFlavor && nullFlavor.id) {\r\n                  props.nullFlavors.forEach(el=>{\r\n                    if (el.parent_attr===props.field_name) el._destroy=\"1\"\r\n                  })\r\n                  props.setCheck(e)\r\n                } else  props.setCheck(e, nullFlavors)\r\n              } else if (props.setCheck && props.value && props.field_name) { \r\n                let _nullFlavors = nullFlavors               \r\n                _nullFlavors.push({parent_attr: props.field_name, code: props.value })                                 \r\n                props.setCheck(e, _nullFlavors)                            \r\n              } else if (props.setCheck) props.setCheck(e)             \r\n            } else if (props.setCheck) props.setCheck(e)            \r\n          }\r\n        }        \r\n      />  \r\n       \r\n  const style =  props.lincked ? {marginTop:'0.4rem'} : {}  \r\n  const checkboxLabel = props.lincked && !props.checked ? (<></>) : (\r\n    <div className='p-checkbox-right p-field-checkbox'\r\n     key={`nf_${props.checked}_${props.paraNum}`} style={style}>            \r\n      {props.label}     \r\n      {checkbox}\r\n     </div>\r\n  )\r\n  const dropdown = !props.lincked && <Dropdown       \r\n      id={\"p\" + props.field_name}       \r\n      key={`dd_${props.field_name}_${props.checked}`}\r\n      style={fieldStyle}\r\n      value={value}      \r\n      options={props.options}\r\n      onChange={(e: DropdownChangeParams)=>{   \r\n        setValue(e.value)                \r\n        if (props.onChange) { // for not in MobX nullflavors\r\n          const nullFlavor = {parent_attr: props.field_name, code: NULL_FLAVORS.findIndex((element)=>element.code===e.value.code)}\r\n          let _nullFlavors = nullFlavors\r\n          _nullFlavors.push(nullFlavor as INullFlavorR)\r\n          props.onChange(e.value, _nullFlavors)\r\n        } else if (!!props.nullFlavors) { //standart case nullFlavor\r\n            const idx = props.nullFlavors.findIndex(item=>item.parent_attr===props.field_name)\r\n            if (idx > -1) props.nullFlavors[idx].code = NULL_FLAVORS.findIndex((element)=>element.code===e.value.code)\r\n            else throw new Error(`Error change nullFlavor: invalid field name:  ${props.field_name}`)            \r\n        }                                    \r\n      }}\r\n      optionLabel='name'      \r\n      placeholder='Причина отсутствия'\r\n    />    \r\n  const canNullFlavor = checked ? (\r\n    <div style={fieldStyle}>{props.field}</div>\r\n  ) : (\r\n    <div style={ddStyle}>{dropdown}</div>\r\n  )  \r\n  return (<>{checkboxLabel}{canNullFlavor}</>)\r\n}\r\nexport default NullFlavorWrapper","import { NULL_FLAVOR_CODES, UNK } from \"../utils/defaults\"\r\nimport { IDestroyble } from \"./IDestroyble\"\r\nexport interface INullFlavor {\r\n  id?: number\r\n  parent_guid?: string\r\n  parent_attr: string\r\n  code: NULL_FLAVOR_CODES\r\n}\r\n\r\nexport interface INullFlavorR extends IDestroyble {\r\n  id?: number\r\n  parent_guid?: string\r\n  parent_attr: string\r\n  code: number\r\n}\r\n\r\n//получаем чистый NullFlavor без метки удаления\r\nexport const getCleanNullFlavor = (old: INullFlavorR): INullFlavorR | undefined => {\r\n  if (old === undefined) return\r\n  let _new = { code: old.code, parent_attr: old.parent_attr } as INullFlavorR\r\n  if (old.id) _new.id = old.id\r\n  if (old.parent_guid) _new.parent_guid = old.parent_guid\r\n  return _new\r\n}\r\n\r\n//генерируем заполнитель UNK автоматически,\r\n//проверяя значение field\r\n//и массив заполнителей до внесения изменений: original\r\nexport const checkFieldNullFlavor = (\r\n  key: string,\r\n  field: any | null | undefined,\r\n  nullFlavors: INullFlavorR[],\r\n  code = UNK\r\n) => {\r\n  let idx = nullFlavors.findIndex((item) => item.parent_attr === key)\r\n  if (field && idx !== -1 && nullFlavors[idx].id) {\r\n    do {\r\n      nullFlavors[idx]._destroy = \"1\"\r\n      idx = nullFlavors.findIndex((item) => item.parent_attr === key && !item._destroy && item.id)\r\n    } while (idx !== -1)\r\n  } else if (field && idx !== -1) nullFlavors.splice(idx, 1)\r\n  else if (!field && idx !== -1 && nullFlavors[idx]._destroy === \"1\") {\r\n    nullFlavors[idx] = { ...getCleanNullFlavor(nullFlavors[idx]) } as INullFlavorR\r\n  } else if (!field && idx === -1) nullFlavors.push({ code: code, parent_attr: key })\r\n}\r\n\r\n//генерируем заполнители UNK автоматически,\r\n//проверяя карту fields<имя поля, значение>\r\n//и массив заполнителей до внесения изменений: original\r\nexport const createNullFlavors = (fields: Map<string, any | null | undefined>, original: INullFlavorR[]) => {\r\n  fields.forEach((value, key) => {\r\n    checkFieldNullFlavor(key, value, original)\r\n  })\r\n}\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport { NULL_FLAVOR_IDX } from \"../../utils/defaults\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport IIdentity from \"../IIdentity\"\r\nimport { INullFlavorR } from \"../INullFlavor\"\r\nimport IIdentityR from \"../requests/IIdentityR\"\r\n\r\nexport default class Identity implements ISerializable {\r\n  private _id?: string\r\n  private _identityCardType: number\r\n  private _series?: string\r\n  private _number: string | undefined\r\n  private _issueOrgName: string | undefined\r\n  private _issueOrgCode?: string | undefined\r\n  private _issueOrgDate: Date | undefined\r\n  private _parentGUID: string\r\n  private _nullFlavors: INullFlavorR[]\r\n  constructor(props: IIdentity) {\r\n    this._id = props.id\r\n    this._identityCardType = props.identity_card_type_id\r\n    if (props.series) this._series = props.series\r\n    this._number = props.number\r\n    this._issueOrgName = props.issueOrgName\r\n    if (props.issueOrgCode) this._issueOrgCode = props.issueOrgCode\r\n    if (props.issueDate) this._issueOrgDate = new Date(props.issueDate)\r\n    this._parentGUID = props.parentGUID\r\n    this._nullFlavors =\r\n      props.null_flavors?.map((item) => {\r\n        return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n      }) || []\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n  getAttributes(): IIdentityR {\r\n    let _identity = {} as IIdentityR\r\n    if (this._id) _identity.id = this._id\r\n    if (this._identityCardType) _identity.identity_card_type_id = this._identityCardType\r\n    if (this._issueOrgCode) _identity.issueOrgCode = this._issueOrgCode\r\n    if (this._issueOrgDate) _identity.issueDate = this._issueOrgDate.toDateString()\r\n    if (this._issueOrgName) _identity.issueOrgName = this._issueOrgName\r\n    if (this._nullFlavors.length > 0) _identity.null_flavors_attributes = this.null_flavors_attributes()\r\n    if (this._number) _identity.number = this._number\r\n    if (this._parentGUID) _identity.parentGUID = this._parentGUID\r\n    if (this._series) _identity.series = this._series\r\n    return _identity\r\n  }\r\n  get identityCardType() {\r\n    return this._identityCardType\r\n  }\r\n  set identityCardType(ct: number) {\r\n    this._identityCardType = ct\r\n  }\r\n  get series() {\r\n    return this._series ? this._series : \"\"\r\n  }\r\n  set series(series: string | undefined) {\r\n    this._series = series\r\n  }\r\n  get number() {\r\n    return this._number\r\n  }\r\n  set number(number: string | undefined) {\r\n    this._number = number\r\n  }\r\n  get issueOrgName() {\r\n    return this._issueOrgName\r\n  }\r\n  set issueOrgName(issueOrgName: string | undefined) {\r\n    this._issueOrgName = issueOrgName\r\n  }\r\n  get issueOrgDate() {\r\n    return this._issueOrgDate\r\n  }\r\n  set issueOrgDate(issueOrgDate: Date | undefined) {\r\n    this._issueOrgDate = issueOrgDate\r\n  }\r\n  get issueOrgCode() {\r\n    return this._issueOrgCode ? this._issueOrgCode : \"\"\r\n  }\r\n  set issueOrgCode(issueOrgCode: string | undefined) {\r\n    this._issueOrgCode = issueOrgCode\r\n  }\r\n  get parentGUID() {\r\n    return this._parentGUID\r\n  }\r\n  get nullFlavors() {\r\n    return this._nullFlavors\r\n  }\r\n  set nullFlavors(nullFlavors: INullFlavorR[]) {\r\n    this._nullFlavors = nullFlavors\r\n  }\r\n  // получение копии массива заполнителей из Observable.array\r\n  null_flavors_attributes() {\r\n    return this._nullFlavors.map((el) => {\r\n      return { ...el }\r\n    })\r\n  }\r\n}\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport { NULL_FLAVOR_IDX } from \"../../utils/defaults\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { IContact } from \"../IContact\"\r\nimport { INullFlavorR } from \"../INullFlavor\"\r\nimport { IPerson } from \"../IPerson\"\r\nimport { IPersonName } from \"../IPersonName\"\r\nimport { IAddressR } from \"../requests/IAddressR\"\r\nimport { IPersonR } from \"../requests/IPersonR\"\r\n\r\nexport default class Person implements ISerializable {\r\n  private _id?: string\r\n  private _personName?: IPersonName\r\n  private _SNILS?: string | undefined\r\n  private _nullFlavors: INullFlavorR[]\r\n  private _address?: IAddressR | undefined\r\n  private _contacts: IContact[]\r\n  private _oldOne?: IPerson\r\n\r\n  constructor(props = {} as IPerson) {\r\n    this._oldOne = props\r\n    this._personName = props.person_name\r\n    this._SNILS = props.SNILS\r\n    this._id = props.id\r\n    this._address = {\r\n      ...props.address,\r\n      null_flavors_attributes:\r\n        props.address?.null_flavors?.map((item) => {\r\n          return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n        }) || [],\r\n    } as IAddressR\r\n    this._nullFlavors =\r\n      props.null_flavors?.map((item) => {\r\n        return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n      }) || []\r\n    this._contacts = props.contacts || []\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n\r\n  getAttributes(): IPersonR {\r\n    let _person = {} as IPersonR\r\n    if (this._id) _person.id = this._id\r\n    if (this._SNILS) _person.SNILS = this._SNILS\r\n    if (this._address && !!this._address.state && !!this._address.streetAddressLine)\r\n      _person.address_attributes = { ...this._address }\r\n    else if (this._oldOne && this._oldOne.address?.id)\r\n      _person.address_attributes = { id: this._oldOne.address.id, _destroy: \"1\" } as IAddressR\r\n    if (this._contacts.length > 0) _person.contacts_attributes = [...this._contacts]\r\n    if (this._nullFlavors.length > 0) _person.null_flavors_attributes = this.null_flavors_attributes()\r\n    if (this._personName) _person.person_name_attributes = { ...this._personName }\r\n    return _person\r\n  }\r\n\r\n  get fio() {\r\n    return this._personName\r\n  }\r\n\r\n  set fio(fio: IPersonName | undefined) {\r\n    this._personName = fio\r\n  }\r\n\r\n  get nullFlavors() {\r\n    return this._nullFlavors\r\n  }\r\n  set nullFlavors(nullFlavors: INullFlavorR[]) {\r\n    this._nullFlavors = nullFlavors\r\n  }\r\n\r\n  // получение копии массива заполнителей из Observable.array\r\n  null_flavors_attributes() {\r\n    return this._nullFlavors.map((el) => {\r\n      return { ...el }\r\n    })\r\n  }\r\n\r\n  get SNILS() {\r\n    return this._SNILS\r\n  }\r\n\r\n  set SNILS(snils: string | undefined) {\r\n    this._SNILS = snils\r\n  }\r\n\r\n  get id() {\r\n    return this._id\r\n  }\r\n  get address(): IAddressR | undefined {\r\n    return this._address\r\n  }\r\n  set address(value: IAddressR | undefined) {\r\n    this._address = value\r\n  }\r\n  get contacts(): IContact[] {\r\n    return this._contacts\r\n  }\r\n  set contacts(value: IContact[]) {\r\n    this._contacts = value\r\n  }\r\n\r\n  fullName(): string {\r\n    const fio = this._personName\r\n    return !!fio ? `${fio.family} ${fio.given_1} ${!!fio.given_2 ? fio.given_2 : \"\"}` : \"\"\r\n  }\r\n}\r\n","export interface IPersonName {\r\n  id?: number\r\n  family: string // фамилия\r\n  given_1: string // имя\r\n  given_2?: string // отчество\r\n}\r\nexport const getOneLinePersonName = (person_name: IPersonName | undefined | null): string => {\r\n  if (!person_name) return \"\"\r\n  else return `${person_name.family} ${person_name.given_1} ${person_name.given_2 ? person_name.given_2 : \"\"}`.trim()\r\n}\r\n","import { InputText } from 'primereact/inputtext'\r\nimport { classNames } from 'primereact/utils'\r\nimport { FC, useState } from 'react'\r\nimport { getOneLinePersonName, IPersonName } from '../../models/IPersonName'\r\n\r\ntype PersonNameProps = {\r\n  personName?: IPersonName\r\n  submitted?:boolean\r\n  onChange:(personName: IPersonName)=>void\r\n}\r\nexport const PersonName:FC<PersonNameProps> = (props:PersonNameProps) =>{\r\n  const [fio, setFio] = useState(getOneLinePersonName(props.personName)) \r\n  const isErrorMessage = props.submitted && (!props.personName || !props.personName.family || !props.personName.given_1)\r\n  return (<>\r\n    <InputText  id=\"fio\" type=\"text\" \r\n      value={fio}                    \r\n      onChange={(e)=>{\r\n        setFio(e.target.value)               \r\n        const values = e.target.value.trim().split(\" \")\r\n        let _result = {} as IPersonName\r\n        if (props.personName?.id) _result.id = props.personName?.id\r\n        if (values && values.length > 1) {\r\n          _result = {..._result, family: values[0], given_1: values[1]} as IPersonName\r\n          if (values[2]) _result.given_2 = values[2]                      \r\n        } else  _result = {..._result, family: '', given_1: ''} as IPersonName\r\n        props.onChange(_result)                                      \r\n      }}\r\n      className={classNames({ 'p-invalid': isErrorMessage})}\r\n    />\r\n    {isErrorMessage && <small className=\"p-error\">Фамилия, имя обязательны</small>}\r\n  </>)\r\n} ","import { observer } from 'mobx-react-lite'\r\nimport { FC, useContext, useState } from 'react'\r\nimport { Context } from '../..'\r\nimport { Card } from 'primereact/card'\r\nimport { Checkbox, CheckboxChangeParams } from 'primereact/checkbox'\r\nimport { RadioButton } from 'primereact/radiobutton'\r\nimport '../../styles/components/RadioButton.css'\r\nimport '../../styles/components/Calendar.css'\r\nimport '../../styles/pages/CertificatePage.css'\r\nimport NullFlavorWrapper from '../NullFlavorWrapper'\r\nimport { ASKU, FEMALE, ID_CARD_TYPES, MALE, NOGENDER, NULL_FLAVORS, PASSPORT_RF, UNK } from '../../utils/defaults'\r\nimport { IReference } from '../../models/IReference'\r\nimport { Calendar } from 'primereact/calendar'\r\nimport { checkFieldNullFlavor, INullFlavorR } from '../../models/INullFlavor'\r\nimport { IPersonName } from '../../models/IPersonName'\r\nimport IIdentity from '../../models/IIdentity'\r\nimport Identity from '../../models/FormsData/Identity'\r\nimport Person from '../../models/FormsData/Person'\r\nimport { PersonName } from '../inputs/PersonName'\r\n\r\n\r\n const Section1: FC = () => {   \r\n  const { certificateStore, suggestionsStore, layoutStore } = useContext(Context) \r\n  const certificate = certificateStore.cert   \r\n  const patient = certificate.patient\r\n  const person =  patient.person     \r\n  const [yearBTChecked, setYearBTChecked] = useState<boolean>(!!patient.birth_year)   \r\n  const [yearDTChecked, setYearDTChecked] = useState<boolean>(!!certificate.deathYear) \r\n  \r\n  const header = () => {\r\n      return <span>Данные умершего</span>\r\n    }\r\n    \r\n  const identified = suggestionsStore.identified   \r\n  const optionCode = suggestionsStore.fromRelatives ? 'ASKU' : 'NA UNK'\r\n  const isDeathTime = certificate.deathDatetime!==undefined \r\n        && certificate.nullFlavors.findIndex((item)=>item.parent_attr===\"death_time\")===-1\r\n  return (<>    \r\n      <Card className=\"c-section p-mr-2 p-mb-2\" header={header}>        \r\n          <div className=\"p-fluid p-formgrid p-grid\">\r\n            <div className=\"p-field-checkbox p-col-12 p-lg-6\">              \r\n              <Checkbox inputId=\"notIdentified\" checked={!suggestionsStore.identified} onChange={e =>{                \r\n                if (e.checked) {\r\n                  patient.person = undefined\r\n                  patient.identity = undefined\r\n                  certificate.policyOMS = undefined\r\n                } else { \r\n                  patient.person = new Person()\r\n                  if (yearBTChecked) { setYearBTChecked(false) \r\n                    patient.setBirthDay(patient.birth_date as Date | undefined, false)\r\n                  }      \r\n                }  \r\n                checkFieldNullFlavor('person', patient.person, patient.nullFlavors, UNK) \r\n                checkFieldNullFlavor('identity', patient.identity, patient.nullFlavors, UNK)  \r\n                checkFieldNullFlavor('policy_OMS', certificate.policyOMS, certificate.nullFlavors, UNK)           \r\n                suggestionsStore.identified = !e.checked  \r\n                }} \r\n              />\r\n              <label htmlFor=\"notIdentified\">Умерший не идентифицирован</label>\r\n            </div>\r\n            <div className=\"p-field-checkbox p-col-12 p-lg-6\">              \r\n              <Checkbox inputId=\"fromRelatives\" checked={suggestionsStore.fromRelatives} \r\n              onChange={e =>{       \r\n                suggestionsStore.fromRelatives = e.checked\r\n                if (e.checked) { \r\n                  if (!patient.person) {\r\n                    patient.person = new Person()\r\n                    checkFieldNullFlavor('person', patient.person, patient.nullFlavors)\r\n                  }  \r\n                  if (yearBTChecked) { \r\n                    setYearBTChecked(false) \r\n                    patient.setBirthDay(patient.birth_date as Date | undefined, false)\r\n                  }\r\n                  patient.identity = undefined  \r\n                  checkFieldNullFlavor('identity', patient.identity, patient.nullFlavors, ASKU)                                  \r\n                } else \r\n                  patient.identity = new Identity({identity_card_type_id: ID_CARD_TYPES[PASSPORT_RF].code} as IIdentity)                \r\n                }}/>\r\n              <label htmlFor=\"fromRelatives\">Внесено со слов родственников</label>\r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">\r\n              <div className='paragraph p-mr-1'> 1. </div>\r\n              <div className='p-paragraph-field p-mr-2 p-mb-2' \r\n                key={`pdiv1_${identified}`} >\r\n                <NullFlavorWrapper \r\n                  disabled={!suggestionsStore.fromRelatives}               \r\n                  checked={identified} \r\n                  paraNum                                \r\n                  label={<label htmlFor=\"family\">Фамилия, имя, отчество(при наличии)</label>}\r\n                  field={<PersonName personName={person?.fio}                                     \r\n                    onChange={(value: IPersonName | undefined)=>{     \r\n                      if (!person) return                          \r\n                      if (value?.family !== \"\" && (!person.fio || person.fio.family ===\"\")) layoutStore.message = { severity: 'success', summary: 'Успешно', detail: 'ФИО умершего изменены, чтобы сохранить изменения, введите причину А в п.22', life: 3000 }                                        \r\n                      person.fio = value || {family:'',given_1:''}\r\n                      checkFieldNullFlavor('fio.given_2', person.fio.given_2, person.nullFlavors, UNK)     \r\n                                                  \r\n                  }}/>}                  \r\n                  options={NULL_FLAVORS.filter((item:IReference)=>optionCode.includes(item.code))} \r\n                  value={suggestionsStore.fromRelatives ? ASKU : UNK} \r\n                  nullFlavors={patient.nullFlavors}  \r\n                  field_name=\"person\"                                 \r\n                />             \r\n              </div>\r\n            </div>  \r\n            <div className=\"p-d-flex p-jc-center\">\r\n              <div className='paragraph p-mr-1' > 2. </div>\r\n              <div className='p-paragraph-field'>\r\n                <div className=\"p-formgroup-inline\">\r\n                  <div className='p-field-radiobutton p-radiobutton'>Пол</div>\r\n                  <div className='p-field-radiobutton'>                  \r\n                    <RadioButton name='undef' checked={patient.gender === NOGENDER}\r\n                      onChange={(e)=>{\r\n                        if (e.checked) patient.gender = NOGENDER  \r\n                        else patient.gender = undefined\r\n                      }}/>\r\n                    <label htmlFor='undef'> Неопределенный </label>\r\n                  </div>\r\n                  <div className='p-field-radiobutton'>                  \r\n                    <RadioButton name='female' checked={patient.gender === FEMALE}\r\n                      onChange={(e)=>{\r\n                      if (e.checked) patient.gender = FEMALE  \r\n                      else patient.gender = undefined\r\n                      }}\r\n                    />\r\n                    <label htmlFor='female'> Женский</label>\r\n                  </div>                \r\n                  <div className='p-field-radiobutton'>                  \r\n                    <RadioButton name='male' checked={patient.gender === MALE}\r\n                      onChange={(e)=>{\r\n                        if (e.checked) patient.gender = MALE  \r\n                        else patient.gender = undefined\r\n                      }}\r\n                    />\r\n                    <label htmlFor='male'>Мужской</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-field p-d-flex p-jc-center\">\r\n              <div className='paragraph p-mr-1'> 3. </div>\r\n              <div className='p-paragraph-field' key={`pdiv5_${identified}`}>                    \r\n                <NullFlavorWrapper paraNum\r\n                    disabled={suggestionsStore.identified}                    \r\n                    label={<label htmlFor=\"dateBirth\">Дата рождения</label>}\r\n                    checked={suggestionsStore.identified || yearBTChecked } setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{                      \r\n                      if (!e.checked) {                        \r\n                        patient.birth_date = undefined\r\n                        patient.birth_year = undefined \r\n                      } \r\n                      if (nullFlavors) patient.nullFlavors = nullFlavors \r\n                    }} \r\n                    onChange={(e:IReference,  nullFlavors: INullFlavorR[] | undefined)=>{if (nullFlavors) patient.nullFlavors = nullFlavors}}\r\n                    field={<div className=\"p-d-flex p-jc-start p-ai-center\">              \r\n                      <Calendar id=\"dateBirth\" className=\"p-mr-2\" locale=\"ru\"\r\n                        dateFormat={yearBTChecked ? \"yy\" : \"dd.mm.yy\"}  \r\n                        mask={yearBTChecked ? \"9999\" : \"99.99.9999\"}                         \r\n                        value={patient.birth_date} \r\n                        onChange={(e)=>patient.setBirthDay(e.target.value as Date | undefined, yearBTChecked)                          \r\n                        }\r\n                        showIcon />\r\n                      <div className=\"p-field-checkbox\">              \r\n                        <Checkbox checked={yearBTChecked} \r\n                          inputId=\"bd_year\" disabled={suggestionsStore.identified}\r\n                          onChange={e=>{\r\n                            setYearBTChecked(e.checked)\r\n                            patient.setBirthDay(patient.birth_date as Date | undefined, e.checked) }}/>\r\n                        <label htmlFor=\"bd_year\">Только год</label>\r\n                      </div>\r\n                    </div>}\r\n                    options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n                    value={suggestionsStore.fromRelatives ? ASKU : UNK}\r\n                    field_name=\"birth_date\"\r\n                    nullFlavors={patient.nullFlavors}\r\n                />                               \r\n              </div>              \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-jc-center\">\r\n              <div className='paragraph p-mr-1'> 7. </div>\r\n              <div className='p-paragraph-field p-mr-3 p-mb-2'>\r\n                <NullFlavorWrapper paraNum                   \r\n                  label={<label htmlFor=\"dateDeath\">Дата смерти</label>}                  \r\n                  checked={certificate.deathDatetime!==undefined} setCheck={(e:CheckboxChangeParams, nullFlavors:      INullFlavorR[] | undefined)=>{                   \r\n                    if (!e.checked) certificate.setDeathDay(undefined, false)                      \r\n                    else certificate.setDeathDay(new Date(), false)                         \r\n                    if (nullFlavors) certificate.nullFlavors = nullFlavors  \r\n                  }} \r\n                  onChange={(e:IReference,  nullFlavors: INullFlavorR[] | undefined)=>{if (nullFlavors) certificate.nullFlavors = nullFlavors}}\r\n                  field={<div className=\"p-d-flex p-jc-start p-ai-center\">              \r\n                      <Calendar id=\"dateDeath\" className=\"p-mr-2\" locale=\"ru\"\r\n                        dateFormat={yearDTChecked ? \"yy\" : \"dd.mm.yy\"} \r\n                        mask={yearDTChecked ? \"9999\" : \"99.99.9999\"}\r\n                        value={certificate.deathDatetime}\r\n                        onChange={(e)=>certificate.setDeathDay(e.target.value as Date | undefined, yearDTChecked) \r\n                        } \r\n                        showIcon />\r\n                      <div className=\"p-field-checkbox\">              \r\n                        <Checkbox checked={yearDTChecked} \r\n                          inputId=\"bd_year\" \r\n                          onChange={e=>{ setYearDTChecked(e.checked)\r\n                            certificate.setDeathDay(certificate.deathDatetime as Date | undefined, e.checked)}}/>\r\n                        <label htmlFor=\"bd_year\">Только год</label>\r\n                      </div>\r\n                    </div>}\r\n                    options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n                    value={UNK}\r\n                    field_name=\"death_datetime\"                    \r\n                    nullFlavors={certificate.nullFlavors}\r\n                 />\r\n              </div>     \r\n              <div className='p-paragraph-field' key={`pdivdt_${yearDTChecked}_${isDeathTime}`}>                \r\n                <NullFlavorWrapper \r\n                  disabled={yearDTChecked}                   \r\n                  label={<label htmlFor=\"timeDeath\">Время смерти</label>}\r\n                  checked={isDeathTime && !yearDTChecked} \r\n                  setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{                   \r\n                    if (nullFlavors) certificate.nullFlavors = nullFlavors  \r\n                  }}\r\n                  onChange={(e:IReference,  nullFlavors: INullFlavorR[] | undefined)=>{if (nullFlavors) certificate.nullFlavors = nullFlavors}} \r\n                  field={ <Calendar id=\"timeDeath\"  \r\n                    timeOnly hourFormat=\"24\" locale=\"ru\"                                                   \r\n                    value={certificate.deathDatetime} \r\n                    showIcon />}\r\n                  options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n                  value={UNK}\r\n                  field_name=\"death_time\"\r\n                  nullFlavors={certificate.nullFlavors}                  \r\n                />\r\n              </div>\r\n            </div>            \r\n          </div>          \r\n      </Card>  \r\n    </>)\r\n  }\r\n  export default observer(Section1) ","import { InputMask, InputMaskProps } from 'primereact/inputmask'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport Identity from '../../models/FormsData/Identity'\r\nimport { ID_CARD_TYPE } from '../../utils/defaults'\r\n\r\ntype InputsIdentityProps = {\r\n  dulValue?: ID_CARD_TYPE\r\n  identity?:Identity  \r\n}\r\nexport const inputsIdentity = (props:InputsIdentityProps) =>{\r\n  const identity = props.identity\r\n  const dulValue = props.dulValue\r\n  const seriesProps = {type:\"text\", id:\"series\", value:identity?.series,                  \r\n      onChange:(e:any)=>{if (identity) identity.series = e.target.value }}  \r\n  const seriesField = dulValue?.s_mask ? <InputMask {...{mask:dulValue?.s_mask,...seriesProps} as InputMaskProps }/>\r\n    : <InputText {...seriesProps}/>   \r\n  const numberProps = {type:\"text\", id:\"docNumber\", value:identity?.number,                  \r\n      onChange:(e:any)=>{if (identity) identity.number = e.target.value }}  \r\n  const numberField = dulValue?.n_mask ? <InputMask {...{mask:dulValue?.n_mask,...numberProps} as InputMaskProps }/>\r\n    : <InputText {...numberProps}/> \r\n  const depCodeProps = {type:\"text\", id:\"depCode\", value:identity?.issueOrgCode,                  \r\n      onChange:(e:any)=>{if (identity) identity.issueOrgCode = e.target.value}}  \r\n  const depCodeField = dulValue?.c_mask ? <InputMask {...{mask:dulValue?.c_mask,...depCodeProps} as InputMaskProps }/>\r\n    : <InputText {...depCodeProps}/> \r\n  return [seriesField, numberField,  depCodeField]\r\n}","import { observer } from 'mobx-react-lite'\r\nimport React, { FC, useContext, useState } from 'react'\r\nimport { Context } from '../..'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { Card } from 'primereact/card'\r\nimport { CheckboxChangeParams } from 'primereact/checkbox'\r\nimport '../../styles/components/RadioButton.css'\r\nimport '../../styles/components/Calendar.css'\r\nimport '../../styles/pages/CertificatePage.css'\r\nimport NullFlavorWrapper from '../NullFlavorWrapper'\r\nimport { ASKU, ID_CARD_TYPES, NA, NULL_FLAVORS, PASSPORT_RF, UNK } from '../../utils/defaults'\r\nimport { IReference } from '../../models/IReference'\r\nimport { Calendar } from 'primereact/calendar'\r\nimport { checkFieldNullFlavor, INullFlavorR } from '../../models/INullFlavor'\r\nimport { Dropdown } from 'primereact/dropdown'\r\nimport { InputMask } from 'primereact/inputmask'\r\nimport { InputTextarea } from 'primereact/inputtextarea'\r\nimport Identity from '../../models/FormsData/Identity'\r\nimport IIdentity from '../../models/IIdentity'\r\nimport { inputsIdentity } from '../inputs/inputsIdentity'\r\n\r\n\r\n\r\n const Section2: FC = () => {\r\n  const { certificateStore, suggestionsStore } = useContext(Context)   \r\n  const identified = suggestionsStore.identified  \r\n  const header = () => {\r\n      return <span>Документы умершего</span>\r\n    }    \r\n  const certificate = certificateStore.cert   \r\n  const patient = certificate.patient\r\n  const identity = patient.identity \r\n  const [docChecked, setDocChecked] = useState(identified && patient.nullFlavors.findIndex(item=>!item._destroy && item.parent_attr==='identity')===-1)    \r\n  const [dulValue, setDulValue]  = useState(ID_CARD_TYPES.find((item)=>item.code === identity?.identityCardType))\r\n  const person =  patient.person   \r\n  const nullFlavorOption =  docChecked ? \"UNK\" : \"UNK ASKU NA\" \r\n  const [seriesField, numberField, depCodeField] = inputsIdentity({dulValue, identity})    \r\n  return (<>    \r\n      <Card className=\"c-section p-mr-2 p-mb-2\" header={header}>        \r\n          <div className=\"p-fluid p-formgrid p-grid\">            \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">\r\n              <div className='paragraph p-mr-1'>4. </div>\r\n              <div className='p-paragraph-field p-mr-2 p-mb-2'>\r\n                <NullFlavorWrapper \r\n                  disabled={!identified} paraNum                              \r\n                  checked={docChecked} setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>\r\n                    { if (e.checked) {\r\n                      patient.identity = new Identity({\r\n                        identity_card_type_id: ID_CARD_TYPES[PASSPORT_RF].code,                                  \r\n                          } as IIdentity)\r\n                        if (!identified) suggestionsStore.identified = true\r\n                      } else patient.identity = undefined \r\n                      if (nullFlavors) patient.nullFlavors = nullFlavors\r\n                      setDocChecked(e.checked)\r\n                    }}\r\n                  nullFlavors={patient.nullFlavors}\r\n                  field_name=\"identity\"\r\n                  label={<label htmlFor=\"identity_card_type\">Документ, удостоверяющей личность умершего: </label>}\r\n                  field={<Dropdown  id=\"identity_card_type\" value={dulValue} \r\n                  autoFocus options={ID_CARD_TYPES} optionLabel='name'\r\n                  onChange={(e)=>{\r\n                    if (identity) identity.identityCardType = e.value.code\r\n                    else {\r\n                      patient.identity = new Identity({identity_card_type_id: e.value.code} as IIdentity)\r\n                      checkFieldNullFlavor(\"identity\", patient.identity, patient.nullFlavors)\r\n                    }  \r\n                    setDulValue(ID_CARD_TYPES.find((item)=>item.code === e.value.code))\r\n                  }}\r\n                  />}                  \r\n                  options={NULL_FLAVORS.filter((item:IReference)=>nullFlavorOption.includes(item.code))} \r\n                  value={docChecked ? UNK : ASKU}                                    \r\n                />             \r\n              </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" key={`ser_${docChecked}`} \r\n                style={{marginLeft:'1.5rem'}}>\r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"series\">Серия</label>}\r\n                  checked={docChecked && patient.identity?.nullFlavors.findIndex(nf=>nf.parent_attr==='series')===-1} setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                    if (e.checked && patient.identity) patient.identity.series = ''\r\n                    else if (patient.identity) patient.identity.series = undefined                                    \r\n                  }}                 \r\n                  field={seriesField}\r\n                  field_name='series'\r\n                  options={identified ? [NULL_FLAVORS[NA]] : [NULL_FLAVORS[ASKU]]}\r\n                  value={NA}\r\n                  nullFlavors={patient.identity?.nullFlavors}\r\n                  lincked={!docChecked}                                   \r\n                />  \r\n              </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" key={`num_${docChecked}`}\r\n                style={{marginLeft:'1.5rem'}} >\r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"docNumber\">Номер</label>}\r\n                  checked={docChecked}                 \r\n                  field={numberField}\r\n                  options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n                  value={identified ? UNK : ASKU} \r\n                  lincked                                      \r\n                />                    \r\n              </div>\r\n              <div className=\"p-paragraph-field p-mr-3 p-mb-2\" key={`org_${docChecked}`} style={{marginLeft:'1.5rem'}} >\r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"issueOrgName\">Кем выдан</label>}\r\n                  checked={docChecked}                   \r\n                  field={\r\n                    <InputTextarea id=\"issueOrgName\" value={identity?.issueOrgName} \r\n                    cols={65} rows={2}   disabled={!identified}\r\n                    onChange={(e)=>{if (identity) identity.issueOrgName = e.target.value }}/>}\r\n                  options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n                  value={identified ? UNK : ASKU} \r\n                  lincked                                      \r\n                />                    \r\n              </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={{marginLeft:'1.5rem'}} key={`pdiv5_${docChecked}`}>\r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"issueDate\">Когда выдан</label>}\r\n                  checked={docChecked}                   \r\n                  field={<Calendar  id=\"issueDate\" className=\"p-mr-2\" \r\n                    dateFormat={\"dd.mm.yy\"} \r\n                    locale=\"ru\" mask=\"99.99.9999\"                    \r\n                    value={identity?.issueOrgDate}\r\n                    onChange={(e)=>{if (identity) identity.issueOrgDate = e.target.value as Date | undefined}}\r\n                    showIcon />\r\n                  }\r\n                  options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n                  value={identified ? UNK : ASKU}\r\n                  field_name=\"issueDate\"\r\n                  lincked                                       \r\n                /> \r\n              </div>  \r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" key={`code_${docChecked}`} style={{marginLeft:'1.5rem'}}> \r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"depCode\">Код подразделения</label>}\r\n                  checked={docChecked && patient.identity?.nullFlavors.findIndex(nf=>nf.parent_attr==='issueOrgCode')===-1} \r\n                  setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                    if (e.checked && patient.identity) patient.identity.issueOrgCode = ''\r\n                    else if (patient.identity) patient.identity.issueOrgCode = undefined  \r\n                    if (nullFlavors && patient.identity) patient.identity.nullFlavors =  nullFlavors            \r\n                  }}                   \r\n                  field={depCodeField}\r\n                  options={identified ? [NULL_FLAVORS[NA]] : [NULL_FLAVORS[ASKU]]}\r\n                  value={identified ? NA : ASKU} \r\n                  nullFlavors={patient.identity?.nullFlavors} \r\n                  lincked={!docChecked}\r\n                  field_name=\"issueOrgCode\"                                     \r\n                />                    \r\n              </div>              \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-jc-center\">\r\n              <div className='paragraph p-mr-1'> 5. </div>\r\n              <div className='p-paragraph-field'>                    \r\n                <NullFlavorWrapper paraNum                    \r\n                    label={<label htmlFor=\"snils\">СНИЛС</label>}\r\n                    disabled={!identified} \r\n                    checked={person && person.nullFlavors.findIndex(item=>item.parent_attr === 'SNILS' && !item._destroy)===-1} setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                      if (!person) return\r\n                      if (nullFlavors) person.nullFlavors = nullFlavors\r\n                      if (!e.checked) person.SNILS = undefined                                       \r\n                    }}                    \r\n                    field={<InputMask id=\"snils\"  \r\n                      type=\"text\" mask=\"999-999-999 99\"\r\n                      value={person?.SNILS} \r\n                      onChange={(e)=>{\r\n                        if (!person) return\r\n                        person.SNILS = e.target.value}}/>            \r\n                    }\r\n                    options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK NA\".includes(item.code))} \r\n                    value={docChecked ? UNK : ASKU}\r\n                    field_name=\"SNILS\"\r\n                    nullFlavors={person?.nullFlavors}\r\n                />                               \r\n              </div>              \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-jc-center\">\r\n              <div className='paragraph p-mr-1'>6.* </div>\r\n              <div className='p-paragraph-field p-mr-3 p-mb-2'>\r\n                <NullFlavorWrapper  paraNum                   \r\n                    label={<label htmlFor=\"policyOMS\">Серия и номер полиса ОМС</label>}\r\n                    checked={identified && certificate.nullFlavors.findIndex(item=>item.parent_attr === 'policy_OMS' && !item._destroy)===-1} setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                      if (nullFlavors) certificate.nullFlavors = nullFlavors\r\n                      if (!e.checked) certificate.policyOMS = undefined                                           \r\n                    }}                     \r\n                    field={<InputText id=\"policyOMS\"  \r\n                      type=\"text\" \r\n                      value={certificate.policyOMS} \r\n                      onChange={(e)=>{certificate.policyOMS = e.target.value}}/>            \r\n                    }\r\n                    options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK NA\".includes(item.code))} \r\n                    value={docChecked ? UNK : ASKU}\r\n                    field_name=\"policy_OMS\"\r\n                    nullFlavors={certificate.nullFlavors}\r\n                />\r\n              </div>                   \r\n            </div>  \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%', paddingLeft:'0.5rem'}} >\r\n              <em>* В случае смерти ребенка до года заполняется в отношении матери</em>\r\n            </div>          \r\n          </div>          \r\n      </Card>  \r\n    </>)\r\n  }\r\n  export default observer(Section2) ","/*\r\n* ADDRESS SEARCH DIALOG COMPONENT\r\n* функционал ввода адреса посредством поиска в ФИАС\r\n* параметры:\r\n* ID - ID существующей записи адреса в СУБД \r\n* address - полное представление записи адреса в СУБД  \r\n*/\r\nimport { observer } from 'mobx-react-lite'\r\nimport { AutoComplete, AutoCompleteChangeParams } from 'primereact/autocomplete'\r\nimport { Button } from 'primereact/button'\r\nimport { Dialog } from 'primereact/dialog'\r\nimport { Dropdown } from 'primereact/dropdown'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { Toast } from 'primereact/toast'\r\nimport { FC, useContext, useEffect, useRef, useState } from 'react'\r\nimport { Context } from '../..'\r\nimport { IReference } from '../../models/IReference'\r\nimport { IFiasItem } from '../../models/responses/IFiasItem'\r\nimport { DEFAULT_ERROR_TOAST, HOME_REGION_CODE } from '../../utils/defaults'\r\n\r\ntype AddressDialogProps = {  \r\n  onCancel?: ()=>void \r\n}\r\n\r\nconst AddressDialog: FC<AddressDialogProps> = (props: AddressDialogProps) =>{ \r\n  const { addressStore } = useContext(Context)  \r\n  const [isLoading] = useState(addressStore.isLoading)  \r\n  const value = addressStore.address  \r\n  const streetAddressLine = value.streetAddressLine\r\n  const regions = addressStore.regionsOptions\r\n  const [searchStr, setSearchStr] = useState<string>('')   \r\n  useEffect(()=>setSearchStr(streetAddressLine)    \r\n  , [streetAddressLine])  \r\n  const [region, setRegion] = useState<IReference>()\r\n  useEffect(()=>setRegion(regions?.find((item)=>item.code === value.state?.code))      \r\n   , [regions, value.state])   \r\n  const [district, setDistrict] = useState<string>('')\r\n  useEffect(()=>setDistrict(value.district?.name || ''), [value.district?.name])\r\n  const [city, setCity] = useState<string>(value.city?.name || '')\r\n  useEffect(()=>setCity(value.city?.name || ''), [value.city?.name])\r\n  const [town, setTown] = useState<string>(value.town?.name || '')\r\n  useEffect(()=>setTown(value.town?.name || ''), [value.town?.name])\r\n  const [street, setStreet] = useState<string>(value.street?.name || '')\r\n  useEffect(()=>setStreet(value.street?.name || ''), [value.street?.name])\r\n  const [house, setHouse] = useState<string>(value.housenum || '')\r\n  useEffect(()=>setHouse(value.housenum || ''), [value.housenum])\r\n  const [addresses, setAddresses] = useState(addressStore.fiasOptions)   \r\n  const toast = useRef<Toast>(null)\r\n  const setAddress = (e:IFiasItem)=>{ \r\n    if (e === null) return      \r\n    if (e.parent) setAddress(e.parent)\r\n    if (e.postalCode && e.postalCode.length>0) value.postalCode = e.postalCode\r\n    value.aoGUID = e.AOGUID\r\n    value.houseGUID = e.HouseGUID \r\n    value.streetAddressLine = e.streetAddressLine\r\n    switch (e.level) {\r\n      case 'Region' : if (e.code) value.state = {code: e.code.slice(0,2), name: e.name}      \r\n        setRegion(regions?.find((item)=>item.code === value.state?.code))\r\n        break\r\n      case 'City': value.city = {code: e.AOGUID, name: e.name}\r\n        setCity(e.name) \r\n        break\r\n      case 'District': value.district = {code: e.AOGUID, name: e.name}\r\n        setDistrict(e.name)\r\n        break\r\n      case \"RailWayObject\":  \r\n      case 'Town': value.town = {code: e.AOGUID, name: e.name}\r\n        setTown(e.name)\r\n        break\r\n      case 'building': value.housenum = e.housenum; \r\n        value.buildnum = e.buildnum;\r\n        value.strucnum = e.strucnum;\r\n      break\r\n      case 'Street': \r\n        setStreet(e.name)\r\n        value.street = {code: e.AOGUID, name: e.name}\r\n      break\r\n    }         \r\n  }  \r\n  useEffect( () => {     \r\n    if (regions===undefined) {\r\n      addressStore.fetchRegionOptions()          \r\n    } else if (value.state===undefined || value.state===null)  {      \r\n      setRegion(regions?.find((region)=>region.code===HOME_REGION_CODE)) \r\n      value.state = region\r\n    } else if (value.state?.code) {\r\n      setRegion(regions?.find((region)=>region.code===value.state?.code))\r\n    }    \r\n  }, [regions, value, addressStore, region])  \r\n  \r\n  \r\n  const onHide = ()=>{ \r\n    addressStore.dialogVisible = false\r\n  }\r\n\r\n  const autocompleteOnChange = (e: AutoCompleteChangeParams, setter: (value: string)=>void) => {\r\n    if(e.value && e.value?.AOGUID) { \r\n      addressStore.clear()                                        \r\n      setAddress(e.value)\r\n    } else setter(e.value)\r\n  }\r\n\r\n  const getSuggestions = (parent:string, level: string, query:string)=>{\r\n   addressStore.getChildItems(parent, level, query)\r\n    .then(response=>setAddresses(response))\r\n    .catch(reason => {  \r\n       if (toast.current) toast.current.show({...DEFAULT_ERROR_TOAST, detail:`ошибка запроса к ФИАС: ${reason.message}`})\r\n       setAddresses([])\r\n    })    \r\n  }\r\n\r\n  const cantSaveChanges = ()=> {    \r\n    if ((!addressStore.manualMode && addressStore.isNotStrictly()) \r\n      || addressStore.address.oldOne.streetAddressLine === addressStore.streetAddressLine()) return true\r\n    else  return false  \r\n  }\r\n  const footer = (\r\n    <div>\r\n      <Button label=\"Применить\" icon=\"pi pi-check\" disabled={cantSaveChanges()}\r\n        onClick={()=>{          \r\n          if (addressStore.isNotStrictly() && addressStore.manualMode) {  \r\n            value.housenum = house          \r\n            if (value.houseGUID === null && !!house ) \r\n              addressStore.address.streetAddressLine = `${searchStr}${value.housenum.length>0 ? ', '+value.housenum : ''}`\r\n            else addressStore.address.streetAddressLine = searchStr\r\n          }  \r\n          if (addressStore.onAddrComplete) addressStore.onAddrComplete()          \r\n          onHide()\r\n        }} className=\"p-button-text p-button-success\"/>        \r\n      <Button label=\"Отмена\" icon=\"pi pi-times\" onClick={()=>{\r\n        if (props.onCancel) props.onCancel()\r\n        onHide()}} className=\"p-button-text\"/>\r\n    </div>\r\n)\r\n  return (\r\n  <Dialog footer={footer} header='Ввод адреса посредством ФИАС' visible={addressStore.dialogVisible} onHide={onHide} \r\n    breakpoints={{'960px': '75vw', '640px': '100vw'}} \r\n    style={{width: '50vw'}} modal>\r\n    <div className=\"p-grid p-fluid\">  \r\n    <div className='p-field p-col-12'>        \r\n      <div className='p-inputgroup'>\r\n        <span className='p-inputgroup-addon'>Строка поиска:</span> \r\n        <AutoComplete id='searchFIAS' disabled={isLoading}  \r\n            value={searchStr} \r\n            suggestions={addresses}\r\n            completeMethod={(e) =>{\r\n              const query = value.state?.name ? e.query.replace(value.state?.name+',', '') : e.query\r\n              if (query.trim().length>1) { \r\n                addressStore.searchBar(query.trim(), value.state?.code)\r\n                setAddresses(addressStore.fiasOptions)\r\n              }\r\n            }}\r\n          field='streetAddressLine'\r\n          onChange={(e) => {                                  \r\n            if(e.value && e.value?.AOGUID) { \r\n              addressStore.clear()                                        \r\n              setAddress(e.value)\r\n              setSearchStr(e.value.streetAddressLine)\r\n            } else setSearchStr(e.target.value)\r\n          }}\r\n          placeholder='Регион, Город(Район),(Нас.пункт), Улица, Дом'\r\n        />\r\n      </div> \r\n    </div>       \r\n    <div className=\"p-field p-col-12 p-md-6\">      \r\n      <label htmlFor=\"region\">субъект Российской Федерации</label>\r\n      <Dropdown id='region' value={region} filter filterBy='name'\r\n          onChange={(e)=>{                \r\n            value.state = e.value \r\n            addressStore.clear() \r\n            setRegion(e.value)\r\n          }}\r\n          options={regions}\r\n          optionLabel='name'                                           \r\n      />\r\n    </div> \r\n    <div className=\"p-field p-col-12 p-md-6\">\r\n      <label htmlFor=\"district\">район</label>\r\n      <AutoComplete id='district' dropdown              \r\n          value={district}  forceSelection                    \r\n          field='name' disabled={isLoading}\r\n          onChange={e=>autocompleteOnChange(e, setDistrict)}                       \r\n          suggestions={addresses}\r\n          completeMethod={e=>{\r\n            if (value.state?.code) \r\n            getSuggestions(value.state?.code, 'district', e.query)\r\n          }}                                                           \r\n        />\r\n      </div>\r\n      <div className=\"p-field p-col-12 p-md-6\">\r\n        <label htmlFor=\"city\">город</label>         \r\n        <AutoComplete id='city' dropdown              \r\n          value={city}  forceSelection                    \r\n          field='name' \r\n          onChange={e=>autocompleteOnChange(e,setCity)}                       \r\n          suggestions={addresses}\r\n          completeMethod={e=>{                \r\n            if (value.state?.code) getSuggestions(value.state?.code,'city', e.query)\r\n          }}               \r\n        />              \r\n      </div>\r\n      <div className=\"p-field p-col-12 p-md-6\">\r\n        <label htmlFor=\"town\">населенный пункт</label>\r\n        <AutoComplete id='town' dropdown value={town}  \r\n          forceSelection field='name' \r\n          onChange={e=>autocompleteOnChange(e, setTown)}                       \r\n          suggestions={addresses}\r\n          completeMethod={async (e) =>{\r\n            let parent = value.state?.code               \r\n            if (value.city?.code) parent = value.city?.code  \r\n            if (value.district?.code) parent = value.district?.code                \r\n            if (parent) getSuggestions(parent, 'town', e.query)                \r\n          }}                                                   \r\n        />        \r\n      </div>\r\n      <div className=\"p-field p-col-12 p-md-6\">\r\n        <label htmlFor=\"street\">улица</label>\r\n        <AutoComplete id='street' forceSelection              \r\n          value={street} field='name' dropdown                 \r\n          onChange={e=>autocompleteOnChange(e, setStreet)}                       \r\n          suggestions={addresses}\r\n          completeMethod={async (e) =>{\r\n            let parent = value.state?.code \r\n            if (value.district?.code) parent = value.district?.code              \r\n            if (value.city?.code) parent = value.city?.code                 \r\n            if (value.town?.code) parent = value.town?.code               \r\n            if (parent) getSuggestions(parent, 'street', e.query)                 \r\n          }}                                                   \r\n        />\r\n      </div>\r\n      <div className=\"p-field p-col-12 p-md-4\" style={{ maxWidth:'7rem'}}>\r\n        <label htmlFor=\"housenum\">дом</label>\r\n        <AutoComplete id='housenum' dropdown value={house} field='name'            \r\n          onChange={(e)=>{\r\n            if(e.value && e.value?.AOGUID) { \r\n              addressStore.clear()                                        \r\n              setAddress(e.value)\r\n              setHouse(e.value.name)\r\n            } else {\r\n              setHouse(e.value)              \r\n              value.housenum = e.value                               \r\n              value.houseGUID = null\r\n            }\r\n          }}                       \r\n          suggestions={addresses}\r\n          completeMethod={async (e) =>{\r\n            let parent = value.state?.code \r\n            if (value.district?.code) parent = value.district?.code              \r\n            if (value.city?.code) parent = value.city?.code                 \r\n            if (value.town?.code) parent = value.town?.code\r\n            if (value.street?.code) parent = value.street?.code               \r\n            if (parent) getSuggestions(parent, 'building', e.query)                \r\n          }}                                                   \r\n        />         \r\n      </div>\r\n      <div className=\"p-field p-col-12 p-md-4\" style={{ maxWidth:'7rem'}}> \r\n        <label htmlFor=\"strucnum\">стр.</label>\r\n        <InputText id='strucnum'              \r\n          value={value.strucnum || ''}                \r\n          onChange={(e)=>{\r\n            if (e.target.value.trim().length>0) value.strucnum=e.target.value\r\n          }}\r\n        />        \r\n      </div>\r\n      <div className=\"p-field p-col-12 p-md-4\" style={{ maxWidth:'7rem'}}>\r\n        <label htmlFor=\"buildnum\">корп.</label>\r\n        <InputText id='buildnum' value={value.buildnum || ''}                \r\n          onChange={(e)=>{\r\n            if (e.target.value.trim().length>0) value.buildnum=e.target.value                \r\n          }}                  \r\n        />        \r\n      </div>\r\n      <div className=\"p-field p-col-12 p-md-4\" style={{ maxWidth:'9rem'}}>\r\n        <label htmlFor=\"flat\">квартира(офис)</label>\r\n        <InputText id='flat' value={value.flat || ''}                  \r\n          onChange={(e)=>{\r\n            value.flat=e.target.value}\r\n          }                                               \r\n        />        \r\n      </div>\r\n      <div className=\"p-field p-col-12 p-md-4\">\r\n        <label htmlFor=\"postalCode\">почтовый код</label>\r\n        <InputText id='postalCode' disabled={value.aoGUID!==undefined}              \r\n          value={value.postalCode || \"\"}                  \r\n            onChange={(e)=>{\r\n              value.postalCode=e.target.value                \r\n            }}                                               \r\n        />        \r\n      </div>\r\n      <Toast ref={toast} />      \r\n    </div>  \r\n  </Dialog>)\r\n}\r\nexport default observer(AddressDialog)","import { AxiosResponse } from \"axios\"\r\nimport { $fias, FIAS_URL } from \"../http\"\r\nimport { IFiasResponse } from \"../models/responses/IFiasResponse\"\r\nimport { HOME_REGION_CODE } from \"../utils/defaults\"\r\n\r\nexport default class FiasService {\r\n  static async getRegions(): Promise<AxiosResponse<IFiasResponse>> {\r\n    return $fias.get(`${FIAS_URL}?level=region&limit=120`)\r\n  }\r\n  static async searchBar(query: string, regionID = HOME_REGION_CODE as string): Promise<AxiosResponse<IFiasResponse>> {\r\n    return $fias.get(`${FIAS_URL}?searchBar=1&withParent=1&regionID=${regionID}&total_found=1&query=${query}`)\r\n  }\r\n  static async getChildItems(\r\n    parent: string,\r\n    level: string,\r\n    query = \"\",\r\n    limit = \"120\"\r\n  ): Promise<AxiosResponse<IFiasResponse>> {\r\n    const parentOpt = parent.length === 2 ? `regionID=${parent}` : `parent=${parent}`\r\n    return $fias.get(`${FIAS_URL}?${parentOpt}&withParent=1&level=${level}&query=${query}&limit=${limit}`)\r\n  }\r\n}\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport FiasService from \"../../services/FiasService\"\r\nimport { INullFlavorR } from \"../INullFlavor\"\r\nimport { IReference } from \"../IReference\"\r\nimport { IAddressR } from \"../requests/IAddressR\"\r\nimport { IFiasItem } from \"../responses/IFiasItem\"\r\n\r\nexport default class Address {\r\n  private _oldOne: IAddressR\r\n  private _id?: string\r\n  private _streetAddressLine: string\r\n  private _state?: IReference\r\n  private _district?: IReference\r\n  private _city?: IReference\r\n  private _town?: IReference\r\n  private _street?: IReference\r\n  private _aoGUID?: string | null\r\n  private _houseGUID?: string | null\r\n  private _housenum?: string | null\r\n  private _buildnum?: string | null\r\n  private _strucnum?: string | null\r\n  private _flat?: string | null\r\n  private _postalCode?: string\r\n  private _nullFlavors: INullFlavorR[]\r\n  private _parent?: string\r\n  constructor(props: IAddressR) {\r\n    this._nullFlavors =\r\n      !!props.null_flavors_attributes && props.null_flavors_attributes.length > 0\r\n        ? [...props.null_flavors_attributes]\r\n        : []\r\n    if (props.id) this._id = props.id\r\n    this._oldOne = props\r\n    this._streetAddressLine = props.streetAddressLine\r\n    this._aoGUID = props.aoGUID\r\n    this._houseGUID = props.houseGUID\r\n    this._postalCode = props.postalCode\r\n    this._housenum = props.house_number\r\n    this._buildnum = props.building_number\r\n    this._strucnum = props.struct_number\r\n    this._flat = props.flat_number\r\n    this._parent = props.parent_guid\r\n    this.fetchAddressHierarchy()\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n\r\n  get oldOne(): IAddressR {\r\n    return this._oldOne\r\n  }\r\n\r\n  get id() {\r\n    return this._id\r\n  }\r\n  set id(id: string | undefined) {\r\n    this._id = id\r\n  }\r\n  get streetAddressLine() {\r\n    return this._streetAddressLine\r\n  }\r\n  set streetAddressLine(value: string) {\r\n    this._streetAddressLine = value\r\n  }\r\n  get state() {\r\n    return this._state\r\n  }\r\n  set state(value: IReference | undefined) {\r\n    this._state = value\r\n  }\r\n  get flat() {\r\n    return this._flat\r\n  }\r\n  set flat(value: string | undefined | null) {\r\n    this._flat = value\r\n  }\r\n\r\n  get postalCode() {\r\n    return this._postalCode\r\n  }\r\n  set postalCode(value: string | undefined) {\r\n    this._postalCode = value\r\n  }\r\n  get housenum() {\r\n    return this._housenum\r\n  }\r\n  set housenum(value: string | undefined | null) {\r\n    this._housenum = value\r\n  }\r\n  get buildnum() {\r\n    return this._buildnum\r\n  }\r\n  set buildnum(value: string | undefined | null) {\r\n    this._buildnum = value\r\n  }\r\n  get strucnum() {\r\n    return this._strucnum\r\n  }\r\n  set strucnum(value: string | undefined | null) {\r\n    this._strucnum = value\r\n  }\r\n\r\n  set street(value: IReference | undefined) {\r\n    this._street = value\r\n  }\r\n  get street() {\r\n    return this._street\r\n  }\r\n  set town(value: IReference | undefined) {\r\n    this._town = value\r\n  }\r\n  get town() {\r\n    return this._town\r\n  }\r\n  set aoGUID(value: string | undefined | null) {\r\n    this._aoGUID = value\r\n  }\r\n  get aoGUID() {\r\n    return this._aoGUID\r\n  }\r\n  set houseGUID(value: string | undefined | null) {\r\n    this._houseGUID = value\r\n  }\r\n  get houseGUID() {\r\n    return this._houseGUID\r\n  }\r\n  set district(value: IReference | undefined) {\r\n    this._district = value\r\n  }\r\n  get district() {\r\n    return this._district\r\n  }\r\n  set city(value: IReference | undefined) {\r\n    this._city = value\r\n  }\r\n  get city() {\r\n    return this._city\r\n  }\r\n\r\n  get parent() {\r\n    return this._parent\r\n  }\r\n  get nullFlavors() {\r\n    return this._nullFlavors\r\n  }\r\n\r\n  set nullFlavors(nullFlavors: INullFlavorR[]) {\r\n    this._nullFlavors = nullFlavors\r\n  }\r\n\r\n  // получение копии массива заполнителей из Observable.array\r\n  null_flavors_attributes(): INullFlavorR[] {\r\n    return this._nullFlavors.map((el) => {\r\n      return { ...el }\r\n    })\r\n  }\r\n\r\n  //рекурсивный парсинг структуры адресного объекта\r\n  parseFiasItem(fiasItem: IFiasItem) {\r\n    switch (fiasItem.level) {\r\n      case \"building\":\r\n        this._streetAddressLine = fiasItem.streetAddressLine\r\n        break\r\n      case \"Street\":\r\n        this._street = { code: fiasItem.AOGUID, name: `${fiasItem.name} ${fiasItem.shortname}` }\r\n        break\r\n      case \"Town\":\r\n      case \"RailWayObject\":\r\n        this._town = { code: fiasItem.AOGUID, name: `${fiasItem.name} ${fiasItem.shortname}` }\r\n        break\r\n      case \"City\":\r\n        this._city = { code: fiasItem.AOGUID, name: `${fiasItem.name} ${fiasItem.shortname}` }\r\n        break\r\n      case \"District\":\r\n        this._district = { code: fiasItem.AOGUID, name: `${fiasItem.name} ${fiasItem.shortname}` }\r\n        break\r\n      case \"Region\":\r\n        if (fiasItem.code) {\r\n          const code = fiasItem.code.slice(0, 2)\r\n          this._state = { code: code, name: `${fiasItem.name}` }\r\n        }\r\n        break\r\n      default:\r\n        console.log(\"invalid fiasItem.level\", fiasItem)\r\n        break\r\n    }\r\n    if (fiasItem.parent) this.parseFiasItem(fiasItem.parent)\r\n  }\r\n  // Получить всю ФИАС структуру адресного объекта по AOGUID\r\n  fetchAddressHierarchy() {\r\n    if (!this._aoGUID) return\r\n    FiasService.getChildItems(this._aoGUID, this._houseGUID ? \"building\" : \"\", \"\", \"1\")\r\n      .then((response) => {\r\n        if (response.data.data)\r\n          response.data.data.forEach((item) => {\r\n            this.parseFiasItem(item)\r\n          })\r\n      })\r\n      .catch((reason) => console.log(reason))\r\n  }\r\n}\r\n","import { HOME_REGION_CODE } from \"../../utils/defaults\"\r\nimport { IDestroyble } from \"../IDestroyble\"\r\nimport { INullFlavorableR } from \"./INullFlavorableR\"\r\n\r\nexport interface IAddressR extends INullFlavorableR, IDestroyble {\r\n  id?: string\r\n  state: string\r\n  streetAddressLine: string\r\n  aoGUID?: string | null\r\n  houseGUID?: string | null\r\n  postalCode?: string\r\n  code?: string\r\n  parent_guid?: string\r\n  actual?: boolean\r\n  house_number?: string | null\r\n  struct_number?: string | null\r\n  building_number?: string | null\r\n  flat_number?: string | null\r\n}\r\nexport const DEFAULT_ADDRESS = { state: HOME_REGION_CODE, streetAddressLine: \"\" } as IAddressR\r\n","import { observer } from 'mobx-react-lite'\r\nimport { Button } from 'primereact/button'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { classNames } from 'primereact/utils'\r\nimport { FC, useContext, useEffect } from 'react'\r\nimport { Context } from '../..'\r\nimport Address from '../../models/FormsData/Address'\r\nimport { DEFAULT_ADDRESS, IAddressR } from '../../models/requests/IAddressR'\r\n\r\n\r\ntype InputAddressProps = { \r\n  submitted: boolean // is it form submitted already\r\n  value: IAddressR // object, containing address\r\n  onClear: (value: IAddressR)=>void // setter to state value in the form>\r\n  onChange: ()=>void // setter to state new value from dialog to form \r\n  label?: string\r\n  strictly?: boolean // if address need to be all from FIAS\r\n  className?: string // styles for main div  \r\n  id?: string \r\n}\r\n\r\nconst InputAddress: FC<InputAddressProps> = (props: InputAddressProps) =>{ \r\n  const submitted = props.submitted\r\n  const value = props.value\r\n  const {addressStore} = useContext(Context)\r\n\r\n  const invalid = props.strictly ? !value || !value.houseGUID\r\n     : !value || (value.streetAddressLine && value.streetAddressLine.split(',').length < 3)\r\n  \r\n  const bt_id = `bt_addr_${props.id}`   \r\n  \r\n  //useEffect(()=>{addressStore.address = new Address(props.value || DEFAULT_ADDRESS)\r\n  //  console.log('props.value', props.value.streetAddressLine)\r\n  //},[addressStore, props.value])\r\n\r\n   useEffect(()=>{\r\n    if (addressStore.manualMode!== !props.strictly) {\r\n      addressStore.manualMode = !props.strictly \r\n    }\r\n  },[addressStore, props.strictly])\r\n\r\n  return (<div className={classNames({'p-field': !!props.label}, props.className)} >\r\n    {props.label && <label htmlFor={bt_id}>{props.label}</label>}\r\n    <div className='p-inputgroup'>\r\n      <Button id='bt_addr_dialog' label=\"Ввод\" onClick={()=>{\r\n        addressStore.address = new Address(props.value || DEFAULT_ADDRESS)\r\n        addressStore.dialogVisible = true\r\n        addressStore.onAddrComplete = props.onChange}} style={{width:'5rem'}}/>\r\n      <InputText \r\n        title={value?.streetAddressLine}\r\n        value={value?.streetAddressLine}\r\n        placeholder={'введите адрес вида: Амурская область, Н-ский район, село Тосево, улица Товарная, дом 13, кв. 9' } className={classNames({ 'p-invalid': submitted && invalid})} />\r\n      <Button icon=\"pi pi-times\" className=\"p-button-danger\" onClick={()=>{\r\n        if (!value) return        \r\n        let _addr = DEFAULT_ADDRESS\r\n        if (value.id) _addr.id = value.id\r\n        if (value.parent_guid) _addr.parent_guid = value.parent_guid\r\n        if (value.null_flavors_attributes) _addr.null_flavors_attributes = value.null_flavors_attributes       \r\n        props.onClear(_addr)\r\n        addressStore.address = new Address(_addr)}}\r\n      />\r\n    </div>\r\n    {submitted && invalid && <small className=\"p-error\">Адресс введен не полностью или отсутствует</small>}\r\n  </div>)  \r\n}\r\nexport default observer(InputAddress)","import { RadioButton } from \"primereact/radiobutton\"\r\nimport { useState } from \"react\"\r\nimport { URBAN_AREA_TYPE, VILAGE_AREA_TYPE } from \"../../utils/defaults\"\r\n\r\n\r\ntype AreaTypeProps = {\r\n  value: number | undefined\r\n  onChange: ((value: number | undefined)=>void)\r\n}\r\n\r\nexport const AreaType = (props: AreaTypeProps) =>{ \r\n  const [value, setValue] = useState<number | undefined>(props.value)\r\n  return (  \r\n  <div className=\"p-formgroup-inline\" key={`rbt_${value}`} style={{marginLeft: '-0.76rem'}}>              \r\n      <div className='p-field-radiobutton'>                  \r\n        <RadioButton name='urban' checked={value === URBAN_AREA_TYPE}\r\n          onChange={(e)=>{\r\n            if (e.checked) { \r\n              setValue(URBAN_AREA_TYPE) \r\n              props.onChange(URBAN_AREA_TYPE)\r\n            } else {\r\n              setValue(undefined)\r\n              props.onChange(undefined) \r\n            }\r\n          }}\r\n        />\r\n        <label htmlFor='undef'>Городская</label>\r\n      </div>\r\n      <div className='p-field-radiobutton'>                  \r\n        <RadioButton name='vilage' checked={value === VILAGE_AREA_TYPE}\r\n          onChange={(e)=>{\r\n            if (e.checked) { \r\n              setValue(VILAGE_AREA_TYPE) \r\n              props.onChange(VILAGE_AREA_TYPE)\r\n            } else {\r\n              setValue(undefined)\r\n              props.onChange(undefined) \r\n            }\r\n          }}/>\r\n        <label htmlFor='vilage'>Сельская</label>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { observer } from \"mobx-react-lite\"\r\nimport { Button } from \"primereact/button\"\r\nimport { Card } from \"primereact/card\"\r\nimport { CheckboxChangeParams } from \"primereact/checkbox\"\r\nimport { FC, useContext, useState} from \"react\"\r\nimport { Context } from \"../..\"\r\nimport { IReference } from \"../../models/IReference\"\r\nimport { ASKU, NULL_FLAVORS, UNK } from \"../../utils/defaults\"\r\nimport AddressDialog from \"../dialogs/AddressDialog\"\r\nimport InputAddress from \"../inputs/InputAddress\"\r\nimport { AreaType } from \"../inputs/AreaType\"\r\nimport NullFlavorWrapper from \"../NullFlavorWrapper\"\r\nimport { INullFlavorR } from \"../../models/INullFlavor\"\r\nimport { DEFAULT_ADDRESS, IAddressR } from \"../../models/requests/IAddressR\"\r\n\r\n\r\nconst Section3: FC = () => {\r\n  const { addressStore, certificateStore,suggestionsStore } = useContext(Context)\r\n  const certificate = certificateStore.cert  \r\n  const patient = certificate.patient\r\n  const [addressLife, setAddressLife] = useState(patient.person?.address) \r\n  const [addressDeath, setAddressDeath] = useState(certificate.deathAddr) \r\n  const identified = suggestionsStore.identified\r\n  const checkedLifeArea = !!patient.person && patient.person.nullFlavors.findIndex((item)=>item.parent_attr==='address' && !item._destroy)===-1\r\n  const checkedDeathArea = !!addressDeath || certificate.nullFlavors.findIndex((item)=>item.parent_attr==='death_addr')===-1  \r\n  const fromRelatives = suggestionsStore.fromRelatives\r\n  const submitted = certificateStore.submitted\r\n  \r\n  const header = () => {\r\n    return <><span>Адреса мест жительства и смерти</span><Button type=\"button\" onClick={onAddressCopy} label=\"СОВПАДАЮТ\" disabled={!checkedLifeArea} className=\"p-button-raised p-button-success\"  /></>\r\n  }\r\n\r\n  //copy info from life address to dead address objects\r\n  const onAddressCopy = () => {\r\n    if (!patient.person) return\r\n    certificate.deathAreaType = certificate.lifeAreaType    \r\n     \r\n    if (!patient.person.address) certificate.deathAddr = undefined      \r\n    else {\r\n      certificate.deathAddr = {\r\n        ...patient.person.address,\r\n        null_flavors_attributes:\r\n          patient.person.address?.null_flavors_attributes?.map((item) => {\r\n            return { parent_attr: item.parent_attr, code: item.code } as INullFlavorR\r\n          }) || [],\r\n        id: undefined,\r\n        parent_guid: undefined,\r\n      } as IAddressR              \r\n    }    \r\n    setAddressDeath(certificate.deathAddr)\r\n  }\r\n  return (<>    \r\n    <Card className=\"c-section p-mr-2 p-mb-2\" header={header}>        \r\n      <div className=\"p-fluid p-formgrid p-grid\">\r\n        <div className=\"p-field p-d-flex p-jc-start\" style={{width: '98%'}}>          \r\n          <div className='paragraph p-mr-1'>8.</div>          \r\n          <div className='p-paragraph-field' style={{width: '98%'}}>\r\n            <NullFlavorWrapper paraNum                     \r\n              label={<label htmlFor=\"addr\">Место постоянного жительства(регистрации)</label>}\r\n              checked={identified && checkedLifeArea}  \r\n              setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                if (!patient.person) return\r\n                if (nullFlavors) patient.person.nullFlavors = nullFlavors\r\n                if (!e.checked) patient.person.address = undefined                \r\n              }}               \r\n              field={<InputAddress  submitted={submitted} \r\n                      id='person_addr'            \r\n                      value={addressLife || DEFAULT_ADDRESS} \r\n                      onClear={(value: IAddressR)=>{  \r\n                        if (!patient.person) return                                             \r\n                        patient.person.address = value\r\n                        setAddressLife(patient.person.address)\r\n                      }}\r\n                      onChange={()=>{\r\n                        if (!patient.person) return\r\n                        patient.person.address = addressStore.addressProps()                        \r\n                        setAddressLife(patient.person.address)\r\n                      }}  \r\n                    />}\r\n              options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n              value={fromRelatives ? ASKU : UNK}\r\n              field_name=\"address\"\r\n              nullFlavors={patient.person?.nullFlavors}\r\n            />                  \r\n          </div>\r\n        </div>\r\n        <div className=\"p-d-flex p-jc-center\">          \r\n          <div className='paragraph p-mr-1'>9.</div>          \r\n          <div className='p-paragraph-field'>\r\n            <NullFlavorWrapper                     \r\n              label={<label htmlFor=\"urban\">Местность</label>}\r\n              checked={identified && !!certificate.lifeAreaType}  setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                if (nullFlavors) certificate.nullFlavors = nullFlavors\r\n                if (!e.checked) certificate.lifeAreaType = undefined                \r\n              }} \r\n              onChange={(e:IReference,  nullFlavors: INullFlavorR[] | undefined)=>{if (nullFlavors) certificate.nullFlavors = nullFlavors}}\r\n              field={<AreaType value={certificate.lifeAreaType} onChange={(value: number | undefined)=>{\r\n                certificate.lifeAreaType = value                \r\n              }}/>}\r\n              options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n              value={fromRelatives ? ASKU : UNK}\r\n              field_name=\"life_area_type\"\r\n              nullFlavors={certificate.nullFlavors}\r\n            />                  \r\n          </div>\r\n        </div>\r\n        <div className=\"p-field p-d-flex p-jc-start\" style={{width: '98%'}}>          \r\n          <div className='paragraph p-mr-1'>10.</div>          \r\n          <div className='p-paragraph-field' style={{width: '98%'}}>\r\n            <NullFlavorWrapper paraNum                     \r\n              label={<label htmlFor=\"death_addr\">Адрес места смерти</label>}\r\n              checked={checkedDeathArea}  \r\n              setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                if (nullFlavors) certificate.nullFlavors = nullFlavors\r\n                if (!e.checked) certificate.deathAddr = undefined                \r\n              }}               \r\n              field={<InputAddress  submitted={submitted} \r\n                      id='death_addr'            \r\n                      value={addressDeath || DEFAULT_ADDRESS} \r\n                      onClear={(value: IAddressR)=>{                                               \r\n                        certificate.deathAddr = value \r\n                        setAddressDeath(certificate.deathAddr)                       \r\n                      }}\r\n                      onChange={()=>{\r\n                        certificate.deathAddr = addressStore.addressProps()  \r\n                        setAddressDeath(certificate.deathAddr)                      \r\n                      }}  \r\n                    />}\r\n              options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n              value={fromRelatives ? ASKU : UNK}\r\n              field_name=\"death_addr\"\r\n              nullFlavors={certificate.nullFlavors}\r\n            />                  \r\n          </div>\r\n        </div>\r\n        <div className=\"p-d-flex p-jc-center\">          \r\n          <div className='paragraph p-mr-1'>11.</div>          \r\n          <div className='p-paragraph-field' key={`dArea_${certificate.deathAreaType}`}>\r\n            <NullFlavorWrapper                     \r\n              label={<label htmlFor=\"urban\">Местность</label>}\r\n              checked={!!certificate.deathAreaType && certificate.nullFlavors.findIndex(item=>item.parent_attr==='death_area_type' && !item._destroy\r\n              )===-1}  \r\n              setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                if (nullFlavors) certificate.nullFlavors = nullFlavors\r\n                if (!e.checked) certificate.deathAreaType = undefined\r\n              }} \r\n              onChange={(e:IReference,  nullFlavors: INullFlavorR[] | undefined)=>{if (nullFlavors) certificate.nullFlavors = nullFlavors}}\r\n              field={<AreaType value={certificate.deathAreaType} onChange={(value: number | undefined)=>{\r\n                certificate.deathAreaType = value\r\n              }}/>}\r\n              options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n              value={fromRelatives ? ASKU : UNK}\r\n              field_name=\"death_area_type\"\r\n              nullFlavors={certificate.nullFlavors}\r\n            />                  \r\n          </div>\r\n        </div>        \r\n      </div>\r\n    </Card>\r\n    <AddressDialog /> \r\n  </>)\r\n}\r\n export default observer(Section3)  ","//Типы мест наступления смерти\r\n//OID: 1.2.643.5.1.13.13.99.2.20 Версия: 3.1\r\nexport const DEAD_PLACE_TYPES = [\r\n  { code: 1, name: \"на месте происшествия\" },\r\n  { code: 2, name: \"в машине скорой помощи\" },\r\n  { code: 3, name: \"в стационаре\" },\r\n  { code: 4, name: \"дома\" },\r\n  { code: 5, name: \"в другом месте\" },\r\n  { code: 7, name: \"в образовательной организации\" },\r\n]\r\n","//\"Семейное положение\"\r\n//OID: 1.2.643.5.1.13.13.99.2.15  Версия: 3.1\r\nexport const MARITAL_STATUSES = [\r\n  { code: 4, name: \"состоял(а) в зарегистрированном браке\" },\r\n  { code: 5, name: \" не состоял(а) в зарегистрированном браке\" },\r\n  { code: 3, name: \" неизвестно\" },\r\n]\r\n","//\"Классификатор образования для медицинских свидетельств\"\r\n// OID: 1.2.643.5.1.13.13.99.2.16 Версия: 2.1\r\nexport const EDUCATION_LEVELS = [\r\n  { code: 1, name: \"профессиональное: высшее\" },\r\n  { code: 2, name: \"профессиональное: неполное высшее\" },\r\n  { code: 3, name: \"профессиональное: среднее профессиональное\" },\r\n  { code: 5, name: \"общее: среднее\" },\r\n  { code: 6, name: \"общее: основное\" },\r\n  { code: 7, name: \"общее: начальное\" },\r\n  { code: 10, name: \"общее: дошкольное\" },\r\n  { code: 11, name: \"не имеет начального образования\" },\r\n  { code: 9, name: \"неизвестно\" },\r\n]\r\n","//Социальные группы населения в учетной медицинской документации\r\n//OID: 1.2.643.5.1.13.13.11.1038 Версия: 5.1\r\nexport const SOCIAL_STATUSES = [\r\n  { code: 5, name: \"Работал(а)\" },\r\n  { code: 6, name: \"Проходил(а) военную службу или приравненную к ней службу\" },\r\n  { code: 4, name: \"Студент(ка)\" },\r\n  { code: 7, name: \"Пенсионер(ка)\" },\r\n  { code: 8, name: \"Не работал(а)\" },\r\n  { code: 10, name: \"Прочие\" },\r\n  { code: 22, name: \"неизвестно\" },\r\n]\r\n","// \"Доношенность новорожденного\"\r\n// OID: 1.2.643.5.1.13.13.99.2.18 Версия: 1.1\r\nexport const TERMS_PREGNANCY = [\r\n  { code: 1, name: \" доношенный (37-41 недели)\" },\r\n  { code: 2, name: \" недоношенный (менее 37 недель)\" },\r\n  { code: 3, name: \" переношенный (42 недели и более)\" },\r\n]\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { NULL_FLAVOR_IDX } from \"../../utils/defaults\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { INullFlavorR } from \"../INullFlavor\"\r\nimport { IPersonName } from \"../IPersonName\"\r\nimport { IRelatedSubject } from \"../IRelatedSubject\"\r\nimport { IAddressR } from \"../requests/IAddressR\"\r\nimport { IRelatedSubjectR } from \"../requests/IRelatedSubjectR\"\r\n\r\nconst MATHER = 1\r\n\r\nexport default class RelatedSubject implements ISerializable {\r\n  private _id?: number\r\n  private _guid: string\r\n  private _familyConnection: number\r\n  private _addr?: IAddressR | undefined\r\n  private _fio?: IPersonName | undefined\r\n  private _birthTime?: Date | undefined\r\n  private _nullFlavors: INullFlavorR[]\r\n\r\n  constructor(props: IRelatedSubject) {\r\n    this._guid = props.guid || uuidv4()\r\n    this._nullFlavors =\r\n      props.null_flavors?.map((item) => {\r\n        return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n      }) || []\r\n    this._id = props.id\r\n    this._familyConnection = props.family_connection || MATHER\r\n    this._fio = props.person_name\r\n    if (props.birthTime) this._birthTime = new Date(props.birthTime)\r\n    this._addr = {\r\n      ...props.addr,\r\n      null_flavors_attributes:\r\n        props.addr?.null_flavors?.map((item) => {\r\n          return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n        }) || [],\r\n    } as IAddressR\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n\r\n  get addr(): IAddressR | undefined {\r\n    return this._addr\r\n  }\r\n  set addr(value: IAddressR | undefined) {\r\n    this._addr = value\r\n  }\r\n  get fio(): IPersonName | undefined {\r\n    return this._fio\r\n  }\r\n  set fio(value: IPersonName | undefined) {\r\n    this._fio = value\r\n  }\r\n\r\n  get birthTime(): Date | undefined {\r\n    return this._birthTime\r\n  }\r\n  set birthTime(value: Date | undefined) {\r\n    this._birthTime = value\r\n  }\r\n  get nullFlavors(): INullFlavorR[] {\r\n    return this._nullFlavors\r\n  }\r\n  set nullFlavors(value: INullFlavorR[]) {\r\n    this._nullFlavors = value\r\n  }\r\n\r\n  // получение копии массива заполнителей из Observable.array\r\n  null_flavors_attributes() {\r\n    return this._nullFlavors.map((el) => {\r\n      return { ...el }\r\n    })\r\n  }\r\n\r\n  getAttributes(): IRelatedSubjectR {\r\n    let _rs = { family_connection: this._familyConnection, guid: this._guid } as IRelatedSubjectR\r\n    if (this._nullFlavors.length > 0) _rs.null_flavors_attributes = this.null_flavors_attributes()\r\n    if (this._addr) _rs.addr_attributes = { ...this._addr }\r\n    if (this._birthTime) _rs.birthTime = this._birthTime.toLocaleDateString()\r\n    if (this._fio) _rs.person_name_attributes = { ...this._fio }\r\n    if (this._id) _rs.id = this._id\r\n    return _rs\r\n  }\r\n}\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { NULL_FLAVOR_IDX } from \"../../utils/defaults\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { IChildInfo } from \"../IChildInfo\"\r\nimport { INullFlavorR } from \"../INullFlavor\"\r\nimport { IAddressR } from \"../requests/IAddressR\"\r\nimport { IChildInfoR } from \"../requests/IChildInfoR\"\r\nimport RelatedSubject from \"./RelatedSubject\"\r\n\r\nexport class ChildInfo implements ISerializable {\r\n  private _id?: number\r\n  private _guid: string\r\n  private _termPregnancy?: number | undefined\r\n  private _weight?: number | undefined\r\n  private _whichAccount?: number | undefined\r\n  private _relatedSubject?: RelatedSubject | undefined\r\n  private _address?: IAddressR | undefined\r\n  private _nullFlavors: INullFlavorR[]\r\n\r\n  constructor(props: IChildInfo | undefined = undefined) {\r\n    if (props) {\r\n      this._id = props.id\r\n      this._guid = props.guid || uuidv4()\r\n      this._termPregnancy = props.term_pregnancy\r\n      this._weight = props.weight\r\n      this._whichAccount = props.which_account\r\n      this._address = {\r\n        ...props.address,\r\n        null_flavors_attributes:\r\n          props.address?.null_flavors?.map((item) => {\r\n            return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n          }) || [],\r\n      } as IAddressR\r\n      if (props.null_flavors && props.null_flavors.length > 0)\r\n        this._nullFlavors = props.null_flavors.map((item) => {\r\n          return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n        })\r\n      else this._nullFlavors = []\r\n      if (props.related_subject) this._relatedSubject = new RelatedSubject(props.related_subject)\r\n    } else {\r\n      this._nullFlavors = []\r\n      this._guid = uuidv4()\r\n    }\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n\r\n  get termPregnancy(): number | undefined {\r\n    return this._termPregnancy\r\n  }\r\n  set termPregnancy(value: number | undefined) {\r\n    this._termPregnancy = value\r\n  }\r\n  get weight(): number | undefined {\r\n    return this._weight\r\n  }\r\n  set weight(value: number | undefined) {\r\n    this._weight = value\r\n  }\r\n  get whichAccount(): number | undefined {\r\n    return this._whichAccount\r\n  }\r\n  set whichAccount(value: number | undefined) {\r\n    this._whichAccount = value\r\n  }\r\n  get relatedSubject(): RelatedSubject | undefined {\r\n    return this._relatedSubject\r\n  }\r\n  set relatedSubject(value: RelatedSubject | undefined) {\r\n    this._relatedSubject = value\r\n  }\r\n  get nullFlavors(): INullFlavorR[] {\r\n    return this._nullFlavors\r\n  }\r\n  set nullFlavors(value: INullFlavorR[]) {\r\n    this._nullFlavors = value\r\n  }\r\n  get address(): IAddressR | undefined {\r\n    return this._address\r\n  }\r\n  set address(value: IAddressR | undefined) {\r\n    this._address = value\r\n  }\r\n  // получение копии массива заполнителей из Observable.array\r\n  null_flavors_attributes() {\r\n    return this._nullFlavors.map((el) => {\r\n      return { ...el }\r\n    })\r\n  }\r\n\r\n  getAttributes(): IChildInfoR {\r\n    let _chInfo = { guid: this._guid } as IChildInfoR\r\n    if (this._nullFlavors.length > 0) _chInfo.null_flavors_attributes = this.null_flavors_attributes()\r\n    if (this._relatedSubject) _chInfo.related_subject_attributes = this._relatedSubject.getAttributes()\r\n    if (this._termPregnancy) _chInfo.term_pregnancy = this._termPregnancy\r\n    if (this._weight) _chInfo.weight = this._weight\r\n    if (this._whichAccount) _chInfo.which_account = this._whichAccount\r\n    if (this._id) _chInfo.id = this._id\r\n    if (this._address && !!this._address.state && !!this._address.streetAddressLine)\r\n      _chInfo.address_attributes = { ...this._address }\r\n    return _chInfo\r\n  }\r\n}\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport { InputNumber } from 'primereact/inputnumber'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport NullFlavorWrapper from './NullFlavorWrapper'\r\nimport { ChildInfo } from '../models/FormsData/ChildInfo'\r\nimport RelatedSubject from '../models/FormsData/RelatedSubject'\r\nimport { IChildInfo } from '../models/IChildInfo'\r\nimport {  checkFieldNullFlavor, INullFlavorR } from '../models/INullFlavor'\r\nimport { IPersonName } from '../models/IPersonName'\r\nimport { IReference } from '../models/IReference'\r\nimport { IRelatedSubject } from '../models/IRelatedSubject'\r\nimport { CheckboxChangeParams } from 'primereact/checkbox'\r\nimport { Calendar } from 'primereact/calendar'\r\nimport { Context } from '..'\r\nimport AddressFC2 from './inputs/InputAddress'\r\nimport { NA, NULL_FLAVORS, UNK } from '../utils/defaults'\r\nimport AddressDialog from './dialogs/AddressDialog'\r\nimport { DEFAULT_ADDRESS, IAddressR } from '../models/requests/IAddressR'\r\n\r\ntype MotherInfoProps = {\r\n  childInfo?: ChildInfo\r\n  onChange: ((childInfo: ChildInfo) => void)  \r\n}\r\n\r\nexport const MotherInfo = (props: MotherInfoProps) => {\r\n  const { addressStore, certificateStore} = useContext(Context)  \r\n  const [fio, setFio] = useState('')\r\n  const submitted = certificateStore.submitted\r\n  const [childInfo] = useState(props.childInfo || new ChildInfo({} as IChildInfo))\r\n  const [relatedSubject] = useState(childInfo.relatedSubject || new RelatedSubject({} as IRelatedSubject))\r\n  const [address, setAddress] = useState(relatedSubject.addr)\r\n  useEffect(()=>{    \r\n      setFio(relatedSubject.fio ? `${relatedSubject.fio.family} ${relatedSubject.fio.given_1} ${relatedSubject.fio?.given_2}` : '')         \r\n      if (childInfo.relatedSubject!==relatedSubject) childInfo.relatedSubject = relatedSubject         \r\n      if (!props.childInfo) props.onChange(childInfo)   \r\n    },[props, childInfo, relatedSubject])         \r\n    const options = NULL_FLAVORS.filter((item:IReference)=>\"UNK\".includes(item.code))       \r\n    const checked = relatedSubject.nullFlavors.findIndex((item)=>item.parent_attr==='addr')===-1\r\n        \r\n    \r\n    return ( <>\r\n      <div className=\"p-field p-grid\" style={{width:'90%'}}>\r\n        <label htmlFor=\"weight\" \r\n          className=\"p-col-fixed\" style={{width:'85%'}} >масса тела ребенка при рождении (грамм)</label>\r\n        <div className=\"p-col\">\r\n          <InputNumber  id=\"weight\" value={childInfo.weight} max={9999} min={10} \r\n            onChange={(e)=>{              \r\n             if (!!e.value) childInfo.weight=e.value \r\n             else childInfo.weight= undefined             \r\n            }}\r\n          type=\"text\"/>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-field p-grid\" style={{width:'90%'}}>\r\n        <label htmlFor=\"which_account\" className=\"p-col-fixed\" style={{width:'85%'}} >каким по счету был ребенок у матери (считая умерших и не считая мертворожденных)</label>\r\n        <div className=\"p-col\">\r\n          <InputNumber  id=\"which_account\" max={99} min={1}\r\n            onChange={(e)=>{\r\n             if (!!e.value) childInfo.whichAccount=e.value    \r\n             else  childInfo.whichAccount=undefined         \r\n            }} \r\n            value={childInfo.whichAccount} type=\"text\"/>\r\n        </div>\r\n      </div> \r\n      <div className='p-paragraph-field p-mr-2 p-mb-2'>\r\n        <NullFlavorWrapper                           \r\n          setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>\r\n            { if (e.checked)  { \r\n              } else { \r\n                relatedSubject.fio = undefined                \r\n                props.onChange(childInfo) \r\n              }\r\n              if (nullFlavors) relatedSubject.nullFlavors = nullFlavors              \r\n            }}                 \r\n          label={<label htmlFor=\"fio\">Фамилия матери, имя, отчество(при наличии)</label>}\r\n          field={<InputText  id=\"fio\" type=\"text\" \r\n                  value={fio}                    \r\n                  onChange={(e)=>{     \r\n                    setFio(e.target.value)               \r\n                    const values = e.target.value.trim().split(\" \")\r\n                    if (values && values.length > 1) {\r\n                      const temp = {family: values[0], given_1: values[1]} as IPersonName\r\n                      if (values[2]) temp.given_2 = values[2]\r\n                      else checkFieldNullFlavor('given_2',temp.given_2,relatedSubject.nullFlavors, NA)\r\n                      relatedSubject.fio = temp\r\n                      props.onChange(childInfo)                     \r\n                    }                                        \r\n                  }}/>}                  \r\n          options={options} \r\n          value={UNK} \r\n          nullFlavors={relatedSubject.nullFlavors}  \r\n          field_name=\"person_name\"                                 \r\n        />             \r\n      </div>\r\n      <div className='p-paragraph-field p-mr-2 p-mb-2'>                     \r\n        <NullFlavorWrapper                                       \r\n          label={<label htmlFor=\"dateBirth\">Дата рождения матери</label>}\r\n          setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{                      \r\n                      if (!e.checked) {                        \r\n                        relatedSubject.birthTime = undefined                        \r\n                      } \r\n                      if (nullFlavors) relatedSubject.nullFlavors = nullFlavors\r\n                    }} \r\n          onChange={(e:IReference,  nullFlavors: INullFlavorR[] | undefined)=>{\r\n            if (nullFlavors) relatedSubject.nullFlavors = nullFlavors}}\r\n          field={<Calendar id=\"dateBirth\" showIcon dateFormat='dd.mm.yy'\r\n                  locale='ru' mask='99.99.9999'                                          \r\n                  value={relatedSubject.birthTime} \r\n                  onChange={(e)=>{\r\n                    relatedSubject.birthTime = e.target.value as Date | undefined\r\n                  }}                         \r\n                />}\r\n          options={options} \r\n          value={UNK} \r\n          nullFlavors={relatedSubject.nullFlavors}  \r\n          field_name=\"birthTime\"\r\n        />                               \r\n      </div> \r\n      <div className=\"p-field\" style={{width: '98%'}}>\r\n        <NullFlavorWrapper                      \r\n              label={<label htmlFor=\"mother_addr\">Место жительства матери</label>}\r\n              checked={checked}  \r\n              setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                if (nullFlavors) relatedSubject.nullFlavors = nullFlavors\r\n                if (!e.checked) relatedSubject.addr = undefined                \r\n              }}               \r\n              field={<AddressFC2  submitted={submitted} \r\n                      id='mother_addr'            \r\n                      value={address || DEFAULT_ADDRESS} \r\n                      onClear={(value: IAddressR)=>{                                               \r\n                        relatedSubject.addr = value\r\n                        setAddress(relatedSubject.addr)\r\n                      }}\r\n                      onChange={()=>{\r\n                        relatedSubject.addr = addressStore.addressProps()\r\n                        setAddress(relatedSubject.addr)\r\n                      }}  \r\n                    />}\r\n              options={NULL_FLAVORS.filter((item:IReference)=>\"ASKU UNK\".includes(item.code))} \r\n              value={UNK}\r\n              field_name=\"addr\"\r\n              nullFlavors={relatedSubject.nullFlavors}\r\n            />\r\n      </div>  \r\n      <AddressDialog />        \r\n    </>)\r\n}","import { observer } from 'mobx-react-lite'\r\nimport { FC, useContext, useEffect, useState} from 'react'\r\nimport { Context } from '../..'\r\nimport { Card } from 'primereact/card'\r\nimport { CheckboxChangeParams } from 'primereact/checkbox'\r\nimport '../../styles/components/RadioButton.css'\r\nimport '../../styles/components/Calendar.css'\r\nimport '../../styles/pages/CertificatePage.css'\r\nimport NullFlavorWrapper from '../NullFlavorWrapper'\r\nimport { NA, NULL_FLAVORS } from '../../utils/defaults'\r\nimport { IReference } from '../../models/IReference'\r\n\r\nimport { Dropdown } from 'primereact/dropdown'\r\n\r\nimport { DEAD_PLACE_TYPES } from '../../NSI/1.2.643.5.1.13.13.99.2.20'\r\nimport { MARITAL_STATUSES } from '../../NSI/1.2.643.5.1.13.13.99.2.15'\r\nimport { EDUCATION_LEVELS } from '../../NSI/1.2.643.5.1.13.13.99.2.16'\r\nimport { SOCIAL_STATUSES } from '../../NSI/1.2.643.5.1.13.13.11.1038'\r\nimport { checkFieldNullFlavor, INullFlavorR } from '../../models/INullFlavor'\r\nimport { TERMS_PREGNANCY } from '../../NSI/1.2.643.5.1.13.13.99.2.18'\r\nimport { ChildInfo } from '../../models/FormsData/ChildInfo'\r\nimport { MotherInfo } from '../MotherInfo'\r\nimport InputAddress from '../inputs/InputAddress'\r\nimport { DEFAULT_ADDRESS, IAddressR } from '../../models/requests/IAddressR'\r\n\r\n const Section5: FC = () => {\r\n  const { certificateStore, addressStore } = useContext(Context)\r\n   \r\n  const optionCode = 'NA'\r\n  const options = NULL_FLAVORS.filter((item:IReference)=>optionCode.includes(item.code))  \r\n  const defaultCode = NA \r\n  const header = () => {\r\n      return <span>Прочие данные умершего</span>\r\n    }\r\n  const certificate = certificateStore.cert\r\n  const age = certificate.hoursAge()  \r\n  const isChildInfo = !!age && (age > 168) && certificate.yearsAge() < 1      \r\n  const isMonthChild = isChildInfo && certificate.daysAge() < 30 \r\n  const [address, setAddress] = useState(certificate.childInfo?.address)\r\n  \r\n  useEffect(()=>{\r\n    if (isChildInfo && certificate.childInfo===undefined) \r\n     certificate.childInfo = new ChildInfo()\r\n    else if (!isChildInfo && certificate.childInfo!==undefined) certificate.childInfo = undefined\r\n  },[isChildInfo, certificate]) \r\n  \r\n  const childInfo = certificate.childInfo \r\n  useEffect(()=>{    \r\n    if (!isMonthChild && childInfo) {\r\n        childInfo.termPregnancy = undefined\r\n        checkFieldNullFlavor('term_pregnancy',childInfo.termPregnancy, childInfo.nullFlavors, NA)\r\n    }    \r\n  },[isMonthChild, childInfo]) \r\n  useEffect(()=>{       \r\n    if (!isChildInfo && !!certificate.childInfo) {\r\n      certificate.childInfo = undefined\r\n      checkFieldNullFlavor('related_subject', certificate.childInfo, certificate.nullFlavors, NA)\r\n    }    \r\n  }, [ isChildInfo, certificate ])\r\n  const ddStyle = {minWidth:'210px', maxWidth:'500px', marginTop: '0.5rem', marginLeft: '-0.75rem'}\r\n  const dDivStyle = {paddingTop: '0.1rem'}\r\n      \r\n  return (<>    \r\n      <Card className=\"c-section p-mr-2 p-mb-2\" header={header}>        \r\n          <div className=\"p-fluid p-formgrid p-grid\">            \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">\r\n              <div className='paragraph p-mr-1'>12. </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={dDivStyle}>\r\n                <label htmlFor=\"deathPlaceType\">Смерть наступила</label>\r\n                <Dropdown inputId=\"deathPlaceType\" style={ddStyle} placeholder=\"Выбрать\"  \r\n                  options={DEAD_PLACE_TYPES} optionLabel=\"name\" autoFocus\r\n                  value={DEAD_PLACE_TYPES.find((item)=>item.code === certificate.deathPlace)} \r\n                  onChange={(e) =>{\r\n                    certificate.deathPlace = e.value.code                    \r\n                  }} />\r\n              </div>  \r\n            </div> \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%'}}>\r\n              <div className='paragraph p-mr-1'>13.</div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={{width: '90%'}}>\r\n                <NullFlavorWrapper  checked={isMonthChild}  key={`MonthChild_${isMonthChild}`} \r\n                  disabled\r\n                  setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                            if (nullFlavors && certificate.childInfo) certificate.childInfo.nullFlavors = nullFlavors                  \r\n                            if (!e.checked)  certificate.childInfo = undefined                              \r\n                            }}            \r\n                  label={<label htmlFor=\"MonthChild\">Для детей, умерших в возрасте от 168 час. до 1 месяца</label>}\r\n                  field={<Dropdown inputId=\"MonthChild\"  placeholder=\"Выбрать\" autoFocus \r\n                    style={{minWidth:'210px', maxWidth:'300px'}}        \r\n                    options={TERMS_PREGNANCY} optionLabel=\"name\"\r\n                    value={TERMS_PREGNANCY.find((item)=>item.code === certificate.childInfo?.termPregnancy)} \r\n                    onChange={(e) =>{                      \r\n                      if (certificate.childInfo) certificate.childInfo.termPregnancy = e.value.code                                          \r\n                    }} />}\r\n                  options={options} \r\n                  value={defaultCode} \r\n                  nullFlavors={certificate.childInfo?.nullFlavors}  \r\n                  field_name=\"term_pregnancy\" paraNum \r\n                />    \r\n              </div>  \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%'}} >\r\n              <div className='paragraph p-mr-1'>14.</div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={{width: '90%'}}>\r\n                <NullFlavorWrapper  checked={isChildInfo}  key={`YearChild_${isChildInfo}`} \r\n                  disabled\r\n                  setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                            if (nullFlavors) certificate.nullFlavors = nullFlavors                  \r\n                              certificate.childInfo = undefined\r\n                            }}            \r\n                  label={<label htmlFor=\"YearChild\">Для детей, умерших в возрасте от 168 час. до 1 года</label>}\r\n                  field={<MotherInfo childInfo={childInfo} onChange={(chInf: ChildInfo)=>{\r\n                    if (certificate.childInfo !== chInf) certificate.childInfo = chInf  \r\n                  }} />}\r\n                  options={options} \r\n                  value={defaultCode} \r\n                  nullFlavors={certificate.nullFlavors}  \r\n                  field_name=\"related_subject\" paraNum \r\n                />    \r\n              </div>  \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%'}} >\r\n              <div className='paragraph p-mr-1'>8K.</div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={{width: '90%'}}>\r\n                <NullFlavorWrapper  checked={isChildInfo}  key={`YearChild_BP_${isChildInfo}`} \r\n                  disabled\r\n                  setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n                              if (!certificate.childInfo) return\r\n                              if (nullFlavors) certificate.childInfo.nullFlavors = nullFlavors\r\n                              if (!e.checked) certificate.childInfo.address = undefined  \r\n                            }}            \r\n                  label={<label htmlFor=\"child_birth_addr\">Место рождения ребенка</label>}\r\n                  field={<InputAddress submitted={false} \r\n                      id='child_birth_addr'            \r\n                      value={address || DEFAULT_ADDRESS} \r\n                      onClear={(value: IAddressR)=>{ \r\n                        if (!certificate.childInfo) return                                             \r\n                        certificate.childInfo.address = value\r\n                        setAddress(certificate.childInfo.address)\r\n                      }}\r\n                      onChange={()=>{\r\n                        if (!certificate.childInfo) return\r\n                        certificate.childInfo.address = addressStore.addressProps()\r\n                        setAddress(certificate.childInfo.address)\r\n                      }}  \r\n                    />}\r\n                  options={options} \r\n                  value={defaultCode} \r\n                  nullFlavors={certificate.childInfo?.nullFlavors}  \r\n                  field_name=\"address\" paraNum \r\n                />    \r\n              </div>  \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">\r\n              <div className='paragraph p-mr-1'>15.*</div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={dDivStyle}>\r\n                <label htmlFor=\"marital_status\">Семейное положение</label>\r\n                <Dropdown inputId=\"marital_status\" style={ddStyle}\r\n                  placeholder=\"Выбрать\" autoFocus \r\n                  options={MARITAL_STATUSES} optionLabel=\"name\"\r\n                  value={MARITAL_STATUSES.find((item)=>item.code === certificate.maritalStatus)} \r\n                  onChange={(e) =>{certificate.maritalStatus= e.value.code}} \r\n                />                    \r\n              </div>  \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">\r\n              <div className='paragraph p-mr-1'>16.* </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={dDivStyle}>\r\n                <label htmlFor=\"education_level\">Образование</label>\r\n                <Dropdown inputId=\"education_level\" style={ddStyle}\r\n                  placeholder=\"Выбрать\" autoFocus \r\n                  options={EDUCATION_LEVELS} optionLabel=\"name\"\r\n                  value={EDUCATION_LEVELS.find((item)=>item.code === certificate.educationLevel)} \r\n                  onChange={(e) =>{certificate.educationLevel = e.value.code}} \r\n                />   \r\n              </div>  \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">\r\n              <div className='paragraph p-mr-1'>17.*</div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={dDivStyle}>\r\n                <label htmlFor=\"social_status\">Занятость</label>\r\n                <Dropdown inputId=\"social_status\" style={ddStyle}\r\n                  placeholder=\"Выбрать\" autoFocus \r\n                  options={SOCIAL_STATUSES} optionLabel=\"name\"\r\n                  value={SOCIAL_STATUSES.find((item)=>item.code === certificate.socialStatus)} \r\n                  onChange={(e) => {certificate.socialStatus = e.value.code}} \r\n                />    \r\n              </div>  \r\n            </div> \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%', paddingLeft:'0.5rem'}} >\r\n              <em>* В случае смерти ребенка до года заполняется в отношении матери</em>\r\n            </div>            \r\n          </div>          \r\n      </Card>  \r\n    </>)\r\n  }\r\n  export default observer(Section5) ","//Род причины смерти\r\n//OID: 1.2.643.5.1.13.13.99.2.21 Версия: 2.1\r\nexport const DISEASE_DEADTH_KIND = 1\r\nexport const DEATH_KINDS = [\r\n  { code: 1, name: \"от заболевания\" },\r\n  { code: 2, name: \"от несчастного случая, не связанного с производством\" },\r\n  { code: 3, name: \"от несчастного случая, связанного с производством\" },\r\n  { code: 4, name: \"убийства\" },\r\n  { code: 5, name: \"самоубийства\" },\r\n  { code: 6, name: \"в ходе военных действий\" },\r\n  { code: 7, name: \"в ходе террористических действий\" },\r\n  { code: 8, name: \"род смерти не установлен\" },\r\n]\r\n","//Тип медицинского работника, установившего причины смерти\r\n//OID: 1.2.643.5.1.13.13.99.2.22 Версия: 3.1\r\nexport const MEDICS = [\r\n  { code: 1, name: \"врач, только установивший смерть\" },\r\n  { code: 2, name: \"лечащий врач\" },\r\n  { code: 3, name: \"фельдшер, акушерка\" },\r\n  { code: 4, name: \"врач-патологоанатом\" },\r\n  { code: 5, name: \"врач-судебно-медицинский эксперт\" },\r\n]\r\n","//Основания для установления причины смерти\r\n//OID: 1.2.643.5.1.13.13.99.2.23  Версия: 2.1\r\nexport const BASIS_DERMINING = [\r\n  { code: 1, name: \"осмотр трупа\" },\r\n  { code: 2, name: \"записи в медицинской документации\" },\r\n  { code: 3, name: \"предшествующее наблюдение за пациентом\" },\r\n  { code: 4, name: \"вскрытие\" },\r\n]\r\n","import { observer } from 'mobx-react-lite'\r\nimport { FC, useContext} from 'react'\r\nimport { Context } from '../..'\r\nimport { Card } from 'primereact/card'\r\nimport { CheckboxChangeParams } from 'primereact/checkbox'\r\nimport '../../styles/components/RadioButton.css'\r\nimport '../../styles/components/Calendar.css'\r\nimport '../../styles/pages/CertificatePage.css'\r\nimport NullFlavorWrapper from '../NullFlavorWrapper'\r\nimport { NA, NULL_FLAVORS } from '../../utils/defaults'\r\nimport { IReference } from '../../models/IReference'\r\nimport { Dropdown } from 'primereact/dropdown'\r\n\r\nimport { INullFlavorR } from '../../models/INullFlavor'\r\nimport { DEATH_KINDS, DISEASE_DEADTH_KIND } from '../../NSI/1.2.643.5.1.13.13.99.2.21'\r\nimport { Calendar } from 'primereact/calendar'\r\nimport { InputTextarea } from 'primereact/inputtextarea'\r\nimport { MEDICS } from '../../NSI/1.2.643.5.1.13.13.99.2.22'\r\nimport { BASIS_DERMINING } from '../../NSI/1.2.643.5.1.13.13.99.2.23'\r\n\r\n const Section6: FC = () => {\r\n  const { certificateStore } = useContext(Context)\r\n   \r\n  const optionCode = 'NA'\r\n  const options = NULL_FLAVORS.filter((item:IReference)=>optionCode.includes(item.code))  \r\n  \r\n  const header = () => {\r\n      return <span>Характеристика причины смерти</span>\r\n    }\r\n  const certificate = certificateStore.cert  \r\n  const isExtReason = certificate.deathKind !== undefined && certificate.deathKind !== DISEASE_DEADTH_KIND \r\n  \r\n  \r\n  \r\n  const ddStyle = {minWidth:'210px', maxWidth:'500px', marginTop: '0.5rem', marginLeft: '-0.75rem'}\r\n  const dDivStyle = {paddingTop: '0.1rem'}\r\n      \r\n  return (<>    \r\n      <Card className=\"c-section p-mr-2 p-mb-2\" header={header}>        \r\n          <div className=\"p-fluid p-formgrid p-grid\">            \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">\r\n              <div className='paragraph p-mr-1'>18. </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={dDivStyle}>\r\n                <label htmlFor=\"deathPlaceType\">Смерть произошла</label>\r\n                <Dropdown inputId=\"deathPlaceType\" style={ddStyle} placeholder=\"Выбрать\"  \r\n                  options={DEATH_KINDS} optionLabel=\"name\" autoFocus\r\n                  value={DEATH_KINDS.find((item)=>item.code === certificate.deathKind)} \r\n                  onChange={(e) =>{\r\n                    certificate.deathKind = e.value.code                    \r\n                  }} />\r\n              </div>  \r\n            </div>            \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%'}} >\r\n              <div className='paragraph p-mr-1'>19.</div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" key={`pdivdt_${isExtReason}`} style={{width: '90%'}}>                                  \r\n                <NullFlavorWrapper paraNum disabled checked={isExtReason}                                      \r\n                  label={<label htmlFor=\"extReasonTime\"> В случае смерти от несчастного случая, убийства, самоубийства, от военных и террористических действий, при неустановленном роде смерти - указать дату, время и обстоятельства травмы (отравления)</label>}\r\n                  setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{                      \r\n                      if (!e.checked) {                        \r\n                        certificate.extReasonTime = undefined                        \r\n                      } \r\n                      if (nullFlavors) certificate.nullFlavors = nullFlavors\r\n                    }} \r\n                  onChange={(e:IReference,  nullFlavors: INullFlavorR[] | undefined)=>{\r\n                      if (nullFlavors) certificate.nullFlavors = nullFlavors}}\r\n                  field={<div className=\"p-d-flex p-flex-wrap p-jc-start\">\r\n                          <Calendar id=\"extReasonTime\" showIcon className=\"p-mr-3 p-mb-2\"\r\n                            placeholder='дата' dateFormat={\"dd.mm.yy\"} \r\n                            locale=\"ru\" mask=\"99.99.9999\" panelStyle={{marginLeft:'12rem'}}                                         \r\n                            value={certificate.extReasonTime} \r\n                            onChange={(e)=>{\r\n                              certificate.extReasonTime = e.target.value as Date | undefined\r\n                            }}                         \r\n                          />\r\n                         <Calendar id=\"timereason\" className=\"p-mr-3 p-mb-2\" timeOnly \r\n                         hourFormat=\"24\" placeholder='время' locale=\"ru\"           \r\n                         value={certificate.extReasonTime}                            \r\n                            onChange={(e)=>{\r\n                              certificate.extReasonTime = e.target.value as Date | undefined\r\n                            }}\r\n                          showIcon /> \r\n                         <InputTextarea id=\"extReasonDescription\" value={certificate.extReasonDescription} \r\n                            cols={65} rows={2} placeholder='обстоятельства'  \r\n                            onChange={(e)=>{certificate.extReasonDescription = e.target.value }}\r\n                          /> \r\n                        </div> \r\n                  }\r\n                  options={options} \r\n                  value={NA} \r\n                  nullFlavors={certificate.nullFlavors}  \r\n                  field_name=\"ext_reason_time\"\r\n                />                               \r\n              </div>              \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">\r\n              <div className='paragraph p-mr-1'>20. </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={dDivStyle}>\r\n                <label htmlFor=\"establishedMedic\">Причины смерти установлены:</label>\r\n                <Dropdown inputId=\"establishedMedic\" style={ddStyle} placeholder=\"Выбрать\"  \r\n                  options={MEDICS} optionLabel=\"name\" autoFocus\r\n                  value={MEDICS.find((item)=>item.code === certificate.establishedMedic)} \r\n                  onChange={(e) =>{\r\n                    certificate.establishedMedic = e.value.code                    \r\n                  }} />\r\n              </div>  \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">\r\n              <div className='paragraph p-mr-1'>21. </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={dDivStyle}>\r\n                <label htmlFor=\"basisDetermining\">На основании:</label>\r\n                <Dropdown inputId=\"basisDetermining\" style={ddStyle} placeholder=\"Выбрать\"  \r\n                  options={BASIS_DERMINING} optionLabel=\"name\" autoFocus\r\n                  value={BASIS_DERMINING.find((item)=>item.code === certificate.basisDetermining)} \r\n                  onChange={(e) =>{\r\n                    certificate.basisDetermining = e.value.code                    \r\n                  }} />\r\n              </div>  \r\n            </div>     \r\n          </div>          \r\n      </Card>  \r\n    </>)\r\n  }\r\n  export default observer(Section6) ","import { makeAutoObservable } from \"mobx\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { DATE_FORMAT, TIME_FORMAT } from \"../../utils/consts\"\r\nimport { NULL_FLAVOR_IDX } from \"../../utils/defaults\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { INullFlavorR } from \"../INullFlavor\"\r\nimport { IProcedureR } from \"../requests/IProcedureR\"\r\nimport { IMedicalServs } from \"../responses/IMedservs\"\r\nimport { IProcedure } from \"../responses/IProcedure\"\r\n\r\nexport class Procedure implements ISerializable {\r\n  private _id?: number\r\n  private _medicalServ: IMedicalServs\r\n  private _guid: string\r\n  private _textValue?: string | undefined\r\n  private _effectiveTime?: Date\r\n  private _nullFlavors: INullFlavorR[]\r\n  constructor(props: IProcedure) {\r\n    this._id = props.id\r\n    this._guid = props.guid || uuidv4()\r\n    this._medicalServ = props.medical_serv\r\n    this._textValue = props.text_value\r\n    if (props.effective_time) this._effectiveTime = new Date(props.effective_time)\r\n    this._nullFlavors =\r\n      props.null_flavors?.map((item) => {\r\n        return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n      }) || []\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n  getAttributes(): IProcedureR {\r\n    let _pr = { guid: this._guid } as IProcedureR\r\n    if (this._id && this._id > -1) _pr.id = this._id\r\n    if (this._effectiveTime) _pr.effective_time = this._effectiveTime.toLocaleString()\r\n    if (this._medicalServ) _pr.medical_serv_id = this._medicalServ.id\r\n    if (this._textValue) _pr.text_value = this._textValue\r\n    if (this._nullFlavors.length > 0) _pr.null_flavors_attributes = this.null_flavors_attributes()\r\n    return _pr\r\n  }\r\n  get id(): number | undefined {\r\n    return this._id\r\n  }\r\n  set id(value: number | undefined) {\r\n    this._id = value\r\n  }\r\n  get effectiveTime(): Date | undefined {\r\n    return this._effectiveTime\r\n  }\r\n  set effectiveTime(value: Date | undefined) {\r\n    this._effectiveTime = value\r\n  }\r\n  get textValue(): string | undefined {\r\n    return this._textValue\r\n  }\r\n  set textValue(value: string | undefined) {\r\n    this._textValue = value\r\n  }\r\n  get medicalServ(): IMedicalServs {\r\n    return this._medicalServ\r\n  }\r\n  set medicalServ(value: IMedicalServs) {\r\n    this._medicalServ = value\r\n  }\r\n  // получение копии массива заполнителей из Observable.array\r\n  null_flavors_attributes() {\r\n    return this._nullFlavors.map((el) => {\r\n      return { ...el }\r\n    })\r\n  }\r\n\r\n  get guid(): string {\r\n    return this._guid\r\n  }\r\n\r\n  timeStr(): string {\r\n    if (this._effectiveTime === undefined) return \"\"\r\n    return this._effectiveTime?.toLocaleString(\r\n      \"ru\",\r\n      this._effectiveTime.getHours() === 0 && this._effectiveTime.getMinutes() === 0 ? DATE_FORMAT : TIME_FORMAT\r\n    )\r\n  }\r\n}\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport { INullFlavorR } from \"../INullFlavor\"\r\nimport { IDeathReason } from \"../responses/IDeathReason\"\r\nimport { IDiagnosis } from \"../responses/IDiagnosis\"\r\nimport { Procedure } from \"./Procedure\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { NULL_FLAVOR_IDX } from \"../../utils/defaults\"\r\nimport { IDeathReasonR } from \"../requests/IDeathReasonR\"\r\nimport { IProcedureR } from \"../requests/IProcedureR\"\r\nexport class DeathReason implements ISerializable {\r\n  private _oldOne: IDeathReason\r\n  private _id?: number\r\n  private _diagnosis?: IDiagnosis | undefined\r\n  private _effectiveTime?: Date | null\r\n  private _years?: number | null\r\n  private _months?: number | null\r\n  private _weeks?: number | null\r\n  private _days?: number | null\r\n  private _hours?: number | null\r\n  private _minutes?: number | null\r\n  private _guid: string\r\n  private _procedures: Procedure[]\r\n  private _nullFlavors: INullFlavorR[]\r\n\r\n  constructor(props = {} as IDeathReason) {\r\n    this._oldOne = { ...props }\r\n    this._id = props.id\r\n    this._guid = props.guid || uuidv4()\r\n    this._diagnosis = props.diagnosis || props.ext_diagnosis\r\n    if (props.effective_time) this._effectiveTime = new Date(props.effective_time)\r\n    this._days = props.days\r\n    this._hours = props.hours\r\n    this._minutes = props.minutes\r\n    this._months = props.months\r\n    this._weeks = props.weeks\r\n    this._years = props.years\r\n    this._procedures = props.procedures?.map((proc) => new Procedure(proc)) || []\r\n    this._nullFlavors =\r\n      props.null_flavors?.map((item) => {\r\n        return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n      }) || []\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n  get id(): number | undefined {\r\n    return this._id\r\n  }\r\n\r\n  set id(id: number | undefined) {\r\n    this._id = id\r\n  }\r\n\r\n  get diagnosis(): IDiagnosis | undefined {\r\n    return this._diagnosis\r\n  }\r\n  set diagnosis(value: IDiagnosis | undefined) {\r\n    this._diagnosis = value\r\n  }\r\n  get effectiveTime(): Date | null | undefined {\r\n    return this._effectiveTime\r\n  }\r\n  set effectiveTime(value: Date | undefined | null) {\r\n    this._effectiveTime = value\r\n  }\r\n  get years(): number | undefined | null {\r\n    return this._years\r\n  }\r\n  set years(value: number | undefined | null) {\r\n    this._years = value\r\n  }\r\n  get months(): number | undefined | null {\r\n    return this._months\r\n  }\r\n  set months(value: number | undefined | null) {\r\n    this._months = value\r\n  }\r\n  get weeks(): number | undefined | null {\r\n    return this._weeks\r\n  }\r\n  set weeks(value: number | undefined | null) {\r\n    this._weeks = value\r\n  }\r\n  get days(): number | undefined | null {\r\n    return this._days\r\n  }\r\n  set days(value: number | undefined | null) {\r\n    this._days = value\r\n  }\r\n  get hours(): number | undefined | null {\r\n    return this._hours\r\n  }\r\n  set hours(value: number | undefined | null) {\r\n    this._hours = value\r\n  }\r\n  get minutes(): number | undefined | null {\r\n    return this._minutes\r\n  }\r\n  set minutes(value: number | undefined | null) {\r\n    this._minutes = value\r\n  }\r\n  get procedures(): Procedure[] {\r\n    return this._procedures\r\n  }\r\n  set procedures(value: Procedure[]) {\r\n    this._procedures = value\r\n  }\r\n  get nullFlavors(): INullFlavorR[] {\r\n    return this._nullFlavors\r\n  }\r\n  set nullFlavors(value: INullFlavorR[]) {\r\n    this._nullFlavors = value\r\n  }\r\n\r\n  // получение копии массива заполнителей из Observable.array\r\n  null_flavors_attributes() {\r\n    let _result = this._nullFlavors.map((el) => {\r\n      return { ...el }\r\n    })\r\n    this._oldOne.null_flavors?.forEach((el) => {\r\n      if (_result.findIndex((nf) => nf.id === el.id) === -1)\r\n        _result.push({ id: el.id, parent_guid: el.parent_guid, _destroy: \"1\" } as INullFlavorR)\r\n    })\r\n    return _result\r\n  }\r\n  procNames(): string {\r\n    let _result = \"\"\r\n    this._procedures.forEach((proc) => {\r\n      _result += proc.textValue || proc.medicalServ.name\r\n      if (proc.effectiveTime) _result += \" от \" + proc.timeStr()\r\n      _result += \"; \"\r\n    })\r\n    return _result\r\n  }\r\n  getAttributes(isExt = false): IDeathReasonR {\r\n    let _dr = { guid: this._guid } as IDeathReasonR\r\n    if (this._id && this._id > -1) _dr.id = this._id\r\n    if (this._days || this._oldOne.days) _dr.days = this._days\r\n    if (this._hours || this._oldOne.hours) _dr.hours = this._hours\r\n    if (this._minutes || this._oldOne.minutes) _dr.minutes = this._minutes\r\n    if (this._months || this._oldOne.months) _dr.months = this._months\r\n    if (this._weeks || this._oldOne.weeks) _dr.weeks = this._weeks\r\n    if (this._years || this._oldOne.years) _dr.years = this._years\r\n    if (this._effectiveTime || this._oldOne.effective_time) _dr.effective_time = this._effectiveTime\r\n    if (this._diagnosis && !isExt) _dr.diagnosis_id = Number.parseInt(this._diagnosis.id)\r\n    else if (this._oldOne.diagnosis) _dr.diagnosis_id = null\r\n    if (this._diagnosis && isExt) _dr.ext_diagnosis_id = Number.parseInt(this._diagnosis.id)\r\n    else if (this._oldOne.diagnosis) _dr.ext_diagnosis_id = null\r\n    if (this._nullFlavors.length > 0) _dr.null_flavors_attributes = this.null_flavors_attributes()\r\n    if (this._procedures.length > 0) _dr.procedures_attributes = this._procedures.map((item) => item.getAttributes())\r\n    if (this._oldOne.procedures && this._oldOne.procedures.length > 0) {\r\n      let _temp = [] as IProcedureR[]\r\n      this._oldOne.procedures.forEach((item) => {\r\n        if (!_dr.procedures_attributes || _dr.procedures_attributes.findIndex((pr) => pr.id === item.id) === -1)\r\n          _temp.push({ id: item.id, _destroy: \"1\" } as IProcedureR)\r\n      })\r\n      if (_dr.procedures_attributes && _temp.length > 0)\r\n        _dr.procedures_attributes = _dr.procedures_attributes.concat(_temp)\r\n      else if (_temp.length > 0) _dr.procedures_attributes = _temp\r\n    }\r\n    return _dr\r\n  }\r\n}\r\n","import { AxiosResponse } from \"axios\"\r\nimport $api, { API_URL } from \"../http\"\r\nimport { IDiagnosis } from \"../models/responses/IDiagnosis\"\r\nimport { IMedicalServs } from \"../models/responses/IMedservs\"\r\n\r\nexport default class DiagnosisService {\r\n  static async fetchDiagnoses(query: any): Promise<AxiosResponse<IDiagnosis[]>> {\r\n    return $api.post(`${API_URL}model/Diagnosis/`, { q: query, offset: 0, limit: 200 })\r\n  }\r\n  static async fetchExtDiagnoses(query: any): Promise<AxiosResponse<IDiagnosis[]>> {\r\n    return $api.post(`${API_URL}model/ExtDiagnosis/`, { q: query, offset: 0, limit: 200 })\r\n  }\r\n  static async fetchMedicalServs(query: any): Promise<AxiosResponse<IMedicalServs[]>> {\r\n    return $api.post(`${API_URL}model/MedicalServ/`, { q: query, offset: 0, limit: 200 })\r\n  }\r\n}\r\n","\r\n\r\nimport { observer } from 'mobx-react-lite'\r\nimport { AutoComplete } from 'primereact/autocomplete'\r\nimport { Button } from 'primereact/button'\r\nimport { CheckboxChangeParams } from 'primereact/checkbox'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { FC, useState } from 'react'\r\nimport Certificate from '../../models/FormsData/Certificate'\r\nimport { DeathReason } from '../../models/FormsData/DeathReason'\r\nimport { INullFlavorR } from '../../models/INullFlavor'\r\nimport { IReference } from '../../models/IReference'\r\nimport { IDiagnosis } from '../../models/responses/IDiagnosis'\r\nimport DiagnosisService from '../../services/DiagnosisService'\r\nimport { NA, NULL_FLAVORS, UNK } from '../../utils/defaults'\r\nimport NullFlavorWrapper from '../NullFlavorWrapper'\r\n\r\ntype ReasonProps = {\r\n  disabled?:boolean\r\n  checked?:boolean\r\n  isExt?:boolean\r\n  deathReason?: DeathReason\r\n  label: string \r\n  certificate: Certificate\r\n  fieldName?: string\r\n  onChange: (reason: DeathReason | undefined)=>void\r\n  onUp?: ()=>void\r\n  onDown?: ()=>void\r\n  onTimeChecked?: (checked: boolean)=>void \r\n  onDiagnosisChecked?: (checked: boolean, nullFlavors: INullFlavorR[] | undefined)=>void\r\n}\r\n\r\nconst Reason: FC<ReasonProps> = (props: ReasonProps) => { \r\n  const options = NULL_FLAVORS.filter((item:IReference)=>\"ASKU NA UNK\".includes(item.code))\r\n  const style = {width:'86px'}\r\n  const CSS_classes = \"p-field p-inputgroup p-mr-1\"\r\n  const [checked, setChecked] = useState(props.checked || false)   \r\n  const [diagnoses, setDiagnoses] = useState<IDiagnosis[]>([]) \r\n  const [diagnosisText, setDiagnosisText] = useState('')\r\n  const [diagnosisCode, setDiagnosisCode] = useState('')\r\n  const cleanEffectiveTime = () => {\r\n    if (!deathReason) return\r\n    if (deathReason.days) deathReason.days =null \r\n    if (deathReason.effectiveTime) deathReason.effectiveTime = null\r\n    if (deathReason.hours) deathReason.hours =null \r\n    if (deathReason.minutes) deathReason.minutes = null\r\n    if (deathReason.months) deathReason.months = null\r\n    if (deathReason.weeks) deathReason.weeks = null\r\n    if (deathReason.years) deathReason.years = null\r\n  }\r\n  const  getDiagnoses = (event: { query: string })=>{\r\n  const option = {} as any\r\n  if (event.query.trim().length>0) option.s_name_cont = event.query.trim()\r\n  if (!!diagnosisCode && diagnosisCode.trim().length>0) option.ICD10_start =  diagnosisCode    \r\n  if (props.isExt) DiagnosisService.fetchExtDiagnoses(option).then(response=>{\r\n        if (response.data.length>0) setDiagnoses(response.data)\r\n        else setDiagnoses([])        \r\n      }).catch((reason)=>console.log(reason)) \r\n  else DiagnosisService.fetchDiagnoses(option).then(response=>{\r\n        if (response.data.length>0) setDiagnoses(response.data)\r\n        else setDiagnoses([])        \r\n      }).catch((reason)=>console.log(reason))    \r\n  }\r\n  const  getCodes = (event: { query: string })=>{    \r\n    if (event.query.trim().length>0) {\r\n      if (props.isExt) DiagnosisService.fetchExtDiagnoses({'ICD10_start': event.query.trim()}).then(response=>{        \r\n        if (response.data.length>0) setDiagnoses(response.data)\r\n        else setDiagnoses([])        \r\n      }).catch((reason)=>console.log(reason))\r\n      else DiagnosisService.fetchDiagnoses({'ICD10_start': event.query.trim()}).then(response=>{                \r\n        if (response.data.length>0) setDiagnoses(response.data)\r\n        else setDiagnoses([])        \r\n      }).catch((reason)=>console.log(reason)) \r\n    } \r\n  }\r\n  const deathTime = props.certificate.deathDatetime  \r\n  const [deathReason, setDeathReason] = useState<DeathReason | null | undefined>(props.deathReason)  \r\n  const upButton = props.onUp === undefined ? <></> : <Button icon=\"pi pi-angle-up\" onClick={props.onUp} className=\"p-button-rounded p-button-secondary p-mr-1\" />\r\n  const downButton = props.onDown === undefined ? <></> : <Button icon=\"pi pi-angle-down\" onClick={props.onDown} className=\"p-button-rounded p-button-secondary\" />\r\n  const diagnosisOptionTemplate = (option: IDiagnosis) => {\r\n        return (\r\n          <span>\r\n            <span style={{marginRight:'4px'}}>{option.ICD10}</span>\r\n            <span>{option.s_name}</span>\r\n          </span>\r\n        )\r\n    }\r\n  const effTime = checked && !!deathReason && !!deathTime ? (<NullFlavorWrapper  \r\n      checked={checked && (!!deathReason.effectiveTime || deathReason.nullFlavors.findIndex(el=>el.parent_attr==='effective_time')===-1)} \r\n      key={`et_${deathReason.effectiveTime}`} \r\n      label={<label>Период времени между началом патол. состояния и смертью</label>} \r\n      options={options}  paraNum value={UNK}\r\n      nullFlavors={deathReason.nullFlavors}\r\n      setCheck={(e: CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n        if (!e.checked) cleanEffectiveTime() \r\n        //console.log('deathReason.nullFlavors',deathReason.nullFlavors)\r\n        if (nullFlavors) deathReason.nullFlavors = nullFlavors\r\n        //console.log('nullFlavors', nullFlavors)\r\n        props.onChange(deathReason)\r\n        if (props.onTimeChecked) props.onTimeChecked(e.checked)\r\n      }}\r\n      onChange={(e: IReference, nullFlavors: INullFlavorR[] | undefined)=>{        \r\n        if (nullFlavors) deathReason.nullFlavors = nullFlavors}}\r\n      field_name=\"effective_time\"\r\n      field={\r\n        <div className=\"p-fluid p-formgrid p-grid\" style={{marginLeft:'0'}}>           \r\n          <div className={CSS_classes} style={style} key={`rt_${deathTime}`}>  \r\n            <span className=\"p-inputgroup-addon\">лет</span>          \r\n            <InputText id=\"year\" type=\"number\" min={0} max={99}\r\n                onChange={(e)=>{  \r\n                const value = Number.parseInt(e.target.value)                             \r\n                deathReason.years = value === 0 ? undefined : value\r\n                props.certificate.saveReasonEffTime(deathReason)\r\n                props.onChange(deathReason)              \r\n              }}\r\n             value={deathReason.years || ''} />         \r\n          </div>\r\n          <div className={CSS_classes} style={style}>\r\n            <span className=\"p-inputgroup-addon\">мес</span>            \r\n            <InputText id=\"month\" type=\"number\" \r\n              min={0} max={12} onChange={(e)=>{\r\n              const value = Number.parseInt(e.target.value)  \r\n              deathReason.months = value === 0 ? undefined : value\r\n              props.certificate.saveReasonEffTime(deathReason) \r\n              props.onChange(deathReason)\r\n            }}\r\n            value={deathReason.months || ''}/>\r\n          </div>\r\n          <div className={CSS_classes} style={style}> \r\n            <span className=\"p-inputgroup-addon\">нед</span>           \r\n            <InputText id=\"ned\" type=\"number\" \r\n            min={0} max={4} onChange={(e)=>{\r\n              const value = Number.parseInt(e.target.value)\r\n              deathReason.weeks = value === 0 ? undefined : value\r\n              props.certificate.saveReasonEffTime(deathReason)\r\n              props.onChange(deathReason)\r\n            }}\r\n            value={deathReason.weeks || ''}/>         \r\n          </div>\r\n          <div className={CSS_classes} style={style}>\r\n            <span className=\"p-inputgroup-addon\">сут</span>            \r\n            <InputText id=\"dne\" type=\"number\" \r\n            min={0} max={7} onChange={(e)=>{\r\n              const value = Number.parseInt(e.target.value)\r\n              deathReason.days = value === 0 ? undefined : value\r\n              if (props.certificate.saveReasonEffTime(deathReason)) props.onChange(deathReason)\r\n            }}\r\n            value={deathReason.days || ''}/>\r\n          </div>\r\n          <div className={CSS_classes} style={style}>\r\n            <span className=\"p-inputgroup-addon\">час</span>            \r\n            <InputText id=\"hours\" type=\"number\"\r\n             min={0} max={23} onChange={(e)=>{\r\n              const value = Number.parseInt(e.target.value) \r\n              deathReason.hours = value === 0 ? undefined : value\r\n              if (props.certificate.saveReasonEffTime(deathReason)) props.onChange(deathReason)\r\n            }}\r\n             value={deathReason.hours || ''}/>          \r\n          </div>\r\n          <div className={CSS_classes} style={style}>\r\n            <span className=\"p-inputgroup-addon\">мин</span>            \r\n            <InputText id=\"minut\" type=\"number\"\r\n              min={0} max={59} onChange={(e)=>{\r\n              const value = Number.parseInt(e.target.value)  \r\n              deathReason.minutes = value === 0 ? undefined : value\r\n              props.certificate.saveReasonEffTime(deathReason) \r\n              props.onChange(deathReason)\r\n            }}\r\n             value={deathReason.minutes || ''}/>\r\n          </div>\r\n        </div>\r\n      }\r\n    />) : <></>        \r\n  return (<div className=\"p-paragraph-field\"  style={{width: '100%'}}>  \r\n    <NullFlavorWrapper disabled={props.disabled} checked={checked} key={`rs2_${deathReason?.id}_${deathReason?.diagnosis}`}\r\n      setCheck={(e: CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{\r\n        setChecked(e.checked)        \r\n        if (e.checked) {\r\n          const reason = new DeathReason()\r\n          props.onChange(reason)\r\n          setDeathReason(reason)\r\n        } else {           \r\n          if (!!deathReason) {             \r\n            deathReason.nullFlavors = []\r\n            cleanEffectiveTime()  \r\n            deathReason.diagnosis = undefined\r\n            deathReason.nullFlavors.push({parent_attr:'effective_time', code: NA} as INullFlavorR)   \r\n            deathReason.nullFlavors.push({parent_attr:'diagnosis', code: NA} as INullFlavorR)       \r\n          } \r\n          props.onChange(undefined)   \r\n        }\r\n        if (props.onDiagnosisChecked) props.onDiagnosisChecked(e.checked, nullFlavors)        \r\n      }}  \r\n      label={<label>{props.label}</label>} \r\n      options={options} \r\n      nullFlavors={!props.fieldName ? deathReason?.nullFlavors : props.certificate.nullFlavors}       \r\n      paraNum      \r\n      field_name={props.fieldName || 'diagnosis'}\r\n      value={NA}\r\n      field={\r\n        <div className=\"p-fluid p-formgrid p-grid\">     \r\n          <div className={`p-field p-col-12 ${props.isExt ? 'p-md-10' : 'p-md-8'}`}>             \r\n            <AutoComplete id=\"reason_text\" placeholder=\"Диагноз\"\r\n              suggestions={diagnoses} delay={1000} dropdown\r\n              completeMethod={getDiagnoses} itemTemplate={diagnosisOptionTemplate}\r\n              field=\"s_name\" onChange={(e) =>{ \r\n                if (!!deathReason && !!e.value.s_name) { \r\n                  deathReason.diagnosis = e.value\r\n                  if (!!deathReason.diagnosis) setDiagnosisCode(deathReason.diagnosis?.ICD10)\r\n                } else if(e.value) {\r\n                  if (!!deathReason) deathReason.diagnosis = undefined\r\n                  setDiagnosisText(e.value)                  \r\n                } else {\r\n                  if (deathReason) deathReason.diagnosis = undefined\r\n                  setDiagnosisText('')                  \r\n                }  \r\n                if (deathReason!=null) props.onChange(deathReason)\r\n              }}\r\n              value={props.deathReason?.diagnosis || diagnosisText}/>          \r\n          </div>\r\n          <div className=\"p-field p-col-12 p-md-2\">\r\n            <AutoComplete id=\"reason_code\" placeholder=\"Код\"\r\n              suggestions={diagnoses} delay={1000} field=\"ICD10\"\r\n              itemTemplate={diagnosisOptionTemplate}\r\n              completeMethod={getCodes} onChange={(e) =>{ \r\n                if (!!deathReason && !!e.value.s_name) {\r\n                    deathReason.diagnosis = e.value\r\n                    if (!!deathReason.diagnosis) setDiagnosisCode(deathReason.diagnosis?.ICD10)\r\n                } else if(e.value) {\r\n                    if (!!deathReason) deathReason.diagnosis = undefined\r\n                  setDiagnosisCode(e.value)                \r\n                } else {\r\n                  if (!!deathReason) deathReason.diagnosis = undefined               \r\n                  setDiagnosisCode('')\r\n                }  \r\n                if (!!deathReason) props.onChange(deathReason)\r\n              }}\r\n              value={props.deathReason?.diagnosis || diagnosisCode}/>          \r\n          </div>\r\n          <div className={`p-field ${props.isExt ? '' : 'p-col-12 p-md-2'}`}>\r\n            {upButton}\r\n            {downButton}            \r\n          </div>\r\n        </div>\r\n      }\r\n    />  \r\n    {effTime}\r\n  </div>)\r\n}\r\nexport default observer(Reason)","import { AxiosResponse } from \"axios\"\r\nimport { $acme, ACME_URL } from \"../http\"\r\n\r\nexport default class ACMEService {\r\n  //POST request for run ACME and get result\r\n  static async runACME(input: string): Promise<AxiosResponse<string>> {\r\n    return $acme.post(`${ACME_URL}useACME`, { data_AIN: input })\r\n  }\r\n}\r\n","import Certificate from \"../models/FormsData/Certificate\"\r\nimport ACMEService from \"../services/ACME_Service\"\r\n\r\n/**\r\n * Преобразование массива причин в строку заданного формата: Позиции\r\n * соответствуют кодам МКБ-10 причин смерти, записанных без точки (4\r\n * знакоместа) и разделенные знаком / внутри раздела 1 пункта 22 нашего\r\n * свидетельства о смерти, знаком * между разделами, пробелом внутри раздела\r\n * 2 и с размещением кода внешней причины (первые 3 знака) в конце\r\n * кодограммы с добавленным знаком & впереди.\r\n *\r\n * @return результирующая строка\r\n */\r\nconst codogram = (\r\n  reason_a: string,\r\n  reason_b: string | undefined,\r\n  reason_c: string | undefined,\r\n  ext_reason: string | undefined,\r\n  reasons: Array<string | undefined>\r\n): string => {\r\n  let _result = \"\"\r\n  let _part_2 = \"\"\r\n  reasons.forEach((code) => {\r\n    if (!!code) _part_2 += \" \" + code\r\n  })\r\n  if (!reason_b && !ext_reason && !reasons[0]) {\r\n    _result = reason_a\r\n  } else if (!!reason_b && !reason_c && !ext_reason && !reasons[0]) {\r\n    _result = reason_a + \"/\" + reason_b\r\n  } else if (!!reason_b && !!reason_c && !ext_reason && !reasons[0]) {\r\n    _result = reason_a + \"/\" + reason_b + \"/\" + reason_c\r\n  } else if (!reason_b && !ext_reason && !!reasons[0]) {\r\n    _result = reason_a + \"*\" + _part_2\r\n  } else if (!!reason_b && !reason_c && !ext_reason && !!reasons[0]) {\r\n    _result = reason_a + \"/\" + reason_b + \"*\" + _part_2\r\n  } else if (!!reason_b && !!reason_c && !ext_reason && !!reasons[0]) {\r\n    _result = reason_a + \"/\" + reason_b + \"/\" + reason_c + \"*\" + _part_2\r\n  } else if (!reason_b && !!ext_reason && !reasons[0]) {\r\n    _result = reason_a + \" \" + ext_reason\r\n  } else if (!!reason_b && !reason_c && !!ext_reason && !reasons[0]) {\r\n    _result = reason_a + \"/\" + reason_b + \" \" + ext_reason\r\n  } else if (!!reason_b && !!reason_c && !!ext_reason && !reasons[0]) {\r\n    _result = reason_a + \"/\" + reason_b + \"/\" + reason_c + \" \" + ext_reason\r\n  } else if (!reason_b && !!ext_reason && !!reasons[0]) {\r\n    _result = reason_a + \"*\" + _part_2 + \" \" + ext_reason\r\n  } else if (!!reason_b && !reason_c && !!ext_reason && !!reasons[0]) {\r\n    _result = reason_a + \"/\" + reason_b + \"*\" + _part_2 + \" \" + ext_reason\r\n  } else if (!!reason_b && !!reason_c && !!ext_reason && !!reasons[0]) {\r\n    _result = reason_a + \"/\" + reason_b + \"/\" + reason_c + \"*\" + _part_2 + \" \" + ext_reason\r\n  }\r\n  return _result.padEnd(120, \" \")\r\n}\r\n\r\n/**\r\n * экспорт массива причин в строку\r\n *\r\n * @param withOtherReasons определяет есть ли прочие причины\r\n * @return входную кодограмму для внешнего модуля АСМЕ\r\n * (файл с расширением ain)\r\n */\r\nconst ACME_AIN = (withOtherReasons: boolean, certificate: Certificate) => {\r\n  const deathDatetime = certificate.deathDatetime?.toDateString()\r\n  const deathDate = certificate.deathDatetime?.toLocaleDateString()\r\n  //Позиции 1-4 соответствуют году смерти\r\n  const X1X4 = !deathDatetime ? \"0000\" : deathDatetime.slice(-4)\r\n  //Позиции 5-6 соответствуют месту смерти, которая обозначена NC\r\n\r\n  //Позиции 7-12 соответствуют номеру сертификата, вместо которого для\r\n  //идентификации записи после ее возврата от АСМЕ\r\n  //заполнены левой частью форматированного до 10 знаков незначащими нулями\r\n  //значения счетчика (6 знакомест)\r\n  const X7X12 = certificate.number?.slice(-4).padStart(6, \"0\") || \"000000\"\r\n\r\n  //Позиция 13 соответствует номеру кодировщика, который обозначен как 1\r\n\r\n  //Позиции 14-17 соответствуют лоту, вместо которого для идентификации записи после\r\n  //ее возврата от АСМЕ заполнены правой частью форматированного до 10 знаков\r\n  //незначащими нулями значения счетчика (4 знакоместа)\r\n  const X14X17 = withOtherReasons ? \"0000\" : \"0001\"\r\n\r\n  //Позиция 18 соответствует номеру секции, который обозначен как 1\r\n  //Позиции 19-21 соответствуют первым трем буквам месяца смерти\r\n  const X19X21 = !deathDatetime ? \"000\" : deathDatetime.slice(4, 7)\r\n  //Позиции 22-23 соответствуют месяцу смерти\r\n  const X22X23 = !deathDate ? \"  \" : deathDate.slice(3, 5)\r\n  //Позиции 24-25 соответствуют дню смерти\r\n  const X24X25 = !deathDate ? \"  \" : deathDate.slice(0, 2)\r\n  // Позиции 26-29 соответствуют Х26Х29 (году смерти), отсутствие заполняется пробелами\r\n  const X26X29 = !deathDate ? \"    \" : deathDate.slice(-4)\r\n  // Позиции 30-33 соответствуют году версии программы SuperMICAR\r\n  // Позиции 34-37 соответствуют году версии программы MICAR200\r\n  const birthDay = certificate.patient.birth_date\r\n  const deathDay = certificate.deathDatetime\r\n  //Позиция 38 соответствует: 1 - год, 2 - месяц, 4 - день\r\n  //Позиции 39 - 41 числу годов или месяцев или дней (в зависимости от позиции 38)\r\n  let XYMD = \"9\"\r\n  let X39X41 = \"999\"\r\n  if (deathDay && birthDay) {\r\n    let _diff = deathDay.getFullYear() - birthDay.getFullYear()\r\n    if (_diff > 1) {\r\n      XYMD = \"1\"\r\n      X39X41 = _diff.toString().padStart(3, \"0\")\r\n    } else if (_diff === 1) {\r\n      _diff = deathDay.getMonth() - birthDay.getMonth()\r\n      if (_diff > 0) {\r\n        XYMD = \"1\"\r\n        X39X41 = \"001\"\r\n      } else {\r\n        XYMD = \"2\"\r\n        _diff = deathDay.getMonth() + 12 - birthDay.getMonth()\r\n        X39X41 = _diff.toString().padStart(3, \"0\")\r\n      }\r\n    } else {\r\n      _diff = deathDay.getMonth() - birthDay.getMonth()\r\n      if (_diff > 1) {\r\n        XYMD = \"2\"\r\n        X39X41 = _diff.toString().padStart(3, \"0\")\r\n      } else if (_diff === 1) {\r\n        _diff = deathDay.getDate() - birthDay.getDate()\r\n        if (_diff > 0) {\r\n          XYMD = \"1\"\r\n          X39X41 = \"001\"\r\n        } else {\r\n          XYMD = \"3\"\r\n          _diff = deathDay.getDate() + 30 - birthDay.getDate()\r\n          X39X41 = _diff.toString().padStart(3, \"0\")\r\n        }\r\n      } else {\r\n        _diff = deathDay.getDate() - birthDay.getDate()\r\n        if (_diff > 0) {\r\n          XYMD = \"3\"\r\n          X39X41 = _diff.toString().padStart(3, \"0\")\r\n        } else {\r\n          XYMD = \"3\"\r\n          X39X41 = \"000\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //Позиция 42 соответствует пункту 14 нашего свидетельства: от чего умер.\r\n  //Значению deathKind=1 (заболевание) соответствует в АСМЕ код N\r\n  //Значению deathKind=2 или 3 (несчастный случай) соответствует в АСМЕ код A\r\n  //Значению deathKind=4 (убийство) соответствует в АСМЕ код H\r\n  //Значению deathKind=5 (самоубийство) соответствует в АСМЕ код S\r\n  //Значению deathKind=6 (в ходе военных действий) соответствует в АСМЕ код A\r\n  //Значению deathKind=7 (в ходе террористических действий) соответствует в АСМЕ код A\r\n  //Значению deathKind=8 (род смерти не установлен) соответствует в АСМЕ код C\r\n  let X42 = \" \"\r\n  if (!!certificate.deathKind && certificate.deathKind > 0)\r\n    X42 = [\"N\", \"A\", \"A\", \"H\", \"S\", \"A\", \"A\", \"C\"][certificate.deathKind - 1]\r\n  //Позиция 43 соответствует одному пробелу (\" \")\r\n  //Позиция 44 - кем отвергнута запись (принимается пробел, т.е. не отвергнута)\r\n\r\n  //X45 - четвертый знак кода четвертой строки при условии, что он\r\n  //находится в пределах W00-Y34.X, кроме Y06._ и Y07._\r\n  let X45 = certificate.reasonD?.diagnosis?.ICD10\r\n  X45 =\r\n    !X45 ||\r\n    !(X45 >= \"W00\" && X45 <= \"Y34.X\") ||\r\n    X45.lastIndexOf(\"X\") > 1 ||\r\n    X45.includes(\"Y06.\") ||\r\n    X45.includes(\"Y07.\") ||\r\n    X45.length < 4\r\n      ? \" \"\r\n      : X45.substring(4, 5)\r\n\r\n  //Позиции 51-170 соответствуют кодам МКБ-10 причин смерти, записанных\r\n  //без точки (4 знакоместа) и разделенные знаком / внутри раздела 1\r\n  //пункта 18 нашего свидетельства о смерти, знаком * между разделами,\r\n  //пробелом внутри раздела 2 и с размещением кода внешней причины (первые 3 знака) в конце\r\n  //кодограммы с добавленным знаком & впереди.\r\n  let reasonA = certificate.reasonA?.diagnosis?.ICD10\r\n  reasonA = reasonA && reasonA.replace(\".\", \"\").padEnd(4, \" \")\r\n  let reasonB = certificate.reasonB?.diagnosis?.ICD10\r\n  reasonB = reasonB && reasonB.replace(\".\", \"\").padEnd(4, \" \")\r\n  let reasonC = certificate.reasonC?.diagnosis?.ICD10\r\n  reasonC = reasonC && reasonC.replace(\".\", \"\").padEnd(4, \" \")\r\n  let reasonD = certificate.reasonD?.diagnosis?.ICD10\r\n  reasonD = reasonD && reasonD.replace(\".\", \"\")\r\n  if (X45 !== \" \" && !!reasonD) {\r\n    reasonD = \"&\" + reasonD\r\n    if (reasonD.length > 4) reasonD = reasonD.slice(0, 4)\r\n  } else if (!!reasonD && X45 === \" \") reasonD = (\"&\" + reasonD).padEnd(5, \" \")\r\n  if (reasonD && reasonD.length < 4) reasonD = reasonD.padEnd(4, \" \")\r\n  const reasons = []\r\n  reasons[0] =\r\n    certificate.deathReasons.length < 1 || !withOtherReasons\r\n      ? undefined\r\n      : certificate.deathReasons[0].diagnosis?.ICD10.replace(\".\", \"\").padEnd(4, \" \")\r\n  reasons[1] =\r\n    certificate.deathReasons.length < 2 || !withOtherReasons\r\n      ? undefined\r\n      : certificate.deathReasons[1].diagnosis?.ICD10.replace(\".\", \"\").padEnd(4, \" \")\r\n  reasons[2] =\r\n    certificate.deathReasons.length < 3 || !withOtherReasons\r\n      ? undefined\r\n      : certificate.deathReasons[2].diagnosis?.ICD10.replace(\".\", \"\").padEnd(4, \" \")\r\n  reasons[3] =\r\n    certificate.deathReasons.length < 4 || !withOtherReasons\r\n      ? undefined\r\n      : certificate.deathReasons[3].diagnosis?.ICD10.replace(\".\", \"\").padEnd(4, \" \")\r\n\r\n  reasonA = reasonA && reasonA.lastIndexOf(\"X\") > 1 ? reasonA.slice(0, 3) + \" \" : reasonA\r\n  reasonB = reasonB && reasonB.lastIndexOf(\"X\") > 1 ? reasonB.slice(0, 3) + \" \" : reasonB\r\n  reasonC = reasonC && reasonC.lastIndexOf(\"X\") > 1 ? reasonC.slice(0, 3) + \" \" : reasonC\r\n\r\n  const reasons_in = reasons.map((reason) => {\r\n    return reason && reason.lastIndexOf(\"X\") > 1 ? reason.substring(0, 3) + \" \" : reason\r\n  })\r\n\r\n  //Далее позиции 90 - 170 заняты пробелами, т.е. Space(81)\r\n\r\n  //Позиция 171 - вскрытие (Y - да, N - нет, U - поле не заполнено)\r\n  //В базе код вскрытия 4, а не 1!!!!!!\r\n\r\n  const X171 = !certificate.basisDetermining ? \"U\" : certificate.basisDetermining === 4 ? \"Y\" : \"N\"\r\n  //Позиции 172-173 заняты пробелами\r\n  //Позиция 174 в случае смерти беременной (21п.)\r\n  let X174 = \"3\"\r\n  if (certificate.pregnancyConnection) X174 = [\"9\", \"3\", \"4\", \"1\"][certificate.pregnancyConnection]\r\n\r\n  //Позиция 175 занята пробелом\r\n  //Позиции 176-177 - месяц даты травмы (пункт 15 нашего свитетельства), отсутствие обозначено 99\r\n  const extReasonTime = certificate.extReasonTime?.toLocaleString()\r\n  const X176X177 = !extReasonTime ? \"99\" : extReasonTime.substring(3, 5)\r\n  //Позиции 178-179 - день даты травмы (пункт 15 нашего свитетельства), отсутствие обозначено 99\r\n  const X178X179 = !extReasonTime ? \"99\" : extReasonTime.substring(0, 2)\r\n  //Позиции 180-183 - год даты травмы (пункт 15 нашего свитетельства), отсутствие обозначено 9999\r\n  const X180X183 = !extReasonTime ? \"9999\" : extReasonTime.substring(6, 10)\r\n\r\n  //Позиции 184-187 (время травмы) заполнены 9999\r\n  //Позиция 188 (смерть от травмирования)\r\n\r\n  const X188 = !certificate.deathKind || certificate.deathKind !== 3 ? \" \" : \"Y\"\r\n\r\n  //Позиции 189 - 218 заполнены 30 пробелами, т.е. Space(30)\r\n  //Позиция 219 соответствует пятому знаку кода внешней причины (не считая точки)\r\n  let X219 = certificate.reasonD?.diagnosis?.ICD10\r\n  X219 = X219 && X219.length > 5 ? X219.substring(5, 6) : \" \"\r\n  //Позиции 220 - 231 могут быть заполнены кодом территории (п.7 свидетельства - республика, область, край)\r\n  let X220X231 = certificate.patient.person?.address?.state\r\n  X220X231 = !X220X231 ? \"            \" : X220X231.padStart(12, \" \")\r\n\r\n  //Позиции 232 - 261 для дополнительной информации заполнены пробелами, т.е. Space(30) с буквой q на конце\r\n  //ACMEAIN - объединяющая строка, формирующая входную кодограмму для внешнего модуля АСМЕ (файл с расширением ain)\r\n  const ACMEAIN =\r\n    X1X4 +\r\n    \"NC\" +\r\n    X7X12 +\r\n    \"1\" +\r\n    X14X17 +\r\n    \"1\" +\r\n    X19X21 +\r\n    X22X23 +\r\n    X24X25 +\r\n    X26X29 +\r\n    \"20042004\" +\r\n    XYMD +\r\n    X39X41 +\r\n    X42 +\r\n    \"  \" +\r\n    X45 +\r\n    \"     \" +\r\n    codogram(reasonA || \"    \", reasonB, reasonC, reasonD, reasons_in) +\r\n    X171 +\r\n    \"  \" +\r\n    X174 +\r\n    \" \" +\r\n    X176X177 +\r\n    X178X179 +\r\n    X180X183 +\r\n    \"9999\" +\r\n    X188 +\r\n    \"                              \" +\r\n    X219 +\r\n    X220X231\r\n  return ACMEAIN.padEnd(260, \" \") + \"q\"\r\n}\r\n/**\r\n * Достаем первоначальную причину смерти из кодограммы ACME Во входной\r\n * кодограмме позиции 51-54 соответствуют первоначальной причине смерти, а\r\n * позиция 45 - четвертому знаку внешней причины. При отсутствии четвертого\r\n * знака добавляется знак Х.\r\n *\r\n * @param xACME - входная кодограмма из файла *.TIN\r\n * @return первоначальную причину смерти или пустую строку\r\n */\r\nconst parse_ACME_TIN = (xACME: string) => {\r\n  let _sb = \"\"\r\n  const x45 = xACME.substring(44, 45)\r\n  const x54 = xACME.substring(53, 54)\r\n  const x51_53 = xACME.substring(50, 53)\r\n  const spX45 = \" \" === x45\r\n  const spX54 = \" \" === x54\r\n  const spX51_53 = \"   \" === x51_53\r\n  if (spX45 && !spX54) _sb = `${x51_53}.${x54}`\r\n  else if (spX45 && spX54 && !spX51_53) _sb = `${x51_53}.X`\r\n  else if (!spX45 && !spX51_53 && \"V01\" < x51_53 && \"Y98.X\" >= x51_53) _sb = `${x51_53}.${x45}`\r\n  else if (!spX45 && !spX51_53 && \"V\" > x51_53) _sb = `${x51_53}.${x54}`\r\n  return _sb\r\n}\r\n\r\n/**\r\n * экспорт массива причин в строку АСМЕAIN запрос сервиса ACME\r\n * чтение парсинг результата АСМЕTIN и его обработка.\r\n *\r\n * @return код результата операции\r\n */\r\nexport const doACME = (\r\n  certificate: Certificate,\r\n  onSucccess: (result: string) => void,\r\n  onError: (message: string) => void\r\n) => {\r\n  let _result = -1\r\n  try {\r\n    // Получаем строку входных параметров для внешнего модуля АСМЕ\r\n    const strACMEAIN1 = ACME_AIN(true, certificate)\r\n    _result = -2\r\n    const isReasonD = !!certificate.reasonD && !!certificate.reasonD.diagnosis && !!certificate.reasonD.diagnosis.ICD10\r\n    // Получаем дополнительную строку входных параметров\r\n    // без прочих причин на входе, если внешняя причина определена\r\n    const strACMEAIN2 = isReasonD ? ACME_AIN(false, certificate) : \"\"\r\n    _result = -3\r\n    // делаем запрос к сервису АСМЕ\r\n    ACMEService.runACME(strACMEAIN1 + strACMEAIN2)\r\n      .then((response) => {\r\n        if (response.data && response.data.length < 120) {\r\n          //Длина менее 120, что-то пошло не так\r\n          onError(`Сбой операции: получен некорректный ответ от АСМЕ: ${response.data}`)\r\n        } else {\r\n          // сервис вернул корректный результат\r\n          const TINs = (response.data as any).data_TIN.split(\"\\r\\n\")\r\n          console.log(\"response.data\", response.data)\r\n          if (!isReasonD) onSucccess(parse_ACME_TIN(TINs[0]))\r\n          else {\r\n            let _res = \"\"\r\n            let _alter = \"\"\r\n            if (Number.parseInt(TINs[0].slice(6, 12) + TINs[0].slice(13, 17)) === 1) {\r\n              _res = parse_ACME_TIN(TINs[0])\r\n              _alter = parse_ACME_TIN(TINs[1])\r\n            } else {\r\n              _res = parse_ACME_TIN(TINs[1])\r\n              _alter = parse_ACME_TIN(TINs[0])\r\n            }\r\n            if (_res < \"V00\" || _res > \"Y99.X\") _res = \"\"\r\n            if (\"\" === _res) _res = _alter\r\n            onSucccess(_res)\r\n          }\r\n        }\r\n      })\r\n      .catch((reason) => {\r\n        onError(`Сбой операции: код завершения - 0, подробности: ${reason}`)\r\n      })\r\n    _result = 0\r\n  } catch (error) {\r\n    onError(`Сбой операции: код завершения ${_result}, подробности: ${error}`)\r\n  }\r\n}\r\n","import { observer } from 'mobx-react-lite'\r\nimport { FC, useContext} from 'react'\r\nimport { Context } from '../..'\r\nimport { Card } from 'primereact/card'\r\nimport { DeathReason } from '../../models/FormsData/DeathReason'\r\nimport Reason from '../inputs/Reason'\r\nimport { Button } from 'primereact/button'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { doACME } from '../../utils/acme'\r\n\r\n\r\n const Section7: FC = () => {\r\n  const { certificateStore, layoutStore } = useContext(Context)   \r\n  \r\n  \r\n  const header = () => {\r\n      return <span> <span className='paragraph p-mr-1'>22(I).</span>  Причины смерти.</span>\r\n    }\r\n  const certificate = certificateStore.cert     \r\n  const mainCSSClass = (isACME: boolean) => isACME  ? \"p-fluid p-d-flex p-jc-start ACME-reason\" : \"p-fluid p-d-flex p-jc-start\"\r\n  const reasonBckecked = !!certificate.reasonB\r\n  const reasonCckecked = !!certificate.reasonC\r\n  const reasonDckecked = !!certificate.reasonD \r\n\r\n  const reasonIDExchange = (first: DeathReason, second: DeathReason) => {\r\n    if (!first.id && !second.id) return\r\n    let _id = first.id\r\n    first.id = second.id\r\n    second.id = _id      \r\n  }\r\n      \r\n  return (<>    \r\n    <Card className=\"c-section p-mr-2 p-mb-2\" header={header}>        \r\n      <div className={mainCSSClass(!!certificate.reasonA && certificate.reasonA===certificate.reasonACME)}\r\n       style={{width: '98%'}} key={`ra_${certificate.reasonA?.diagnosis?.ICD10}`}> \r\n        <div className='paragraph p-mr-1'>а) </div>           \r\n        <Reason label=\"Болезнь или состояние, непосредственно приведшее к смерти\" \r\n          deathReason={certificate.reasonA} certificate={certificate}\r\n           key={`ra2_${certificate.reasonA?.effectiveTime}`} \r\n          onChange={(reason: DeathReason | undefined)=>{ \r\n            if (reason!==certificate.reasonA ) { certificate.reasonA = reason\r\n            layoutStore.message = { severity: 'success', summary: 'Успешно', detail: 'Причина А изменена, рекомендуется сохранить изменения', life: 3000 }}\r\n           }}\r\n          disabled checked\r\n          fieldName='a_reason' \r\n          onDown={()=>{\r\n            if (!certificate.reasonA && !certificate.reasonB) return\r\n            reasonIDExchange(certificate.reasonA || new DeathReason(), \r\n            certificate.reasonB || new DeathReason())            \r\n            const reason = certificate.reasonA\r\n            certificate.reasonA = certificate.reasonB\r\n            certificate.reasonB = reason           \r\n          }}\r\n        />\r\n      </div>  \r\n      <div className={mainCSSClass(!!certificate.reasonB && certificate.reasonB===certificate.reasonACME)} style={{width: '98%'}} key={`rb_${certificate.reasonB?.diagnosis?.ICD10}`}>   \r\n        <div className='paragraph p-mr-1'>б) </div>\r\n        <Reason label=\"Патологическое состояние, которое привело к возникновению непос- редственной причины смерти\" \r\n          deathReason={certificate.reasonB} certificate={certificate}  key={`rb2_${certificate.reasonB?.id}`}\r\n          onChange={(reason: DeathReason | undefined)=>{ \r\n            if (reason!==certificate.reasonB ) \r\n            certificate.reasonB = reason \r\n          }}           \r\n          checked={reasonBckecked} \r\n          fieldName='b_reason' \r\n          onDown={()=>{\r\n            if (!certificate.reasonB && !certificate.reasonC) return\r\n            reasonIDExchange(certificate.reasonB || new DeathReason(), \r\n            certificate.reasonC || new DeathReason())\r\n            const reason = certificate.reasonB\r\n            certificate.reasonB = certificate.reasonC\r\n            certificate.reasonC = reason\r\n          }}  \r\n          onUp={()=>{\r\n            if (!certificate.reasonB && !certificate.reasonC) return\r\n            reasonIDExchange(certificate.reasonC || new DeathReason(),\r\n             certificate.reasonB || new DeathReason())\r\n            const reason = certificate.reasonB\r\n            certificate.reasonB = certificate.reasonA\r\n            certificate.reasonA = reason\r\n          }}            \r\n        />\r\n      </div>  \r\n      <div className={mainCSSClass(!!certificate.reasonC && certificate.reasonC===certificate.reasonACME)} \r\n      style={{width: '98%'}} key={`rc_${certificate.reasonC?.diagnosis?.ICD10}`}>  \r\n        <div className='paragraph p-mr-1'>в) </div>\r\n        <Reason label=\"Первоначальная причина смерти\" \r\n          deathReason={certificate.reasonC} certificate={certificate} \r\n          key={`rc2_${reasonCckecked}_${certificate.reasonC?.effectiveTime}`}\r\n          onChange={(reason: DeathReason | undefined)=>{ \r\n            if (reason !== certificate.reasonC) certificate.reasonC = reason            \r\n          }} fieldName='c_reason' checked={reasonCckecked}\r\n          onUp={()=>{\r\n            if (!certificate.reasonC && !certificate.reasonB) return\r\n            reasonIDExchange(certificate.reasonC || new DeathReason(),\r\n             certificate.reasonB || new DeathReason())\r\n            const reason = certificate.reasonC\r\n            certificate.reasonC = certificate.reasonB\r\n            certificate.reasonB = reason\r\n          }}        \r\n        />\r\n      </div>\r\n      <div className={mainCSSClass(false)}  style={{width: '98%'}} >  \r\n        <div className='paragraph p-mr-1'>г) </div>\r\n        <Reason label=\"Внешняя причина смерти при травмах и отравлениях\" \r\n          deathReason={certificate.reasonD} certificate={certificate} \r\n          key={`rd2_${reasonDckecked}_${certificate.reasonD?.effectiveTime}`}\r\n          onChange={(reason: DeathReason | undefined)=>{ if (reason!==certificate.reasonD ) certificate.reasonD = reason }} fieldName='d_reason'\r\n          checked={reasonDckecked}  \r\n          isExt       \r\n        />   \r\n      </div>  \r\n      <div className={mainCSSClass(false)+'p-fluid'}  style={{width: '98%',padding:'4px'}} >  \r\n        <Button type=\"button\" label=\"ACME\" \r\n          style={{width: '5rem', height: '2.4rem'}} \r\n          className='p-button-warning p-mr-2'\r\n          onClick={()=>{            \r\n            if (certificate.reasonA?.diagnosis?.ICD10) {\r\n              if (certificate.reasonC?.diagnosis?.ICD10 && certificate.reasonC.diagnosis.ICD10.includes('U07')) {\r\n                  certificate.changeReasonACME(certificate.reasonC.diagnosis.ICD10)\r\n                  layoutStore.message = { severity: 'success', summary: 'Успешно', detail: `${certificate.reasonC.diagnosis.ICD10}-первопричина определенная АСМЕ`, life: 3000 }\r\n              } else                 \r\n              doACME(certificate, result=>{\r\n                certificate.changeReasonACME(result)\r\n                layoutStore.message = { severity: 'success', summary: 'Успешно', detail: `${result}-первопричина определенная АСМЕ`, life: 3000 }           \r\n              },message=>{\r\n                layoutStore.message = { severity: 'error', summary: 'Сбой', detail: message, life: 7000 }\r\n              })\r\n            } else {\r\n              layoutStore.message = { severity: 'warn', summary: 'Oтклонено', detail: \"Причина а) отсутствует\", life: 7000 }\r\n            }\r\n          }}\r\n        />\r\n         <div className=\"p-field  p-grid\">       \r\n          <label htmlFor=\"ACME\" \r\n                 className=\"p-col-fixed\" \r\n                 style={{width:'226px'}}>Первоначальная причина по АСМЕ</label>   \r\n          <div className='p-col-12 p-md-2'>                  \r\n            <InputText id=\"ACME\" type=\"text\" \r\n              disabled value={certificate.reasonACME?.diagnosis?.ICD10 || ''}  \r\n            />\r\n          </div>\r\n         </div>            \r\n      </div>        \r\n    </Card>  \r\n  </>)\r\n  }\r\n  export default observer(Section7) ","import { observer } from 'mobx-react-lite'\r\nimport { FC, useContext, useEffect, useState } from 'react'\r\nimport { Context } from '../..'\r\nimport { Card } from 'primereact/card'\r\nimport '../../styles/components/Calendar.css'\r\nimport { DeathReason } from '../../models/FormsData/DeathReason'\r\nimport { IDeathReason } from '../../models/responses/IDeathReason'\r\nimport Reason from '../inputs/Reason'\r\nimport { Button } from 'primereact/button'\r\nimport { IMedicalServs } from '../../models/responses/IMedservs'\r\nimport DiagnosisService from '../../services/DiagnosisService'\r\nimport { AutoComplete } from 'primereact/autocomplete'\r\nimport { Procedure } from '../../models/FormsData/Procedure'\r\nimport { IProcedure } from '../../models/responses/IProcedure'\r\nimport { Calendar } from 'primereact/calendar'\r\nimport { Checkbox } from 'primereact/checkbox'\r\nimport { DataTable } from 'primereact/datatable'\r\nimport { Column } from 'primereact/column'\r\nimport { EXT_REASON_SUG, EXT_REASON_TIME_SUG } from '../../utils/defaults'\r\nimport { InputText } from 'primereact/inputtext'\r\n\r\n\r\n\r\n const Section8: FC = () => {\r\n  const { certificateStore, temporaryIDStore, suggestionsStore } = useContext(Context) \r\n  const checkReason = suggestionsStore.suggestions[EXT_REASON_SUG].done && suggestionsStore.suggestions[EXT_REASON_TIME_SUG].done\r\n  \r\n  \r\n  const certificate = certificateStore.cert   \r\n  const [newReason, setNewReason] = useState(new DeathReason({id: temporaryIDStore.lastDeathReasonID} as IDeathReason))\r\n  const [medicalServs, setMedicalServs] = useState<IMedicalServs[]>([]) \r\n  const [medservText, setMedservText] = useState('')  \r\n  const [medservCode, setMedservCode] = useState('')\r\n  const [procedure, setProcedure] = useState<Procedure | null>(null)  \r\n  const [dateETChecked, setDateETChecked] = useState(false)\r\n  const [diagnosChecked, setDiagnosChecked] = useState(true)\r\n  const [selectedProcedures, setSelectedProcedures] = useState<Procedure[]>([])\r\n  const [selectedReasons, setSelectedReasons] = useState<DeathReason[]>([])\r\n  useEffect(()=>{\r\n    suggestionsStore.suggestions[EXT_REASON_SUG].done = !(newReason.diagnosis === undefined && (newReason.nullFlavors.length===0 || newReason.nullFlavors.findIndex((item)=>item.parent_attr==='diagnosis')===-1))\r\n    suggestionsStore.suggestions[EXT_REASON_TIME_SUG].done = !(newReason.effectiveTime === undefined && newReason.nullFlavors.findIndex((item)=>item.parent_attr==='effective_time')===-1)\r\n  },[newReason.diagnosis, newReason.effectiveTime, suggestionsStore.suggestions, newReason.nullFlavors]) \r\n  const header = () => {\r\n      return <><span><span className='paragraph p-mr-1'>22(II).</span>Прочие состояния.</span> \r\n      <Button icon=\"pi pi-plus\" className=\"p-ml-auto p-mr-2 p-button-sm p-button-raised p-button-success\" label=\"Добавить состояние\" \r\n        disabled={!checkReason || (!newReason.diagnosis && newReason.procedures.length===0) || procedure!==null }\r\n        onClick={()=>{\r\n          if (!certificate.deathReasons.includes(newReason)) certificate.deathReasons.push(newReason)\r\n          setNewReason(new DeathReason({id: temporaryIDStore.lastDeathReasonID} as IDeathReason))                \r\n        }}\r\n      />\r\n      <Button icon=\"pi pi-minus\" className=\"p-button-sm p-button-raised p-button-danger\"  \r\n        title=\"Удалить состояние\" disabled={selectedReasons.length===0} \r\n        onClick={()=>{\r\n          let _reasons = certificate.deathReasons?.filter(val => !selectedReasons.includes(val));\r\n          certificate.deathReasons = _reasons\r\n          setSelectedReasons([])\r\n        }} />\r\n      </>\r\n    }\r\n    \r\n  const  getMedservs = (event: { query: string })=>{\r\n  const option = {} as any\r\n  if (event.query.trim().length>0) option.name_cont = event.query.trim()\r\n  if (medservCode.trim().length>0) option.s_code_start =  medservCode    \r\n  DiagnosisService.fetchMedicalServs(option).then(response=>{\r\n        if (response.data.length>0) setMedicalServs(response.data)\r\n        else setMedicalServs([])        \r\n      }).catch((reason)=>console.log(reason))    \r\n  }\r\n  const  getCodes = (event: { query: string })=>{    \r\n    if (event.query.trim().length>0) {\r\n      DiagnosisService.fetchMedicalServs({'s_code_start': event.query.trim()}).then(response=>{        \r\n        if (response.data.length>0) setMedicalServs(response.data)\r\n        else setMedicalServs([])        \r\n      }).catch((reason)=>console.log(reason))       \r\n    } \r\n  }\r\n\r\n  const setMedServValue = (e:any)=>{\r\n    if (procedure) procedure.medicalServ = e.value\r\n    else  setProcedure(new Procedure({id: temporaryIDStore.lastProcedureID, medical_serv: e.value} as IProcedure))    \r\n    setMedservText(e.value.name)\r\n    setMedservCode(e.value.s_code)              \r\n  } \r\n  const medServOptionTemplate = (option: IMedicalServs) => {\r\n        return (\r\n          <span>\r\n            <span style={{marginRight:'4px'}}>{option.s_code}</span>\r\n            <span>{option.name}</span>\r\n          </span>\r\n        )\r\n    }\r\n\r\n  const mainCSSClass = (isACME: boolean) => isACME  ? \"p-fluid p-d-flex p-jc-start ACME-reason\" : \"p-fluid p-d-flex p-jc-start\"\r\n  \r\n  const procTimeBodyTemplate = (rowData: Procedure) => {\r\n    return rowData.timeStr()\r\n  }\r\n  const reasonTimeBodyTemplate = (rowData: DeathReason) => {\r\n    let _resultStr = ''\r\n    if (rowData.effectiveTime === undefined) return _resultStr\r\n    if (rowData.years && rowData.years > 0) _resultStr += `лет:${rowData.years} `\r\n    if (rowData.months && rowData.months > 0) _resultStr += `мес: ${rowData.months}`\r\n    if (rowData.weeks && rowData.weeks > 0) _resultStr += `нед: ${rowData.weeks}`\r\n    if (rowData.days && rowData.days > 0) _resultStr += `дн: ${rowData.days}`\r\n    if (rowData.hours && rowData.hours > 0) _resultStr += `час: ${rowData.hours}`\r\n    if (rowData.minutes && rowData.minutes > 0) _resultStr += `мин: ${rowData.minutes}`\r\n    return _resultStr\r\n  }\r\n  \r\n  const reasonTextBodyTemplate = (rowData: DeathReason) => {\r\n    let _resultStr = ''\r\n    if (rowData.diagnosis) _resultStr = rowData.diagnosis.s_name+';'\r\n    if (rowData.procedures.length>0) _resultStr += rowData.procNames()\r\n    return _resultStr\r\n  }  \r\n  return (<>    \r\n    <Card className=\"c-section p-mr-2 p-mb-2\" header={header}>\r\n      <div className={mainCSSClass(false)}\r\n       style={{width: '98%'}} key={`ra_${newReason.id}_${diagnosChecked}`}>      \r\n        <div className='paragraph p-mr-1'>*)</div>\r\n        <Reason label=\"способствовавшие смерти, но не связанные с болезнью или патологическим состоянием, приведшим к ней\" \r\n          deathReason={newReason} certificate={certificate}\r\n          key={`ra2_${newReason.effectiveTime}`}           \r\n          onChange={(reason: DeathReason | undefined)=>{  \r\n            if (reason) {              \r\n              if (reason!==newReason) {\r\n                if (!reason.id) reason.id = temporaryIDStore.lastDeathReasonID\r\n                setNewReason(reason)\r\n              }  \r\n            }           \r\n          }}\r\n          onDiagnosisChecked={(checked)=>setDiagnosChecked(checked)}\r\n          checked={diagnosChecked}                                   \r\n        />                   \r\n      </div>\r\n      <div className='p-fluid p-formgrid p-grid p-add-block' style={{marginLeft:'1rem'}}>   \r\n          <div className='p-field p-col-12 p-md-9'>             \r\n            <AutoComplete id=\"procedure_text\" placeholder=\"Наименование хирургической операции\"\r\n              suggestions={medicalServs} delay={1000} dropdown \r\n              completeMethod={getMedservs} itemTemplate={medServOptionTemplate}\r\n              field=\"name\" onChange={(e) =>{ \r\n                if (e.value.s_code) setMedServValue(e)\r\n                else setMedservText(e.value)\r\n              }}\r\n              value={medservText}/>          \r\n          </div>\r\n          <div className=\"p-field p-col-12 p-md-3\">\r\n            <AutoComplete id=\"procedure_code\" placeholder=\"Код\"\r\n              suggestions={medicalServs} delay={1000} field=\"s_code\"\r\n              itemTemplate={medServOptionTemplate}\r\n              completeMethod={getCodes} onChange={(e) =>{ \r\n                 if (e.value.s_code) setMedServValue(e)\r\n                 else setMedservCode(e.value)               \r\n              }}\r\n              value={medservCode}/>          \r\n          </div>  \r\n          <div className=\"p-field p-col-12\">\r\n            <InputText id=\"procedure_alterText\" disabled={!procedure}\r\n            placeholder=\"Свое наименование, если оно отличается от официального\"\r\n               onChange={e =>{ \r\n                if (procedure) procedure.textValue = e.target.value               \r\n              }}\r\n              value={procedure?.textValue || ''}/>          \r\n          </div>       \r\n          <div className=\"p-field p-col-12  p-d-flex p-ai-center\">                          \r\n            <Calendar id=\"effectiveDate\" key={`effectiveDate${dateETChecked}`} className=\"p-mr-3\" inputStyle={{width:'12.5rem'}} \r\n              showTime={!dateETChecked} dateFormat=\"dd.mm.yy\" locale=\"ru\"\r\n              mask={dateETChecked ? '99.99.9999' : '99.99.9999 99:99'} panelStyle={{margin:'10rem'}}                           \r\n              value={procedure?.effectiveTime} \r\n              onChange={(e)=>{ \r\n                if (procedure===null) return \r\n                if (e.target.value) {                  \r\n                  procedure.effectiveTime = e.target.value as Date\r\n                } else procedure.effectiveTime =  undefined               \r\n               }}\r\n              showIcon \r\n            />            \r\n            <div className=\"p-field-checkbox\">              \r\n              <Checkbox checked={dateETChecked} \r\n                inputId=\"et_date\" \r\n                onChange={e=>{setDateETChecked(e.checked)}}\r\n              />\r\n              <label htmlFor=\"et_date\">Только дата</label>\r\n            </div>                       \r\n            <Button icon=\"pi pi-plus\" className=\"p-ml-auto p-mr-2 p-button-sm p-button-raised p-button-success\"  title=\"Добавить хир.операцию\" disabled={procedure===null || (procedure.medicalServ===undefined && procedure.textValue === undefined)} onClick={()=>{\r\n              if (procedure) { \r\n                if (newReason.procedures.findIndex(pr=>pr.guid === procedure.guid)===-1) newReason.procedures.push(procedure)\r\n                setProcedure(null) \r\n                setMedservCode('')\r\n                setMedservText('')               \r\n              }  \r\n            }} />   \r\n            <Button icon=\"pi pi-minus\" className=\"p-button-sm p-button-raised p-button-danger\"  title=\"Удалить  хир.операцию\" disabled={selectedProcedures.length===0} onClick={()=>{\r\n              let _procedures = newReason.procedures.filter(val => !selectedProcedures.includes(val));\r\n              newReason.procedures = _procedures\r\n              setSelectedProcedures([])\r\n            }} />                    \r\n          </div>\r\n          <div className=\"p-field p-col-12\">\r\n            <DataTable value={newReason.procedures} selection={selectedProcedures}\r\n              responsiveLayout=\"scroll\" dataKey={\"id\"}\r\n              className=\"p-datatable-sm\" emptyMessage=\"Операции отсутствуют\" style={{width:'100%'}} \r\n              onSelectionChange={e =>{\r\n                setSelectedProcedures(e.value)                \r\n                if (e.value && e.value.length>0) {\r\n                  const pr = e.value[0] as Procedure\r\n                  setProcedure(pr)\r\n                  setDateETChecked(pr.effectiveTime?.getHours() === 0 && pr.effectiveTime.getMinutes()=== 0)\r\n                  setMedservCode(pr.medicalServ.s_code)\r\n                  setMedservText(pr.medicalServ.name)\r\n                } else {\r\n                  setProcedure(null) \r\n                  setMedservCode('')\r\n                  setMedservText('') \r\n                }\r\n              }}  >\r\n              <Column selectionMode=\"multiple\" headerStyle={{width: '3em'}}></Column>\r\n              <Column field=\"medicalServ.name\" header=\"Наименование\"></Column>\r\n              <Column header=\"Время\" body={procTimeBodyTemplate}></Column>                            \r\n            </DataTable>\r\n          </div>  \r\n        </div> \r\n        <DataTable value={certificate.deathReasons} style={{marginTop:'8px', marginLeft:'10px'}} \r\n          className=\"p-datatable-sm\" emptyMessage=\"Состояния отсутствуют\" selection={selectedReasons}  \r\n          responsiveLayout=\"scroll\" dataKey={\"id\"} onSelectionChange={e=>{            \r\n            setSelectedReasons(e.value)            \r\n            if (e.value && e.value.length>0) setNewReason(e.value[0])\r\n            else {\r\n              setNewReason(new DeathReason({id: temporaryIDStore.lastDeathReasonID} as IDeathReason)) \r\n            }\r\n          }}>\r\n          <Column selectionMode=\"multiple\" headerStyle={{width: '3em'}}></Column>\r\n          <Column header=\"Состояние\" body={reasonTextBodyTemplate}></Column>\r\n          <Column header=\"Период времени\" body={reasonTimeBodyTemplate}></Column>\r\n          <Column field=\"diagnosis.ICD10\" header=\"Kод МКБ10\"></Column>              \r\n        </DataTable>            \r\n    </Card>  \r\n  </>)\r\n  }\r\n  export default observer(Section8) ","//Связь смерти с ДТП\r\n//OID: 1.2.643.5.1.13.13.99.2.24  Версия: 1.1\r\nexport const TRAFFIC_ACCIDENT = [\r\n  { code: 1, name: \"в течение 30 суток\" },\r\n  { code: 2, name: \"из них в течение 7 суток\" },\r\n]\r\n","//Связь смерти с беременностью\r\n//OID: 1.2.643.5.1.13.13.99.2.25  Версия: 1.2\r\nexport const PREGNANCY_CONNECTION = [\r\n  { code: 1, name: \"смерть беременной (независимо от срока и локализации)\" },\r\n  { code: 2, name: \"в процессе родов\" },\r\n  { code: 3, name: \"в течение 42 дней после окончания беременности\" },\r\n  { code: 4, name: \"в течение 43-365 дней после окончания беременности\" },\r\n]\r\n","const SEC_IN_WEEK = 604800\r\nconst SEC_IN_DAY = 86400\r\nexport interface ITimeDiff {\r\n  years: number | undefined\r\n  months: number | undefined\r\n  weeks: number | undefined\r\n  days: number | undefined\r\n  hours: number | undefined\r\n  minutes: number | undefined\r\n}\r\nexport const timeDiff = (d1: Date, d2: Date) => {\r\n  if (d2 < d1) throw Error(\"invalid dates d1 > d2\")\r\n  let latest = d2\r\n  let yearDiff = d2.getFullYear() - d1.getFullYear()\r\n  const years = yearDiff > 0 ? yearDiff : undefined\r\n  if (years) {\r\n    latest = new Date(d1.getFullYear(), latest.getMonth(), latest.getDate(), latest.getHours(), latest.getMinutes())\r\n    if (d1 > latest)\r\n      latest = new Date(\r\n        d1.getFullYear() + 1,\r\n        latest.getMonth(),\r\n        latest.getDate(),\r\n        latest.getHours(),\r\n        latest.getMinutes()\r\n      )\r\n  }\r\n\r\n  const months =\r\n    latest.getMonth() < d1.getMonth() ? 12 + latest.getMonth() - d1.getMonth() : latest.getMonth() - d1.getMonth()\r\n  if (months > 0) {\r\n    latest = new Date(d1.getFullYear(), d1.getMonth(), latest.getDate(), latest.getHours(), latest.getMinutes())\r\n    if (d1 > latest) {\r\n      if (d1.getMonth() === 12) {\r\n        latest = new Date(d1.getFullYear() + 1, 1, latest.getDate(), latest.getHours(), latest.getMinutes())\r\n      } else\r\n        latest = new Date(d1.getFullYear(), d1.getMonth() + 1, latest.getDate(), latest.getHours(), latest.getMinutes())\r\n    }\r\n  }\r\n  let diff = (latest.getTime() - d1.getTime()) / 1000\r\n  diff = Math.floor(diff)\r\n  const weeks = Math.floor(diff / SEC_IN_WEEK)\r\n  diff = diff - weeks * SEC_IN_WEEK\r\n  const days = Math.floor(diff / SEC_IN_DAY)\r\n  diff = diff - days * SEC_IN_DAY\r\n  const hours = Math.floor(diff / 3600)\r\n  diff = diff - hours * 3600\r\n  const minutes = Math.floor(diff / 60)\r\n  return {\r\n    years,\r\n    months,\r\n    weeks,\r\n    days,\r\n    hours,\r\n    minutes,\r\n  } as ITimeDiff\r\n}\r\n// for API request params objects\r\n// to remove the indefined items from nested objects as well, using a recursive\r\n// используем рекурсивную функцию очистки объектов от undefined свойств\r\nexport const removeEmpty = (obj: any) => {\r\n  let candidat = obj as Object\r\n  if (Array.prototype.isPrototypeOf(candidat)) {\r\n    return obj\r\n  }\r\n  let newObj = {} as any\r\n  Object.keys(obj).forEach((key) => {\r\n    if (obj[key] === Object(obj[key])) newObj[key] = removeEmpty(obj[key])\r\n    else if (obj[key] !== undefined) newObj[key] = obj[key]\r\n  })\r\n  return newObj\r\n}\r\n","import { removeEmpty } from \"../../utils/functions\"\r\nimport { IAudit } from \"../IAudit\"\r\nimport { IDoctor } from \"../IDoctor\"\r\nimport Doctor from \"./Doctor\"\r\n\r\n//генерит API запрос на добавление врача\r\nexport const genCreateDoctorRequest = (doctor: IDoctor) => {\r\n  let _doctor = {\r\n    id: doctor.id,\r\n    guid: doctor.guid,\r\n    position_id: doctor.position?.id,\r\n    organization_id: doctor.organization?.id,\r\n    person_attributes: {\r\n      id: doctor.person?.id,\r\n      person_name_attributes: { ...doctor.person?.person_name },\r\n      SNILS: doctor.person?.SNILS,\r\n      address_attributes: doctor.person?.address ? { ...doctor.person?.address } : undefined,\r\n      contacts_attributes:\r\n        doctor.person?.contacts && doctor.person?.contacts?.length > 0\r\n          ? doctor.person?.contacts.map((item) => item)\r\n          : undefined,\r\n    },\r\n    null_flavor_attributes:\r\n      doctor.null_flavors && doctor.null_flavors?.length > 0 ? doctor.null_flavors.map((item) => item) : undefined,\r\n  }\r\n  _doctor = removeEmpty(_doctor)\r\n  return _doctor\r\n}\r\n\r\n//Стандартные настройки JSON рендеринга модели врача\r\nexport const DOCTOR_RENDER_OPTIONS = {\r\n  render_options: { only: [\"id\", \"guid\"], include: [\"position\", \"person\", \"organization\"] },\r\n  includes: [\"position\", \"person\", \"organization\"],\r\n  organization: { only: [\"id\", \"name\"] },\r\n  position: { only: [\"id\", \"name\"] },\r\n  person: { only: [\"id\", \"SNILS\"], include: [\"person_name\", \"address\", \"contacts\"] },\r\n}\r\n\r\n//генерит API запрос на обновление врача\r\nexport const genUpdateDoctorRequest = (oldValue: IDoctor, newValue: Doctor) => {\r\n  if (oldValue.id !== newValue.id) return false\r\n  let _request = { Doctor: {}, audits: [] as IAudit[] } as any\r\n  const createAudit = (audit: IAudit) => {\r\n    let _audits = _request.audits.filter((item: IAudit) => item.field !== audit.field)\r\n    if (_audits) {\r\n      _audits.push(audit)\r\n      _request.audits = _audits\r\n    } else _request.audits.push(audit) // keep only uniq changes\r\n  }\r\n  if (oldValue.position?.id !== newValue.position?.id) {\r\n    _request.Doctor.position_id = newValue.position?.id\r\n    createAudit({\r\n      field: \"position\",\r\n      before: oldValue.position?.id + \"\",\r\n      after: newValue.position?.id + \"\",\r\n      detail: `должность: ${oldValue.position?.name} -> ${newValue.position?.name}`,\r\n    } as IAudit)\r\n  }\r\n  let _person_attributes = {} as any\r\n  const oldPerson = oldValue.person\r\n  const newPerson = newValue.person\r\n  if (oldPerson?.SNILS !== newPerson?.SNILS) {\r\n    _person_attributes.SNILS = newPerson?.SNILS\r\n    createAudit({\r\n      field: \"person.SNILS\",\r\n      before: oldPerson?.SNILS,\r\n      after: newPerson?.SNILS,\r\n      detail: `СНИЛС: ${oldPerson?.SNILS} -> ${newPerson?.SNILS}`,\r\n    } as IAudit)\r\n  }\r\n  let _person_name_attributes = {} as any\r\n  const oldFIO = oldPerson?.person_name\r\n  const newFIO = newValue.person?.fio\r\n  if (!!oldFIO && !!newFIO) {\r\n    if (oldFIO.family !== newFIO.family) {\r\n      _person_name_attributes.family = newFIO.family\r\n      createAudit({\r\n        field: \"person.person_name.family\",\r\n        before: oldFIO.family,\r\n        after: newFIO.family,\r\n        detail: `фамилия: ${oldFIO.family} -> ${newFIO.family}`,\r\n      } as IAudit)\r\n    }\r\n    if (oldFIO.given_1 !== newFIO.given_1) {\r\n      _person_name_attributes.given_1 = newFIO.given_1\r\n      createAudit({\r\n        field: \"person.person_name.given_1\",\r\n        before: oldFIO.given_1,\r\n        after: newFIO.given_1,\r\n        detail: `имя: ${oldFIO.given_1} -> ${newFIO.given_1}`,\r\n      } as IAudit)\r\n    }\r\n    if (oldFIO.given_2 !== newFIO.given_2) {\r\n      _person_name_attributes.given_2 = newFIO.given_2\r\n      createAudit({\r\n        field: \"person.person_name.given_2\",\r\n        before: oldFIO.given_2,\r\n        after: newFIO.given_2,\r\n        detail: `Отчество: ${oldFIO.given_2} -> ${newFIO.given_2}`,\r\n      } as IAudit)\r\n    }\r\n  }\r\n  if (Object.keys(_person_name_attributes).length > 0)\r\n    if (newValue.person.fio)\r\n      _person_attributes.person_name_attributes = { id: newValue.person.fio.id, ..._person_name_attributes }\r\n  const oldAddress = oldPerson.address?.streetAddressLine\r\n  const newAddress = newPerson.address?.streetAddressLine\r\n  if (oldAddress !== newAddress) {\r\n    _person_attributes.address_attributes = newPerson.address\r\n    createAudit({\r\n      field: \"person.address\",\r\n      before: oldAddress,\r\n      after: newAddress,\r\n      detail: `адрес: ${oldAddress} -> ${newAddress}`,\r\n    } as IAudit)\r\n  }\r\n  const oldContacts = oldPerson.contacts?.reduce<string>((u, item) => `${u} ${item.telcom_value}`, \"\").trim()\r\n  const newContacts = newPerson.contacts?.reduce<string>((u, item) => `${u} ${item.telcom_value}`, \"\").trim()\r\n  if (oldContacts !== newContacts) {\r\n    _person_attributes.contacts_attributes = newPerson.contacts\r\n    createAudit({\r\n      field: \"person.contacts\",\r\n      before: oldContacts,\r\n      after: newContacts,\r\n      detail: `контакты: ${oldContacts} -> ${newContacts}`,\r\n    } as IAudit)\r\n  }\r\n  const oldNullFlavors = oldPerson.null_flavors\r\n    ?.reduce<string>((u, item) => `${u} ${item.parent_attr}${item.code}`, \"\")\r\n    .trim()\r\n  const newNullFlavors = newPerson.nullFlavors\r\n    ?.reduce<string>((u, item) => `${u} ${item.parent_attr}${item.code}`, \"\")\r\n    .trim()\r\n  if (oldNullFlavors !== newNullFlavors) {\r\n    _person_attributes.null_flavor_attributes = newPerson.null_flavors_attributes()\r\n    createAudit({\r\n      field: \"person.nullFlavors\",\r\n      before: oldNullFlavors,\r\n      after: newNullFlavors,\r\n      detail: `изменены причины отсутствия информации`,\r\n    } as IAudit)\r\n  }\r\n\r\n  if (Object.keys(_person_attributes).length > 0)\r\n    _request.Doctor.person_attributes = { id: oldPerson.id, ..._person_attributes }\r\n  if (Object.keys(_request.Doctor).length > 0) {\r\n    _request.Doctor.id = newValue.id\r\n    return _request\r\n  } else return false\r\n}\r\n","//All interactions with the API for working with the doctors model\r\n//Все взаимодействия с API для работы с моделью  врачей\r\n\r\nimport { AxiosResponse } from \"axios\"\r\nimport $api, { API_URL } from \"../http\"\r\nimport { IDoctor } from \"../models/IDoctor\"\r\nimport { IReferenceId } from \"../models/IReference\"\r\nimport { DOCTOR_RENDER_OPTIONS } from \"../models/FormsData/DoctorRequest\"\r\nimport { IDoctorR } from \"../models/requests/IDoctorR\"\r\n\r\nexport default class DoctorService {\r\n  //POST request for get doctor's list\r\n  static async getDoctors(query: any): Promise<AxiosResponse<IDoctor[]>> {\r\n    return $api.post(`${API_URL}model/Doctor/`, { ...query, offset: 0, limit: 100, ...DOCTOR_RENDER_OPTIONS })\r\n  }\r\n  //POST request for get list of pasible values for Doctor.position field\r\n  static async getPositions(query: any): Promise<AxiosResponse<IReferenceId[]>> {\r\n    return $api.post(`${API_URL}model/Position/`, { q: query, offset: 0, limit: 200 })\r\n  }\r\n  //POST request for add Doctor /REST_API/v1/model/Doctor/add\r\n  static async addDoctor(doctor: IDoctorR): Promise<AxiosResponse<IDoctor>> {\r\n    return $api.post(`${API_URL}model/Doctor/add`, {\r\n      Doctor: doctor,\r\n      ...DOCTOR_RENDER_OPTIONS,\r\n    })\r\n  }\r\n\r\n  //PUT request for update Doctor /REST_API/v1/model/Doctor/:id\r\n  static async updateDoctor(request: any): Promise<AxiosResponse<IDoctor>> {\r\n    return $api.put(`${API_URL}model/Doctor/${request.Doctor.id}`, {\r\n      ...request,\r\n      ...DOCTOR_RENDER_OPTIONS,\r\n    })\r\n  }\r\n  // DELETE request for remove Doctor /REST_API/v1/model/Doctor/:id\r\n  static async removeDoctor(doctor_id: number): Promise<AxiosResponse<IDoctor>> {\r\n    return $api.delete(`${API_URL}model/Doctor/${doctor_id}`)\r\n  }\r\n}\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { IAuthenticatorR } from \"../requests/IAuthenticatorR\"\r\nimport { IAuthenticator } from \"../responses/IAuthenticator\"\r\n\r\nexport default class Authenticator implements ISerializable {\r\n  private _id?: number | undefined\r\n  private _time?: Date | undefined\r\n  private _doctorID?: number | undefined\r\n  constructor(props: IAuthenticator) {\r\n    this._id = props.id\r\n    this._doctorID = props.doctor.id\r\n    if (props.time) this._time = new Date(props.time)\r\n    else this._time = new Date()\r\n    makeAutoObservable(this)\r\n  }\r\n  get time(): Date | undefined {\r\n    return this._time\r\n  }\r\n  set time(value: Date | undefined) {\r\n    this._time = value\r\n  }\r\n  get doctorID(): number | undefined {\r\n    return this._doctorID\r\n  }\r\n  set doctorID(value: number | undefined) {\r\n    this._doctorID = value\r\n  }\r\n  get id(): number | undefined {\r\n    return this._id\r\n  }\r\n\r\n  getAttributes(): IAuthenticatorR {\r\n    let _authenticator = { time: this._time } as IAuthenticatorR\r\n    if (this._id) _authenticator.id = this._id\r\n    if (this._doctorID) _authenticator.doctor_id = this._doctorID\r\n    return _authenticator\r\n  }\r\n}\r\n","import { observer } from 'mobx-react-lite'\r\nimport { FC, useContext, useEffect, useState} from 'react'\r\nimport { Context } from '../..'\r\nimport { Card } from 'primereact/card'\r\nimport { CheckboxChangeParams } from 'primereact/checkbox'\r\nimport NullFlavorWrapper from '../NullFlavorWrapper'\r\nimport { NA, NULL_FLAVORS } from '../../utils/defaults'\r\nimport { IReference, IReferenceId } from '../../models/IReference'\r\nimport { Dropdown } from 'primereact/dropdown'\r\nimport { INullFlavorR } from '../../models/INullFlavor'\r\nimport { TRAFFIC_ACCIDENT } from '../../NSI/1.2.643.5.1.13.13.99.2.24'\r\nimport { PREGNANCY_CONNECTION } from '../../NSI/1.2.643.5.1.13.13.99.2.25'\r\nimport DoctorService from '../../services/DoctorService'\r\nimport Authenticator from '../../models/FormsData/Authenticator'\r\nimport { IAuthenticator } from '../../models/responses/IAuthenticator'\r\n\r\n const Section9: FC = () => {\r\n  const { userStore, certificateStore, layoutStore } = useContext(Context)\r\n   const certificate = certificateStore.cert \r\n  const [doctors, setDoctors] = useState<IReferenceId[] | null>(null)  \r\n  useEffect(()=>{\r\n    if (doctors===null && userStore.userInfo) {\r\n      //layoutStore.isLoading = true\r\n      DoctorService.getDoctors({       \r\n        q:{organization_id_eq: userStore.userInfo.organization.id}        \r\n      }).then(response=>{\r\n        const data = response.data.map(doctor=>{\r\n          if (!doctor.person || !doctor.person.person_name) return {id: doctor.id, name: doctor.position?.name } as IReferenceId\r\n          return {id: doctor.id, name: `${doctor.person.person_name.family} ${doctor.person.person_name.given_1} ${doctor.person.person_name.given_2} ${doctor.position?.name}`} as IReferenceId})\r\n        if (data) setDoctors(data)\r\n      }).catch((err)=>console.log('ошибка загрузки списка врачей'))//.finally(()=>layoutStore.isLoading=false)\r\n    }\r\n  },[doctors, layoutStore, userStore.userInfo])\r\n   \r\n  const optionCode = 'NA'\r\n  const options = NULL_FLAVORS.filter((item:IReference)=>optionCode.includes(item.code))  \r\n  \r\n  const header = () => {\r\n      return <span>Прочие характеристики причины смерти</span>\r\n    }\r\n  \r\n  const isTrafficAccident = !!certificate.trafficAccident || certificate.nullFlavors.findIndex((item)=>item.parent_attr==='traffic_accident')===-1\r\n  const isPregnancyConnection = !!certificate.pregnancyConnection || certificate.nullFlavors.findIndex((item)=>item.parent_attr==='pregnancy_connection')===-1  \r\n  const nullFlavorDropdnStyle = {minWidth:'210px', maxWidth:'500px', marginTop: '0.5rem', marginLeft: '-0.75rem'}\r\n  const customDropdnStyle = {minWidth:'210px', maxWidth:'500px', marginTop: '0.5rem', marginLeft: '-1.25rem'}\r\n  const customParagraphFieldStyle = {paddingTop: '0.1rem', width: '80%'} \r\n     \r\n  return (<>    \r\n      <Card className=\"c-section p-mr-2 p-mb-2\" header={header}>        \r\n          <div className=\"p-fluid p-formgrid p-grid\">\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%'}} >\r\n              <div className='paragraph p-mr-1'>23.</div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={{width: '90%'}}>                                  \r\n                <NullFlavorWrapper paraNum  checked={isTrafficAccident}                                      \r\n                  label={<label htmlFor=\"trafficAccident\">В случае смерти в результате ДТП: смерть наступила –</label>}\r\n                  setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{                      \r\n                      if (!e.checked) certificate.trafficAccident = undefined                        \r\n                      if (nullFlavors) certificate.nullFlavors = nullFlavors\r\n                    }} \r\n                  field={\r\n                    <Dropdown inputId=\"trafficAccident\" style={nullFlavorDropdnStyle} placeholder=\"Выбрать\"  \r\n                      options={TRAFFIC_ACCIDENT} optionLabel=\"name\" \r\n                      value={TRAFFIC_ACCIDENT.find((item)=> item.code === certificate.trafficAccident)} \r\n                      onChange={(e) =>certificate.trafficAccident =  e.value.code}                       \r\n                    />             \r\n                  }\r\n                  options={options} \r\n                  value={NA} \r\n                  nullFlavors={certificate.nullFlavors}  \r\n                  field_name=\"traffic_accident\"\r\n                />                               \r\n              </div>              \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%'}} >\r\n              <div className='paragraph p-mr-1'>24.</div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\"  \r\n              style={{width: '90%'}}>                                  \r\n                <NullFlavorWrapper paraNum  checked={isPregnancyConnection}                                      \r\n                  label={<label htmlFor=\"pregnancyConnection\"> В случае смерти беременной (независимо от срока и локализации) </label>}\r\n                  setCheck={(e:CheckboxChangeParams, nullFlavors: INullFlavorR[] | undefined)=>{                      \r\n                      if (!e.checked) {                        \r\n                        certificate.pregnancyConnection = undefined                        \r\n                      } \r\n                      if (nullFlavors) certificate.nullFlavors = nullFlavors\r\n                    }} \r\n                  onChange={(e:IReference,  nullFlavors: INullFlavorR[] | undefined)=>{\r\n                      if (nullFlavors) certificate.nullFlavors = nullFlavors}}\r\n                  field={\r\n                    <Dropdown inputId=\"pregnancyConnection\" style={nullFlavorDropdnStyle} placeholder=\"Выбрать\"  \r\n                      options={PREGNANCY_CONNECTION} optionLabel=\"name\" \r\n                      value={PREGNANCY_CONNECTION.find((item)=> item.code === certificate.pregnancyConnection)} \r\n                      onChange={(e) =>{\r\n                        certificate.pregnancyConnection = e.value.code}\r\n                      } \r\n                    />             \r\n                  }\r\n                  options={options} \r\n                  value={NA} \r\n                  nullFlavors={certificate.nullFlavors}  \r\n                  field_name=\"pregnancy_connection\"\r\n                />                               \r\n              </div>              \r\n            </div> \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%', paddingLeft:'0.5rem',fontWeight:600, fontSize: 'larger'}} >\r\n              Подписи \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%'}}>\r\n              <div className='paragraph p-mr-1'>25. </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={customParagraphFieldStyle}>\r\n                <label htmlFor=\"author\">Врач (фельдшер, акушерка), заполнивший Медицинское свидетельство о смерти *</label>\r\n                <Dropdown inputId=\"author\"  placeholder=\"Выбрать\" style={customDropdnStyle}                   \r\n                  optionLabel=\"name\" autoFocus className=\"p-mb-2\"  options={doctors || []} \r\n                  value={doctors?.find(item=>item.id === certificate.author?.doctorID)} showClear             \r\n                  onChange={(e) =>{\r\n                    if (e.value) { \r\n                      certificate.author = new Authenticator({doctor: e.value} as IAuthenticator)                     \r\n                    } else certificate.author = undefined                       \r\n                  }} />\r\n                <label htmlFor=\"legalAuthenticator\">Руководитель медицинской организации *</label>\r\n                <Dropdown inputId=\"legalAuthenticator\"  placeholder=\"Выбрать\" style={customDropdnStyle} \r\n                  optionLabel=\"name\" options={doctors || []} showClear\r\n                  value={doctors?.find(item=>item.id === certificate.legalAuthenticator?.doctorID)}                \r\n                  onChange={(e) =>{\r\n                    if (e.value) { \r\n                      certificate.legalAuthenticator =  new Authenticator({doctor: e.value} as IAuthenticator)                     \r\n                    } else certificate.legalAuthenticator = undefined                   \r\n                  }} />  \r\n              </div>               \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%'}}>\r\n              <div className='paragraph p-mr-1'>26. </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={customParagraphFieldStyle}>\r\n                <label htmlFor=\"authenticator\">Свидетельство проверено ответственным *</label>\r\n                <Dropdown inputId=\"authenticator\" placeholder=\"Выбрать\" style={customDropdnStyle} \r\n                  optionLabel=\"name\"  options={doctors || []} showClear\r\n                  value={doctors?.find(item=>item.id===certificate.authenticator?.doctorID)}                \r\n                  onChange={e=>{\r\n                    if (e.value) {\r\n                      certificate.authenticator =  new Authenticator({doctor: e.value} as IAuthenticator)                      \r\n                    } else certificate.authenticator = undefined\r\n                  }} \r\n                />\r\n              </div>  \r\n            </div>\r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\" style={{width: '98%', paddingLeft:'0.5rem'}} >\r\n              <em>* Заполнить в день фактического подписания бумажного носителя</em>\r\n            </div>     \r\n          </div>          \r\n      </Card>  \r\n    </>)\r\n  }\r\n  export default observer(Section9) ","import { makeAutoObservable } from \"mobx\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { IParticipantR } from \"../requests/IParticipintR\"\r\nimport { IParticipant } from \"../responses/IParticipant\"\r\nimport Identity from \"./Identity\"\r\nimport Person from \"./Person\"\r\n\r\nexport default class Participant implements ISerializable {\r\n  private _id?: number | undefined\r\n  private _person: Person\r\n  private _receiptDate: Date\r\n  private _description?: string | undefined\r\n  private _identity?: Identity | undefined\r\n  private _original: boolean\r\n  private _oldOne?: IParticipant | undefined\r\n\r\n  constructor(props = {} as IParticipant) {\r\n    this._oldOne = { ...props }\r\n    if (props.person) this._person = new Person(props.person)\r\n    else this._person = new Person()\r\n    if (props.receipt_date) this._receiptDate = new Date(props.receipt_date)\r\n    else this._receiptDate = new Date()\r\n    if (props.identity) this._identity = new Identity(props.identity)\r\n    this._id = props.id\r\n    this._description = props.description\r\n    this._original = props.original === undefined ? true : props.original\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n  getAttributes() {\r\n    const _pr = {} as IParticipantR\r\n    if (this._id) _pr.id = this._id\r\n    _pr.description = this._description\r\n    _pr.original = this._original\r\n    _pr.receipt_date = this._receiptDate?.toDateString()\r\n    if (this._person) _pr.person_attributes = this._person.getAttributes()\r\n    if (this._identity) _pr.identity_attributes = this._identity.getAttributes()\r\n    return _pr\r\n  }\r\n  get oldOne(): IParticipant | undefined {\r\n    return this._oldOne\r\n  }\r\n  get original(): boolean {\r\n    return this._original\r\n  }\r\n  set original(value: boolean) {\r\n    this._original = value\r\n  }\r\n  get identity(): Identity | undefined {\r\n    return this._identity\r\n  }\r\n  set identity(value: Identity | undefined) {\r\n    this._identity = value\r\n  }\r\n  get description(): string | undefined {\r\n    return this._description\r\n  }\r\n  set description(value: string | undefined) {\r\n    this._description = value\r\n  }\r\n  get receiptDate(): Date {\r\n    return this._receiptDate\r\n  }\r\n  set receiptDate(value: Date) {\r\n    this._receiptDate = value\r\n  }\r\n  get person(): Person {\r\n    return this._person\r\n  }\r\n  set person(value: Person) {\r\n    this._person = value\r\n  }\r\n  get id(): number | undefined {\r\n    return this._id\r\n  }\r\n}\r\n","import { observer } from \"mobx-react-lite\"\r\nimport { Button } from \"primereact/button\"\r\nimport { Calendar } from \"primereact/calendar\"\r\nimport { Card } from \"primereact/card\"\r\nimport { CheckboxChangeParams } from \"primereact/checkbox\"\r\nimport { Dropdown } from \"primereact/dropdown\"\r\nimport { InputMask } from \"primereact/inputmask\"\r\nimport { InputText } from \"primereact/inputtext\"\r\nimport { InputTextarea } from \"primereact/inputtextarea\"\r\nimport { FC, useContext, useEffect, useState } from \"react\"\r\nimport { Context } from \"../..\"\r\nimport Identity from \"../../models/FormsData/Identity\"\r\nimport Participant from \"../../models/FormsData/Participant\"\r\nimport IIdentity from \"../../models/IIdentity\"\r\nimport { IPersonName } from \"../../models/IPersonName\"\r\nimport { ID_CARD_TYPES, NA, NULL_FLAVORS, PARTIPICIPANT_DATE_SUG, PARTIPICIPANT_FIO_SUG, PARTIPICIPANT_IDENTITY_SUG, PASSPORT_RF } from \"../../utils/defaults\"\r\nimport { inputsIdentity } from \"../inputs/inputsIdentity\"\r\nimport { PersonName } from \"../inputs/PersonName\"\r\nimport NullFlavorWrapper from \"../NullFlavorWrapper\"\r\n\r\nconst Section10: FC = () => {\r\n  const { certificateStore, suggestionsStore, layoutStore } = useContext(Context)\r\n  const certificate = certificateStore.cert \r\n  const [participant] = useState(certificate.participant || new Participant())\r\n  const person = participant.person \r\n  const identity = participant.identity\r\n  const [docChecked, setDocChecked] = useState(!!participant.identity)\r\n  const [dulValue, setDulValue]  = useState(ID_CARD_TYPES.find((item)=>item.code === identity?.identityCardType))\r\n  const header = () => {\r\n      return <span>Данные получателя свидетельства</span>\r\n  }  \r\n  useEffect(()=>{\r\n    if (!!participant.person.fio?.family && !!participant.person.fio?.given_1) \r\n    suggestionsStore.suggestions[PARTIPICIPANT_FIO_SUG].done = true\r\n  },[participant.person.fio?.family, participant.person.fio?.given_1, suggestionsStore.suggestions])\r\n  useEffect(()=>{\r\n    if (!!participant.receiptDate) \r\n    suggestionsStore.suggestions[PARTIPICIPANT_DATE_SUG].done = true\r\n  },[participant.receiptDate, suggestionsStore.suggestions])\r\n  useEffect(()=>{\r\n    if (!!participant.person.SNILS || !!participant.identity) \r\n    suggestionsStore.suggestions[PARTIPICIPANT_IDENTITY_SUG].done = true\r\n  },[participant.identity, participant.person.SNILS, suggestionsStore.suggestions])\r\n\r\n  const [seriesField, numberField, depCodeField] = inputsIdentity({dulValue, identity})\r\n  const buttonDisabled = !!certificate.participant || !(suggestionsStore.suggestions[PARTIPICIPANT_IDENTITY_SUG].done \r\n      && suggestionsStore.suggestions[PARTIPICIPANT_DATE_SUG].done\r\n      && suggestionsStore.suggestions[PARTIPICIPANT_FIO_SUG].done)\r\n  \r\n\r\n  return (<>    \r\n      <Card className=\"c-section p-mr-2 p-mb-2\" header={header} style={{paddingLeft:'1rem'}}>        \r\n          <div className=\"p-fluid p-formgrid p-grid\">   \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">              \r\n              <div className='p-paragraph-field p-col-6'>\r\n                <label htmlFor=\"fio\">Фамилия, Имя, Отчество(при наличии)</label>\r\n                <PersonName personName={participant.person?.fio} submitted={false}\r\n                  onChange={(value: IPersonName)=>{                       \r\n                    participant.person.fio  = value\r\n                  }}  \r\n                />                   \r\n              </div>\r\n              <div className='p-paragraph-field p-col-5'>\r\n                <label htmlFor=\"description\">Кем приходится</label>\r\n                <InputText value={participant.description} \r\n                  placeholder=\"родств./пр-ль\"\r\n                  onChange={e=>participant.description = e.target.value}  \r\n                />                   \r\n              </div>\r\n              <div className='p-paragraph-field p-col-6'>\r\n                <label htmlFor=\"description\">Дата выдачи</label>\r\n                <Calendar id=\"dateBirth\" showIcon dateFormat='dd.mm.yy'\r\n                  locale='ru' mask='99.99.9999'                                          \r\n                  value={participant.receiptDate} \r\n                  onChange={(e)=>{\r\n                    if (e.target.value) participant.receiptDate = e.target.value as Date\r\n                  }}                         \r\n                />                   \r\n              </div>\r\n              <div className='p-paragraph-field p-col-4'> \r\n                <label htmlFor=\"snils\">СНИЛС</label> \r\n                <InputMask id=\"snils\"  \r\n                  type=\"text\" mask=\"999-999-999 99\"\r\n                  value={person?.SNILS} \r\n                  onChange={(e)=>{                     \r\n                    person.SNILS = e.value\r\n                  }}\r\n                />                             \r\n              </div>              \r\n            </div>           \r\n            <div className=\"p-field p-d-flex p-flex-wrap p-jc-start\">              \r\n              <div className='p-paragraph-field p-mr-2 p-mb-2'>\r\n                <NullFlavorWrapper\r\n                  checked={docChecked} setCheck={(e: CheckboxChangeParams) => {\r\n                    if (e.checked) {\r\n                      participant.identity = new Identity({\r\n                      identity_card_type_id: ID_CARD_TYPES[PASSPORT_RF].code,\r\n                    } as IIdentity)\r\n                    } else participant.identity = undefined\r\n                    setDocChecked(e.checked)\r\n                    } \r\n                  }\r\n                  label={<label htmlFor=\"identity_card_type\">Иной документ, удостоверяющей личность: </label>}\r\n                  field={<Dropdown id=\"identity_card_type\" value={dulValue}\r\n                    autoFocus options={ID_CARD_TYPES} optionLabel='name'\r\n                    onChange={(e) => {\r\n                      if (identity) identity.identityCardType = e.value.code\r\n                      else participant.identity = new Identity({ identity_card_type_id: e.value.code } as IIdentity)\r\n                      setDulValue(ID_CARD_TYPES.find((item) => item.code === e.value.code))\r\n                    }} />\r\n                  } \r\n                  options={[NULL_FLAVORS[NA]]}  value={NA}       \r\n                />             \r\n              </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" key={`ser_${docChecked}`} \r\n                style={{marginLeft:'1.5rem'}}>\r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"series\">Серия</label>}\r\n                  checked={docChecked && \r\n                    participant.identity?.nullFlavors.findIndex(nf=>nf.parent_attr==='series')===-1} \r\n                  setCheck={(e:CheckboxChangeParams)=>{\r\n                    if (e.checked && participant.identity) participant.identity.series = ''\r\n                    else if (participant.identity) participant.identity.series = undefined                                    \r\n                  }}                 \r\n                  field={seriesField}\r\n                  field_name='series'\r\n                  options={[NULL_FLAVORS[NA]]} value={NA}                  \r\n                  lincked={!docChecked}                                   \r\n                />  \r\n              </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" key={`num_${docChecked}`}\r\n                style={{marginLeft:'1.5rem'}} >\r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"docNumber\">Номер</label>}\r\n                  checked={docChecked}                 \r\n                  field={numberField}\r\n                  options={[NULL_FLAVORS[NA]]} value={NA} \r\n                  lincked                                      \r\n                />                    \r\n              </div>\r\n              <div className=\"p-paragraph-field p-mr-3 p-mb-2\" key={`org_${docChecked}`} style={{marginLeft:'1.5rem'}} >\r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"issueOrgName\">Кем выдан</label>}\r\n                  checked={docChecked}                   \r\n                  field={\r\n                    <InputTextarea id=\"issueOrgName\" value={identity?.issueOrgName} \r\n                      cols={65} rows={2}  \r\n                      onChange={(e)=>{if (identity) identity.issueOrgName = e.target.value }}\r\n                    />}\r\n                  options={[NULL_FLAVORS[NA]]} value={NA} \r\n                  lincked                                      \r\n                />                    \r\n              </div>\r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" style={{marginLeft:'1.5rem'}} key={`pdiv5_${docChecked}`}>\r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"issueDate\">Когда выдан</label>}\r\n                  checked={docChecked}                   \r\n                  field={<Calendar  id=\"issueDate\" className=\"p-mr-2\" \r\n                    dateFormat={\"dd.mm.yy\"} \r\n                    locale=\"ru\" mask=\"99.99.9999\"                    \r\n                    value={identity?.issueOrgDate}\r\n                    onChange={(e)=>{if (identity) identity.issueOrgDate = e.target.value as Date | undefined}}\r\n                    showIcon />\r\n                  }                  \r\n                  options={[NULL_FLAVORS[NA]]} value={NA} \r\n                  lincked                                       \r\n                /> \r\n              </div>  \r\n              <div className=\"p-paragraph-field p-mr-2 p-mb-2\" \r\n                key={`code_${docChecked}`} style={{marginLeft:'1.5rem'}}> \r\n                <NullFlavorWrapper                   \r\n                  label={<label htmlFor=\"depCode\">Код подразделения</label>}\r\n                  checked={docChecked} \r\n                  setCheck={(e:CheckboxChangeParams)=>{\r\n                    if (e.checked && participant.identity) participant.identity.issueOrgCode = ''\r\n                    else if (participant.identity) participant.identity.issueOrgCode = undefined                                  \r\n                  }}                   \r\n                  field={depCodeField}\r\n                  options={[NULL_FLAVORS[NA]]} value={NA}                   \r\n                  lincked={!docChecked}\r\n                  field_name=\"issueOrgCode\"                                     \r\n                />                    \r\n              </div> \r\n              <Button type=\"button\" label=\"ВЫДАТЬ\" style={{height:'2.4rem'}}\r\n                className=\"p-button-raised p-button-success\"\r\n                disabled={buttonDisabled}\r\n                onClick={()=>{\r\n                  certificate.participant = participant\r\n                  certificate.issueDate = participant.receiptDate\r\n                  layoutStore.message = { severity: 'success', summary: 'Успешно', detail: 'Данные получателя введены, сохраните изменения, после чего будет возможна печать.', life: 3000 }\r\n                }}   \r\n              />             \r\n            </div>           \r\n           </div>           \r\n          </Card>\r\n        </>)\r\n\r\n}\r\nexport default observer(Section10)    ","export const DEFAULT_RENDER_OPTIONS = { except: [\"updated_at\", \"created_at\"] }\r\n","import { DEFAULT_RENDER_OPTIONS } from \"./default\"\r\n\r\nexport const NULLFLAVORABLE_RENDER_OPTIONS = {\r\n  ...DEFAULT_RENDER_OPTIONS,\r\n  include: [\"null_flavors\"],\r\n}\r\n","export const DEFAULT_AUTHENTICATOR_RENDER_OPTIONS = {\r\n  only: [\"id\", \"doctor\", \"time\"],\r\n  include: [\"doctor\"],\r\n}\r\n","export const LETTERED_DEATH_REASON_RENDER_OPTIONS = {\r\n  except: [\"diagnosis_id\", \"updated_at\", \"created_at\"],\r\n  include: [\"diagnosis\", \"null_flavors\"],\r\n}\r\n","import { AxiosResponse } from \"axios\"\r\nimport $api, { API_URL } from \"../http\"\r\nimport { NULLFLAVORABLE_RENDER_OPTIONS } from \"../models/render_options/address\"\r\nimport { DEFAULT_AUTHENTICATOR_RENDER_OPTIONS } from \"../models/render_options/Authenticator\"\r\nimport { CHILD_INFO_RENDER_OPTIONS } from \"../models/render_options/child_info\"\r\nimport { DEFAULT_RENDER_OPTIONS } from \"../models/render_options/default\"\r\nimport { SHORT_DOCTOR_RENDER_OPTIONS } from \"../models/render_options/Doctor\"\r\nimport { EXTERNAL_DEATH_REASON_RENDER_OPTIONS } from \"../models/render_options/external_death_reason\"\r\nimport { LETTERED_DEATH_REASON_RENDER_OPTIONS } from \"../models/render_options/lettered_reason\"\r\nimport { OTHER_REASON_RENDER_OPTIONS } from \"../models/render_options/other_reason\"\r\nimport { PARTICIPANT_RENDER_OPTIONS } from \"../models/render_options/Participant\"\r\nimport { PATIENT_RENDER_OPTIONS } from \"../models/render_options/patient\"\r\nimport { PERSON_RENDER_OPTIONS } from \"../models/render_options/person\"\r\nimport { PROCEDURE_RENDER_OPTIONS } from \"../models/render_options/procedure\"\r\nimport { RELATED_SUBJECT_RENDER_OPTIONS } from \"../models/render_options/related_subject\"\r\nimport { ICertificateR } from \"../models/requests/ICertificateR\"\r\nimport { ICertificate } from \"../models/responses/ICertificate\"\r\n\r\nexport const CERTIFICATE_FULL_RENDER_OPTIONS = {\r\n  render_options: {\r\n    except: [\"custodian_id\", \"patient_id\", \"updated_at\"],\r\n    include: [\r\n      \"patient\",\r\n      \"author\",\r\n      \"legal_authenticator\",\r\n      \"audithor\",\r\n      \"a_reason\",\r\n      \"b_reason\",\r\n      \"c_reason\",\r\n      \"d_reason\",\r\n      \"death_addr\",\r\n      \"child_info\",\r\n      \"custodian\",\r\n      \"death_reasons\",\r\n      \"participant\",\r\n      \"null_flavors\",\r\n      \"latest_one\",\r\n    ],\r\n  },\r\n  includes: [\r\n    \"patient\",\r\n    \"participant\",\r\n    \"custodian\",\r\n    \"a_reason\",\r\n    \"b_reason\",\r\n    \"c_reason\",\r\n    \"d_reason\",\r\n    \"death_addr\",\r\n    \"child_info\",\r\n    \"death_reasons\",\r\n    \"latest_one\",\r\n  ],\r\n  death_addr: NULLFLAVORABLE_RENDER_OPTIONS,\r\n  patient: PATIENT_RENDER_OPTIONS,\r\n  identity: NULLFLAVORABLE_RENDER_OPTIONS,\r\n  address: NULLFLAVORABLE_RENDER_OPTIONS,\r\n  a_reason: LETTERED_DEATH_REASON_RENDER_OPTIONS,\r\n  b_reason: LETTERED_DEATH_REASON_RENDER_OPTIONS,\r\n  c_reason: LETTERED_DEATH_REASON_RENDER_OPTIONS,\r\n  d_reason: EXTERNAL_DEATH_REASON_RENDER_OPTIONS,\r\n  author: DEFAULT_AUTHENTICATOR_RENDER_OPTIONS,\r\n  legal_authenticator: DEFAULT_AUTHENTICATOR_RENDER_OPTIONS,\r\n  audithor: DEFAULT_AUTHENTICATOR_RENDER_OPTIONS,\r\n  death_reasons: OTHER_REASON_RENDER_OPTIONS,\r\n  procedures: PROCEDURE_RENDER_OPTIONS,\r\n  child_info: CHILD_INFO_RENDER_OPTIONS,\r\n  related_subject: RELATED_SUBJECT_RENDER_OPTIONS,\r\n  addr: NULLFLAVORABLE_RENDER_OPTIONS,\r\n  person: PERSON_RENDER_OPTIONS,\r\n  doctor: SHORT_DOCTOR_RENDER_OPTIONS,\r\n  participant: PARTICIPANT_RENDER_OPTIONS,\r\n  position: { only: [\"id\", \"name\"] },\r\n  custodian: { only: [\"id\", \"name\"] },\r\n  null_flavors: DEFAULT_RENDER_OPTIONS,\r\n}\r\n\r\nexport default class CertificateService {\r\n  //POST request for get Certificate's list\r\n  static async getCertificates(query: any, first = 0, last = 9): Promise<AxiosResponse<ICertificate[]>> {\r\n    return $api.post(`${API_URL}model/Certificate/`, {\r\n      ...query,\r\n      offset: first,\r\n      limit: last - first + 1,\r\n      ...CERTIFICATE_FULL_RENDER_OPTIONS,\r\n    })\r\n  }\r\n\r\n  // POST request for get Certificate's count\r\n  static async getCount(query: any): Promise<AxiosResponse<number>> {\r\n    return $api.post(`${API_URL}model/Certificate/`, { ...query, count: \"1\" })\r\n  }\r\n\r\n  //POST request for add  /REST_API/v1/model/Certificate/add\r\n  static async addCertificate(certificate: ICertificateR): Promise<AxiosResponse<ICertificate>> {\r\n    return $api.post(`${API_URL}model/Certificate/add`, {\r\n      Certificate: certificate,\r\n      ...CERTIFICATE_FULL_RENDER_OPTIONS,\r\n    })\r\n  }\r\n\r\n  //PUT request for update Certificate /REST_API/v1/model/Certificate/:id\r\n  static async updateCertificate(request: any): Promise<AxiosResponse<ICertificate>> {\r\n    return $api.put(`${API_URL}model/Certificate/${request.Certificate.id}`, {\r\n      ...request,\r\n      ...CERTIFICATE_FULL_RENDER_OPTIONS,\r\n    })\r\n  }\r\n  // DELETE request for remove Certificate /REST_API/v1/model/Certificate/:id\r\n  static async removeCertificate(certificate_id: number): Promise<AxiosResponse<ICertificate>> {\r\n    return $api.delete(`${API_URL}model/Certificate/${certificate_id}`)\r\n  }\r\n  // request for get CDA version of Certificate /REST_API/v1/clinical_document/:id\r\n  static async getCDA(certificate_id: number): Promise<AxiosResponse<string>> {\r\n    return $api.get(`${API_URL}clinical_document/${certificate_id}`)\r\n  }\r\n}\r\n","export const PATIENT_RENDER_OPTIONS = {\r\n  except: [\"person_id\", \"updated_at\", \"created_at\"],\r\n  include: [\"person\", \"identity\", \"null_flavors\"],\r\n}\r\n","export const EXTERNAL_DEATH_REASON_RENDER_OPTIONS = {\r\n  except: [\"ext_diagnosis_id\", \"updated_at\", \"created_at\"],\r\n  include: [\"ext_diagnosis\", \"null_flavors\"],\r\n}\r\n","export const OTHER_REASON_RENDER_OPTIONS = {\r\n  except: [\"diagnosis_id\", \"updated_at\", \"created_at\"],\r\n  include: [\"diagnosis\", \"procedures\", \"null_flavors\"],\r\n}\r\n","export const PROCEDURE_RENDER_OPTIONS = {\r\n  except: [\"medical_serv_id\", \"updated_at\", \"created_at\"],\r\n  include: [\"medical_serv\", \"null_flavors\"],\r\n}\r\n","export const CHILD_INFO_RENDER_OPTIONS = {\r\n  except: [\"related_subject_id\", \"updated_at\", \"created_at\"],\r\n  include: [\"related_subject\", \"address\", \"null_flavors\"],\r\n}\r\n","export const RELATED_SUBJECT_RENDER_OPTIONS = {\r\n  except: [\"person_name_id\", \"updated_at\", \"created_at\"],\r\n  include: [\"person_name\", \"addr\", \"null_flavors\"],\r\n}\r\n","export const PERSON_RENDER_OPTIONS = {\r\n  except: [\"created_at\", \"updated_at\"],\r\n  include: [\"person_name\", \"address\", \"null_flavors\"],\r\n}\r\n","export const SHORT_DOCTOR_RENDER_OPTIONS = {\r\n  only: [\"id\", \"person_name\", \"position\"],\r\n  include: [\"person_name\", \"position\"],\r\n}\r\n","export const PARTICIPANT_RENDER_OPTIONS = {\r\n  except: [\"person_id\", \"certificate_id\", \"updated_at\", \"created_at\"],\r\n  include: [\"person\", \"identity\"],\r\n}\r\n","export const STATUS_OK = \"Действителен\"\r\nfunction CertificateAdjuster() {}\r\nCertificateAdjuster.prototype.checkQuotes = function (str) {\r\n  var result = 0,\r\n    i = 0\r\n  for (i; i < str.length; i++) if (str[i] === '\"') result++\r\n  return !(result % 2)\r\n}\r\n\r\nCertificateAdjuster.prototype.extract = function (from, what) {\r\n  let certName = \"\"\r\n\r\n  var begin = from.indexOf(what)\r\n\r\n  if (begin >= 0) {\r\n    var end = from.indexOf(\", \", begin)\r\n    while (end > 0) {\r\n      if (this.checkQuotes(from.substr(begin, end - begin))) break\r\n      end = from.indexOf(\", \", end + 1)\r\n    }\r\n    certName = end < 0 ? from.substr(begin) : from.substr(begin, end - begin)\r\n  }\r\n\r\n  return certName\r\n}\r\n\r\nCertificateAdjuster.prototype.Print2Digit = function (digit) {\r\n  return digit < 10 ? \"0\" + digit : digit\r\n}\r\n\r\nCertificateAdjuster.prototype.GetCertDate = function (paramDate) {\r\n  var certDate = new Date(paramDate)\r\n  return (\r\n    this.Print2Digit(certDate.getUTCDate()) +\r\n    \".\" +\r\n    this.Print2Digit(certDate.getUTCMonth() + 1) +\r\n    \".\" +\r\n    certDate.getFullYear() +\r\n    \" \" +\r\n    this.Print2Digit(certDate.getUTCHours()) +\r\n    \":\" +\r\n    this.Print2Digit(certDate.getUTCMinutes()) +\r\n    \":\" +\r\n    this.Print2Digit(certDate.getUTCSeconds())\r\n  )\r\n}\r\n\r\nCertificateAdjuster.prototype.GetCertName = function (certSubjectName) {\r\n  return this.extract(certSubjectName, \"CN=\")\r\n}\r\n\r\nCertificateAdjuster.prototype.GetIssuer = function (certIssuerName) {\r\n  return this.extract(certIssuerName, \"CN=\")\r\n}\r\n\r\nCertificateAdjuster.prototype.GetCertInfoString = function (certSubjectName, certFromDate) {\r\n  return this.extract(certSubjectName, \"CN=\") + \"; Выдан: \" + this.GetCertDate(certFromDate)\r\n}\r\n\r\n// Получаем ИНФУ о ЭЦП Browser plug-in и версии Криптопровайдера\r\nexport async function CheckForPlugIn() {\r\n  let result = {\r\n    PlugInEnabled: false,\r\n    PlugInEnabledTxt: \"ЭЦП Browser plug-in - не загружен\",\r\n    CspEnabled: false,\r\n    CspEnabledTxt: \"Криптопровайдер - не загружен\",\r\n  }\r\n  async function getVersion(ObjectVersion) {\r\n    if (typeof ObjectVersion == \"string\") return result\r\n    return await window.cadesplugin.async_spawn(function* () {\r\n      try {\r\n        result.PlugInVersionTxt = \"Версия плагина: \" + (yield ObjectVersion.toString())\r\n        result.PlugInEnabled = true\r\n        var oAbout = yield window.cadesplugin.CreateObjectAsync(\"CAdESCOM.About\")\r\n        var ver = yield oAbout.CSPVersion(\"\", 80)\r\n        var ret = (yield ver.MajorVersion) + \".\" + (yield ver.MinorVersion) + \".\" + (yield ver.BuildVersion)\r\n        if (ret) result.CSPVersionTxt = \"Версия криптопровайдера: \" + ret\r\n        var sCSPName = yield oAbout.CSPName(80)\r\n        result.CspEnabled = true\r\n        result.CspEnabledTxt = \"Криптопровайдер - загружен\"\r\n        result.CSPNameTxt = \"Криптопровайдер: \" + sCSPName\r\n      } catch (err) {\r\n        result.CspEnabledTxt = \"Криптопровайдер - не загружен: \" + err.message\r\n      }\r\n      return result\r\n    }, result)\r\n  }\r\n  return await window.cadesplugin.async_spawn(function* () {\r\n    const oAbout = yield window.cadesplugin.CreateObjectAsync(\"CAdESCOM.About\")\r\n    if (oAbout) {\r\n      result.PlugInEnabledTxt = \"ЭЦП Browser plug-in - загружен\"\r\n      const CurrentPluginVersion = yield oAbout.PluginVersion\r\n      result = yield getVersion(CurrentPluginVersion)\r\n    }\r\n    return result\r\n  }, result)\r\n}\r\n\r\n// function onCertificateSelected(event) {\r\n//   cadesplugin.async_spawn(function* (args) {\r\n//     var selectedCertID = args[0][args[0].selectedIndex].value\r\n//     var certificate = global_selectbox_container[selectedCertID]\r\n//     FillCertInfo_Async(certificate, event.target.boxId, global_isFromCont[selectedCertID])\r\n//   }, event.target) //cadesplugin.async_spawn\r\n// }\r\nconst CertStatusEmoji = (isValid) => (isValid ? \"\\u2705\" : \"\\u274C\")\r\n// получаем сертификаты из хранилища\r\n\r\nasync function getESCertInfo(cert) {\r\n  return await window.cadesplugin.async_spawn(function* () {\r\n    let oOpt = {}\r\n    const Now = Date.now()\r\n    const ValidFromDate = new Date(yield cert.ValidFromDate)\r\n    const ValidToDate = new Date(yield cert.ValidToDate)\r\n    const hasPrivateKey = yield cert.HasPrivateKey()\r\n    let IsValid = true\r\n    try {\r\n      const Validator = yield cert.IsValid()\r\n      IsValid = yield Validator.Result\r\n    } catch (ex) {\r\n      alert(\"Ошибка при чтении сертификата ЭЦП: \" + window.cadesplugin.getLastError(ex))\r\n    }\r\n    if (Now < ValidFromDate.getTime()) {\r\n      oOpt.status = \"Срок действия не наступил\"\r\n    } else if (Now > ValidToDate.getTime()) {\r\n      oOpt.status = \"Срок действия истек\"\r\n    } else if (!hasPrivateKey) {\r\n      oOpt.status = \"Нет привязки к закрытому ключу\"\r\n    } else if (!IsValid) {\r\n      oOpt.status =\r\n        \"Ошибка при проверке цепочки сертификатов. Возможно на компьютере не установлены сертификаты УЦ, выдавшего ваш сертификат\"\r\n    } else {\r\n      oOpt.status = STATUS_OK\r\n    }\r\n    try {\r\n      const emoji = CertStatusEmoji(IsValid === STATUS_OK)\r\n      oOpt.text = emoji + new CertificateAdjuster().GetCertInfoString(yield cert.SubjectName, ValidFromDate)\r\n      oOpt.serialNumber = yield cert.SerialNumber\r\n    } catch (ex) {\r\n      alert(\"Ошибка при чтении сертификата ЭЦП: \" + window.cadesplugin.getLastError(ex))\r\n    }\r\n    return oOpt\r\n  })\r\n}\r\nexport async function FillCAdESList() {\r\n  return await window.cadesplugin.async_spawn(function* () {\r\n    var MyStoreExists = true\r\n    try {\r\n      var oStore = yield window.cadesplugin.CreateObjectAsync(\"CAdESCOM.Store\")\r\n      if (!oStore) {\r\n        alert(\"Ошибка доступа к хранилищу сертификатов ЭЦП\")\r\n        return false\r\n      }\r\n      yield oStore.Open()\r\n    } catch (ex) {\r\n      alert(\"Ошибка открытия хранилища сертификатов ЭЦП\")\r\n      MyStoreExists = false\r\n    }\r\n    let result = {\r\n      certsList: [],\r\n      infoList: [],\r\n    }\r\n    let certs = undefined\r\n    let certCnt = 0\r\n    if (MyStoreExists) {\r\n      try {\r\n        certs = yield oStore.Certificates\r\n        certCnt = yield certs.Count\r\n      } catch (ex) {\r\n        result.err = \"Ошибка при получении связки ЭЦП-сертификатов или их числа: \" + window.cadesplugin.getLastError(ex)\r\n      }\r\n      for (var i = 1; i <= certCnt; i++) {\r\n        try {\r\n          const cert = yield certs.Item(i)\r\n          result.certsList.push(cert)\r\n        } catch (ex) {\r\n          result.err = \"Ошибка при перечислении ЭЦП-сертификатов хранилища: \" + window.cadesplugin.getLastError(ex)\r\n        }\r\n      }\r\n      yield oStore.Close()\r\n    }\r\n\r\n    //В версии плагина 2.0.13292+ есть возможность получить сертификаты из\r\n    //закрытых ключей и не установленных в хранилище\r\n    try {\r\n      yield oStore.Open(window.cadesplugin.CADESCOM_CONTAINER_STORE)\r\n      const certsEXT = yield oStore.Certificates\r\n      for (var k = 1; k < certsEXT.length; k++) {\r\n        const cert = yield certsEXT.Item(k)\r\n        //Проверяем не добавляли ли мы такой сертификат уже?\r\n        let found = false\r\n        for (var j = 0; j < certs.length; j++) {\r\n          if ((yield certs[j].SerialNumber) === (yield cert.SerialNumber)) {\r\n            found = true\r\n            break\r\n          }\r\n        }\r\n        if (found) continue\r\n        result.certsList.push(cert)\r\n      }\r\n      for (i = 0; i < result.certsList.length; i++) {\r\n        try {\r\n          //const cert = yield\r\n          const option_info = yield getESCertInfo(result.certsList[i])\r\n          if (option_info) result.infoList.push({ ...option_info })\r\n        } catch (ex) {\r\n          result.err = \"Ошибка при чтении списка ЭЦП-сертификатов: \" + window.cadesplugin.getLastError(ex)\r\n        }\r\n      }\r\n      yield oStore.Close()\r\n      return result\r\n    } catch (ex) {\r\n      alert(\"Ошибка при перечислении ЭЦП-сертификатов контенера\")\r\n    }\r\n  })\r\n}\r\n\r\nexport function SignCadesXML_Async(certificate, dataToSign, signatureType) {\r\n  let result = {}\r\n  window.cadesplugin.async_spawn(\r\n    function* (arg) {\r\n      if (!certificate) {\r\n        alert(\"Select certificate\")\r\n        return false\r\n      }\r\n\r\n      try {\r\n        //FillCertInfo_Async(certificate);\r\n        var errormes = \"\"\r\n        try {\r\n          var oSigner = yield window.cadesplugin.CreateObjectAsync(\"CAdESCOM.CPSigner\")\r\n        } catch (err) {\r\n          errormes = \"Failed to create CAdESCOM.CPSigner: \" + err.number\r\n          throw errormes\r\n        }\r\n        if (oSigner) {\r\n          yield oSigner.propset_Certificate(certificate)\r\n        } else {\r\n          errormes = \"Failed to create CAdESCOM.CPSigner\"\r\n          throw errormes\r\n        }\r\n        var oSignedXML = yield window.cadesplugin.CreateObjectAsync(\"CAdESCOM.SignedXML\")\r\n\r\n        var signMethod = \"\"\r\n        var digestMethod = \"\"\r\n\r\n        var pubKey = yield certificate.PublicKey()\r\n        var algo = yield pubKey.Algorithm\r\n        var algoOid = yield algo.Value\r\n        if (algoOid === \"1.2.643.7.1.1.1.1\") {\r\n          // алгоритм подписи ГОСТ Р 34.10-2012 с ключом 256 бит\r\n          signMethod = \"urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34102012-gostr34112012-256\"\r\n          digestMethod = \"urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34112012-256\"\r\n        } else if (algoOid === \"1.2.643.7.1.1.1.2\") {\r\n          // алгоритм подписи ГОСТ Р 34.10-2012 с ключом 512 бит\r\n          signMethod = \"urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34102012-gostr34112012-512\"\r\n          digestMethod = \"urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34112012-512\"\r\n        } else if (algoOid === \"1.2.643.2.2.19\") {\r\n          // алгоритм ГОСТ Р 34.10-2001\r\n          signMethod = \"urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34102001-gostr3411\"\r\n          digestMethod = \"urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr3411\"\r\n        } else {\r\n          errormes =\r\n            \"Данная демо страница поддерживает XML подпись сертификатами с алгоритмом ГОСТ Р 34.10-2012, ГОСТ Р 34.10-2001\"\r\n          throw errormes\r\n        }\r\n\r\n        var CADESCOM_XML_SIGNATURE_TYPE_ENVELOPED = 0 | arg[1] //arg[1] = signatureType\r\n        if (arg[1] > window.cadesplugin.CADESCOM_XADES_BES) {\r\n          var tspService = document.getElementById(\"TSPServiceTxtBox\").value\r\n          yield oSigner.propset_TSAAddress(tspService)\r\n        }\r\n        if (dataToSign) {\r\n          // Данные на подпись ввели\r\n          yield oSignedXML.propset_Content(dataToSign)\r\n        }\r\n        yield oSignedXML.propset_SignatureType(CADESCOM_XML_SIGNATURE_TYPE_ENVELOPED)\r\n        yield oSignedXML.propset_SignatureMethod(signMethod)\r\n        yield oSignedXML.propset_DigestMethod(digestMethod)\r\n\r\n        try {\r\n          result.signature = yield oSignedXML.Sign(oSigner)\r\n        } catch (err) {\r\n          errormes = \"Не удалось создать подпись из-за ошибки: \" + window.cadesplugin.getLastError(err)\r\n          throw errormes\r\n        }\r\n\r\n        result.signatureTxt = \"Подпись сформирована успешно:\"\r\n      } catch (err) {\r\n        result.signatureTxt = \"Возникла ошибка:\" + err\r\n      }\r\n      return result\r\n    },\r\n    certificate,\r\n    dataToSign,\r\n    signatureType\r\n  ) //cadesplugin.async_spawn\r\n}\r\n\r\nexport function FillCertInfo_Async(certificate, certBoxId, isFromContainer) {\r\n  var BoxId\r\n  var field_prefix\r\n  if (typeof certBoxId == \"undefined\" || certBoxId === \"CertListBox\") {\r\n    BoxId = \"cert_info\"\r\n    field_prefix = \"\"\r\n  } else if (certBoxId === \"CertListBox1\") {\r\n    BoxId = \"cert_info1\"\r\n    field_prefix = \"cert_info1\"\r\n  } else if (certBoxId === \"CertListBox2\") {\r\n    BoxId = \"cert_info2\"\r\n    field_prefix = \"cert_info2\"\r\n  } else {\r\n    BoxId = certBoxId\r\n    field_prefix = certBoxId\r\n  }\r\n  window.cadesplugin.async_spawn(\r\n    function* (args) {\r\n      var Adjust = new CertificateAdjuster()\r\n\r\n      var ValidToDate = new Date(yield args[0].ValidToDate)\r\n      var ValidFromDate = new Date(yield args[0].ValidFromDate)\r\n      var Validator\r\n      var IsValid = false\r\n      //если попадется сертификат с неизвестным алгоритмом\r\n      //тут будет исключение. В таком сертификате просто пропускаем такое поле\r\n      try {\r\n        Validator = yield args[0].IsValid()\r\n        IsValid = yield Validator.Result\r\n      } catch (e) {}\r\n      var hasPrivateKey = yield args[0].HasPrivateKey()\r\n      var Now = new Date()\r\n\r\n      document.getElementById(args[1]).style.display = \"\"\r\n      document.getElementById(args[2] + \"subject\").innerHTML =\r\n        \"Владелец: <b>\" + Adjust.GetCertName(yield args[0].SubjectName) + \"<b>\"\r\n      document.getElementById(args[2] + \"issuer\").innerHTML =\r\n        \"Издатель: <b>\" + Adjust.GetIssuer(yield args[0].IssuerName) + \"<b>\"\r\n      document.getElementById(args[2] + \"from\").innerHTML = \"Выдан: <b>\" + Adjust.GetCertDate(ValidFromDate) + \" UTC<b>\"\r\n      document.getElementById(args[2] + \"till\").innerHTML =\r\n        \"Действителен до: <b>\" + Adjust.GetCertDate(ValidToDate) + \" UTC<b>\"\r\n      var pubKey = yield args[0].PublicKey()\r\n      var algo = yield pubKey.Algorithm\r\n      var fAlgoName = yield algo.FriendlyName\r\n      document.getElementById(args[2] + \"algorithm\").innerHTML = \"Алгоритм ключа: <b>\" + fAlgoName + \"<b>\"\r\n      if (hasPrivateKey) {\r\n        var oPrivateKey = yield args[0].PrivateKey\r\n        var sProviderName = yield oPrivateKey.ProviderName\r\n        document.getElementById(args[2] + \"provname\").innerHTML = \"Криптопровайдер: <b>\" + sProviderName + \"<b>\"\r\n        try {\r\n          var sPrivateKeyLink = yield oPrivateKey.UniqueContainerName\r\n          document.getElementById(args[2] + \"privateKeyLink\").innerHTML =\r\n            \"Ссылка на закрытый ключ: <b>\" + sPrivateKeyLink + \"<b>\"\r\n        } catch (e) {\r\n          document.getElementById(args[2] + \"privateKeyLink\").innerHTML =\r\n            \"Ссылка на закрытый ключ: <b>\" + e.message + \"<b>\"\r\n        }\r\n      } else {\r\n        document.getElementById(args[2] + \"provname\").innerHTML = \"Криптопровайдер:<b>\"\r\n        document.getElementById(args[2] + \"privateKeyLink\").innerHTML = \"Ссылка на закрытый ключ:<b>\"\r\n      }\r\n      if (Now < ValidFromDate) {\r\n        document.getElementById(args[2] + \"status\").innerHTML =\r\n          'Статус: <span style=\"color:red; font-weight:bold; font-size:16px\"><b>Срок действия не наступил</b></span>'\r\n      } else if (Now > ValidToDate) {\r\n        document.getElementById(args[2] + \"status\").innerHTML =\r\n          'Статус: <span style=\"color:red; font-weight:bold; font-size:16px\"><b>Срок действия истек</b></span>'\r\n      } else if (!hasPrivateKey) {\r\n        document.getElementById(args[2] + \"status\").innerHTML =\r\n          'Статус: <span style=\"color:red; font-weight:bold; font-size:16px\"><b>Нет привязки к закрытому ключу</b></span>'\r\n      } else if (!IsValid) {\r\n        document.getElementById(args[2] + \"status\").innerHTML =\r\n          'Статус: <span style=\"color:red; font-weight:bold; font-size:16px\"><b>Ошибка при проверке цепочки сертификатов. Возможно на компьютере не установлены сертификаты УЦ, выдавшего ваш сертификат</b></span>'\r\n      } else {\r\n        document.getElementById(args[2] + \"status\").innerHTML = \"Статус: <b> Действителен<b>\"\r\n      }\r\n\r\n      if (args[3]) {\r\n        document.getElementById(field_prefix + \"location\").innerHTML = \"Установлен в хранилище: <b>Нет</b>\"\r\n      } else {\r\n        document.getElementById(field_prefix + \"location\").innerHTML = \"Установлен в хранилище: <b>Да</b>\"\r\n      }\r\n    },\r\n    certificate,\r\n    BoxId,\r\n    field_prefix,\r\n    isFromContainer\r\n  ) //cadesplugin.async_spawn\r\n}\r\n","import { observer } from \"mobx-react-lite\"\r\nimport { Button } from \"primereact/button\"\r\nimport { Card } from \"primereact/card\"\r\nimport { Column } from \"primereact/column\"\r\nimport { DataTable } from \"primereact/datatable\"\r\nimport { Steps } from 'primereact/steps'\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { useMemo } from \"react\"\r\nimport { FC, useContext } from \"react\"\r\nimport { Context } from \"../..\"\r\nimport CertificateService from \"../../services/CertificateService\"\r\nimport '../../styles/components/Steps.css'\r\nimport XMLViewer from \"../../types/react-xml-viewer\"\r\nimport { CheckForPlugIn, FillCAdESList, STATUS_OK } from \"../../utils/async_code\"\r\nimport { cadesplagin } from \"../../utils/cadesplugin_api\"\r\nimport { InputTextarea } from \"primereact/inputtextarea\"\r\nimport { CRIPTO_PRO_CSP_SUG, CSP_PLAGIN_SUG } from \"../../utils/defaults\"\r\ndeclare global {\r\n  interface Window {\r\n    cadesplugin?: any\r\n    cpcsp_chrome_nmcades?: any\r\n  }\r\n}\r\ninterface CSP_PlagIn_Info {\r\n    PlugInEnabled: boolean\r\n    PlugInEnabledTxt: string\r\n    PlugInVersionTxt: string\r\n    CspEnabled: boolean\r\n    CspEnabledTxt: string  \r\n    CSPVersionTxt?: string  \r\n  }\r\ninterface ICAdESInfo {\r\n  serialNumber: string\r\n  text: string\r\n  status: string\r\n}  \r\ninterface IСAdESLists {\r\n  certsList: any[]\r\n  infoList: ICAdESInfo[] \r\n}  \r\nconst Section11: FC = () => {\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [versionPlagin, setVersionPlagin] = useState<CSP_PlagIn_Info | undefined>()\r\n  const [dataToSignXML, setDataToSignXML] = useState<null | string>(null)\r\n  const [cAdES, setCAdES] = useState<IСAdESLists | null>(null)\r\n  const [selectedCAdES, setSelectedCAdES] = useState()\r\n  const { certificateStore, suggestionsStore, layoutStore } = useContext(Context)\r\n  const certificate = certificateStore.cert \r\n  useEffect(()=>{   \r\n    if ( dataToSignXML===null) {\r\n      //layoutStore.isLoading = true\r\n      CertificateService.getCDA(certificate.id)\r\n      .then(data=>{        \r\n        setDataToSignXML(data.data)\r\n        setActiveIndex(1)\r\n        //layoutStore.isLoading = false\r\n      })\r\n      .catch(reason=>{\r\n        setDataToSignXML(`<error>${reason.message}</error>`)\r\n        //layoutStore.isLoading = false\r\n      })      \r\n    } //else if (layoutStore.isLoading) layoutStore.isLoading = false\r\n  },[certificate.id, dataToSignXML, layoutStore])\r\n  useMemo(()=>{\r\n    cadesplagin()    \r\n  },[])\r\n  useEffect( ()=>{\r\n    if (!versionPlagin && dataToSignXML) {   \r\n      CheckForPlugIn()\r\n      .then((csp_info: CSP_PlagIn_Info | undefined)=>{           \r\n       if (csp_info) setVersionPlagin({...csp_info})\r\n      })           \r\n    }\r\n  },[dataToSignXML, versionPlagin, versionPlagin?.PlugInEnabled])\r\n  useEffect(()=>{\r\n    if (cAdES===null && versionPlagin) {\r\n      FillCAdESList().then(result=>{\r\n        //console.log('result',result )\r\n        if (result) setCAdES(result)\r\n        else setCAdES(null)\r\n      })\r\n    }\r\n  })\r\n  useEffect(()=>{\r\n    if (versionPlagin && versionPlagin.PlugInEnabled) \r\n    suggestionsStore.suggestions[CSP_PLAGIN_SUG].done = true\r\n    if (versionPlagin && versionPlagin.CspEnabled) \r\n    suggestionsStore.suggestions[CRIPTO_PRO_CSP_SUG].done = true\r\n  },[suggestionsStore.suggestions, versionPlagin])\r\n  \r\n  const header = () => {\r\n      return <span>Выгрузка в РРЭМД</span>\r\n  }    \r\n  const items = [\r\n    {\r\n      label: 'Создать(обновить) СЭМД',      \r\n    },    \r\n    {\r\n      label: 'Подписать ЭЦП',      \r\n    },\r\n    {\r\n      label: 'Выгрузить СЭМД в РРЭМД',      \r\n    }\r\n  ]\r\n  const footer = <span>\r\n    <Button label=\"Подписать\" icon=\"pi pi-check\" style={{marginRight: '.25em'}} disabled={!selectedCAdES}/>\r\n    <Button label=\"Отозвать\" icon=\"pi pi-times\" className=\"p-button-secondary\"/>\r\n  </span>\r\n  //console.log('cAdES', cAdES) \r\n  const isRowSelectable = (event: any) => {\r\n        const data = event.data\r\n        return data.status===STATUS_OK\r\n    }\r\n  const rowClassName = (data: ICAdESInfo) => {\r\n        return data.status===STATUS_OK ? '' : 'p-disabled'\r\n  }  \r\n  return (    \r\n    <Card className=\"c-section p-mr-2 p-mb-2\" header={header}\r\n      footer={footer} style={{paddingLeft:'1rem'}}>\r\n      <div className=\"p-fluid p-formgrid p-grid\">\r\n        <Steps model={items} activeIndex={activeIndex} className=\"p-field p-col-12\" />      \r\n        <div className=\"p-field p-col-12\">\r\n          <label htmlFor=\"sign_data\">Данные СЭМД</label>\r\n          <div id=\"sign_data\" style={{overflow: 'auto', \r\n            height: \"344px\", \r\n            width: \"100%\", \r\n            resize: \"none\", \r\n            border: \"1px solid #dee2e6\",\r\n            borderRadius: \"4px\",\r\n            padding: \"0.5rem\"\r\n            }}>\r\n            <XMLViewer xml={dataToSignXML || \"<ClinicalDocument>Данные отсутствуют</ClinicalDocument>\"} \r\n            collapsible={true}/>\r\n          </div>\r\n        </div> \r\n        <div className=\"p-field p-col-12\" >\r\n          <InputTextarea value={(versionPlagin && `${versionPlagin?.PlugInEnabledTxt}\\n${versionPlagin?.PlugInVersionTxt || 'Версия не получена'}\\n${versionPlagin?.CspEnabledTxt}\\n${versionPlagin?.CSPVersionTxt || ''}`) || ''} rows={5} cols={30} disabled />          \r\n        </div>       \r\n        <div className=\"p-field p-col-12\">            \r\n            <label htmlFor=\"CertListBox\">Выберите сертификат ЭЦП:</label>\r\n            <DataTable id=\"CertListBox\" value={cAdES?.infoList || []} emptyMessage=\"Не найдены доступные ЭЦП в хранилище\" responsiveLayout=\"scroll\" onSelectionChange={e => setSelectedCAdES(e.value)} dataKey=\"serialNumber\" rowClassName={rowClassName}\r\n            isDataSelectable={isRowSelectable} selection={selectedCAdES}>\r\n              <Column field=\"text\" header=\"Издатель\"></Column>              \r\n              <Column field=\"status\" header=\"Статус\"></Column>\r\n            </DataTable>\r\n        </div>\r\n      </div>\r\n    </Card >\r\n  )  \r\n}\r\nexport default observer(Section11)","import { Card } from 'primereact/card'\r\nimport { Column } from 'primereact/column'\r\nimport { DataTable } from 'primereact/datatable'\r\n\r\nimport '../styles/components/Calendar.css'\r\nimport '../styles/components/Divider.css'\r\nimport '../styles/components/Button.css'\r\nimport '../styles/pages/CertificatePage.css'\r\n\r\nimport { useContext, FC, useEffect, useRef, useState } from 'react'\r\nimport MainLayout from '../components/layouts/MainLayout'\r\nimport { CERTIFICATE_ROUTE } from '../utils/consts'\r\nimport { Avatar } from 'primereact/avatar'\r\nimport { Badge } from 'primereact/badge'\r\nimport { IRouteMatch } from '../models/IRouteMatch'\r\nimport { IRouteProps } from '../models/IRouteProps'\r\nimport Section0 from '../components/c_sections/section_0'\r\nimport Section1 from '../components/c_sections/section_1'\r\nimport Section2 from '../components/c_sections/section_2'\r\nimport Section3 from '../components/c_sections/section_3'\r\nimport Section5 from '../components/c_sections/section_5'\r\nimport Section6 from '../components/c_sections/section_6'\r\nimport Section7 from '../components/c_sections/section_7'\r\nimport Section8 from '../components/c_sections/section_8'\r\nimport Section9 from '../components/c_sections/section_9'\r\nimport Section10 from '../components/c_sections/section_10'\r\nimport Section11 from '../components/c_sections/section_11'\r\nimport { Context } from '..'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { ISuggestions } from '../models/ISuggestions'\r\nimport { Toast, ToastMessageType } from 'primereact/toast'\r\nimport { CERT_TYPE_SUG, DEFAULT_ERROR_TOAST, PERSON_NAME_SUG } from '../utils/defaults'\r\nimport { ICertificate } from '../models/responses/ICertificate'\r\n\r\n\r\ninterface IMatch extends IRouteMatch {  \r\n  params: {id: string}\r\n}\r\ninterface CertificatePageProps extends IRouteProps { \r\n    match: IMatch  \r\n}\r\n\r\nconst CertificatePage: FC<CertificatePageProps> = (props: CertificatePageProps) => {  \r\n  const { certificateStore, userStore, layoutStore, suggestionsStore } = useContext(Context)     \r\n  const [certID, setCertID] = useState(Number.parseInt(props.match.params.id))\r\n  const [message, setMessage] = useState<ToastMessageType | null>(null)\r\n  useEffect(()=>{\r\n    if (!!message) {\r\n      layoutStore.message = message\r\n      setMessage(null)\r\n    }\r\n  },[layoutStore, message])\r\n  useEffect(()=>{    \r\n    //if (certID ===-1 && toast!==null && toast.current!==null) toast.current.show()\r\n    if (certID === certificateStore.cert.id || certID===-1) {\r\n      layoutStore.isLoading = false\r\n      return\r\n    }  \r\n    let _idx = -1\r\n    const cArray = certificateStore.certs   \r\n    if (cArray.length>0){            \r\n      _idx = cArray.findIndex(el=>el.id === certID)      \r\n    }\r\n    if (_idx>-1) { \r\n      certificateStore.select(_idx)\r\n      layoutStore.isLoading = false\r\n    } else {      \r\n      certificateStore.findById(certID, ()=>{layoutStore.isLoading = false})\r\n    }  \r\n  },[certID, certificateStore, layoutStore, certificateStore.cert.id])\r\n  useEffect(()=>{\r\n    if (!layoutStore.isLoading && !!layoutStore.message && !!toast.current) { \r\n      toast.current.show(layoutStore.message)\r\n      layoutStore.message = null\r\n    }\r\n  },[layoutStore, layoutStore.isLoading, layoutStore.message])\r\n  const toast = useRef<Toast>(null)  \r\n  const secton_router = ()=>{\r\n    switch (props.location.search) {\r\n      case \"?q=0\": return <Section0 />\r\n      case \"?q=1\": return <Section1 />\r\n      case \"?q=2\": return <Section2 />\r\n      case \"?q=3\": return <Section3 />      \r\n      case \"?q=5\": return <Section5 />\r\n      case \"?q=6\": return <Section6 />\r\n      case \"?q=7\": return <Section7 />\r\n      case \"?q=8\": return <Section8 />\r\n      case \"?q=9\": return <Section9 />\r\n      case \"?q=10\": return <Section10 />\r\n      case \"?q=11\": return <Section11 />\r\n      default: return <Section0 /> \r\n    } \r\n  }    \r\n  const items = [        \r\n        {\r\n            label: 'Назад',\r\n            icon: 'pi pi-chevron-left',\r\n            command: () => {\r\n              let section = Number.parseInt(props.location.search[props.location.search.length-1])-1             \r\n              if (section===4) section--\r\n                if (section > -1) {               \r\n                userStore.history().push(`${CERTIFICATE_ROUTE}/${certificateStore.cert.id}?q=${section}`)\r\n              }\r\n            }\r\n        },\r\n        {\r\n            label: 'Удалить',\r\n            icon: 'pi pi-trash p-danger',\r\n            command: () => {\r\n              layoutStore.isLoading = true\r\n              const result = certificateStore.delete()\r\n              if (!result) {\r\n                layoutStore.isLoading = false\r\n              } else {\r\n                result.then(response=>{\r\n                  layoutStore.isLoading = false\r\n                  certificateStore.clean() \r\n                  setCertID(certificateStore.cert.id)                 \r\n                  setMessage({ severity: 'success', summary: 'Успешно', detail: 'Запись удалена', life: 3000 })                                 \r\n                })\r\n                .catch(reason=>{\r\n                  layoutStore.isLoading = false\r\n                  console.log(reason)\r\n                  setMessage((DEFAULT_ERROR_TOAST))\r\n                })                \r\n              }\r\n            }\r\n        },\r\n        {\r\n            label: 'Сохранить',\r\n            icon: 'pi pi-save p-success',\r\n            command: () => { \r\n              if (!suggestionsStore.suggestions[CERT_TYPE_SUG].done || !suggestionsStore.suggestions[PERSON_NAME_SUG].done ) {\r\n                 setMessage({severity:'warn', summary:'ОТКЛОНЕНО', detail:'Внесите минимальный набор данных: вид свидетельства, ФИО умершего(для идентифицированых)', life: 6000})\r\n                 return\r\n               }\r\n              layoutStore.isLoading = true\r\n              const result = certificateStore.save((data:ICertificate)=>{                                \r\n                  setMessage({ severity: 'success', summary: 'Успешно', detail: 'Изменения сохранены', life: 3000 })\r\n                  setCertID(data.id)                   \r\n              }, (message:string)=>{                         \r\n                setMessage(DEFAULT_ERROR_TOAST)\r\n                console.log(message)\r\n              }, userStore.userInfo?.organization.sm_code)\r\n              if (!result) {\r\n                console.log('нет юзера')\r\n                layoutStore.isLoading = false\r\n              } else result.finally(()=>{layoutStore.isLoading = false})               \r\n            }\r\n        },    \r\n        {\r\n            label: 'Создать',\r\n            icon: 'pi pi-plus',\r\n            command: () => { \r\n              try {\r\n                certificateStore.createNew()\r\n                setCertID(-1)      \r\n                setMessage({ severity: 'success', summary: 'Пустое  свидетельство создано!', detail: 'Внесите минимальные изменения и сохраните, чтоб получить номер', life: 3000 })                   \r\n              } catch { \r\n                setMessage(DEFAULT_ERROR_TOAST)\r\n              }\r\n            }  \r\n        },\r\n        {\r\n            label: 'Заменить',\r\n            icon: 'pi pi-sync',            \r\n            command: () => { \r\n              if (certificateStore.cert.id < 0 || !certificateStore.cert.issueDate) {\r\n                setMessage({severity:'warn', summary:'ОТКЛОНЕНО', detail:'Замена возможна только для выданных свидетельств'})\r\n              return  \r\n              }\r\n              try {\r\n                certificateStore.replace()\r\n                setCertID(-1) \r\n                setMessage({ severity: 'success', summary: 'Cвидетельство заменено!', detail: 'Проверьте вид и сохраните, чтоб получить номер', life: 3000 })                        \r\n              } catch { \r\n                setMessage(DEFAULT_ERROR_TOAST)\r\n              }\r\n            }  \r\n        },\r\n        {\r\n            label: 'Далее',\r\n            icon: 'pi pi-chevron-right',\r\n            command: () => {\r\n              let section = Number.parseInt(props.location.search[props.location.search.length-1])+1              \r\n              if (section===4) section++\r\n              if (section > -1) {\r\n                userStore.history().push(`${CERTIFICATE_ROUTE}/${certificateStore.cert.id}?q=${section}`)\r\n              } \r\n            }\r\n        },        \r\n        \r\n\r\n    ]\r\n  const doneBodyTemplate = (rowData:any) => {\r\n        return rowData.done ? <Avatar icon=\"pi pi-check\" shape=\"circle\" style={{ color: 'rgb(104 159 56)'}}/>\r\n        : ''\r\n  }  \r\n  const rowClass = (data:any) => {\r\n    return {\r\n      'p-suggestion-actual': !data.done\r\n    }\r\n  } \r\n  const sugCount = suggestionsStore.redSuggestionsCount() \r\n  const suggestionHeader = () => {    \r\n    const avatar = sugCount === 0 ? <Avatar icon=\"pi pi-check\" shape=\"circle\" style={{ height:'1.5rem', width: '1.5rem',backgroundColor: 'rgb(104 159 56)', color: 'white'}}/> : <Badge value={sugCount}  style={{ backgroundColor: 'rgb(204, 0, 0)', color: 'white', marginLeft: '4px'}}/>\r\n    return <><span>Контроль заполнения</span>{avatar}</>\r\n  }\r\n  const suggestions = suggestionsStore.suggestions\r\n    .filter((item:ISuggestions) =>\r\n    item.section === props.location.search.slice(3))\r\n  \r\n  const layoutParams = {\r\n    title: 'Медицинское свидетельство о смерти',     \r\n    url: `${CERTIFICATE_ROUTE}/${certID}${props.location.search}`,\r\n    content:(<>      \r\n      <div className=\"p-d-flex p-jc-center\" >        \r\n        {secton_router()}        \r\n        <Card className=\"p-mr-2 p-mb-2 p-suggestion\"\r\n         key={`p_sug_${sugCount}`} header={suggestionHeader}>                        \r\n            <DataTable className=\"p-datatable-sm\" rowClassName={rowClass} \r\n            value={suggestions} responsiveLayout=\"scroll\">\r\n              <Column field=\"code\" header=\"Код\"></Column>\r\n              <Column field=\"suggestion\" header=\"Проверка\"></Column>\r\n              <Column body={doneBodyTemplate}></Column>\r\n            </DataTable> \r\n        </Card>\r\n      </div>   \r\n      <Toast ref={toast} />   \r\n    </>),\r\n    actionItems: items\r\n  } \r\n  return (\r\n    <>\r\n      <MainLayout {...layoutParams} />\r\n    </>\r\n  )\r\n}\r\nexport default observer(CertificatePage) ","import { makeAutoObservable } from \"mobx\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { IDoctor } from \"../IDoctor\"\r\nimport { IReferenceId } from \"../IReference\"\r\nimport { IDoctorR } from \"../requests/IDoctorR\"\r\nimport Person from \"./Person\"\r\n\r\nexport default class Doctor implements ISerializable {\r\n  private _id?: number\r\n  private _person: Person\r\n  private _position?: IReferenceId | undefined\r\n  private _organization?: IReferenceId | undefined\r\n  private _guid: string\r\n  constructor(props = {} as IDoctor) {\r\n    this._id = props.id\r\n    this._guid = props.guid || uuidv4()\r\n    this._person = props.person ? new Person(props.person) : new Person()\r\n    this._organization = props.organization || undefined\r\n    this._position = props.position || undefined\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n  getAttributes(): IDoctorR {\r\n    let _doctor = { guid: this._guid } as IDoctorR\r\n    if (this._id) _doctor.id = this._id\r\n    if (this._person) _doctor.person_attributes = this._person.getAttributes()\r\n    if (this._organization) _doctor.organization_id = this._organization.id\r\n    if (this._position) _doctor.position_id = this._position.id\r\n    return _doctor\r\n  }\r\n  get id() {\r\n    return this._id\r\n  }\r\n  set id(id: number | undefined) {\r\n    this._id = id\r\n  }\r\n  get person() {\r\n    return this._person\r\n  }\r\n\r\n  get guid() {\r\n    return this._guid\r\n  }\r\n  get position(): IReferenceId | undefined {\r\n    return this._position\r\n  }\r\n  set position(value: IReferenceId | undefined) {\r\n    this._position = value\r\n  }\r\n  get organization(): IReferenceId | undefined {\r\n    return this._organization\r\n  }\r\n  set organization(value: IReferenceId | undefined) {\r\n    this._organization = value\r\n  }\r\n}\r\n","//1.2.643.5.1.13.13.99.2.42\r\n//РЭМД. Правила подписи электронных медицинских документов\r\nexport const CAN_SIGN_POSITIONS = [\r\n  9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\r\n  40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,\r\n  69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97,\r\n  98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121,\r\n  122, 123, 124, 125, 126, 127, 128, 129, 130, 144, 145, 146, 149, 150, 195, 196, 197, 198, 449, 450, 451, 452,\r\n]\r\n","\r\nimport React, { useState, useEffect, useRef, useContext, FC } from 'react'\r\nimport { classNames } from 'primereact/utils'\r\nimport { DataTable } from 'primereact/datatable'\r\nimport { Column } from 'primereact/column'\r\nimport { Toast } from 'primereact/toast'\r\nimport { Button } from 'primereact/button'\r\nimport { Toolbar } from 'primereact/toolbar'\r\nimport { Dialog } from 'primereact/dialog'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { Context } from '..'\r\nimport { IDoctor } from '../models/IDoctor'\r\nimport DoctorService from \"../services/DoctorService\"\r\nimport '../styles/components/Toolbar.css'\r\nimport '../styles/components/Dialog.css'\r\nimport '../styles/components/Toast.css'\r\nimport '../styles/components/AutoComplete.css'\r\nimport { InputMask } from 'primereact/inputmask'\r\nimport MainLayout from '../components/layouts/MainLayout'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { DESTROY_OPTION, DOCTORS_ROUTE } from '../utils/consts'\r\nimport { IContact } from '../models/IContact'\r\nimport { IReferenceId } from '../models/IReference'\r\nimport { AutoComplete } from 'primereact/autocomplete'\r\nimport { DEFAULT_ERROR_TOAST } from '../utils/defaults'\r\nimport Address from '../models/FormsData/Address'\r\nimport { IPerson } from '../models/IPerson'\r\nimport { genUpdateDoctorRequest } from '../models/FormsData/DoctorRequest'\r\nimport InputAddress from '../components/inputs/InputAddress'\r\nimport AddressDialog from '../components/dialogs/AddressDialog'\r\nimport Doctor from '../models/FormsData/Doctor'\r\nimport { DEFAULT_ADDRESS, IAddressR } from '../models/requests/IAddressR'\r\nimport { getOneLinePersonName, IPersonName } from '../models/IPersonName'\r\nimport { PersonName } from '../components/inputs/PersonName'\r\nimport { CAN_SIGN_POSITIONS } from '../NSI/1.2.643.5.1.13.13.99.2.42'\r\n\r\nconst DoctorsPage: FC = () => {    \r\n    const {addressStore, userStore} = useContext(Context)\r\n    let emptyDoctor = {\r\n        organization: userStore.userInfo?.organization,\r\n        guid: uuidv4(),       \r\n        person: { person_name: {family:'Тестов', given_1:'Тест'}, \r\n          contacts:[] as IContact[],\r\n          SNILS: '456-145-154 25'\r\n          } as IPerson        \r\n    } as IDoctor\r\n    const [doctor, setDoctor] = useState(new Doctor(emptyDoctor))\r\n    const [doctors, setDoctors] = useState<IDoctor[]>([])\r\n    const [doctorDialog, setDoctorDialog] = useState(false)\r\n    const [deleteDoctorDialog, setDeleteDoctorDialog] = useState(false)\r\n    const [deleteDoctorsDialog, setDeleteDoctorsDialog] = useState(false)    \r\n    const [selectedDoctors, setSelectedDoctors] = useState<IDoctor[]>([])\r\n    const [submitted, setSubmitted] = useState(false)   \r\n    const [email, setEmail] = useState<IContact>({telcom_value:'', main:false} as IContact) \r\n    const [phone, setPhone] = useState<IContact>({telcom_value:'', main:true} as IContact)\r\n    const [position, setPosition] = useState('')\r\n    const [positions, setPositions] = useState<IReferenceId[]>([])\r\n    const toast = useRef<Toast>(null)\r\n    const dt = useRef(null)\r\n     \r\n\r\n    useEffect(() => {      \r\n      if (userStore && userStore.userInfo) \r\n      DoctorService.getDoctors({       \r\n        q:{organization_id_eq: userStore.userInfo.organization.id}        \r\n      })\r\n      .then(data => {        \r\n        setDoctors(data.data.filter(doctor=>doctor.position && doctor.position.id in CAN_SIGN_POSITIONS))\r\n      })\r\n      .catch(()=>setDoctors([]))\r\n    }, [userStore.userInfo]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const  getPositions = (event: { query: string })=>{\r\n        const option = {} as any\r\n        if (event.query.trim().length>0) option.name_cont = event.query.trim()      \r\n        DoctorService.getPositions(option).then(response=>{\r\n            if (response.data.length>0) setPositions(response.data)\r\n            else setPositions([])        \r\n        }).catch((reason)=>console.log(reason))    \r\n    }\r\n\r\n    const openNew = () => {        \r\n        if (doctor.id) setDoctor(new Doctor(emptyDoctor))\r\n        addressStore.address = new Address(DEFAULT_ADDRESS)\r\n        setSubmitted(false)\r\n        setDoctorDialog(true)\r\n        setEmail({telcom_value:'', main:false} as IContact)\r\n        setPhone({telcom_value:'', main:true} as IContact)\r\n        setPosition('')\r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setDoctorDialog(false);\r\n    }\r\n\r\n    const hideDeleteDoctorDialog = () => {\r\n        setDeleteDoctorDialog(false)\r\n    }\r\n\r\n    const hideDeleteDoctorsDialog = () => {\r\n        setDeleteDoctorsDialog(false)\r\n    }\r\n\r\n    const saveDoctor = () => {\r\n        setSubmitted(true)\r\n        //console.log('doctor2',doctor)\r\n        if (doctor.person?.fio?.family.trim() && doctor.person?.SNILS && doctor.position) {\r\n            let _doctors = [...doctors]\r\n            onContactChange(phone)\r\n            onContactChange(email)  \r\n            if (doctor.id) { \r\n              const index = findIndexById(doctor.id)\r\n              const request = genUpdateDoctorRequest(_doctors[index], doctor)\r\n              if (request) DoctorService.updateDoctor(request).then((response)=>{                \r\n                _doctors[index] = response.data\r\n                setDoctorDialog(false)\r\n                setDoctors(_doctors)\r\n                if (toast!==null && toast.current!==null) toast.current.show({ severity: 'success', summary: 'Успешно', detail: 'Запись обновлена', life: 3000 })\r\n              }).catch((reason)=>{\r\n                console.log('reason',reason)\r\n                setDoctorDialog(false)\r\n                if (toast!==null && toast.current!==null) \r\n                  toast.current.show(DEFAULT_ERROR_TOAST)\r\n              })\r\n              else {\r\n                if (toast!==null && toast.current!==null) toast.current.show({ severity: 'info', summary: 'Отклонено', detail: 'Изменения отсутствуют', life: 3000 })\r\n                setDoctorDialog(false)\r\n              }\r\n            } else {               \r\n              DoctorService.addDoctor(doctor.getAttributes()).then((response)=>{\r\n                if (response.data) {                  \r\n                  _doctors.push(response.data)\r\n                  setDoctors(_doctors)\r\n                  setDoctorDialog(false)                            \r\n                  setEmail({telcom_value:'', main:false} as IContact)\r\n                  setPhone({telcom_value:'', main:true} as IContact)\r\n                  setPosition('')\r\n                  if (toast!==null && toast.current!==null) toast.current.show({ severity: 'success', summary: 'Успешно', detail: 'Запись добавлена', life: 3000 })\r\n                }  \r\n              }).catch((reason)=>{\r\n                console.log('reason',reason)\r\n                setDoctorDialog(false)\r\n                if (toast!==null && toast.current!==null) \r\n                  toast.current.show(DEFAULT_ERROR_TOAST)\r\n              })\r\n            }\r\n          \r\n        }\r\n    }\r\n\r\n    const editDoctor = (_doctor: IDoctor) => {        \r\n        setPhone({telcom_value:'', main:true} as IContact)\r\n        setEmail({telcom_value:'', main:false} as IContact)        \r\n        if (_doctor.id !== doctor.id) setDoctor(new Doctor(_doctor))\r\n        doctor.person.contacts?.forEach((item)=>{if (item.main) setPhone({...item})\r\n        else setEmail({...item, telcom_value: item.telcom_value.replace('mailto:','')})})        \r\n        //addressStore.address = new Address(doctor.person.address || DEFAULT_ADDRESS)         \r\n        setPosition(doctor.position?.name || '')\r\n        setDoctorDialog(true)        \r\n    }\r\n\r\n    const confirmDeleteDoctor = (_doctor: IDoctor) => {\r\n        if (_doctor.id !== doctor.id) setDoctor(new Doctor(_doctor))\r\n        setDeleteDoctorDialog(true)\r\n    }\r\n\r\n    const deleteDoctor = () => {\r\n        if (doctor.id) DoctorService.removeDoctor(doctor.id).then(response=>{\r\n          let _doctors = doctors.filter(val => val.id !== doctor.id)\r\n          setDoctors(_doctors)\r\n          setDeleteDoctorDialog(false)\r\n          setDoctor(new Doctor(emptyDoctor))\r\n          if (toast!==null && toast.current!==null) toast.current.show({ severity: 'success', summary: 'Успешно', detail: 'Запись удалена', life: 3000 })\r\n        }).catch(reason=>{\r\n          console.log('reason',reason)\r\n          if (toast!==null && toast.current!==null) \r\n                  toast.current.show(DEFAULT_ERROR_TOAST)\r\n        })        \r\n    }\r\n    const findIndexById = (id:number | undefined) => {        \r\n        return doctors.findIndex((element)=>element.id === id)\r\n    }    \r\n\r\n    const confirmDeleteSelected = () => {\r\n        setDeleteDoctorsDialog(true);\r\n    }\r\n\r\n    const deleteSelectedDoctors = () => {\r\n        let _doctors = doctors.filter(val => !selectedDoctors.includes(val))\r\n        setDoctors(_doctors);\r\n        setDeleteDoctorsDialog(false);\r\n        setSelectedDoctors([]);\r\n        if (toast!==null && toast.current!==null) toast.current.show({ severity: 'success', summary: 'Удачно', detail: 'Записи удалены', life: 3000 });\r\n    }      \r\n\r\n    // Обработчик изменения контактов      \r\n    const onContactChange = (contact: IContact) => {   \r\n      let _contact = contact.telcom_value==='' ?\r\n      (contact.id ? {...contact,...DESTROY_OPTION} : {...contact}) :    \r\n      (contact.id ? {id:contact.id, parent_guid: contact.parent_guid, telcom_use: contact.telcom_use, telcom_value: contact.telcom_value, main: contact.main} : {...contact}) \r\n      if (doctor.person.contacts === undefined) doctor.person.contacts = []\r\n      if (_contact.id) {        \r\n          const idx = doctor.person.contacts.findIndex(item=>item.id===_contact.id)  \r\n          if (idx>-1) doctor.person.contacts[idx] = _contact        \r\n      } else doctor.person.contacts.push(_contact)       \r\n    } \r\n\r\n    const rightToolbarTemplate = () => {\r\n      return (\r\n        <React.Fragment>                \r\n          <Button  icon=\"pi pi-plus\" label=\"ДОБАВИТЬ\" className=\"p-button-success p-mr-2\" onClick={openNew} />\r\n          <Button  icon=\"pi pi-trash\" label=\"УДАЛИТЬ\" className=\"p-button-danger\" onClick={confirmDeleteSelected} disabled={!selectedDoctors || !selectedDoctors.length} />\r\n        </React.Fragment>\r\n      )\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData: IDoctor) => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success p-mr-2\" onClick={() => editDoctor(rowData)} />\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => confirmDeleteDoctor(rowData)} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    \r\n    const doctorDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"ОТМЕНА\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} />\r\n            <Button label=\"ВНЕСТИ\" icon=\"pi pi-check\" className=\"p-button-text p-button-success\" onClick={saveDoctor} />\r\n        </React.Fragment>\r\n    )\r\n    const deleteDoctorDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"НЕТ\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteDoctorDialog} />\r\n            <Button label=\"ДА\" icon=\"pi pi-check\" className=\"p-button-text p-button-warning\" onClick={deleteDoctor} />\r\n        </React.Fragment>\r\n    )\r\n    const deleteDoctorsDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"НЕТ\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteDoctorsDialog} />\r\n            <Button label=\"ДА\" icon=\"pi pi-check\" className=\"p-button-text p-button-warning\" onClick={deleteSelectedDoctors} />\r\n        </React.Fragment>\r\n    )\r\n    const fioBodyTemplate = (row: IDoctor)=>{\r\n      const fio = row.person?.person_name      \r\n      const result = getOneLinePersonName(fio)\r\n      return <>{result}</>\r\n    }  \r\n    const layoutParams = {\r\n        title: 'Врачи',     \r\n        url: DOCTORS_ROUTE,\r\n        content:\r\n        <div>\r\n            <Toast ref={toast} />\r\n            <div className=\"card\">\r\n                <Toolbar className=\"p-mb-4\" right={rightToolbarTemplate}></Toolbar>\r\n                <DataTable ref={dt} value={doctors} selection={selectedDoctors} onSelectionChange={(e) => setSelectedDoctors(e.value)} responsiveLayout=\"scroll\"\r\n                    dataKey=\"id\" >\r\n                    <Column selectionMode=\"multiple\" headerStyle={{ width: '3rem' }} exportable={false}></Column>                    \r\n                    <Column  header=\"ФИО\" body={fioBodyTemplate}  style={{ minWidth: '10rem' }}></Column>\r\n                    <Column field=\"position.name\" header=\"Должность\" ></Column>\r\n                    <Column field=\"person.SNILS\" header=\"СНИЛС\" ></Column>                    \r\n                    <Column body={actionBodyTemplate} exportable={false} style={{ minWidth: '8rem' }}></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <Dialog visible={doctorDialog} style={{ width: '800px' }} header=\"Данные врача\" modal \r\n             footer={doctorDialogFooter} onHide={hideDialog} >   \r\n               <div className='p-fluid p-formgrid p-grid'> \r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                    <label htmlFor=\"fio\">Фамилия, Имя, Отчество(при наличии)</label>\r\n                    <PersonName personName={doctor.person?.fio} submitted={submitted}\r\n                      onChange={(value: IPersonName)=>{                       \r\n                        if (doctor.person) doctor.person.fio  = value\r\n                      }}  \r\n                    />                   \r\n                </div>                \r\n                <div className=\"p-field  p-col-12 p-md-3\">\r\n                    <label htmlFor=\"snils\">СНИЛС</label>\r\n                    <InputMask id=\"snils\"  \r\n                      type=\"text\" mask=\"999-999-999 99\"\r\n                      value={doctor.person.SNILS} \r\n                      onChange={(e)=>{ \r\n                        doctor.person.SNILS = e.target.value  \r\n                        }} \r\n                      required className={classNames({ 'p-invalid': submitted && !doctor.person?.SNILS})}\r\n                    />\r\n                    {submitted && !doctor.person?.SNILS && <small className=\"p-error\">СНИЛС некорректен.</small>}\r\n                </div>\r\n                <div className=\"p-field  p-col-12 p-md-4\">\r\n                    <label htmlFor=\"position\">Должность</label>\r\n                    <AutoComplete id=\"position\" suggestions={positions} field=\"name\"\r\n                      value={doctor.position || position } delay={1000} dropdown \r\n                      completeMethod={getPositions}\r\n                      onChange={(e)=>{ \r\n                        console.log('e.value',e.value)\r\n                        if (e.value.name) { \r\n                          doctor.position = e.value\r\n                          setPosition(e.value.name) \r\n                        } else setPosition(e.value)   \r\n                       }}  \r\n                        className={classNames({ 'p-invalid': submitted && !doctor.position})}\r\n                    />\r\n                    {submitted && !doctor.position && <small className=\"p-error\">Должность должна быть указана.</small>}\r\n                </div>\r\n                <div className=\"p-field  p-col-12 p-md-4\">\r\n                    <label htmlFor=\"phone\">телефон</label>\r\n                    <InputMask id=\"phone\"  \r\n                      type=\"text\" mask=\"tel:+79999999999\"\r\n                      value={phone.telcom_value} \r\n                      onChange={(e)=>{setPhone({...phone, telcom_value: e.target.value})  \r\n                        }} required className={classNames({ 'p-invalid': submitted && !/tel:\\+?[-0-9().]+/i.test(phone.telcom_value)})}\r\n                    />\r\n                    {submitted && !/tel:\\+?[-0-9().]+/i.test(phone.telcom_value) && <small className=\"p-error\">тел.номер некорректен!</small>}\r\n                </div>\r\n                <div className=\"p-field  p-col-12 p-md-4\">\r\n                    <label htmlFor=\"email\">email</label>\r\n                    <InputText id=\"email\" type=\"text\" \r\n                      value={email.telcom_value} \r\n                      onChange={(e)=>{  \r\n                        setEmail({...email, telcom_value:e.target.value})  \r\n                        }} className={classNames({ 'p-invalid': submitted && !(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email.telcom_value) || email.telcom_value==='')})}\r\n                    />\r\n                    {submitted && !(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email.telcom_value) || email.telcom_value==='') && <small className=\"p-error\">Неверный email</small>}\r\n                </div>\r\n                <InputAddress className=\"p-col-12\" submitted={submitted} \r\n                  label='Адрес проживания'\r\n                  value={doctor.person.address || DEFAULT_ADDRESS} strictly \r\n                  onClear={(value: IAddressR)=>{\r\n                    doctor.person.address = {...value}                    \r\n                  }}\r\n                  onChange={()=>doctor.person.address = {...addressStore.addressProps()}} \r\n                />    \r\n               </div>               \r\n            </Dialog>\r\n            <AddressDialog />\r\n            <Dialog visible={deleteDoctorDialog} style={{ width: '450px' }} header=\"Подтвердите\" modal footer={deleteDoctorDialogFooter} onHide={hideDeleteDoctorDialog}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                    {doctor && <span>Вы действительно хотите удалить <b>{fioBodyTemplate}</b>?</span>}\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog visible={deleteDoctorsDialog} style={{ width: '450px' }} header=\"Подтвердите\" modal footer={deleteDoctorsDialogFooter} onHide={hideDeleteDoctorsDialog}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                    {doctor && <span>Вы действительно хотите удалить выбранные записи?</span>}\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    }\r\n    return (\r\n    <>\r\n      <MainLayout {...layoutParams} />\r\n    </>\r\n  )\r\n}\r\nexport default observer(DoctorsPage)               ","//Пол пациента\r\n//OID: 1.2.643.5.1.13.13.11.1040 Версия: 2.1\r\nexport const GENDERS = [\r\n  { code: 1, name: \"Мужской\" },\r\n  { code: 2, name: \"Женский\" },\r\n]\r\n","import $api, { API_URL } from \"../http\"\r\nimport { AxiosResponse } from \"axios\"\r\nimport { IReferenceId } from \"../models/IReference\"\r\nimport { IOrganization } from \"../models/IOrganization\"\r\n\r\nconst ORGANIZATION_RENDER_OPTIONS = {\r\n  render_options: { except: [\"updated_at\", \"old_oid\"], include: [\"address\", \"contacts\"] },\r\n  includes: [\"address\", \"contacts\"],\r\n  address: { except: [\"updated_at\", \"created_at\"], include: [\"null_flavors\"] },\r\n}\r\nexport default class OrganizationService {\r\n  // GET from public endpoint /auth/organizations/\r\n  static async getOrganizations(): Promise<AxiosResponse<{ organizations: IReferenceId[] }>> {\r\n    return $api.get(`${API_URL}auth/organizations/`)\r\n  }\r\n\r\n  // POST /show/model/Organization/:id from UEC endpoint\r\n  static async getOrganization(id: string): Promise<AxiosResponse<IOrganization>> {\r\n    return $api.post(`${API_URL}/show/model/Organization/${id}`, ORGANIZATION_RENDER_OPTIONS)\r\n  }\r\n  //PUT request for update Doctor /REST_API/v1/model/Doctor/:id\r\n  static async updateOrganization(request: any): Promise<AxiosResponse<IOrganization>> {\r\n    return $api.put(`${API_URL}model/Organization/${request.Organization.id}`, {\r\n      ...request,\r\n      ...ORGANIZATION_RENDER_OPTIONS,\r\n    })\r\n  }\r\n}\r\n","import { observer } from 'mobx-react-lite'\r\nimport { Context } from '..'\r\nimport { MultiSelect } from 'primereact/multiselect'\r\nimport { Column} from 'primereact/column'\r\nimport { DataTable, DataTableFilterMatchModeType, DataTableFilterMeta, DataTableSortParams } from 'primereact/datatable'\r\nimport { Toast } from 'primereact/toast'\r\nimport { FC, useContext, useEffect, useRef, useState } from 'react'\r\nimport MainLayout from '../components/layouts/MainLayout'\r\nimport { CERTIFICATE_ROUTE, DIRECTION, LIST_ROUTE, RunsackFilterMatchMode } from '../utils/consts'\r\nimport { ICertificate } from '../models/responses/ICertificate'\r\nimport React from 'react'\r\nimport { Button } from 'primereact/button'\r\nimport { GENDERS } from '../NSI/1.2.643.5.1.13.13.11.1040'\r\nimport { DEAD_PLACE_TYPES } from '../NSI/1.2.643.5.1.13.13.99.2.20'\r\nimport { BASIS_DERMINING } from '../NSI/1.2.643.5.1.13.13.99.2.23'\r\nimport '../styles/components/DataTable.css'\r\nimport '../styles/components/MultiSelect.css'\r\nimport { CERT_TYPES } from '../NSI/1.2.643.5.1.13.13.99.2.19'\r\nimport { getOneLinePersonName } from '../models/IPersonName'\r\nimport  PrimeReact, {FilterMatchMode}  from 'primereact/api'\r\nimport { IReference, IReferenceId } from '../models/IReference'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport OrganizationService from '../services/OrganizationService'\r\n\r\ntype ListPageProps = {}\r\n\r\nconst ListPage: FC<ListPageProps> = (props: ListPageProps) => {\r\n  const {certificateStore, userStore} = useContext(Context)  \r\n  const [lazyLoading, setLazyLoading] = useState(false)\r\n  const [sortField, setSortField] = useState<string>('')\r\n  const [sortOrder, setSortOrder] = useState<-1 | 0 | 1>(0)\r\n  const [filters, setFilters] = useState<DataTableFilterMeta | undefined>()\r\n  const [organizations, setOrganizations] = useState<IReferenceId[] | null>(null)\r\n  const isSuperUser = userStore.userInfo?.roles.includes('MIAC') || userStore.userInfo?.roles.includes('ADMIN')\r\n  \r\n  useEffect(()=>{\r\n    if (organizations===null && isSuperUser) OrganizationService.getOrganizations().then(response=>\r\n      setOrganizations(response.data.organizations)\r\n    ).catch(()=>{\r\n      setOrganizations([])      \r\n    })},[isSuperUser, organizations])\r\n    \r\n  PrimeReact.locale = 'ru'\r\n  const toast = useRef<Toast>(null)\r\n  const dt = useRef(null)  \r\n\r\n  const [selected, setSelected] = useState<ICertificate | undefined>()\r\n\r\n  const initFilters = () => {\r\n        setFilters({\r\n        'basis_determining': { value: null, matchMode: FilterMatchMode.IN },  \r\n        'custodian_id': { value: null, matchMode: FilterMatchMode.IN },            \r\n        'number': { operator: 'and', constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }]}, \r\n        'patient_fio': { operator: 'and', constraints: [{ value: null, matchMode: FilterMatchMode.CONTAINS }]},\r\n        'primory_reason' : { operator: 'and', constraints: [{ value: null, matchMode: FilterMatchMode.GREATER_THAN_OR_EQUAL_TO},{ value: null, matchMode: FilterMatchMode.LESS_THAN_OR_EQUAL_TO}]},\r\n        'patient_birth_date' : { operator: 'and', constraints: [{ value: null, matchMode: FilterMatchMode.DATE_AFTER},{ value: null, matchMode: FilterMatchMode.DATE_BEFORE}]},\r\n        'patient_death_date' : { operator: 'and', constraints: [{ value: null, matchMode: FilterMatchMode.DATE_AFTER},{ value: null, matchMode: FilterMatchMode.DATE_BEFORE}]},\r\n        'issue_date': { operator: 'and', constraints: [{ value: null, matchMode: FilterMatchMode.DATE_AFTER},{ value: null, matchMode: FilterMatchMode.DATE_BEFORE}]},   \r\n        'death_place': { value: null, matchMode: FilterMatchMode.IN },        \r\n        })        \r\n    }\r\n   \r\n    useEffect(() => {        \r\n        initFilters()\r\n    }, [])\r\n\r\n  const orderNumberBodyTemplate = (rowData: ICertificate)=>{    \r\n    return <i>{rowData.rowNumber}</i>\r\n  }\r\n  const seriesNumberBodyTemplate = (rowData: ICertificate)=>{   \r\n    const cert_type = CERT_TYPES.find(el=>el.code===rowData.cert_type) \r\n    return <>{rowData.series} {rowData.number} {cert_type?.s_name}</>\r\n  }\r\n  const reasonsBodyTemplate = (rowData: ICertificate)=>{\r\n    const acme = rowData.reason_ACME\r\n    const isACME = !!acme\r\n    const cr = rowData.c_reason?.diagnosis\r\n    const ar = rowData.a_reason?.diagnosis\r\n    const br = rowData.b_reason?.diagnosis\r\n    const dr = rowData.d_reason?.ext_diagnosis\r\n    let result = isACME && !!cr && acme === cr.ICD10 ? \r\n      `(ПП-${acme})${cr.s_name}; ` : !!cr ? `(В-${cr.ICD10})${cr.s_name}; ` : ''\r\n    result += (isACME && !!ar && acme === ar.ICD10 ? `(ПП-${acme})${ar.s_name}; ` : \r\n          !!ar ? `(А-${ar.ICD10})${ar.s_name}; ` : '')\r\n    result += (isACME && !!br && acme === br.ICD10 ? `(ПП-${acme})${br.s_name}; ` : \r\n          !!br ? `(Б-${br.ICD10})${br.s_name}; ` : '')\r\n    result += (isACME && !!dr && acme === dr.ICD10 ? `(ПП-${acme})${dr.s_name}; ` : \r\n          !!dr ? `(Г-${dr.ICD10})${dr.s_name}; ` : '')\r\n    if (rowData.death_reasons && rowData.death_reasons.length>0) { \r\n      result +=\"Сопутствующие: \" \r\n      rowData.death_reasons.forEach(el=>{\r\n        result +=`(${el.diagnosis?.ICD10})${el.diagnosis?.s_name}; `\r\n      })          \r\n    }\r\n    return <span style={{fontSize:'smaller'}}>{result}</span>\r\n  }\r\n\r\n  const filterClearTemplate = (options:any) => {\r\n        return <Button type=\"button\" icon=\"pi pi-times\" onClick={options.filterClearCallback} className=\"p-button-secondary\"></Button>;\r\n    }\r\n   const filterApplyTemplate = (options:any) => {\r\n        return <Button type=\"button\" icon=\"pi pi-check\" \r\n        onClick={options.filterApplyCallback} className=\"p-button-success\"></Button>\r\n    }\r\n  const dbBodyTemplate = (rowData: ICertificate)=>{\r\n    let _result =''\r\n    const birth = rowData.patient?.birth_date\r\n    if (!!birth) _result = `${birth.slice(8,10)}.${birth.slice(5,7)}.${birth.slice(0,4)}`  \r\n    return _result\r\n  }  \r\n  const ddBodyTemplate = (rowData: ICertificate)=>{\r\n    let _result =''    \r\n    const death = !rowData.death_datetime ? !rowData.death_year ? false : rowData.death_year.toString() : rowData.death_datetime \r\n    if (death && death.length>4) {\r\n       _result = `${death?.slice(8,10)}.${death.slice(5,7)}.${death.slice(0,4)}`\r\n    } else if (death && death.length<5){\r\n       _result =death       \r\n    } \r\n    return _result\r\n  }  \r\n  const ageBodyTemplate = (rowData: ICertificate)=>{\r\n    if (!rowData.death_datetime || !rowData.patient?.birth_date) return ''   \r\n    const dd = new Date(rowData.death_datetime)\r\n    const db = new Date(rowData.patient?.birth_date)\r\n    let age = dd.getFullYear() - db.getFullYear()\r\n    const m = dd.getMonth() - dd.getMonth()\r\n    if (m < 0 || (m === 0 && dd.getDate() < db.getDate())) age--    \r\n    return age\r\n  }\r\n\r\n  const genderBodyTemplate = (rowData: ICertificate)=>{\r\n    if (!rowData.patient?.gender) return ''\r\n    else return GENDERS[rowData.patient.gender-1].name.slice(0,1)\r\n  }\r\n\r\n  const fioBodyTemplate = (rowData: ICertificate)=>{\r\n      if (!rowData.patient) return \"\"\r\n      else if (!rowData.patient.person) return \"не иденти-фицирован\"          \r\n      const result = getOneLinePersonName(rowData.patient.person.person_name)\r\n      return <>{result}</>\r\n    }\r\n  const deathPlaceBodyTemplate = (rowData: ICertificate) => {\r\n    if (!rowData.death_place) return ''\r\n    else {\r\n     const place = DEAD_PLACE_TYPES.find(el=>el.code === rowData.death_place)\r\n     if (!place) return ''\r\n     else return <span style={{fontSize:'small'}}>{place.name}</span>\r\n    }      \r\n  }     \r\n  const basisDeterminingBodyTemplate = (rowData: ICertificate) => {\r\n    if (!rowData.basis_determining) return ''\r\n    else {\r\n     const basis = BASIS_DERMINING.find(el=>el.code === rowData.basis_determining)\r\n     if (!basis) return ''\r\n     else return <span style={{fontSize:'small'}}>{basis.name}</span>\r\n    }      \r\n  }\r\n  const custodianBodyTemplate = (rowData: ICertificate) => {\r\n    const cusName = rowData.custodian?.name\r\n    if (!cusName) return ''\r\n    else return <span style={{fontSize:'small'}}>{cusName}</span>\r\n  }  \r\n  const custodianFilterTemplate = (options: any) => {\r\n        return <MultiSelect value={options.value} options={organizations || []}  onChange={(e) => options.filterCallback(e.value)} optionLabel=\"name\" placeholder=\"не выбрано\" className=\"p-column-filter\" />;\r\n    }  \r\n  const custodian = isSuperUser ? \r\n    <Column  header=\"Мед. организация\" body={custodianBodyTemplate}          \r\n        filterField='custodian_id' showFilterMatchModes={false}\r\n                      filterClear={filterClearTemplate} filterApply={filterApplyTemplate}\r\n                      filter filterElement={custodianFilterTemplate}                    \r\n        style={{ flexGrow: 1, flexBasis: '120px' }}> </Column> :\r\n    <></>                  \r\n  const doctorBodyTemplate = (rowData: ICertificate) => {\r\n    if (!rowData.author) return ''\r\n    else {       \r\n      const result = getOneLinePersonName(rowData.author.doctor.person_name)\r\n      return  <span style={{fontSize:'small'}}>{result}</span>\r\n    }      \r\n  }\r\n  const positionBodyTemplate = (rowData: ICertificate) => {\r\n    if (!rowData.author?.doctor.position ) return ''\r\n    else return  <span style={{fontSize:'small'}}>{rowData.author.doctor.position.name}</span>         \r\n  }  \r\n  const issueDateBodyTemplate = (rowData: ICertificate) => {\r\n    const iDate = rowData.issue_date\r\n    if (!iDate ) return ''    \r\n    else return  <span style={{fontSize:'small'}}>{`${iDate.slice(8,10)}.${iDate.slice(5,7)}.${iDate.slice(0,4)}`}</span>         \r\n  }\r\n\r\n  const actionBodyTemplate = (rowData: ICertificate) => {       \r\n        return (\r\n            <React.Fragment>\r\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success p-mr-2\" onClick={()=>userStore.history().push(`${CERTIFICATE_ROUTE}/${rowData.id}?q=0`)} />                \r\n            </React.Fragment>\r\n        )\r\n    }\r\n  const loadCertificatesLazy = (event: {first:number, last:number}) => {  \r\n      setLazyLoading(true)         \r\n      certificateStore.getList(()=>{setLazyLoading(false)}, event.first, event.last)      \r\n  }   \r\n  const sortLazy = (e: DataTableSortParams) => {    \r\n    setLazyLoading(true) \r\n    const order =  e.sortOrder ? DIRECTION[e.sortOrder] : DIRECTION[0]    \r\n    if (e.sortField && e.sortField !=='rowNumber') {\r\n      certificateStore.sorts = [`${e.sortField} ${order}`]  \r\n      certificateStore.getList(()=>{setLazyLoading(false)})    \r\n    }  \r\n    if (e.sortOrder) setSortOrder(e.sortOrder)   \r\n    if (e.sortField) setSortField(e.sortField)\r\n    \r\n  }  \r\n  const basisDeterminingFilterTemplate = (options: any) => {\r\n        return <MultiSelect value={options.value} options={BASIS_DERMINING}  onChange={(e) => options.filterCallback(e.value)} optionLabel=\"name\" placeholder=\"не выбрано\" className=\"p-column-filter\" />;\r\n    }\r\n  const deathPlaceFilterTemplate = (options: any) => {\r\n        return <MultiSelect value={options.value} options={DEAD_PLACE_TYPES}  onChange={(e) => options.filterCallback(e.value)} optionLabel=\"name\" placeholder=\"не выбрано\" className=\"p-column-filter\" />;\r\n    }   \r\n    \r\n  const fioFilterTemplate = (options: any) => {\r\n        return <InputText value={options.value}  onChange={(e) => options.filterCallback(e.target.value)}  placeholder=\"строка поиска\" className=\"p-column-filter\" />\r\n    }  \r\n  \r\n  const footer = `Всего ${ certificateStore.count } свидетельств(а).`  \r\n  const layoutParams = {\r\n        title: 'СПИСОК СВИДЕТЕЛЬСТВ',     \r\n        url: LIST_ROUTE,\r\n        content:\r\n        <>\r\n          <Toast ref={toast} />\r\n          <div id='tableDiv' className='p-card' >             \r\n              <DataTable ref={dt} value={certificateStore.certs}  responsiveLayout=\"scroll\" scrollDirection=\"both\"\r\n                emptyMessage=\"нет данных, удовлетворяющих запросу\" scrollable scrollHeight=\"72vh\" \r\n                selectionMode=\"single\" selection={selected}  dataKey=\"id\" size=\"small\"\r\n                footer={footer} loading={lazyLoading}\r\n                onSelectionChange={e =>{\r\n                  certificateStore.select(certificateStore.certs.findIndex(el=>el.id === e.value.id))\r\n                  setSelected(e.value)\r\n                }} filterDisplay=\"menu\" \r\n                onFilter={e=>{\r\n                  console.log('e',e)\r\n                  let _filters = {} as any\r\n                  let _constraint: any = e.filters['issue_date'] \r\n                  if (_constraint && _constraint.constraints[0] && _constraint.constraints[0].value) \r\n                    _filters[`issue_date${RunsackFilterMatchMode[_constraint.constraints[0].matchMode  as DataTableFilterMatchModeType]}`]=_constraint.constraints[0].value                  \r\n                  if (_constraint && _constraint.constraints[1] && _constraint.constraints[1].value) \r\n                    _filters[`issue_date${RunsackFilterMatchMode[_constraint.constraints[1].matchMode  as DataTableFilterMatchModeType]}`]=_constraint.constraints[1].value\r\n                    _constraint = e.filters['primory_reason'] \r\n                  if (_constraint && _constraint.constraints[0] && _constraint.constraints[0].value) \r\n                    _filters[`reason_ACME${RunsackFilterMatchMode[_constraint.constraints[0].matchMode  as DataTableFilterMatchModeType]}`]=_constraint.constraints[0].value                  \r\n                  if (_constraint && _constraint.constraints[1] && _constraint.constraints[1].value) \r\n                    _filters[`reason_ACME${RunsackFilterMatchMode[_constraint.constraints[1].matchMode  as DataTableFilterMatchModeType]}`]=_constraint.constraints[1].value  \r\n                   _constraint = e.filters['patient_birth_date'] \r\n                  if (_constraint && _constraint.constraints[0] && _constraint.constraints[0].value) \r\n                    _filters[`patient_birth_date${RunsackFilterMatchMode[_constraint.constraints[0].matchMode  as DataTableFilterMatchModeType]}`]=_constraint.constraints[0].value                  \r\n                  if (_constraint && _constraint.constraints[1] && _constraint.constraints[1].value) \r\n                    _filters[`patient_birth_date${RunsackFilterMatchMode[_constraint.constraints[1].matchMode  as DataTableFilterMatchModeType]}`]=_constraint.constraints[1].value  \r\n                  _constraint = e.filters['patient_death_date'] \r\n                  if (_constraint && _constraint.constraints[0] && _constraint.constraints[0].value) \r\n                    _filters[`death_datetime${RunsackFilterMatchMode[_constraint.constraints[0].matchMode  as DataTableFilterMatchModeType]}`]=_constraint.constraints[0].value                  \r\n                  if (_constraint && _constraint.constraints[1] && _constraint.constraints[1].value) \r\n                    _filters[`death_datetime${RunsackFilterMatchMode[_constraint.constraints[1].matchMode  as DataTableFilterMatchModeType]}`]=_constraint.constraints[1].value     \r\n                  _constraint = e.filters['number'] \r\n                  if (_constraint && _constraint.constraints[0] && _constraint.constraints[0].value) \r\n                    _filters[`number${RunsackFilterMatchMode[_constraint.constraints[0].matchMode as DataTableFilterMatchModeType]}`]=_constraint.constraints[0].value\r\n                  _constraint = e.filters['patient_fio'] \r\n                  if (_constraint && _constraint.constraints[0] && _constraint.constraints[0].value) \r\n                    _filters[`patient_fio${RunsackFilterMatchMode[_constraint.constraints[0].matchMode as DataTableFilterMatchModeType]}`]=_constraint.constraints[0].value  \r\n                  _constraint = e.filters['basis_determining']   \r\n                  if (_constraint && _constraint.value) {\r\n                    const values = _constraint.value as IReference[]\r\n                    let _codes = [] as string[]\r\n                    values.map(item=> _codes.push(item.code)) \r\n                    _filters.basis_determining_in = _codes   \r\n                  }\r\n                  _constraint = e.filters['death_place']   \r\n                  if (_constraint && _constraint.value) {\r\n                    const values = _constraint.value as IReference[]\r\n                    let _codes = [] as string[]\r\n                    values.map(item=> _codes.push(item.code)) \r\n                    _filters.death_place_in = _codes   \r\n                  }\r\n                  _constraint = e.filters['custodian_id']   \r\n                  if (_constraint && _constraint.value) {\r\n                    const values = _constraint.value as IReferenceId[]\r\n                    let _codes = [] as number[]\r\n                    values.map(item=> _codes.push(item.id)) \r\n                    _filters.custodian_id_in = _codes   \r\n                  }\r\n                  certificateStore.filters = _filters\r\n                  setLazyLoading(true)\r\n                  certificateStore.getList(()=>{setLazyLoading(false)})  \r\n                }}                \r\n                virtualScrollerOptions={{ lazy: true, onLazyLoad: loadCertificatesLazy, itemSize: 6, delay: 200}} filters={filters} filterLocale={'ru'}\r\n                onRowDoubleClick={()=>userStore.history().push(`${CERTIFICATE_ROUTE}/${certificateStore.cert.id}?q=0`)}\r\n                onSort={sortLazy} sortField={sortField} sortOrder={sortOrder}\r\n                >  \r\n                    <Column header=\"№ п.п\"  body={orderNumberBodyTemplate} sortable\r\n                      sortField='rowNumber'\r\n                      style={{ flexGrow: 1, flexBasis: '58px' }} frozen></Column>                                   \r\n                    <Column header=\"Серия Номер Вид\" body={seriesNumberBodyTemplate} filterField='number'\r\n                      filter filterPlaceholder=\"Поиск по номеру\" dataType='text' showFilterOperator ={false}                                           \r\n                      filterClear={filterClearTemplate} filterApply={filterApplyTemplate} sortField='number' sortable style={{ flexGrow: 1, flexBasis: '110px' }} frozen></Column>\r\n                    <Column header=\"Причины смерти и соп. патологии\" showFilterOperator ={false}                     \r\n                     filterField='primory_reason'  filterPlaceholder=\"код ПП\" filter dataType='numeric'\r\n                     filterClear={filterClearTemplate} filterApply={filterApplyTemplate}  \r\n                      style={{ flexGrow: 1, flexBasis: '250px' }} body={reasonsBodyTemplate}></Column>\r\n                    <Column  header=\"ФИО\" body={fioBodyTemplate} \r\n                      sortField='patient.person.person_name.family'\r\n                      dataType='text' showFilterOperator ={false}\r\n                      filter filterField='patient_fio' filterClear={filterClearTemplate} filterApply={filterApplyTemplate}  filterElement={fioFilterTemplate}\r\n                      sortable style={{ flexGrow: 1, flexBasis: '140px' }}></Column>                    \r\n                    <Column  header=\"ДР\" body={dbBodyTemplate} filter sortable\r\n                       showFilterOperator={false} dataType='date' filterPlaceholder=\"дата рождения\"\r\n                     filterField='patient_birth_date' sortField='patient.birth_date' \r\n                     filterClear={filterClearTemplate} filterApply={filterApplyTemplate}  \r\n                       style={{ flexGrow: 1, flexBasis: '110px' }}> </Column>\r\n                    <Column  header=\"ДС\" body={ddBodyTemplate} filter sortable\r\n                       showFilterOperator={false} dataType='date' filterPlaceholder=\"дата смерти\"\r\n                     filterField='patient_death_date' sortField='death_datetime' \r\n                     filterClear={filterClearTemplate} filterApply={filterApplyTemplate}  \r\n                       style={{ flexGrow: 1, flexBasis: '110px' }}> </Column>\r\n                    <Column  header=\"Лет\" body={ageBodyTemplate} \r\n                      style={{ flexGrow: 1, flexBasis: '46px' }}> </Column>\r\n                    <Column  header=\"Пол\" body={genderBodyTemplate} sortField='patient.gender'\r\n                      sortable style={{ flexGrow: 1, flexBasis: '56px' }}> </Column>    \r\n                    <Column  header=\"Адрес проживания\" sortable \r\n                      field='patient.person.address.streetAddressLine'\r\n                      style={{ flexGrow: 1, flexBasis: '200px' }}> </Column>  \r\n                    <Column  header=\"Адрес смерти\" sortable\r\n                      field='death_addr.streetAddressLine'\r\n                      style={{ flexGrow: 1, flexBasis: '200px' }}> </Column>                     \r\n                    <Column  header=\"Смерть наступила\" body={deathPlaceBodyTemplate}\r\n                      showFilterMatchModes={false} filterElement={deathPlaceFilterTemplate}\r\n                      filterClear={filterClearTemplate} filterApply={filterApplyTemplate} \r\n                      filter filterField='death_place' sortField='death_place' sortable \r\n                      style={{ flexGrow: 1, flexBasis: '140px' }}> </Column>  \r\n                    <Column  header=\"Основание заключения\" body={basisDeterminingBodyTemplate}\r\n                      sortField='basis_determining' sortable\r\n                      filterField='basis_determining' showFilterMatchModes={false}\r\n                      filterClear={filterClearTemplate} filterApply={filterApplyTemplate}\r\n                      filter filterElement={basisDeterminingFilterTemplate} \r\n                      style={{ flexGrow: 1, flexBasis: '140px' }}> </Column>\r\n                    {custodian}\r\n                    <Column  header=\"Специалист\" body={doctorBodyTemplate}\r\n                      style={{ flexGrow: 1, flexBasis: '120px' }}> </Column>\r\n                    <Column  header=\"Должность\" body={positionBodyTemplate}\r\n                      style={{ flexGrow: 1, flexBasis: '130px' }}> </Column>  \r\n                    <Column  header=\"Выдано\" body={issueDateBodyTemplate} \r\n                     showFilterOperator={false} dataType='date' \r\n                     filterField='issue_date' sortField='issue_date' filterPlaceholder=\"дата выпуска\"\r\n                     filterClear={filterClearTemplate} filterApply={filterApplyTemplate}                       \r\n                     filter sortable style={{ flexGrow: 1, flexBasis: '100px' }}> </Column>                \r\n                    <Column body={actionBodyTemplate} exportable={false} \r\n                      style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\r\n                </DataTable>\r\n          </div>  \r\n        </>\r\n    }\r\n\r\n return (\r\n    <>\r\n      <MainLayout {...layoutParams} />\r\n    </>\r\n )  \r\n}\r\nexport default observer(ListPage)","export default __webpack_public_path__ + \"static/media/security.f40a12e4.png\";","const LoginImageDiv = () => {\r\n  return (\r\n    <div className='login-image'>\r\n      <div className='login-image-content'>\r\n        <h1>Медицинское</h1>\r\n        <h1>свидетельство</h1>\r\n        <h1>о смерти</h1>\r\n        <h3>версия 3.0</h3>\r\n        <h3>(с учетом требований CDA_R2 уровня 3)</h3>\r\n      </div>\r\n      <div className='login-footer'>\r\n        <p>2022 © АО \"АМИАЦ\"</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default LoginImageDiv\r\n","import { observer } from 'mobx-react-lite'\r\nimport { useContext, useState } from 'react'\r\nimport { FC } from 'react'\r\nimport { Link} from 'react-router-dom'\r\nimport { Context } from '..'\r\nimport logo from \"../images/security.png\"\r\nimport '../styles/login.css'\r\nimport  '../styles/components/Inputtext.css'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport {Password} from 'primereact/password'\r\nimport { Button } from 'primereact/button'\r\nimport { Field, Form } from 'react-final-form'\r\nimport { classNames } from 'primereact/utils'\r\nimport LoginImageDiv from '../static/LoginImageDiv'\r\n\r\ninterface IAuth {\r\n  email: string\r\n  password: string\r\n}\r\nconst LoginPage: FC = () => {    \r\n  const [email, setEmail] = useState<string>('')\r\n  const {userStore} = useContext(Context)   \r\n  \r\n  const validate = (data: IAuth) => {\r\n    let errors: any = {}        \r\n        if (!data.email) {\r\n            errors.email = 'Поле <Email> обязательно'\r\n        } else if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)){\r\n          setEmail(data.email)\r\n        }\r\n        if (!data.password) {\r\n            errors.password = 'Поле <Пароль> обязательно'\r\n        }        \r\n        return errors\r\n  }\r\n  const onSubmit = async (data: IAuth, form: any) => {          \r\n    userStore.login(data.email, data.password)        \r\n  }\r\n  const onPassordRecovery = async () => {          \r\n    userStore.renew_link(email)        \r\n  }\r\n  const isFormFieldValid = (meta: any) => !!(meta.touched && meta.error)\r\n  const getFormErrorMessage = (meta: any) => {\r\n    return (isFormFieldValid(meta) && <small className=\"p-error\">{meta.error}</small>)\r\n  }    \r\n  return (\r\n  <>\r\n    <div className=\"login-body\">\r\n      <div className=\"login-wrapper\">\r\n        <div className=\"login-panel\">\r\n          <img src={logo} className='logo' alt=\"logo\"></img>\r\n          <div id=\"clickForm\" className=\"login-form\" >\r\n            <h2>Авторизация</h2>\r\n            <p>Нет учетной записи? <Link to=\"/registration\">Регистрация</Link></p>\r\n            <Form onSubmit={onSubmit} initialValues={{email: '', password: '' }} \r\n              validate={validate} \r\n              render={({ handleSubmit }) => (\r\n              <form  onSubmit={handleSubmit}  className=\"p-fluid\">\r\n                <Field name=\"email\" render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label p-input-icon-right\">\r\n                        <i className=\"pi pi-envelope\" />\r\n                        <InputText id=\"email\"  autoFocus {...input} className={classNames({ 'p-invalid': isFormFieldValid(meta) })} />\r\n                        <label htmlFor=\"email\" \r\n                        className={classNames({ 'p-error': isFormFieldValid(meta) })}>Email*</label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                  )} />\r\n                  <Field name=\"password\"  render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label p-input-icon-right\">\r\n                        <Password id=\"password\" autoComplete='off' {...input} toggleMask className={classNames({ 'p-invalid': isFormFieldValid(meta) })}  />\r\n                        <label htmlFor=\"password\" className={classNames({ 'p-error': isFormFieldValid(meta) })}>Пароль*</label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                  )} />\r\n              <Button type=\"submit\" label=\"ВОЙТИ\" style={{marginBottom:\"1rem\"}}/>   \r\n              <Button type=\"button\" onClick={onPassordRecovery} label=\"не помню пароль\" className=\"p-button-link\"  /> \r\n            </form>)}/>            \r\n          </div>\r\n        </div>  \r\n        <LoginImageDiv/>      \r\n      </div>\r\n    </div>\r\n  </>\r\n)}\r\nexport default observer(LoginPage)","import { observer } from 'mobx-react-lite'\r\nimport { FC, useContext, useEffect } from 'react'\r\nimport MainLayout from '../components/layouts/MainLayout'\r\nimport { CERTIFICATE_ROUTE, HOME_ROUTE, LIST_ROUTE, MO_SETTINGS_ROUTE } from '../utils/consts'\r\nimport { Button } from 'primereact/button'\r\nimport { Card } from 'primereact/card'\r\nimport { DataTable } from 'primereact/datatable'\r\nimport { Column } from 'primereact/column'\r\nimport { Divider } from 'primereact/divider'\r\nimport { Context } from '..'\r\nimport { ProgressSpinner } from 'primereact/progressspinner'\r\n\r\ntype MainPageProps = {}\r\n\r\nconst MainPage: FC<MainPageProps> = (props: MainPageProps) => {\r\n  const {userStore, certificateStore, layoutStore} = useContext(Context)\r\n  useEffect(()=>{\r\n    if (userStore.userInfo) certificateStore.userInfo = userStore.userInfo\r\n    layoutStore.isLoading = true\r\n    certificateStore.getList(()=>{layoutStore.isLoading = false},0,4)         \r\n  },[certificateStore, layoutStore, userStore.userInfo])\r\n  \r\n  const news =[{version:\"3.004\",record:\"Улучшена работа вкладки ввода причин; исправлена ошибка выбора жд_ст населенных пунктов при вводе адреса.\"},{version:\"3.003\",record:\"Улучшена работа списка. Фильтрация по датам рождения, первопричинам, МО в списке\"},{version:\"3.002\",record:\"Фильтрация по датам смерти в списке\"},\r\n  {version:\"3.001\",record:\"Исправлена ошибка нумерации в списке\"},\r\n  {version:\"3.000\",record:\"с учетом требований CDA_R2 уровня 3\"}]\r\n  const layoutParams= {\r\n    title: 'Главная',     \r\n    url: HOME_ROUTE,\r\n    content: userStore ? ( \r\n      <>     \r\n        <div className=\"p-d-flex p-flex-column p-jc-around p-flex-md-row p-flex-wrap\">\r\n          <Button style={{minWidth:'243px'}} className=\"p-mr-2 p-mb-2 p-shadow-3\" label=\"Ввод свидетельства\"  title=\"Форма ввода свидетельства\" \r\n          onClick={(e)=>{userStore.history().push(`${CERTIFICATE_ROUTE}/${certificateStore.cert.id}?q=0`)}}/>\r\n            <Button style={{minWidth:'243px'}} className=\"p-button-secondary p-mr-2 p-mb-2 p-shadow-3\" label=\"Настройки\" title=\"Настройки учетной записи\" onClick={(e)=>{userStore.history().push(`${MO_SETTINGS_ROUTE}/${userStore.userInfo?.organization.id}`)}}/>\r\n            <Button style={{minWidth:'243px'}} className=\"p-button-secondary p-mr-2 p-mb-2 p-shadow-3\" id=\"reports\" label=\"Отчеты\" title=\"Формирование отчетов\" />\r\n            <Button style={{minWidth:'243px'}} className=\"p-mr-2 p-mb-2 p-shadow-3\" label=\"Перинатальное свидетельство\" /> \r\n            <Button className=\"p-button-secondary p-mr-2 p-mb-2 p-shadow-3\" \r\n            id=\"repBt\" style={{minWidth:'243px'}} label=\"ЖУРНАЛ\" title=\"Журнал выданных свидетельств и копий\" />                     \r\n            <Button style={{minWidth:'243px'}} className=\"p-button-success p-mr-2 p-mb-2 p-shadow-3\" label=\"Список свидетельств\" title=\"Список введеных свидетельств\" onClick={(e)=>{userStore.history().push(LIST_ROUTE)}}/>            \r\n        </div> \r\n        <Divider style={{marginTop:'1rem', marginBottom:'1rem'}}/>\r\n        <div className=\"p-d-flex p-flex-column p-jc-around p-flex-md-row p-flex-wrap\">\r\n          <Card className=\"p-mr-2 p-mb-2\" title=\"Последние изменения\" >\r\n            <DataTable className=\"p-datatable-sm\" value={news} responsiveLayout='scroll'>\r\n              <Column field=\"version\" header=\"Версия\"></Column>\r\n              <Column field=\"record\" header=\"Что нового\"></Column>\r\n            </DataTable> \r\n          </Card>\r\n        </div>                  \r\n      </>\r\n    ) : (<ProgressSpinner/>)   \r\n  }  \r\n  return (\r\n    <>\r\n      <MainLayout {...layoutParams} />\r\n    </>\r\n  )\r\n}\r\nexport default observer(MainPage)","export default __webpack_public_path__ + \"static/media/ava.ec8d39a0.jpg\";","import $api, { API_URL } from \"../http\"\r\nimport { AxiosResponse } from \"axios\"\r\nimport { IUser } from \"../models/IUser\"\r\nimport { IUserInfo } from \"../models/responses/IUserInfo\"\r\nexport default class UsersService {\r\n  static async fetchUsers(): Promise<AxiosResponse<IUser[]>> {\r\n    return $api.post(`${API_URL}model/User/`, {\r\n      render_options: { only: [\"id\", \"email\", \"roles\", \"organization_id\", \"activated\"] },\r\n    })\r\n  }\r\n  static async getUser(id: number): Promise<AxiosResponse<IUserInfo>> {\r\n    return $api.post(`${API_URL}/show/model/User/${id}`, {\r\n      render_options: { only: [\"id\", \"roles\"], include: [\"person_name\", \"organization\", \"contacts\"] },\r\n      includes: [\"person_name\", \"organization\", \"contacts\"],\r\n      organization: { only: [\"id\", \"name\", \"sm_code\"] },\r\n    })\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/hospital.0e4a3324.jpg\";","import { FC, useContext, useEffect, useRef, useState } from 'react'\r\nimport { IRouteMatch } from '../models/IRouteMatch'\r\nimport { IRouteProps } from '../models/IRouteProps'\r\nimport ava from '../images/hospital.jpg'\r\nimport '../styles/pages/ProfilePage.css'\r\nimport '../styles/components/AutoComplete.css'\r\nimport { DESTROY_OPTION, MO_SETTINGS_ROUTE} from '../utils/consts'\r\nimport MainLayout from '../components/layouts/MainLayout'\r\nimport OrganizationService from '../services/OrganizationService'\r\nimport { IOrganization } from '../models/IOrganization'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { ProgressSpinner } from 'primereact/progressspinner'\r\nimport { IAudit } from '../models/IAudit'\r\nimport { classNames } from 'primereact/utils'\r\nimport { InputMask } from 'primereact/inputmask'\r\nimport { IContact } from '../models/IContact'\r\nimport { Button } from 'primereact/button'\r\nimport { Toast } from 'primereact/toast'\r\nimport { DEFAULT_ERROR_TOAST } from '../utils/defaults'\r\nimport { Context } from '..'\r\nimport { Dropdown } from 'primereact/dropdown'\r\nimport { IReferenceId } from '../models/IReference'\r\nimport AddressDialog from '../components/dialogs/AddressDialog'\r\nimport { observer } from 'mobx-react-lite'\r\nimport AddressFC2 from '../components/inputs/InputAddress'\r\nimport { IAddressR } from '../models/requests/IAddressR'\r\n\r\n// страница настроек профиля организации\r\n// Organization profile page\r\n\r\n// используем роут с параметром id для загрузки с API\r\ninterface IMatch extends IRouteMatch {  \r\n  params: {id: string}\r\n}\r\ninterface SettingsPageProps extends IRouteProps { \r\n    match: IMatch  \r\n}\r\n\r\n\r\nconst SettingsPage: FC<SettingsPageProps> = (props: SettingsPageProps) =>{ \r\n  const {userStore, addressStore} = useContext(Context)\r\n  const [audits, setAudits] = useState<IAudit[]>([])\r\n  const [submitted, setSubmitted] = useState(false)\r\n  const [email, setEmail] = useState<IContact>({telcom_value:'', main:false} as IContact) \r\n  const [phone, setPhone] = useState<IContact>({telcom_value:'', main:true} as IContact)\r\n  const [organization, setOrganization] = useState<IOrganization | null>(null)\r\n  const [ID, setID] = useState<number | null>(null)\r\n  const toast = useRef<Toast>(null) \r\n  useEffect(()=>{\r\n    if (organization!==null && organization.id !== ID) {\r\n      setPhone({telcom_value:'', main:true} as IContact)\r\n      setEmail({telcom_value:'', main:false} as IContact)          \r\n      organization.contacts.forEach((item)=>{if (item.main) setPhone({...item})\r\n        else setEmail({...item, telcom_value: item.telcom_value.replace('mailto:','')})})\r\n      setID(organization.id)      \r\n    }\r\n  },[organization, ID])\r\n\r\n  useEffect(()=>{\r\n    if (organization===null && props.match.params.id) {\r\n        OrganizationService.getOrganization(props.match.params.id)\r\n        .then(response=>{        \r\n          setOrganization(response.data)        \r\n        })\r\n        .catch((reason=>{console.log(reason)\r\n          if (toast!==null && toast.current!==null) toast.current.show(DEFAULT_ERROR_TOAST)\r\n        }))      \r\n    }\r\n  },[organization, props.match.params.id, userStore.userInfo])\r\n  const [organizations, setOrganizations] = useState<IReferenceId[] | null>(null)\r\n  useEffect(()=>{\r\n    if (organizations===null && userStore.userInfo\r\n       && userStore.userInfo.roles.includes('ADMIN')) \r\n    OrganizationService.getOrganizations().then(response=>\r\n      setOrganizations(response.data.organizations)\r\n    ).catch(()=>{\r\n      setOrganizations([])\r\n      if (toast!==null && toast.current!==null) toast.current.show(DEFAULT_ERROR_TOAST)\r\n    })},[organizations, userStore.userInfo])\r\n  const changesAudit = (fieldName: string, field: string, oldValue: string, newValue: string) => {\r\n    if (organization ===null) return\r\n    let _audits = audits\r\n    const audit = _audits.find(element=>element.field === field) || {field, before: oldValue} as IAudit\r\n    if (audit.after === undefined) _audits.push(audit)    \r\n    audit.after = newValue   \r\n    audit.detail = `${fieldName}: ${audit.before} -> ${audit.after}`     \r\n    setAudits(_audits)\r\n  }\r\n  \r\n\r\n  // Обработчик изменения контактов      \r\n  const onContactChange = (contact: IContact) => { \r\n      if (organization === null) return  \r\n      let _contact = contact.telcom_value==='' ?\r\n      (contact.id ? {...contact,...DESTROY_OPTION} : {...contact}) :    \r\n      (contact.id ? {id:contact.id, parent_guid: contact.parent_guid, telcom_use: contact.telcom_use, telcom_value: contact.telcom_value, main: contact.main} : {...contact}) \r\n      if (organization.contacts === undefined) organization.contacts = []\r\n      if (_contact.id) {        \r\n          const idx = organization.contacts.findIndex(item=>item.id===_contact.id)  \r\n          if (idx>-1) organization.contacts[idx] = _contact        \r\n      } else organization.contacts.push(_contact)       \r\n  }\r\n\r\n  // проверка возможности сохранения\r\n  const isSaveAvaible = () : boolean => {\r\n    if (organization === null) return false    \r\n    let _result = audits.length > 0    \r\n    _result = _result && /tel:\\+?[-0-9().]+/i.test(phone.telcom_value)    \r\n    _result = _result && (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email.telcom_value) || email.telcom_value==='')    \r\n    _result = _result && !(!organization.name || (!organization.name && organization.name.length > 100))\r\n    _result = _result && !!organization.name_full    \r\n    //_result = _result && !(!organization.address || !organization.address.houseGUID)\r\n   \r\n    return  _result\r\n  }  \r\n  const saveOrganization = () => {\r\n    if (organization===null) return    \r\n    setSubmitted(true)\r\n    if (isSaveAvaible()) {\r\n      onContactChange(phone)\r\n      onContactChange(email)\r\n      let _organization = { id: organization.id,                               \r\n                            name: organization.name,\r\n                            name_full: organization.name_full,\r\n                            license: organization.license || null,\r\n                            license_data: organization.license_data || null,\r\n                            okpo: organization.okpo || null,\r\n                            sm_code: organization.sm_code || '00',\r\n                            contacts_attributes: organization.contacts,\r\n                            address_attributes: organization.address\r\n                           } as any                                                     \r\n      OrganizationService.updateOrganization({Organization: _organization, audits: audits})\r\n        .then(response=>{          \r\n          setAudits([])\r\n          setSubmitted(false)\r\n          setOrganization(response.data)\r\n          //console.log('response.data',response.data)\r\n          if (toast!==null && toast.current!==null) toast.current.show({ severity: 'success', summary: 'Успешно', detail: 'Изменения применены', life:3000 })\r\n        })\r\n        .catch((reason=>{console.log(reason)\r\n          if (toast!==null && toast.current!==null) toast.current.show(DEFAULT_ERROR_TOAST)\r\n        }))    \r\n    } else if (toast!==null && toast.current!==null) toast.current.show({ severity: 'info', summary: 'Отклонено', detail: 'Изменения отсутствуют или неприменимы', life:3000 })   \r\n  } \r\n  \r\n  const adminOpportunities = ()=>{    \r\n    return (userStore.userInfo && userStore.userInfo.roles.includes('ADMIN')) ? \r\n    (<>\r\n      <div className=\"p-field p-col-12\">\r\n        <label htmlFor=\"organization\" >Выбрать медорганизацию</label>\r\n        <Dropdown id=\"organization\"  options={organizations || []}\r\n          onChange={(e)=>{            \r\n            if (e.value.id) {\r\n              const history = userStore.history()\r\n              let link = `${MO_SETTINGS_ROUTE}/${e.value.id}`\r\n              setOrganization(null)              \r\n              history.push(link)              \r\n            }  \r\n          }}\r\n          filter showClear optionLabel=\"name\" />\r\n      </div>\r\n    </>) \r\n    : (<></>)     \r\n  }\r\n  const layoutParams = {\r\n    title: 'Профиль медорганизации',     \r\n    url: MO_SETTINGS_ROUTE,\r\n    content: organization ? (<>    \r\n    <div className=\"card widget-user-card\" key={props.match.params.id}>\r\n      <div className=\"user-card-header\">\r\n        <img src={ava} alt=\"\" className=\"user-card-avatar\" />\r\n      </div>\r\n      <div className=\"user-card-body\">  \r\n      <div className=\"user-card-title\">\r\n        {organization.name || ''}\r\n      </div>             \r\n      <div className=\"user-card-subtext\">{organization.oid}</div>\r\n      <div className=\"p-grid user-card-stats\">\r\n        <div className=\"p-col-4\">\r\n          <i className=\"pi pi-users\"></i>\r\n          <div>14 Создано</div>\r\n        </div>\r\n        <div className=\"p-col-4\">\r\n          <i className=\"pi pi-bookmark\"></i>\r\n          <div>2 Выданно</div>\r\n        </div>\r\n        <div className=\"p-col-4\">\r\n          <i className=\"pi pi-check-square\"></i>\r\n          <div>6 Отправленно</div>\r\n        </div>\r\n      </div>        \r\n    </div>\r\n    <div className='card' style={{textAlign: 'left'}} >      \r\n        <div className='p-fluid p-formgrid p-grid'>\r\n          <div className=\"p-field p-col-12 p-md-5 \">\r\n            <label htmlFor=\"name\">Наименование</label>\r\n            <InputText id=\"name\" required value={organization.name || ''} \r\n              onChange={e=>{\r\n                  let _organization = {...organization}\r\n                  changesAudit(\"Наименование\", \"name\", _organization.name || '', e.target.value || '')\r\n                   _organization.name = e.target.value\r\n                  setOrganization(_organization) \r\n              }}\r\n              autoFocus className={classNames({ 'p-invalid': submitted && organization.name && organization.name?.length > 100})}\r\n            />\r\n            {submitted && (!organization.name || (organization.name && organization.name.length > 100)) && <small className=\"p-error\">Краткое наименование более 100 знаков или отсутствует</small>}\r\n          </div>\r\n          <div className=\"p-field p-col-12 p-md-7\">\r\n            <label htmlFor=\"name_full\">Полное наименование</label>\r\n            <InputText id=\"name_full\" value={organization.name_full || ''} \r\n              onChange={e=>{\r\n                  let _organization = {...organization}                  \r\n                  changesAudit(\"Полное наименование\", \"name_full\", _organization.name || '', e.target.value || '')\r\n                  _organization.name_full = e.target.value\r\n                  setOrganization(_organization) \r\n              }}\r\n              required className={classNames({ 'p-invalid': submitted && !organization.name_full})}\r\n            />\r\n            {submitted && !organization.name_full && <small className=\"p-error\">Полное наименование обязательно</small>}\r\n          </div>\r\n          <div className=\"p-field p-col-12\">\r\n            <label htmlFor=\"license\">Cерия и номер лицензии на осуществление медицинской деятельности</label>\r\n            <InputText id=\"license\" value={organization.license || ''} \r\n              onChange={e=>{\r\n                  let _organization = {...organization}\r\n                  changesAudit(\"Cерия и номер лицензии\", \"license\", _organization.license || '', e.target.value || '')\r\n                   _organization.license = e.target.value\r\n                  setOrganization(_organization) \r\n              }}               \r\n            />            \r\n          </div>\r\n          <div className=\"p-field p-col-12\">\r\n            <label htmlFor=\"license_data\">указание на Федеральную службу по надзору в сфере здравоохранения и дату регистрации лицензии</label>\r\n            <InputText id=\"license_data\" value={organization.license_data || ''} \r\n              onChange={e=>{\r\n                  let _organization = {...organization}\r\n                  changesAudit(\"Данные лицензии\", \"license_data\", _organization.license_data || '', e.target.value || '')\r\n                   _organization.license_data = e.target.value\r\n                  setOrganization(_organization) \r\n              }}               \r\n            />            \r\n          </div>\r\n          <div className=\"p-field p-col-12 p-md-6\">\r\n            <label htmlFor=\"okpo\">ОКПО</label>\r\n            <InputText id=\"okpo\" value={organization.okpo || ''} \r\n              onChange={e=>{\r\n                  let _organization = {...organization}\r\n                  changesAudit(\"ОКПО\", \"okpo\", _organization.okpo || '', e.target.value || '')\r\n                  _organization.okpo = e.target.value\r\n                  setOrganization(_organization) \r\n              }}               \r\n            />            \r\n          </div>\r\n          <div className=\"p-field p-col-12 p-md-6\">\r\n            <label htmlFor=\"sm_code\">Последние две цифры кода в ТФОМС</label>\r\n            <div className=\"p-inputgroup\">\r\n              <span className=\"p-inputgroup-addon\">2800</span>\r\n              <InputMask mask=\"99\" id=\"sm_code\" value={organization.sm_code || ''} \r\n                onChange={e=>{\r\n                  let _organization = {...organization}\r\n                  changesAudit(\"ТФОМС код\", \"sm_code\", _organization.sm_code || '', e.target.value || '')\r\n                  _organization.sm_code = e.value\r\n                  setOrganization(_organization) \r\n                }}               \r\n              />                            \r\n            </div>                        \r\n          </div>\r\n          <div className=\"p-field p-col-12 p-md-6\">\r\n            <label htmlFor=\"phone\">телефон</label>\r\n            <InputMask id=\"phone\" required \r\n              type=\"text\" mask=\"tel:+79999999999\"\r\n              value={phone.telcom_value} \r\n              onChange={(e)=>{\r\n                changesAudit(\"телефон\", \"phone\", phone.telcom_value || '', e.target.value || '')  \r\n                setPhone({...phone, telcom_value: e.target.value})                \r\n              }} \r\n              className={classNames({ 'p-invalid': submitted && !/tel:\\+?[-0-9().]+/i.test(phone.telcom_value)})}\r\n            />\r\n            {submitted && !/tel:\\+?[-0-9().]+/i.test(phone.telcom_value) && <small className=\"p-error\">тел.номер некорректен или отсутствует!</small>}            \r\n          </div>\r\n          <div className=\"p-field  p-col-12 p-md-6\">\r\n            <label htmlFor=\"email\">email</label>\r\n            <InputText id=\"email\" type=\"text\" \r\n              value={email.telcom_value} \r\n              onChange={(e)=>{ \r\n                changesAudit(\"email\", \"email\", email.telcom_value || '', e.target.value || '') \r\n                setEmail({...email, telcom_value:e.target.value})  \r\n              }} \r\n              className={classNames({ 'p-invalid': submitted && !(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email.telcom_value) || email.telcom_value==='')})}\r\n                    />\r\n              {submitted && !(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email.telcom_value) || email.telcom_value==='') && <small className=\"p-error\">Неверный email</small>}\r\n          </div>      \r\n          <AddressFC2 className=\"p-col-12\" submitted={submitted} \r\n            label='Адрес медорганизации'\r\n            value={organization.address} strictly \r\n            onClear={(value: IAddressR)=>setOrganization({...organization, address: {...value}})}\r\n            onChange={()=>{        \r\n              let _organization = {...organization, address: addressStore.addressProps()}                \r\n              changesAudit(\"Адрес\", \"address\", organization.address?.streetAddressLine || '', _organization.address?.streetAddressLine || '')                 \r\n              setOrganization(_organization)\r\n            }}  \r\n          />\r\n          <div className=\"p-field  p-col-12 p-md-6\">\r\n            <Button label=\"ПРИМЕНИТЬ\"  className=\"p-button-success\" \r\n              style={{marginTop: '22px'}} onClick={saveOrganization}  />\r\n          </div>   \r\n          {adminOpportunities()}          \r\n        </div>        \r\n      </div>             \r\n    </div>\r\n    <Toast ref={toast} /> \r\n    <AddressDialog />        \r\n  </>) : (<><Toast ref={toast} /><ProgressSpinner/></>)\r\n  }\r\n  return (\r\n    <>\r\n      <MainLayout {...layoutParams} />\r\n    </>\r\n  )\r\n}\r\nexport default observer(SettingsPage)","import { AdminPage } from \"./pages/AdminPage\"\r\nimport CertificatePage from \"./pages/CertificatePage\"\r\nimport DoctorsPage from \"./pages/DoctorsPage\"\r\nimport { ErrorPage } from \"./pages/ErrorPage\"\r\nimport ListPage from \"./pages/ListPage\"\r\nimport LoginPage from \"./pages/LoginPage\"\r\nimport MainPage from \"./pages/MainPage\"\r\nimport { MessagePage } from \"./pages/MessagePage\"\r\nimport { PassordRecoveryPage } from \"./pages/PasswordRecoveryPage\"\r\nimport { ProfilePage } from \"./pages/ProfilePage\"\r\nimport { RegistrationPage } from \"./pages/RegistrationPage\"\r\nimport SettingsPage from \"./pages/SettingsPage\"\r\nimport {\r\n  ADMIN_ROUTE,\r\n  CERTIFICATE_ROUTE,\r\n  ERROR_ROUTE,\r\n  HOME_ROUTE,\r\n  LIST_ROUTE,\r\n  LOGIN_ROUTE,\r\n  MESSAGE_ROUTE,\r\n  PWD_RECOVERY_ROUTE,\r\n  REGISTRATION_ROUTE,\r\n  USER_ROUTE,\r\n  DOCTORS_ROUTE,\r\n  MO_SETTINGS_ROUTE,\r\n} from \"./utils/consts\"\r\n\r\nexport const AUTH_ROUTES = [\r\n  { path: HOME_ROUTE, Component: MainPage },\r\n  { path: ADMIN_ROUTE, Component: AdminPage },\r\n  { path: LIST_ROUTE, Component: ListPage },\r\n  { path: CERTIFICATE_ROUTE + \"/:id\", Component: CertificatePage },\r\n  { path: DOCTORS_ROUTE, Component: DoctorsPage },\r\n  { path: USER_ROUTE + \"/:id\", Component: ProfilePage },\r\n  { path: MO_SETTINGS_ROUTE + \"/:id\", Component: SettingsPage },\r\n  { path: LOGIN_ROUTE, Component: MainPage },\r\n]\r\nexport const NON_AUTH_ROUTES = [\r\n  { path: LOGIN_ROUTE, Component: LoginPage },\r\n  { path: REGISTRATION_ROUTE, Component: RegistrationPage },\r\n  { path: PWD_RECOVERY_ROUTE + \"/:code\", Component: PassordRecoveryPage },\r\n  { path: HOME_ROUTE, Component: LoginPage },\r\n]\r\nexport const PUBLIC_ROUTES = [\r\n  { path: MESSAGE_ROUTE + \"/:message\", Component: MessagePage },\r\n  { path: ERROR_ROUTE + \"/:error\", Component: ErrorPage },\r\n]\r\n","//import React, { useEffect } from 'react';\r\nimport { FC } from 'react'\r\n\r\ntype AdminPageProps = {}\r\n\r\nexport const AdminPage: FC<AdminPageProps> = (props: AdminPageProps) => {\r\n  //const [state, setState] = useState();\r\n\r\n  //useEffect(() => {}, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>AdminPage React TS FC Component</h1>\r\n      <div>List</div>\r\n    </>\r\n  );\r\n};","import { FC, useEffect, useState } from 'react'\r\nimport { IRouteMatch } from '../models/IRouteMatch'\r\nimport { IRouteProps } from '../models/IRouteProps'\r\nimport ava from '../images/ava.jpg'\r\nimport '../styles/pages/ProfilePage.css'\r\nimport { ROLES, USER_ROUTE } from '../utils/consts'\r\nimport MainLayout from '../components/layouts/MainLayout'\r\nimport { IUserInfo } from '../models/responses/IUserInfo'\r\nimport UsersService from '../services/UsersService'\r\n\r\n// страница настроек профиля пользователя\r\n// User profile page\r\n\r\n// используем роут с параметром id для загрузки с API\r\ninterface IMatch extends IRouteMatch {  \r\n  params: {id: number}\r\n}\r\ninterface ProfilePageProps extends IRouteProps { \r\n    match: IMatch  \r\n}\r\n\r\n\r\nexport const ProfilePage: FC<ProfilePageProps> = (props: ProfilePageProps) =>{ \r\n  const [user, setUser] = useState<IUserInfo | null>(null)\r\n  useEffect(()=>{\r\n    if (user===null && props.match.params.id) UsersService.getUser(props.match.params.id)\r\n    .then(response=>setUser(response.data))\r\n    .catch(()=>console.log('Ошибка получения пользователя')) \r\n  })\r\n  const user_name = `${user?.person_name.family} ${user?.person_name.given_1}`\r\n  const user_team = `${user!==null && user.roles ? ROLES[user.roles.split(' ')[0]] : ''} ${user?.organization.name}`\r\n  const layoutParams = {\r\n    title: 'Профиль пользователя',     \r\n    url: USER_ROUTE,\r\n    content: (<>  \r\n    <div className=\"card widget-user-card\">\r\n      <div className=\"user-card-header\">\r\n        <img src={ava} alt=\"\" className=\"user-card-avatar\" />\r\n      </div>\r\n      <div className=\"user-card-body\">\r\n        <div className=\"user-card-title\">{user_name}</div>\r\n        <div className=\"user-card-subtext\">{user_team}</div>\r\n        <div className=\"p-grid user-card-stats\">\r\n          <div className=\"p-col-4\">\r\n            <i className=\"pi pi-users\"></i>\r\n            <div>14 Создано</div>\r\n          </div>\r\n          <div className=\"p-col-4\">\r\n            <i className=\"pi pi-bookmark\"></i>\r\n            <div>2 Выданно</div>\r\n          </div>\r\n          <div className=\"p-col-4\">\r\n            <i className=\"pi pi-check-square\"></i>\r\n            <div>6 Отправленно</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>      \r\n  </>)\r\n  }\r\n  return (\r\n    <>\r\n      <MainLayout {...layoutParams} />\r\n    </>\r\n  )\r\n}","import { useHistory} from 'react-router-dom'\r\nimport { Button } from 'primereact/button'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { Password } from 'primereact/password'\r\nimport { Dropdown } from 'primereact/dropdown'\r\nimport { InputMask } from 'primereact/inputmask'\r\nimport { classNames } from 'primereact/utils'\r\nimport  '../styles/components/Dropdown.css'\r\nimport  '../styles/components/Inputtext.css'\r\nimport React, { useContext, useState } from 'react'\r\nimport { FC } from 'react'\r\nimport { Field, Form } from 'react-final-form'\r\nimport { Context } from '..'\r\nimport logo from \"../images/security.png\"\r\nimport { IRegisterForm } from '../models/FormsData/IRegisterForm'\r\nimport { IRegistration } from '../models/requests/IRegistration'\r\nimport LoginImageDiv from '../static/LoginImageDiv'\r\nimport OrganizationService from '../services/OrganizationService'\r\nimport { useEffect } from 'react'\r\nimport { IReferenceId } from '../models/IReference'\r\n\r\nexport const RegistrationPage: FC = () =>{ \r\n  const history = useHistory()  \r\n  const [organizations, setOrganizations] = useState<IReferenceId[] | null>(null)\r\n  useEffect(()=>{\r\n    if (organizations===null) OrganizationService.getOrganizations().then(response=>\r\n      setOrganizations(response.data.organizations)\r\n    ).catch(()=>{\r\n      setOrganizations([])\r\n      history.push(\"/error/Ошибка API при получении списка МО\")\r\n    })},[organizations, history])\r\n  const {userStore} = useContext(Context)  \r\n  const validate = (data: IRegisterForm) => {\r\n    let errors: any = {} \r\n    if (!data.name || (data.name.trim().split(' ').length < 2)){             \r\n            errors.name = 'значение <ФИО> некорректно'\r\n    }       \r\n    if (!data.email) {\r\n       errors.email = 'Поле <Email> обязательно'\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n       errors.email = 'Неверный email Н.п. example@email.com'\r\n    }\r\n    if (!data.password) {\r\n       errors.password = 'Поле <Пароль> обязательно'\r\n    } else if (data.password && data.password!==data.password_confirmation) {\r\n       errors.password_confirmation = 'пароли не совпадают'\r\n    }     \r\n    if (data.organization == null ) {\r\n       errors.organization = 'Поле <Медорганизация> обязательно'       \r\n    }   \r\n    return errors\r\n  }\r\n    const onSubmit = async (data: IRegisterForm, form: any) => {\r\n    const request:IRegistration  = {} as IRegistration \r\n    try {\r\n        const names = data.name.trim().split(' ')\r\n        request.person_name_attributes = {family: names[0], given_1: names[1]}         \r\n        if (names.length>2)  request.person_name_attributes.given_2= names[2]  \r\n        if (data.phone_number) request.contacts_attributes={telcom_value: data.phone_number, main: true}        \r\n        request.email = data.email\r\n        request.password = data.password\r\n        request.password_confirmation = data.password_confirmation\r\n        request.organization_id = data.organization.id                  \r\n        userStore.registration(request)        \r\n    } catch (e:any){\r\n      history.push(\"/error/\"+e.message)      \r\n    }          \r\n  }\r\n  const isFormFieldValid = (meta: any) => !!(meta.touched && meta.error)\r\n  const getFormErrorMessage = (meta: any) => {\r\n    return (isFormFieldValid(meta) && <small className=\"p-error\">{meta.error}</small>)\r\n  } \r\n  if (organizations)\r\n  return (\r\n  <>\r\n    <div className=\"login-body\">\r\n      <div className=\"login-wrapper\">\r\n        <div className=\"login-panel\">\r\n          <img src={logo} className=\"logo_reg\" alt=\"logo\"></img>\r\n          <div className=\"login-form\">\r\n            <h2>Регистрация</h2>            \r\n            <Form onSubmit={onSubmit} initialValues={{name: '', email: '', password: '', password_confirmation: '', organization: null, phone_number: ''}} \r\n              validate={validate} \r\n              render={({ handleSubmit }) => (\r\n              <form onSubmit={handleSubmit} className=\"p-fluid\" >\r\n                <Field name=\"name\" render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label p-input-icon-right\">\r\n                       <InputText id=\"name\" {...input} autoFocus className={classNames({ 'p-invalid': isFormFieldValid(meta) })} />\r\n                        <label htmlFor=\"name\" className={classNames({ 'p-error': isFormFieldValid(meta) })}>Фамилия имя отчество*</label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                )} />                \r\n                <Field name=\"email\" render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label p-input-icon-right\">\r\n                        <i className=\"pi pi-envelope\" />\r\n                        <InputText id=\"email\" {...input} className={classNames({ 'p-invalid': isFormFieldValid(meta) })} />\r\n                        <label htmlFor=\"email\" \r\n                        className={classNames({ 'p-error': isFormFieldValid(meta) })}>Email*</label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                  )} />\r\n                  <Field name=\"password\" render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label p-input-icon-right\">\r\n                        <Password id=\"password\" {...input} toggleMask className={classNames({ 'p-invalid': isFormFieldValid(meta) })}  />\r\n                        <label htmlFor=\"password\" className={classNames({ 'p-error': isFormFieldValid(meta) })}>Пароль*</label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                  )} />\r\n                  <Field name=\"password_confirmation\" render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label p-input-icon-right\">\r\n                        <Password id=\"password_confirmation\" {...input}  toggleMask className={classNames({ 'p-invalid': isFormFieldValid(meta) })}  />\r\n                        <label htmlFor=\"password_confirmation\" className={classNames({ 'p-error': isFormFieldValid(meta) })}>Еще раз пароль*</label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                  )} />\r\n                  <Field name=\"organization\" render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label\">\r\n                       <Dropdown id=\"organization\" {...input} options={organizations}\r\n                        filter showClear optionLabel=\"name\" className=\"p-inputwrapper p-inputwrapper-filled\"/>  \r\n                        <label htmlFor=\"organization\" className={classNames({ 'p-error': isFormFieldValid(meta) })}>Медорганизация*</label>                     \r\n                      </span>  \r\n                      {getFormErrorMessage(meta)}                    \r\n                    </div>\r\n                  )} />\r\n                  <Field name=\"phone\" render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label p-input-icon-right\">\r\n                        <i className=\"pi pi-phone\" />\r\n                       <InputMask id=\"phone\" {...input} mask=\"+7(999) 999-9999\"  className={classNames({ 'p-invalid': isFormFieldValid(meta) })} />\r\n                        <label htmlFor=\"phone\" className={classNames({ 'p-error': isFormFieldValid(meta) })}>Контактный номер</label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                )} />\r\n              <Button type=\"submit\" label=\"ДАЛЕЕ\" />    \r\n            </form>)}/>            \r\n          </div>\r\n        </div>  \r\n        <LoginImageDiv/>      \r\n      </div>\r\n    </div>\r\n  </>)\r\n  else return <></>\r\n}","import { FC, useContext } from 'react'\r\nimport { Field, Form } from 'react-final-form'\r\nimport { Button } from 'primereact/button'\r\nimport { Password } from 'primereact/password'\r\nimport { classNames } from 'primereact/utils'\r\nimport { Context } from '..'\r\nimport { IRouteMatch } from '../models/IRouteMatch'\r\nimport { IRouteProps } from '../models/IRouteProps'\r\nimport LoginImageDiv from '../static/LoginImageDiv'\r\nimport logo from '../images/security.png'\r\nimport { IPassRenew } from '../models/requests/IPassRenew'\r\ninterface IParams {code: string}\r\ninterface IMatch extends IRouteMatch {  \r\n  params: IParams\r\n}\r\ninterface PasswordRecoveryPageProps extends IRouteProps {  \r\n  match: IMatch  \r\n}\r\nexport const PassordRecoveryPage: FC<PasswordRecoveryPageProps> = (props: PasswordRecoveryPageProps) =>{\r\n  const {userStore} = useContext(Context)\r\n  const validate = (data: IPassRenew) => {\r\n    let errors: any = {}        \r\n    if (!data.password) {\r\n       errors.password = 'Поле <Пароль> обязательно'\r\n    } else if (data.password && data.password!==data.password_confirmation) {\r\n       errors.password_confirmation = 'пароли не совпадают'\r\n    }      \r\n    return errors\r\n  }\r\n  const isFormFieldValid = (meta: any) => !!(meta.touched && meta.error)\r\n  const getFormErrorMessage = (meta: any) => {\r\n    return (isFormFieldValid(meta) && <small className=\"p-error\">{meta.error}</small>)\r\n  }\r\n  const onSubmit = (data: IPassRenew, form: any) => {          \r\n     userStore.pwd_renew(data)       \r\n  }   \r\n  return (\r\n  <>    \r\n    <div className=\"login-body\">\r\n      <div className=\"login-wrapper\">\r\n        <div className=\"login-panel\">\r\n          <img src={logo} className='logo' alt=\"logo\"></img>\r\n          <div  className=\"login-form\" >\r\n            <h2>Восстановить пароль</h2>            \r\n            <Form onSubmit={onSubmit} initialValues={{ activation_link: props.match.params.code,password: '', password_confirmation: '' }} \r\n              validate={validate} \r\n              render={({ handleSubmit }) => (\r\n              <form  onSubmit={handleSubmit}  className=\"p-fluid\">                \r\n                  <Field name=\"password\"  render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label p-input-icon-right\">\r\n                        <Password id=\"password\" autoComplete='off' {...input} toggleMask className={classNames({ 'p-invalid': isFormFieldValid(meta) })}  />\r\n                        <label htmlFor=\"password\" className={classNames({ 'p-error': isFormFieldValid(meta) })}>Новый пароль*</label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                  )} />\r\n                  <Field name=\"password_confirmation\" render={({ input, meta }) => (\r\n                    <div className=\"p-field\">\r\n                      <span className=\"p-float-label p-input-icon-right\">\r\n                        <Password id=\"password_confirmation\" {...input}  toggleMask className={classNames({ 'p-invalid': isFormFieldValid(meta) })}  />\r\n                        <label htmlFor=\"password_confirmation\" className={classNames({ 'p-error': isFormFieldValid(meta) })}>Еще раз пароль*</label>\r\n                      </span>\r\n                      {getFormErrorMessage(meta)}\r\n                    </div>\r\n                  )} />\r\n              <Button type=\"submit\" label=\"ИЗМЕНИТЬ\" />               \r\n            </form>)}/>            \r\n          </div>\r\n        </div>  \r\n        <LoginImageDiv/>      \r\n      </div>\r\n    </div>\r\n  </>)\r\n}","\r\nimport { FC } from 'react';\r\nimport { IRouteMatch } from '../models/IRouteMatch';\r\nimport { IRouteProps } from '../models/IRouteProps';\r\n\r\ninterface IParams {message: string}\r\ninterface IMatch extends IRouteMatch {  \r\n  params: IParams\r\n}\r\ninterface MessagePageProps extends IRouteProps {  \r\n  match: IMatch  \r\n}\r\n\r\n\r\nexport const MessagePage: FC<MessagePageProps> = (props: MessagePageProps) => {\r\n  return (\r\n    <>\r\n      <h1>Внимание:</h1>\r\n      <div>{props.match.params.message}!</div>\r\n    </>\r\n  )\r\n}","\r\nimport { FC } from 'react'\r\nimport { IRouteMatch } from '../models/IRouteMatch'\r\nimport { IRouteProps } from '../models/IRouteProps'\r\nimport '../styles/simplePage.css'\r\nimport '../styles/root.css'\r\n\r\n\r\ninterface IMatch extends IRouteMatch {  \r\n  params: {error: string}\r\n}\r\ninterface ErrorPageProps extends IRouteProps { \r\n    match: IMatch  \r\n}\r\n\r\nexport const ErrorPage: FC<ErrorPageProps> = (props: ErrorPageProps) => {\r\n  return (\r\n    <>\r\n      <div className=\"error-body\">\r\n        <div className=\"erpage-block\">\r\n          <h1>Ошибка!</h1>\r\n          <div>{props.match.params.error}</div>\r\n        </div>\r\n      </div>  \r\n    </>\r\n  )\r\n}","import { observer } from 'mobx-react-lite'\r\nimport { useEffect } from 'react'\r\nimport { useContext } from 'react'\r\nimport { FC } from 'react'\r\nimport { Route, Switch, useHistory } from 'react-router-dom'\r\nimport { Context } from '..'\r\nimport { NoMatchPage } from '../pages/NoMatchPage'\r\nimport { AUTH_ROUTES, NON_AUTH_ROUTES, PUBLIC_ROUTES } from '../routes'\r\n\r\nconst AppRouter: FC = observer(() => {  \r\n  const history = useHistory()\r\n  const {userStore} = useContext(Context) \r\n  const token =  userStore.token()\r\n  const isAuth =  userStore.isAuth()\r\n  userStore.setHistory(history)  \r\n  useEffect(()=>{\r\n    if (token.length>0 && !isAuth) {\r\n      userStore.checkAuth()\r\n    }   \r\n  },[token, userStore, isAuth])  \r\n  const chech_routes =  userStore.isAuth() || (token.length>0) ?  AUTH_ROUTES : NON_AUTH_ROUTES    \r\n  return (\r\n    <Switch> \r\n      { chech_routes.map(\r\n        ({path, Component})=><Route key={path} path={path} component={Component} exact/>)\r\n      }          \r\n      { PUBLIC_ROUTES.map(\r\n        ({path, Component})=><Route key={path} path={path} component={Component} exact/>)\r\n      }\r\n      <Route component={NoMatchPage} />                         \r\n    </Switch>     \r\n  )\r\n})\r\nexport default AppRouter\r\n","import {FC} from 'react'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport AppRouter  from './components/AppRouter'\r\nimport './styles/root.css'\r\nimport './styles/primereact.css'\r\nimport 'primeicons/primeicons.css'\r\nimport 'primeflex/primeflex.css'\r\n\r\n\r\nconst App: FC =() => {    \r\n  return (\r\n    <BrowserRouter>\r\n      <AppRouter/>\r\n    </BrowserRouter>  \r\n  )  \r\n}\r\n\r\nexport default App\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport Address from \"../models/FormsData/Address\"\r\nimport { checkFieldNullFlavor, INullFlavorR } from \"../models/INullFlavor\"\r\nimport { IReference } from \"../models/IReference\"\r\nimport { DEFAULT_ADDRESS, IAddressR } from \"../models/requests/IAddressR\"\r\nimport { IFiasItem } from \"../models/responses/IFiasItem\"\r\nimport FiasService from \"../services/FiasService\"\r\nimport { HOME_REGION_CODE } from \"../utils/defaults\"\r\nimport { removeEmpty } from \"../utils/functions\"\r\nexport default class AddressStore {\r\n  private _address: Address\r\n  private _isLoding: boolean\r\n  private _history: any\r\n  private _regionsOptions: IReference[] | undefined\r\n  private _fiasOptions: IFiasItem[] | undefined\r\n  private _dialogVisible: boolean\r\n  private _manualMode: boolean\r\n  private _onAddrComplete?: (() => void) | undefined\r\n\r\n  constructor() {\r\n    this._isLoding = false\r\n    this._address = new Address(DEFAULT_ADDRESS)\r\n    this._dialogVisible = false\r\n    this._manualMode = false\r\n    makeAutoObservable(this)\r\n  }\r\n\r\n  fetchRegionOptions() {\r\n    const _regions = localStorage.getItem(\"Regions\")\r\n    if (_regions) {\r\n      this._regionsOptions = JSON.parse(_regions) as IReference[]\r\n      this.defaultRegion()\r\n    } else\r\n      FiasService.getRegions()\r\n        .then((response) => {\r\n          this._regionsOptions = response.data.data.map((item) => {\r\n            return { code: item.code?.substr(0, 2), name: item.streetAddressLine } as IReference\r\n          })\r\n          localStorage.setItem(\"Regions\", JSON.stringify(this._regionsOptions))\r\n          this.defaultRegion()\r\n        })\r\n        .finally(() => (this._isLoding = false))\r\n  }\r\n\r\n  async searchBar(query: string, regionID = HOME_REGION_CODE as string) {\r\n    this._isLoding = true\r\n    try {\r\n      const response = await FiasService.searchBar(query, regionID)\r\n      if (response.data.data) this._fiasOptions = response.data.data\r\n      else this._fiasOptions = []\r\n      return this._fiasOptions\r\n    } catch (e) {\r\n      console.log(e)\r\n      return []\r\n    } finally {\r\n      this._isLoding = false\r\n    }\r\n  }\r\n  defaultRegion() {\r\n    return this._regionsOptions?.find((item) => item.code === HOME_REGION_CODE)\r\n  }\r\n  async getChildItems(parent: string, level: string, query = \"\") {\r\n    this._isLoding = true\r\n    try {\r\n      const response = await FiasService.getChildItems(parent, level, query)\r\n      if (response.data.data)\r\n        this._fiasOptions = response.data.data.map((item) => {\r\n          if (item.level !== \"building\") item.name = `${item.name} ${item.shortname}`\r\n          return item\r\n        })\r\n      else this._fiasOptions = []\r\n      return this._fiasOptions\r\n    } finally {\r\n      this._isLoding = false\r\n    }\r\n  }\r\n\r\n  // Returned full streetAddressLine include flat and postal code to save in IAddress\r\n  // Возвращает полный строковый адрес, включая квартиру и почтовы код,\r\n  // обычно не используемые в строке поиска, для сохранения в POJO\r\n\r\n  streetAddressLine(): string {\r\n    const addr = this._address\r\n    return `${addr.streetAddressLine}${addr.flat ? \", \" + addr.flat : \"\"}${\r\n      addr.postalCode ? \", \" + addr.postalCode : \"\"\r\n    }`\r\n  }\r\n  createNullFlavors(): INullFlavorR[] {\r\n    const addr = this._address\r\n    //check postalcode\r\n    checkFieldNullFlavor(\"postalCode\", addr.postalCode, addr.nullFlavors)\r\n    //check aoGUID\r\n    checkFieldNullFlavor(\"aoGUID\", addr.aoGUID, addr.nullFlavors)\r\n    //check houseGUID\r\n    checkFieldNullFlavor(\"houseGUID\", addr.houseGUID, addr.nullFlavors)\r\n    return addr.null_flavors_attributes()\r\n  }\r\n  // Check address for FIAS requarens\r\n  isNotStrictly(): boolean {\r\n    const addr = this._address\r\n    return !addr.aoGUID || !addr.houseGUID || !addr.postalCode\r\n  }\r\n  // Returned POJO address data\r\n  // Возвращает POJO объект адреса\r\n  addressProps(): IAddressR {\r\n    const addr = this._address\r\n    const _result = {\r\n      id: addr.id,\r\n      state: addr.state?.code,\r\n      streetAddressLine: this.streetAddressLine(),\r\n      aoGUID: addr.aoGUID,\r\n      houseGUID: addr.houseGUID,\r\n      postalCode: addr.postalCode,\r\n      house_number: addr.housenum,\r\n      struct_number: addr.strucnum,\r\n      building_number: addr.buildnum,\r\n      flat_number: addr.flat,\r\n      parent_guid: addr.parent,\r\n      null_flavors_attributes: [...this.createNullFlavors()],\r\n    } as IAddressR\r\n    return removeEmpty(_result)\r\n  }\r\n\r\n  set history(history: any) {\r\n    this._history = history\r\n  }\r\n  get history() {\r\n    return this._history\r\n  }\r\n\r\n  set isLoading(isLoding: boolean) {\r\n    this._isLoding = isLoding\r\n  }\r\n  get isLoading() {\r\n    return this._isLoding\r\n  }\r\n  get address() {\r\n    return this._address\r\n  }\r\n  set address(value: Address) {\r\n    this._address = value\r\n  }\r\n  get regionsOptions() {\r\n    return this._regionsOptions\r\n  }\r\n  get fiasOptions() {\r\n    return this._fiasOptions\r\n  }\r\n  clear() {\r\n    if (this._address === undefined) return\r\n    this._address.postalCode = undefined\r\n    this._address.district = undefined\r\n    this._address.city = undefined\r\n    this._address.houseGUID = undefined\r\n    this._address.aoGUID = undefined\r\n    this._address.street = undefined\r\n    this._address.town = undefined\r\n    this._address.housenum = undefined\r\n    this._address.buildnum = undefined\r\n    this._address.strucnum = undefined\r\n    this._address.streetAddressLine = this._address.state?.name + \", \" || \"\"\r\n  }\r\n  get dialogVisible(): boolean {\r\n    return this._dialogVisible\r\n  }\r\n  set dialogVisible(value: boolean) {\r\n    this._dialogVisible = value\r\n  }\r\n\r\n  get manualMode(): boolean {\r\n    return this._manualMode\r\n  }\r\n  set manualMode(value: boolean) {\r\n    this._manualMode = value\r\n  }\r\n\r\n  get onAddrComplete(): (() => void) | undefined {\r\n    return this._onAddrComplete\r\n  }\r\n  set onAddrComplete(value: (() => void) | undefined) {\r\n    this._onAddrComplete = value\r\n  }\r\n}\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { NULL_FLAVOR_IDX } from \"../../utils/defaults\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { INullFlavorR } from \"../INullFlavor\"\r\nimport { IPatient } from \"../IPatient\"\r\nimport IIdentityR from \"../requests/IIdentityR\"\r\nimport { IPatientR } from \"../requests/IPatientR\"\r\nimport Identity from \"./Identity\"\r\nimport Person from \"./Person\"\r\nexport const MAIN_REGISTRATION_ADDRESS = 1\r\nexport default class Patient implements ISerializable {\r\n  private _id?: string | undefined\r\n  private _person?: Person\r\n  private _gender?: number | undefined\r\n  private _birth_date: Date | undefined\r\n  private _birth_year?: number\r\n  private _provider_organization?: number\r\n  private _addrType?: number\r\n  private _guid: string\r\n  private _identity?: Identity\r\n  private _nullFlavors: INullFlavorR[]\r\n  private _oldOne?: IPatient\r\n  constructor(props = {} as IPatient) {\r\n    this._guid = props.guid || uuidv4()\r\n    this._oldOne = { ...props }\r\n    if (props.person) this._person = new Person(props.person)\r\n    this._provider_organization = props.organization_id\r\n    if (props.gender) this._gender = props.gender\r\n    this._addrType = props.addr_type || MAIN_REGISTRATION_ADDRESS\r\n    if (props.birth_date) this._birth_date = new Date(props.birth_date)\r\n    if (props.id) this._id = props.id\r\n    if (props.birth_year) this._birth_year = props.birth_year\r\n    if (props.identity) this._identity = new Identity(props.identity)\r\n    this._nullFlavors =\r\n      props.null_flavors?.map((item) => {\r\n        return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n      }) || []\r\n\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n  }\r\n  getAttributes(): IPatientR {\r\n    let _patient = { guid: this._guid } as IPatientR\r\n    if (this._id) _patient.id = this.id\r\n    if (this._addrType) _patient.addr_type = this._addrType\r\n    if (this._birth_date) _patient.birth_date = this._birth_date.toDateString()\r\n    if (this._birth_year) _patient.birth_year = this._birth_year\r\n    if (this._gender) _patient.gender = this._gender\r\n    if (this._identity) _patient.identity_attributes = this._identity.getAttributes()\r\n    else if (this._oldOne?.identity?.id)\r\n      _patient.identity_attributes = { id: this._oldOne.identity.id, _destroy: \"1\" } as IIdentityR\r\n    if (this._provider_organization) _patient.organization_id = this._provider_organization\r\n    if (this._person) _patient.person_attributes = this._person.getAttributes()\r\n    else _patient.person_id = null\r\n    if (this.nullFlavors.length > 0) _patient.null_flavors_attributes = this.null_flavors_attributes()\r\n    return _patient\r\n  }\r\n  get id() {\r\n    return this._id\r\n  }\r\n  set id(id: string | undefined) {\r\n    this._id = id\r\n  }\r\n  get person() {\r\n    return this._person\r\n  }\r\n\r\n  set person(value: Person | undefined) {\r\n    this._person = value\r\n  }\r\n\r\n  get gender() {\r\n    return this._gender\r\n  }\r\n  set gender(gender: number | undefined) {\r\n    this._gender = gender\r\n  }\r\n  get birth_date() {\r\n    return this._birth_date\r\n  }\r\n  set birth_date(birth_date: Date | undefined) {\r\n    this._birth_date = birth_date\r\n  }\r\n  get guid() {\r\n    return this._guid\r\n  }\r\n\r\n  get nullFlavors() {\r\n    return this._nullFlavors\r\n  }\r\n  set nullFlavors(nullFlavors: INullFlavorR[]) {\r\n    this._nullFlavors = nullFlavors\r\n  }\r\n\r\n  // получение копии массива заполнителей из Observable.array\r\n  null_flavors_attributes() {\r\n    return this._nullFlavors.map((el) => {\r\n      return { ...el }\r\n    })\r\n  }\r\n\r\n  get addr_type() {\r\n    return this._addrType\r\n  }\r\n  set addr_type(addr_type: number | undefined) {\r\n    this._addrType = addr_type\r\n  }\r\n  get provider_organization() {\r\n    return this._provider_organization\r\n  }\r\n  set provider_organization(provider_organization: number | undefined) {\r\n    this._provider_organization = provider_organization\r\n  }\r\n  get birth_year() {\r\n    return this._birth_year\r\n  }\r\n  set birth_year(birth_year: number | undefined) {\r\n    this._birth_year = birth_year\r\n  }\r\n  get identity() {\r\n    return this._identity\r\n  }\r\n  set identity(identity: Identity | undefined) {\r\n    this._identity = identity\r\n  }\r\n\r\n  setBirthDay(value: Date | undefined, isYear: boolean) {\r\n    if (value && !isYear) {\r\n      if (this._birth_date === undefined)\r\n        this.nullFlavors = this.nullFlavors.filter((element) => element.parent_attr !== \"birth_date\")\r\n      this.birth_date = value\r\n      this.birth_year = undefined\r\n    } else if (value && isYear) {\r\n      if (this.birth_date === undefined)\r\n        this.nullFlavors = this.nullFlavors.filter((element) => element.parent_attr !== \"birth_date\")\r\n      this.birth_date = value\r\n      this.birth_year = (this.birth_date as Date).getFullYear()\r\n    } else {\r\n      this.birth_date = undefined\r\n      this.birth_year = undefined\r\n    }\r\n  }\r\n}\r\n","import { autorun, makeAutoObservable } from \"mobx\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { NA, NULL_FLAVOR_IDX, REGION_OKATO } from \"../../utils/defaults\"\r\nimport { ISerializable } from \"../common/ISerializabale\"\r\nimport { IAudit } from \"../IAudit\"\r\nimport { checkFieldNullFlavor, INullFlavorR } from \"../INullFlavor\"\r\nimport { IAddressR } from \"../requests/IAddressR\"\r\nimport { ICertificateR } from \"../requests/ICertificateR\"\r\nimport { IChildInfoR } from \"../requests/IChildInfoR\"\r\nimport { IDeathReasonR } from \"../requests/IDeathReasonR\"\r\nimport { ICertificate } from \"../responses/ICertificate\"\r\nimport { IDeathReason } from \"../responses/IDeathReason\"\r\nimport Authenticator from \"./Authenticator\"\r\nimport { ChildInfo } from \"./ChildInfo\"\r\nimport { DeathReason } from \"./DeathReason\"\r\nimport Participant from \"./Participant\"\r\nimport Patient from \"./Patient\"\r\n\r\nexport default class Certificate implements ISerializable {\r\n  private _id: number\r\n  private _series?: string\r\n  private _number?: string\r\n  private _issueDate?: Date\r\n  private _certType?: number\r\n  private _seriesPrev?: string\r\n  private _numberPrev?: string\r\n  private _effTimePrev?: Date\r\n  private _patient: Patient\r\n  private _lifeAreaType?: number\r\n  private _deathAreaType?: number\r\n  private _deathDatetime?: Date\r\n  private _deathYear?: number\r\n  private _deathMonth?: number | undefined\r\n  private _deathPlace?: number | undefined\r\n  private _maritalStatus?: number | undefined\r\n  private _educationLevel?: number | undefined\r\n  private _socialStatus?: number | undefined\r\n  private _deathKind?: number | undefined\r\n  private _extReasonTime?: Date | undefined\r\n  private _extReasonDescription?: string | undefined\r\n  private _reasonA?: DeathReason | undefined\r\n  private _reasonB?: DeathReason\r\n  private _reasonC?: DeathReason\r\n  private _reasonD?: DeathReason\r\n  private _deathReasons: DeathReason[]\r\n  private _reasonACME?: DeathReason | undefined\r\n  private _deathAddr?: IAddressR\r\n  private _guid?: string\r\n  private _policyOMS?: string | undefined\r\n  private _childInfo?: ChildInfo | undefined\r\n  private _establishedMedic?: number | undefined\r\n  private _basisDetermining?: number | undefined\r\n  private _trafficAccident?: number | undefined\r\n  private _pregnancyConnection?: number | undefined\r\n  private _author?: Authenticator | undefined\r\n  private _audithor?: Authenticator | undefined\r\n  private _legalAuthenticator?: Authenticator | undefined\r\n  private _nullFlavors: INullFlavorR[]\r\n  private _audits: IAudit[]\r\n  private _custodian_id?: number\r\n  private _participant?: Participant | undefined\r\n  private _oldOne?: ICertificate | undefined\r\n  private _latestOne?: ICertificate | undefined\r\n  disposers: (() => void)[]\r\n\r\n  constructor(props: ICertificate) {\r\n    if (props.null_flavors && props.null_flavors.length > 0)\r\n      this._nullFlavors = props.null_flavors.map((item) => {\r\n        return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n      })\r\n    else this._nullFlavors = []\r\n    this._oldOne = { ...props }\r\n    this._latestOne = props.latest_one\r\n    this._audits = []\r\n    this._id = props.id || -1\r\n    this._guid = props.guid || uuidv4()\r\n    this._custodian_id = props.custodian?.id || props.patient?.organization_id\r\n    this._patient = props.patient ? new Patient(props.patient) : new Patient()\r\n    if (props.issue_date) this._issueDate = new Date(props.issue_date)\r\n    this._certType = props.cert_type\r\n    this._series = props.series || REGION_OKATO\r\n    this._number = props.number\r\n    if (!!props.death_datetime) this._deathDatetime = new Date(props.death_datetime)\r\n    this._deathYear = props.death_year\r\n    this._numberPrev = props.number_prev\r\n    this._seriesPrev = props.series_prev\r\n    this._policyOMS = props.policy_OMS\r\n    this._lifeAreaType = props.life_area_type\r\n    this._deathAreaType = props.death_area_type\r\n    this._deathAddr = {\r\n      ...props.death_addr,\r\n      null_flavors_attributes:\r\n        props.death_addr?.null_flavors?.map((item) => {\r\n          return { ...item, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n        }) || [],\r\n    } as IAddressR\r\n    this._deathPlace = props.death_place\r\n    this._deathKind = props.death_kind\r\n    this._educationLevel = props.education_level\r\n    this._maritalStatus = props.marital_status\r\n    this._socialStatus = props.social_status\r\n    if (props.eff_time_prev) this._effTimePrev = new Date(props.eff_time_prev)\r\n    if (props.child_info) this._childInfo = new ChildInfo(props.child_info)\r\n    if (props.author) this._author = new Authenticator(props.author)\r\n    if (props.audithor) this._audithor = new Authenticator(props.audithor)\r\n    if (props.legal_authenticator) this._legalAuthenticator = new Authenticator(props.legal_authenticator)\r\n    if (props.ext_reason_time) this._extReasonTime = new Date(props.ext_reason_time)\r\n    this._extReasonDescription = props.ext_reason_description\r\n    this._establishedMedic = props.established_medic\r\n    this._basisDetermining = props.basis_determining\r\n    this._trafficAccident = props.traffic_accident\r\n    this._pregnancyConnection = props.pregnancy_connection\r\n\r\n    if (props.a_reason) this._reasonA = new DeathReason(props.a_reason)\r\n    else this._reasonA = new DeathReason({} as IDeathReason)\r\n    if (props.b_reason) this._reasonB = new DeathReason(props.b_reason)\r\n    if (props.c_reason) this._reasonC = new DeathReason(props.c_reason)\r\n    if (props.reason_ACME) this.changeReasonACME(props.reason_ACME)\r\n\r\n    if (props.d_reason) this._reasonD = new DeathReason(props.d_reason)\r\n    if (props.death_reasons) this._deathReasons = props.death_reasons.map((reason) => new DeathReason(reason))\r\n    else this._deathReasons = []\r\n    if (props.participant) this._participant = new Participant(props.participant)\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n    this.disposers = []\r\n    this.disposers[0] = autorun(() => checkFieldNullFlavor(\"b_reason\", this.reasonB, this._nullFlavors, NA))\r\n    this.disposers[1] = autorun(() => checkFieldNullFlavor(\"c_reason\", this._reasonC, this._nullFlavors, NA))\r\n    this.disposers[2] = autorun(() => checkFieldNullFlavor(\"d_reason\", this.reasonD, this._nullFlavors, NA))\r\n  }\r\n\r\n  // получение копии массива заполнителей из Observable.array\r\n  null_flavors_attributes() {\r\n    return this._nullFlavors.map((el) => {\r\n      return { ...el }\r\n    })\r\n  }\r\n\r\n  changeReasonACME(value: string | undefined) {\r\n    if (!value || \"\" === value) this._reasonACME = undefined\r\n    else {\r\n      if (value === this._reasonA?.diagnosis?.ICD10) this._reasonACME = this._reasonA\r\n      else if (value === this._reasonB?.diagnosis?.ICD10) this._reasonACME = this._reasonB\r\n      else if (value === this._reasonC?.diagnosis?.ICD10) this._reasonACME = this._reasonC\r\n      else this._reasonACME = undefined\r\n    }\r\n  }\r\n  milisecAge() {\r\n    // Discard the time-zone information.\r\n    const a = this._patient.birth_date as Date\r\n    if (a === undefined) return false\r\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate(), a.getHours(), a.getMinutes())\r\n    const b = this._deathDatetime as Date\r\n    if (b === undefined) return false\r\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate(), b.getHours(), b.getMinutes())\r\n    return utc2 - utc1\r\n  }\r\n  hoursAge() {\r\n    const _MS_PER_HOUR = 1000 * 60 * 60\r\n    const ms = this.milisecAge()\r\n    if (ms) return Math.floor(ms / _MS_PER_HOUR)\r\n    else return false\r\n  }\r\n  daysAge() {\r\n    const _MS_PER_DAY = 1000 * 60 * 60 * 24\r\n    const ms = this.milisecAge()\r\n    if (ms) return Math.floor(ms / _MS_PER_DAY)\r\n    else return false\r\n  }\r\n  yearsAge() {\r\n    const dd = this._deathDatetime as Date\r\n    const db = this._patient.birth_date as Date\r\n    if (!!dd && !!db) return dd.getFullYear() - db.getFullYear()\r\n    else return false\r\n  }\r\n  setDeathDay(value: Date | undefined, isYear: boolean) {\r\n    if (value && !isYear) {\r\n      this.deathDatetime = value\r\n      this.deathYear = undefined\r\n    } else if (value && isYear) {\r\n      this.deathDatetime = value\r\n      this.deathYear = (this.deathDatetime as Date).getFullYear()\r\n    } else {\r\n      this.deathDatetime = undefined\r\n      this.deathYear = undefined\r\n    }\r\n  }\r\n\r\n  saveReasonEffTime(reason: DeathReason) {\r\n    if (!this._deathDatetime) return false\r\n    let result = new Date(this._deathDatetime)\r\n    if (reason.minutes) result.setMinutes(result.getMinutes() - reason.minutes)\r\n    if (reason.hours) result.setHours(result.getHours() - reason.hours)\r\n    if (reason.days) result.setDate(result.getDate() - reason.days)\r\n    if (reason.weeks) result.setDate(result.getDate() - reason.weeks * 7)\r\n    if (reason.months) result.setMonth(result.getMonth() - reason.months)\r\n    if (reason.years) result.setFullYear(result.getFullYear() - reason.years)\r\n    reason.effectiveTime = result\r\n    return true\r\n  }\r\n\r\n  getAttributes(): ICertificateR {\r\n    let _cert = { guid: this._guid } as ICertificateR\r\n    if (this._id > -1) _cert.id = this._id\r\n    if (this._issueDate) _cert.issue_date = this._issueDate.toDateString()\r\n    _cert.number_prev = this._numberPrev\r\n    _cert.series_prev = this._seriesPrev\r\n    _cert.eff_time_prev = this._effTimePrev?.toDateString()\r\n    if (this._audithor) {\r\n      _cert.audithor_attributes = this._audithor.getAttributes()\r\n      if (!_cert.audithor_attributes.id && !!this._oldOne?.audithor?.id)\r\n        _cert.audithor_attributes.id = this._oldOne.audithor.id\r\n    } else if (this._oldOne && this._oldOne.audithor)\r\n      _cert.audithor_attributes = { id: this._oldOne.audithor.id, _destroy: \"1\" }\r\n    if (this._author) {\r\n      _cert.author_attributes = this._author.getAttributes()\r\n      if (!_cert.author_attributes.id && !!this._oldOne?.author?.id) _cert.author_attributes.id = this._oldOne.author.id\r\n    } else if (this._oldOne && this._oldOne.author)\r\n      _cert.author_attributes = { id: this._oldOne.author.id, _destroy: \"1\" }\r\n    if (this._legalAuthenticator) {\r\n      _cert.legal_authenticator_attributes = this._legalAuthenticator.getAttributes()\r\n      if (!_cert.legal_authenticator_attributes.id && !!this._oldOne?.legal_authenticator?.id)\r\n        _cert.legal_authenticator_attributes.id = this._oldOne.legal_authenticator.id\r\n    } else if (this._oldOne && this._oldOne.legal_authenticator)\r\n      _cert.legal_authenticator_attributes = { id: this._oldOne.legal_authenticator.id, _destroy: \"1\" }\r\n    if (this._basisDetermining) _cert.basis_determining = this._basisDetermining\r\n    if (this._certType) _cert.cert_type = this._certType\r\n    if (this._childInfo) _cert.child_info_attributes = this._childInfo.getAttributes()\r\n    else if (this._oldOne && this._oldOne.child_info) _cert.child_info_attributes = { _destroy: \"1\" } as IChildInfoR\r\n    if (this._deathAddr && !!this._deathAddr.state && !!this._deathAddr.streetAddressLine)\r\n      _cert.death_addr_attributes = { ...this._deathAddr } as IAddressR\r\n    else if (this._oldOne && this._oldOne.death_addr)\r\n      _cert.death_addr_attributes = { id: this._oldOne.death_addr.id, _destroy: \"1\" } as IAddressR\r\n    if (this._deathAreaType) _cert.death_area_type = this._deathAreaType\r\n    if (this._deathDatetime) _cert.death_datetime = this._deathDatetime\r\n    if (this._deathYear) _cert.death_year = this._deathYear\r\n    if (this._deathKind) _cert.death_kind = this._deathKind\r\n    if (this._deathPlace) _cert.death_place = this.deathPlace\r\n    if (this._deathReasons.length > 0)\r\n      _cert.death_reasons_attributes = this._deathReasons.map((item) => item.getAttributes())\r\n    if (this._oldOne?.death_reasons && this._oldOne.death_reasons.length > 0) {\r\n      let _temp = [] as IDeathReasonR[]\r\n      this._oldOne.death_reasons.forEach((item) => {\r\n        if (\r\n          !_cert.death_reasons_attributes ||\r\n          _cert.death_reasons_attributes.findIndex((el) => el.id === item.id) === -1\r\n        )\r\n          _temp.push({ id: item.id, _destroy: \"1\" } as IDeathReasonR)\r\n      })\r\n      if (_cert.death_reasons_attributes && _temp.length > 0)\r\n        _cert.death_reasons_attributes = _cert.death_reasons_attributes.concat(_temp)\r\n      else if (_temp.length > 0) _cert.death_reasons_attributes = _temp\r\n    }\r\n    if (this._educationLevel) _cert.education_level = this._educationLevel\r\n    if (this._establishedMedic) _cert.established_medic = this._establishedMedic\r\n    if (this._extReasonDescription) _cert.ext_reason_description = this.extReasonDescription\r\n    if (this._extReasonTime) _cert.ext_reason_time = this._extReasonTime\r\n    if (this._lifeAreaType) _cert.life_area_type = this._lifeAreaType\r\n    if (this._policyOMS) _cert.policy_OMS = this._policyOMS\r\n    if (this._pregnancyConnection) _cert.pregnancy_connection = this.pregnancyConnection\r\n    if (this._maritalStatus) _cert.marital_status = this._maritalStatus\r\n    if (this.nullFlavors.length > 0) _cert.null_flavors_attributes = this.null_flavors_attributes()\r\n    if (this._reasonA && this._reasonA.diagnosis) _cert.a_reason_attributes = this._reasonA.getAttributes()\r\n    else if (this._oldOne && this._oldOne.a_reason)\r\n      _cert.a_reason_attributes = { id: this._oldOne.a_reason.id, _destroy: \"1\" } as IDeathReasonR\r\n    if (this._reasonACME) _cert.reason_ACME = this._reasonACME.diagnosis?.ICD10\r\n    if (this._reasonB && this._reasonB.diagnosis) _cert.b_reason_attributes = this._reasonB.getAttributes()\r\n    else if (this._oldOne && this._oldOne.b_reason)\r\n      _cert.b_reason_attributes = { id: this._oldOne.b_reason.id, _destroy: \"1\" } as IDeathReasonR\r\n    if (this._reasonC && this._reasonC.diagnosis) _cert.c_reason_attributes = this._reasonC.getAttributes()\r\n    else if (this._oldOne && this._oldOne.c_reason)\r\n      _cert.c_reason_attributes = { id: this._oldOne.c_reason.id, _destroy: \"1\" } as IDeathReasonR\r\n    if (this._reasonD && this._reasonD.diagnosis) _cert.d_reason_attributes = this._reasonD.getAttributes(true)\r\n    else if (this._oldOne && this._oldOne.d_reason)\r\n      _cert.d_reason_attributes = { id: this._oldOne.d_reason.id, _destroy: \"1\" } as IDeathReasonR\r\n    if (this._series) _cert.series = this._series\r\n    if (this._socialStatus) _cert.social_status = this._socialStatus\r\n    if (this._trafficAccident) _cert.traffic_accident = this._trafficAccident\r\n    if (this._patient) _cert.patient_attributes = this._patient.getAttributes()\r\n    _cert.custodian_id = this._custodian_id || _cert.patient_attributes?.organization_id\r\n    if (this._participant) _cert.participant_attributes = this._participant.getAttributes()\r\n    //console.log(\"_cert\", _cert)\r\n    return _cert\r\n  }\r\n  //#region Getters - Setters\r\n  get id() {\r\n    return this._id\r\n  }\r\n  set id(id: number) {\r\n    this._id = id\r\n  }\r\n  get series() {\r\n    return this._series\r\n  }\r\n  set series(series: string | undefined) {\r\n    this._series = series\r\n  }\r\n  get number() {\r\n    return this._number\r\n  }\r\n  set number(number: string | undefined) {\r\n    this._number = number\r\n  }\r\n  get issueDate() {\r\n    return this._issueDate\r\n  }\r\n  set issueDate(issueDate: Date | undefined) {\r\n    this._issueDate = issueDate\r\n  }\r\n  get deathDatetime() {\r\n    return this._deathDatetime\r\n  }\r\n  set deathDatetime(death_datetime: Date | undefined) {\r\n    this._deathDatetime = death_datetime\r\n  }\r\n  get certType() {\r\n    return this._certType\r\n  }\r\n  set certType(cert_type: number | undefined) {\r\n    this._certType = cert_type\r\n  }\r\n  get seriesPrev() {\r\n    return this._seriesPrev\r\n  }\r\n  set seriesPrev(series: string | undefined) {\r\n    this._seriesPrev = series\r\n  }\r\n  get numberPrev() {\r\n    return this._numberPrev\r\n  }\r\n  set numberPrev(number: string | undefined) {\r\n    this._numberPrev = number\r\n  }\r\n  get guid() {\r\n    return this._guid\r\n  }\r\n  get author(): Authenticator | undefined {\r\n    return this._author\r\n  }\r\n  set author(value: Authenticator | undefined) {\r\n    this._author = value\r\n  }\r\n  get authenticator(): Authenticator | undefined {\r\n    return this._audithor\r\n  }\r\n  set authenticator(value: Authenticator | undefined) {\r\n    this._audithor = value\r\n  }\r\n  get legalAuthenticator(): Authenticator | undefined {\r\n    return this._legalAuthenticator\r\n  }\r\n  set legalAuthenticator(value: Authenticator | undefined) {\r\n    this._legalAuthenticator = value\r\n  }\r\n\r\n  get extReasonTime(): Date | undefined {\r\n    return this._extReasonTime\r\n  }\r\n  set extReasonTime(value: Date | undefined) {\r\n    this._extReasonTime = value\r\n  }\r\n  get establishedMedic(): number | undefined {\r\n    return this._establishedMedic\r\n  }\r\n  set establishedMedic(value: number | undefined) {\r\n    this._establishedMedic = value\r\n  }\r\n  get basisDetermining(): number | undefined {\r\n    return this._basisDetermining\r\n  }\r\n  set basisDetermining(value: number | undefined) {\r\n    this._basisDetermining = value\r\n  }\r\n  get trafficAccident(): number | undefined {\r\n    return this._trafficAccident\r\n  }\r\n  set trafficAccident(value: number | undefined) {\r\n    this._trafficAccident = value\r\n  }\r\n  get pregnancyConnection(): number | undefined {\r\n    return this._pregnancyConnection\r\n  }\r\n  set pregnancyConnection(value: number | undefined) {\r\n    this._pregnancyConnection = value\r\n  }\r\n\r\n  get patient() {\r\n    return this._patient\r\n  }\r\n  get effTimePrev() {\r\n    return this._effTimePrev\r\n  }\r\n  set effTimePrev(eff_time: Date | undefined) {\r\n    this._effTimePrev = eff_time\r\n  }\r\n  get deathYear() {\r\n    return this._deathYear\r\n  }\r\n  set deathYear(death_year: number | undefined) {\r\n    this._deathYear = death_year\r\n  }\r\n\r\n  get policyOMS() {\r\n    return this._policyOMS || \"\"\r\n  }\r\n\r\n  set policyOMS(policyOMS: string | undefined) {\r\n    this._policyOMS = policyOMS\r\n  }\r\n\r\n  get lifeAreaType() {\r\n    return this._lifeAreaType\r\n  }\r\n  set lifeAreaType(lat: number | undefined) {\r\n    this._lifeAreaType = lat\r\n  }\r\n  get deathAreaType() {\r\n    return this._deathAreaType\r\n  }\r\n  set deathAreaType(dat: number | undefined) {\r\n    this._deathAreaType = dat\r\n  }\r\n\r\n  get deathAddr() {\r\n    return this._deathAddr\r\n  }\r\n  set deathAddr(value: IAddressR | undefined) {\r\n    this._deathAddr = value\r\n  }\r\n  get deathKind(): number | undefined {\r\n    return this._deathKind\r\n  }\r\n  set deathKind(value: number | undefined) {\r\n    this._deathKind = value\r\n  }\r\n  get socialStatus(): number | undefined {\r\n    return this._socialStatus\r\n  }\r\n  set socialStatus(value: number | undefined) {\r\n    this._socialStatus = value\r\n  }\r\n  get educationLevel(): number | undefined {\r\n    return this._educationLevel\r\n  }\r\n  set educationLevel(value: number | undefined) {\r\n    this._educationLevel = value\r\n  }\r\n  get maritalStatus(): number | undefined {\r\n    return this._maritalStatus\r\n  }\r\n  set maritalStatus(value: number | undefined) {\r\n    this._maritalStatus = value\r\n  }\r\n  get deathPlace(): number | undefined {\r\n    return this._deathPlace\r\n  }\r\n  set deathPlace(value: number | undefined) {\r\n    this._deathPlace = value\r\n  }\r\n  get deathMonth(): number | undefined {\r\n    return this._deathMonth\r\n  }\r\n  set deathMonth(value: number | undefined) {\r\n    this._deathMonth = value\r\n  }\r\n  get childInfo(): ChildInfo | undefined {\r\n    return this._childInfo\r\n  }\r\n  set childInfo(value: ChildInfo | undefined) {\r\n    this._childInfo = value\r\n  }\r\n  get extReasonDescription(): string | undefined {\r\n    return this._extReasonDescription\r\n  }\r\n  set extReasonDescription(value: string | undefined) {\r\n    this._extReasonDescription = value\r\n  }\r\n  get reasonA(): DeathReason | undefined {\r\n    return this._reasonA\r\n  }\r\n  set reasonA(value: DeathReason | undefined) {\r\n    this._reasonA = value\r\n  }\r\n  get reasonB(): DeathReason | undefined {\r\n    return this._reasonB\r\n  }\r\n  set reasonB(value: DeathReason | undefined) {\r\n    this._reasonB = value\r\n  }\r\n  get reasonC(): DeathReason | undefined {\r\n    return this._reasonC\r\n  }\r\n  set reasonC(value: DeathReason | undefined) {\r\n    this._reasonC = value\r\n  }\r\n  get reasonD(): DeathReason | undefined {\r\n    return this._reasonD\r\n  }\r\n  set reasonD(value: DeathReason | undefined) {\r\n    this._reasonD = value\r\n  }\r\n  get reasonACME(): DeathReason | undefined {\r\n    return this._reasonACME\r\n  }\r\n  set reasonACME(value: DeathReason | undefined) {\r\n    this._reasonACME = value\r\n  }\r\n  get deathReasons(): DeathReason[] {\r\n    return this._deathReasons\r\n  }\r\n  set deathReasons(value: DeathReason[]) {\r\n    this._deathReasons = value\r\n  }\r\n  get audits() {\r\n    return this._audits\r\n  }\r\n  get nullFlavors() {\r\n    return this._nullFlavors\r\n  }\r\n\r\n  set nullFlavors(nullFlavors: INullFlavorR[]) {\r\n    this._nullFlavors = nullFlavors\r\n  }\r\n\r\n  get participant(): Participant | undefined {\r\n    return this._participant\r\n  }\r\n  set participant(value: Participant | undefined) {\r\n    this._participant = value\r\n  }\r\n  get latestOne(): ICertificate | undefined {\r\n    return this._latestOne\r\n  }\r\n  set latestOne(value: ICertificate | undefined) {\r\n    this._latestOne = value\r\n  }\r\n\r\n  get oldOne(): ICertificate | undefined {\r\n    return this._oldOne\r\n  }\r\n\r\n  //#endregion\r\n\r\n  dispose() {\r\n    // So, to avoid subtle memory issues, always call the\r\n    // disposers when the reactions are no longer needed.\r\n    this.disposers.forEach((disposer) => disposer())\r\n  }\r\n}\r\n","import { autorun, configure, makeAutoObservable } from \"mobx\"\r\nimport Certificate from \"../models/FormsData/Certificate\"\r\nimport { IPatient } from \"../models/IPatient\"\r\nimport { ICertificate } from \"../models/responses/ICertificate\"\r\nimport { IUserInfo } from \"../models/responses/IUserInfo\"\r\nimport CertificateService from \"../services/CertificateService\"\r\nimport { ID_CARD_TYPES, NULL_FLAVOR_IDX, PASSPORT_RF } from \"../utils/defaults\"\r\nimport { DeathReason } from \"../models/FormsData/DeathReason\"\r\nimport { IDeathReason } from \"../models/responses/IDeathReason\"\r\nimport { IAddressR } from \"../models/requests/IAddressR\"\r\nimport { INullFlavorR } from \"../models/INullFlavor\"\r\nconfigure({\r\n  enforceActions: \"never\",\r\n})\r\nexport default class CertificateStore {\r\n  private _cert: Certificate\r\n  private _submitted: boolean\r\n  private _userInfo?: IUserInfo | undefined\r\n  private _certs: ICertificate[]\r\n  private _selected: number\r\n  private _sorts: string[] | undefined\r\n  private _filters: any\r\n  private _first: number\r\n  private _last: number\r\n  private _rows: number\r\n  private _count: number\r\n  private _needFetch: boolean\r\n\r\n  disposers: (() => void)[]\r\n  constructor() {\r\n    this._submitted = false\r\n    this.disposers = []\r\n    this._certs = []\r\n    this._filters = {}\r\n    this._first = 0\r\n    this._last = 0\r\n    this._rows = 0\r\n    this._count = 0\r\n    this._needFetch = true\r\n    this._cert = new Certificate({\r\n      custodian: this._userInfo?.organization,\r\n      patient: {\r\n        organization_id: this._userInfo?.organization.id,\r\n        identity: {\r\n          identity_card_type_id: ID_CARD_TYPES[PASSPORT_RF].code,\r\n        },\r\n        person: { person_name: { family: \"\", given_1: \"\", given_2: \"\" } },\r\n      } as IPatient,\r\n    } as ICertificate)\r\n    this._selected = 0\r\n    makeAutoObservable(this, undefined, { deep: false })\r\n\r\n    // реакции на изменение данных\r\n    this.disposers[0] = autorun(() => {\r\n      let _q = { ...this._filters }\r\n      //console.log(\"фильтры\", this._filters)\r\n      if (this._userInfo && !this._userInfo.roles.includes(\"MIAC\")) _q.custodian_id_eq = this._userInfo?.organization.id\r\n      if (this._filters) {\r\n        this._needFetch = true\r\n        CertificateService.getCount({ q: _q })\r\n          .then((value) => {\r\n            this._count = value.data\r\n            //console.log(\"надено\", this._count)\r\n          })\r\n          .catch((reason) => console.log(reason))\r\n      }\r\n    })\r\n    this.disposers[1] = autorun(() => {\r\n      if (this._sorts) this._needFetch = true\r\n    })\r\n  }\r\n\r\n  //#region setters-getters\r\n  get cert() {\r\n    return this._cert\r\n  }\r\n  set cert(value: Certificate) {\r\n    this._cert = value\r\n  }\r\n\r\n  get submitted(): boolean {\r\n    return this._submitted\r\n  }\r\n  set submitted(value: boolean) {\r\n    this._submitted = value\r\n  }\r\n  get certs(): ICertificate[] {\r\n    return this._certs.map((el) => {\r\n      return { ...el }\r\n    })\r\n  }\r\n  get userInfo(): IUserInfo | undefined {\r\n    return this._userInfo\r\n  }\r\n  set userInfo(value: IUserInfo | undefined) {\r\n    this._userInfo = value\r\n  }\r\n  get sorts(): string[] | undefined {\r\n    return this._sorts\r\n  }\r\n  set sorts(value: string[] | undefined) {\r\n    this._sorts = value\r\n  }\r\n  get filters(): any {\r\n    return this._filters\r\n  }\r\n  set filters(value: any) {\r\n    this._filters = value\r\n  }\r\n  get first(): number {\r\n    return this._first\r\n  }\r\n  set first(value: number) {\r\n    this._first = value\r\n  }\r\n  get rows(): number {\r\n    return this._rows\r\n  }\r\n  set rows(value: number) {\r\n    this._rows = value\r\n  }\r\n  get count(): number {\r\n    return this._count\r\n  }\r\n  set count(value: number) {\r\n    this._count = value\r\n  }\r\n  //#endregion\r\n  createNew(id = -1) {\r\n    this._cert = new Certificate({\r\n      id: id,\r\n      custodian: this._userInfo?.organization,\r\n      patient: {\r\n        organization_id: this._userInfo?.organization.id,\r\n        identity: {\r\n          identity_card_type_id: ID_CARD_TYPES[PASSPORT_RF].code,\r\n        },\r\n        person: { person_name: { family: \"\", given_1: \"\", given_2: \"\" } },\r\n      } as IPatient,\r\n    } as ICertificate)\r\n  }\r\n  replace() {\r\n    const old = this._certs.find((cert) => cert.id === this._cert.id)\r\n    if (!old) return\r\n    this._cert = new Certificate({\r\n      id: -1,\r\n      custodian: old.custodian,\r\n      patient: old.patient,\r\n      basis_determining: old.basis_determining,\r\n      cert_type: old.cert_type === 1 ? 4 : 3,\r\n      death_area_type: old.death_area_type,\r\n      death_kind: old.death_kind,\r\n      death_datetime: old.death_datetime,\r\n      death_place: old.death_place,\r\n      death_year: old.death_year,\r\n      education_level: old.education_level,\r\n      eff_time_prev: old.issue_date,\r\n      established_medic: old.established_medic,\r\n      ext_reason_description: old.ext_reason_description,\r\n      ext_reason_time: old.ext_reason_time,\r\n      life_area_type: old.life_area_type,\r\n      marital_status: old.marital_status,\r\n      number_prev: old.number,\r\n      policy_OMS: old.policy_OMS,\r\n      pregnancy_connection: old.pregnancy_connection,\r\n      reason_ACME: old.reason_ACME,\r\n      series_prev: old.series,\r\n      social_status: old.social_status,\r\n      traffic_accident: old.traffic_accident,\r\n    } as ICertificate)\r\n    if (old.a_reason)\r\n      this._cert.reasonA = new DeathReason({\r\n        days: old.a_reason.days,\r\n        diagnosis: old.a_reason.diagnosis,\r\n        effective_time: old.a_reason.effective_time,\r\n        hours: old.a_reason.hours,\r\n        null_flavors: old.a_reason.null_flavors?.map((item) => {\r\n          return { code: item.code, parent_attr: item.parent_attr }\r\n        }),\r\n        minutes: old.a_reason.minutes,\r\n        months: old.a_reason.months,\r\n        years: old.a_reason.years,\r\n        weeks: old.a_reason.weeks,\r\n      } as IDeathReason)\r\n    else this._cert.reasonA = new DeathReason({} as IDeathReason)\r\n    if (old.b_reason)\r\n      this._cert.reasonB = new DeathReason({\r\n        days: old.b_reason.days,\r\n        diagnosis: old.b_reason.diagnosis,\r\n        effective_time: old.b_reason.effective_time,\r\n        hours: old.b_reason.hours,\r\n        null_flavors: old.b_reason.null_flavors?.map((item) => {\r\n          return { code: item.code, parent_attr: item.parent_attr }\r\n        }),\r\n        minutes: old.b_reason.minutes,\r\n        months: old.b_reason.months,\r\n        years: old.b_reason.years,\r\n        weeks: old.b_reason.weeks,\r\n      } as IDeathReason)\r\n    if (old.c_reason)\r\n      this._cert.reasonC = new DeathReason({\r\n        days: old.c_reason.days,\r\n        diagnosis: old.c_reason.diagnosis,\r\n        effective_time: old.c_reason.effective_time,\r\n        hours: old.c_reason.hours,\r\n        null_flavors: old.c_reason.null_flavors?.map((item) => {\r\n          return { code: item.code, parent_attr: item.parent_attr }\r\n        }),\r\n        minutes: old.c_reason.minutes,\r\n        months: old.c_reason.months,\r\n        years: old.c_reason.years,\r\n        weeks: old.c_reason.weeks,\r\n      } as IDeathReason)\r\n    if (old.d_reason)\r\n      this._cert.reasonD = new DeathReason({\r\n        days: old.d_reason.days,\r\n        diagnosis: old.d_reason.ext_diagnosis,\r\n        effective_time: old.d_reason.effective_time,\r\n        hours: old.d_reason.hours,\r\n        null_flavors: old.d_reason.null_flavors?.map((item) => {\r\n          return { code: item.code, parent_attr: item.parent_attr }\r\n        }),\r\n        minutes: old.d_reason.minutes,\r\n        months: old.d_reason.months,\r\n        years: old.d_reason.years,\r\n        weeks: old.d_reason.weeks,\r\n      } as IDeathReason)\r\n    if (old.death_reasons)\r\n      this._cert.deathReasons = old.death_reasons.map(\r\n        (reason) =>\r\n          new DeathReason({\r\n            days: reason.days,\r\n            diagnosis: reason.diagnosis,\r\n            effective_time: reason.effective_time,\r\n            hours: reason.hours,\r\n            null_flavors: reason.null_flavors?.map((item) => {\r\n              return { code: item.code, parent_attr: item.parent_attr }\r\n            }),\r\n            minutes: reason.minutes,\r\n            months: reason.months,\r\n            years: reason.years,\r\n            weeks: reason.weeks,\r\n            procedures: reason.procedures?.map((item) => {\r\n              return {\r\n                effective_time: item.effective_time,\r\n                medical_serv: item.medical_serv,\r\n                text_value: item.text_value,\r\n                null_flavors: item.null_flavors?.map((item) => {\r\n                  return { code: item.code, parent_attr: item.parent_attr }\r\n                }),\r\n              }\r\n            }),\r\n          } as IDeathReason)\r\n      )\r\n    else this._cert.deathReasons = []\r\n    if (old.death_addr)\r\n      this._cert.deathAddr = {\r\n        ...old.death_addr,\r\n        null_flavors_attributes:\r\n          old.death_addr?.null_flavors?.map((item) => {\r\n            return { parent_attr: item.parent_attr, code: NULL_FLAVOR_IDX[item.code] } as INullFlavorR\r\n          }) || [],\r\n        id: undefined,\r\n        parent_guid: undefined,\r\n        null_flavors: null,\r\n      } as IAddressR\r\n\r\n    old.latest_one = this._cert.oldOne\r\n  }\r\n\r\n  save(onSuccess?: (data: ICertificate) => void, onError?: (message: string) => void, sm_code?: string) {\r\n    if (!this._userInfo) return false\r\n    if (!this._cert.patient.provider_organization)\r\n      this._cert.patient.provider_organization = this.userInfo?.organization.id\r\n    const request = this._cert.getAttributes()\r\n    if (!request.id && sm_code) {\r\n      request.number = sm_code\r\n      if (request.patient_attributes?.id) {\r\n        request.patient_id = request.patient_attributes?.id\r\n        request.patient_attributes = undefined\r\n      }\r\n    }\r\n    //console.log(\"request\", request)\r\n    return !request.id\r\n      ? CertificateService.addCertificate(request)\r\n          .then((response) => {\r\n            const nCert = response.data\r\n            if (nCert) {\r\n              const idx = this._certs.length\r\n              this._certs.push(nCert)\r\n              this.select(idx)\r\n              if (onSuccess) onSuccess(nCert)\r\n              //console.log(\"nCert\", nCert)\r\n            } else {\r\n              if (onError)\r\n                onError(\"Cвидетельство сохранено, но сервер не вернул результат. Необходим повторный вход в систему\")\r\n            }\r\n          })\r\n          .catch((reason) => {\r\n            if (onError) onError(reason)\r\n          })\r\n      : CertificateService.updateCertificate({ Certificate: request })\r\n          .then((response) => {\r\n            const nCert = response.data\r\n            if (nCert) {\r\n              const idx = this._certs.findIndex((cert) => cert.id === nCert.id)\r\n              this._certs[idx] = nCert\r\n              //console.log(\"nCert\", nCert)\r\n              this.select(idx)\r\n              if (onSuccess) onSuccess(nCert)\r\n            } else {\r\n              if (onError)\r\n                onError(\"Свидетельство сохранено, но сервер не вернул результат. Необходим повторный вход в систему\")\r\n            }\r\n          })\r\n          .catch((reason) => {\r\n            if (onError) onError(reason)\r\n          })\r\n  }\r\n  delete() {\r\n    if (this._cert.id === -1) return false\r\n    else return CertificateService.removeCertificate(this._cert.id)\r\n  }\r\n\r\n  clean(num = this._selected) {\r\n    try {\r\n      this._certs.splice(num)\r\n      const dataLength = this._certs.length\r\n      if (dataLength > 0) {\r\n        this.select(this._selected > dataLength - 1 ? dataLength - 1 : this._selected)\r\n      } else {\r\n        this.createNew(-1)\r\n        this._selected = 0\r\n      }\r\n    } catch {\r\n      throw Error(\"Not valid certificate number\")\r\n    }\r\n  }\r\n\r\n  select(num: number) {\r\n    this._cert = new Certificate(this._certs[num])\r\n    this._selected = num\r\n  }\r\n\r\n  getList(doAfter?: () => void, first = this._first, last = this._first + this._rows) {\r\n    let _q = { ...this._filters, sorts: this._sorts }\r\n    if (this._userInfo && !this._userInfo.roles.includes(\"MIAC\")) _q.custodian_id_eq = this._userInfo?.organization.id\r\n    else if (!this._userInfo) return false\r\n    const isAdd = !this._needFetch && first === this.first\r\n    //console.log(\"getList response\", first, last)\r\n    CertificateService.getCertificates({ q: _q }, isAdd ? this._last + 1 : first, last)\r\n      .then((response) => {\r\n        if (isAdd && this._needFetch) return // case that loaded data already not needed\r\n        let num = isAdd ? this._certs.length : 0\r\n        const _certs = isAdd\r\n          ? this._certs.concat(\r\n              response.data.map((cert) => {\r\n                return { ...cert, rowNumber: ++num }\r\n              })\r\n            )\r\n          : response.data.map((cert) => {\r\n              return { ...cert, rowNumber: ++num }\r\n            })\r\n        this._certs = _certs\r\n        const dataLength = response.data.length\r\n        if (dataLength > 0) {\r\n          this._rows = this._certs.length\r\n          this._needFetch = false\r\n          this.select(this._selected > dataLength ? dataLength - 1 : this._selected)\r\n        }\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(() => {\r\n        if (doAfter) doAfter()\r\n      })\r\n    this._first = first\r\n    this._last = last\r\n  }\r\n\r\n  findById(certificate_id: number, doAfter?: () => void) {\r\n    if (!this._userInfo) return false\r\n    CertificateService.getCertificates({\r\n      q: { custodian_id_eq: this._userInfo.organization.id, id_eq: certificate_id },\r\n    })\r\n      .then((response) => {\r\n        if (response.data && response.data.length > 0) this._cert = new Certificate(response.data[0])\r\n        if (response.data) {\r\n          this.certs.push(response.data[0])\r\n          this.select(0)\r\n        }\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(() => {\r\n        if (doAfter) doAfter()\r\n      })\r\n  }\r\n  dispose() {\r\n    // So, to avoid subtle memory issues, always call the\r\n    // disposers when the reactions are no longer needed.\r\n    this.disposers.forEach((disposer) => disposer())\r\n  }\r\n}\r\n","import { makeAutoObservable } from \"mobx\"\r\nimport { ToastMessageType } from \"primereact/toast\"\r\n\r\nexport default class LayoutStore {\r\n  private _isTabletOrMobile: boolean\r\n  private _isLayoutStaticInactive: boolean\r\n  private _isRightSidebarActive: boolean\r\n  private _isProfileMenuActive: boolean\r\n  private _isNotificationsMenuActive: boolean\r\n  private _isLoading: boolean\r\n  private _message: ToastMessageType | null\r\n\r\n  constructor() {\r\n    this._isTabletOrMobile = false\r\n    this._isLayoutStaticInactive = false\r\n    this._isRightSidebarActive = false\r\n    this._isProfileMenuActive = false\r\n    this._isNotificationsMenuActive = false\r\n    this._isLoading = false\r\n    this._message = null\r\n    makeAutoObservable(this)\r\n  }\r\n  setTabletOrMobile(visible: boolean) {\r\n    this._isTabletOrMobile = visible\r\n  }\r\n  tabletOrMobile() {\r\n    return this._isTabletOrMobile\r\n  }\r\n  sideBarToggle() {\r\n    this._isLayoutStaticInactive = !this._isLayoutStaticInactive\r\n  }\r\n  setLayoutStaticInactive(isLayoutStaticInactive: boolean) {\r\n    this._isLayoutStaticInactive = isLayoutStaticInactive\r\n  }\r\n  layoutStaticInactive() {\r\n    return this._isLayoutStaticInactive\r\n  }\r\n  rightSideBarActive() {\r\n    return this._isRightSidebarActive\r\n  }\r\n  setRightSideBarActive(rightSidebarActive: boolean) {\r\n    this._isRightSidebarActive = rightSidebarActive\r\n  }\r\n  profileMenuActive() {\r\n    return this._isProfileMenuActive\r\n  }\r\n  setProfileMenuActive(profileMenuActive: boolean) {\r\n    this._isProfileMenuActive = profileMenuActive\r\n  }\r\n  notificationsMenuActive() {\r\n    return this._isNotificationsMenuActive\r\n  }\r\n  setNotificationsMenuActive(notificationsMenuActive: boolean) {\r\n    this._isNotificationsMenuActive = notificationsMenuActive\r\n  }\r\n  get isLoading(): boolean {\r\n    return this._isLoading\r\n  }\r\n  set isLoading(value: boolean) {\r\n    this._isLoading = value\r\n  }\r\n\r\n  get message(): ToastMessageType | null {\r\n    return this._message\r\n  }\r\n  set message(value: ToastMessageType | null) {\r\n    this._message = value\r\n  }\r\n}\r\n","import { autorun, makeAutoObservable } from \"mobx\"\r\nimport { ISuggestions } from \"../models/ISuggestions\"\r\nimport { DISEASE_DEADTH_KIND } from \"../NSI/1.2.643.5.1.13.13.99.2.21\"\r\nimport {\r\n  AUTHENTICATOR_SUG,\r\n  AUTHOR_SUG,\r\n  BASIS_DERMINING_SUG,\r\n  CERT_DEATH_THIME_SUG,\r\n  CERT_TYPE_SUG,\r\n  CHILD_WEIGHT_SUG,\r\n  DEATH_AREA_SUG,\r\n  DEATH_KINDS_SUG,\r\n  DEATH_PLACE_SUG,\r\n  DEATH_PLACE_TYPE_SUG,\r\n  DEFAULT_CERT_SUGGESTIONS,\r\n  EDUCATION_LEVEL_SUG,\r\n  EST_MEDIC_SUG,\r\n  EXT_REASON_SUG,\r\n  EXT_REASON_TIME_SUG,\r\n  IDNUMBER_SUG,\r\n  IDSERIES_SUG,\r\n  IORGCODE_SUG,\r\n  IORGDATE_SUG,\r\n  IORGNAME_SUG,\r\n  KIND_DEATH_REASON_SUG,\r\n  LEGAL_AUTHENTICATOR_SUG,\r\n  LIFE_AREA_SUG,\r\n  LIFE_PLACE_SUG,\r\n  MARITAL_STATUS_SUG,\r\n  MOTHER_ADDRESS_SUG,\r\n  MOTHER_BIRTHDAY_SUG,\r\n  MOTHER_FIO_SUG,\r\n  NUMBER_PREGNANCY_SUG,\r\n  OMS_SUG,\r\n  PARTIPICIPANT_DATE_SUG,\r\n  PARTIPICIPANT_FIO_SUG,\r\n  PARTIPICIPANT_IDENTITY_SUG,\r\n  PATIENT_BIRTHDAY_SUG,\r\n  PATIENT_GENDER_SUG,\r\n  PERSON_NAME_SUG,\r\n  PREGNANCY_CONNECTION_SUG,\r\n  REASON_A_SUG,\r\n  REASON_A_TIME_SUG,\r\n  REASON_B_SUG,\r\n  REASON_B_TIME_SUG,\r\n  REASON_C_SUG,\r\n  REASON_C_TIME_SUG,\r\n  REASON_D_SUG,\r\n  REASON_D_TIME_SUG,\r\n  SNILS_SUG,\r\n  SOCIAL_STATUS_SUG,\r\n  TERMS_PREGNANCY_SUG,\r\n  TRAFFFIC_ACCIDENT_SUG,\r\n} from \"../utils/defaults\"\r\nimport CertificateStore from \"./certificateStore\"\r\n\r\nexport default class SuggestionsStore {\r\n  private _cStore: CertificateStore\r\n  private _suggestions: ISuggestions[]\r\n  private _identified: boolean\r\n  private _fromRelatives: boolean\r\n  disposers: (() => void)[]\r\n  constructor(cStore: CertificateStore) {\r\n    this._cStore = cStore\r\n    this.disposers = []\r\n    this._identified = true\r\n    this._fromRelatives = false\r\n    this._suggestions = DEFAULT_CERT_SUGGESTIONS\r\n    makeAutoObservable(this)\r\n    // проверки полноты заполнения свидетельства\r\n    // работают как реакции на изменение данных\r\n    this.disposers[0] = autorun(() => {\r\n      this._suggestions[CERT_TYPE_SUG].done = !!this._cStore.cert.certType\r\n    })\r\n\r\n    this.disposers[1] = autorun(() => {\r\n      this._suggestions[PATIENT_GENDER_SUG].done = !!this._cStore.cert.patient.gender\r\n    })\r\n    this.disposers[2] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const patient = this._cStore.cert.patient\r\n      const isBirthDay =\r\n        !patient.birth_date &&\r\n        patient.nullFlavors.findIndex((element) => {\r\n          return element.parent_attr === \"birth_date\" && !element._destroy\r\n        }) === -1\r\n      this._suggestions[PATIENT_BIRTHDAY_SUG].done = !isBirthDay\r\n    })\r\n    this.disposers[3] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const cert = this._cStore.cert\r\n      const isDeathDay =\r\n        !cert.deathDatetime && cert.nullFlavors.findIndex((element) => element.parent_attr === \"death_datetime\") === -1\r\n      this._suggestions[CERT_DEATH_THIME_SUG].done = !isDeathDay\r\n    })\r\n    this.disposers[4] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const person = this._cStore.cert.patient.person\r\n      const isSNILS =\r\n        (!person && this._identified) ||\r\n        (person &&\r\n          (!person.SNILS || person.SNILS.length < 14) &&\r\n          person.nullFlavors.findIndex((element) => element.parent_attr === \"SNILS\") === -1)\r\n      this._suggestions[SNILS_SUG].done = !isSNILS\r\n    })\r\n    this.disposers[5] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const oms = this._cStore.cert.policyOMS\r\n      const isOMS =\r\n        (!oms || oms.length < 7) &&\r\n        this._cStore.cert.nullFlavors.findIndex((element) => element.parent_attr === \"policy_OMS\") === -1\r\n      this._suggestions[OMS_SUG].done = !isOMS\r\n    })\r\n    this.disposers[6] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const patient = this._cStore.cert.patient\r\n      const identity = patient.identity\r\n      const code = identity?.issueOrgCode\r\n      const isCODE =\r\n        (!identity && patient.nullFlavors.findIndex((element) => element.parent_attr === \"identity\") === -1) ||\r\n        (identity &&\r\n          (!code || code.length < 1) &&\r\n          identity.nullFlavors.findIndex((element) => element.parent_attr === \"issueOrgCode\") === -1)\r\n      this._suggestions[IORGCODE_SUG].done = !isCODE\r\n    })\r\n    this.disposers[7] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const patient = this._cStore.cert.patient\r\n      const isIORGDate =\r\n        (!patient.identity && patient.nullFlavors.findIndex((element) => element.parent_attr === \"identity\") === -1) ||\r\n        (patient.identity && !patient.identity?.issueOrgDate)\r\n      this._suggestions[IORGDATE_SUG].done = !isIORGDate\r\n    })\r\n    this.disposers[8] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const patient = this._cStore.cert.patient\r\n      const isIORGName =\r\n        (!patient.identity && patient.nullFlavors.findIndex((element) => element.parent_attr === \"identity\") === -1) ||\r\n        (patient.identity && (!patient.identity?.issueOrgName || patient.identity.issueOrgName.length < 15))\r\n      this._suggestions[IORGNAME_SUG].done = !isIORGName\r\n    })\r\n    this.disposers[9] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const patient = this._cStore.cert.patient\r\n      const identity = patient.identity\r\n      const series = patient.identity?.series\r\n      const isIDSeries =\r\n        (!identity && patient.nullFlavors.findIndex((element) => element.parent_attr === \"identity\") === -1) ||\r\n        (identity &&\r\n          (!series || series.length < 1) &&\r\n          identity.nullFlavors.findIndex((element) => element.parent_attr === \"series\") === -1)\r\n      this._suggestions[IDSERIES_SUG].done = !isIDSeries\r\n    })\r\n    this.disposers[10] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const patient = this._cStore.cert.patient\r\n      const isIDNumber =\r\n        (!patient.identity &&\r\n          patient.nullFlavors.findIndex((element) => element.parent_attr === \"identity\" && !element._destroy) === -1) ||\r\n        (patient.identity && !patient.identity.number)\r\n      this._suggestions[IDNUMBER_SUG].done = !isIDNumber\r\n    })\r\n    this.disposers[11] = autorun(() => {\r\n      const person = this._cStore.cert.patient.person\r\n      const isLifeArea =\r\n        (!person && this._identified) ||\r\n        (person &&\r\n          (!person.address ||\r\n            !person.address.streetAddressLine ||\r\n            person.address.streetAddressLine.split(\",\").length < 3) &&\r\n          person.nullFlavors.findIndex((element) => element.parent_attr === \"address\") === -1)\r\n      this._suggestions[LIFE_PLACE_SUG].done = !isLifeArea\r\n    })\r\n    this.disposers[12] = autorun(() => {\r\n      const isDeathArea =\r\n        (!this._cStore.cert.deathAddr ||\r\n          !this._cStore.cert.deathAddr.streetAddressLine ||\r\n          this._cStore.cert.deathAddr.streetAddressLine.split(\",\").length < 3) &&\r\n        this._cStore.cert.nullFlavors.findIndex((element) => element.parent_attr === \"death_addr\") === -1\r\n      this._suggestions[DEATH_PLACE_SUG].done = !isDeathArea\r\n    })\r\n    this.disposers[13] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const isDeathAreaType =\r\n        this._cStore.cert.deathAreaType === undefined &&\r\n        this._cStore.cert.nullFlavors.findIndex((element) => element.parent_attr === \"death_area_type\") === -1\r\n      this._suggestions[DEATH_AREA_SUG].done = !isDeathAreaType\r\n    })\r\n    this.disposers[14] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const isLifeAreaType =\r\n        this._cStore.cert.lifeAreaType === undefined &&\r\n        this._cStore.cert.nullFlavors.findIndex((element) => element.parent_attr === \"life_area_type\") === -1\r\n      this._suggestions[LIFE_AREA_SUG].done = !isLifeAreaType\r\n    })\r\n    this.disposers[15] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[DEATH_PLACE_TYPE_SUG].done = this._cStore.cert.deathPlace !== undefined\r\n    })\r\n    this.disposers[16] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const childInfo = this._cStore.cert.childInfo\r\n      const isTERMS_PREGNANCY =\r\n        childInfo === undefined ||\r\n        childInfo.termPregnancy !== undefined ||\r\n        childInfo.nullFlavors.findIndex((element) => element.parent_attr === \"term_pregnancy\") !== -1\r\n      this._suggestions[TERMS_PREGNANCY_SUG].done = isTERMS_PREGNANCY\r\n    })\r\n    this.disposers[17] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const childInfo = this._cStore.cert.childInfo\r\n      const isCHILD_WEIGHT = childInfo === undefined || childInfo.weight !== undefined\r\n      this._suggestions[CHILD_WEIGHT_SUG].done = isCHILD_WEIGHT\r\n    })\r\n    this.disposers[18] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const childInfo = this._cStore.cert.childInfo\r\n      const isNUMBER_PREGNANCY = !childInfo || !!childInfo.whichAccount\r\n      this._suggestions[NUMBER_PREGNANCY_SUG].done = isNUMBER_PREGNANCY\r\n    })\r\n    this.disposers[19] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const childInfo = this._cStore.cert.childInfo\r\n      const isMOTHER_FIO =\r\n        !childInfo ||\r\n        (!!childInfo.relatedSubject &&\r\n          (childInfo.relatedSubject.nullFlavors.findIndex((item) => item.parent_attr === \"person_name\") !== -1 ||\r\n            !!childInfo.relatedSubject.fio))\r\n      this._suggestions[MOTHER_FIO_SUG].done = isMOTHER_FIO\r\n    })\r\n    this.disposers[20] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const childInfo = this._cStore.cert.childInfo\r\n      const isMOTHER_BIRTHDAY =\r\n        !childInfo ||\r\n        (!!childInfo.relatedSubject &&\r\n          (childInfo.relatedSubject.nullFlavors.findIndex((item) => item.parent_attr === \"birthTime\") !== -1 ||\r\n            !!childInfo.relatedSubject.birthTime))\r\n      this._suggestions[MOTHER_BIRTHDAY_SUG].done = isMOTHER_BIRTHDAY\r\n    })\r\n    this.disposers[21] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      const childInfo = this._cStore.cert.childInfo\r\n      const isMOTHER_ADDRESS =\r\n        !childInfo ||\r\n        (!!childInfo.relatedSubject &&\r\n          (childInfo.relatedSubject.nullFlavors.findIndex((item) => item.parent_attr === \"addr\") !== -1 ||\r\n            (!!childInfo.relatedSubject.addr && !!childInfo.relatedSubject.addr.houseGUID)))\r\n      this._suggestions[MOTHER_ADDRESS_SUG].done = isMOTHER_ADDRESS\r\n    })\r\n    this.disposers[22] = autorun(() => {\r\n      this._suggestions[MARITAL_STATUS_SUG].done = !!this._cStore.cert && !!this._cStore.cert.maritalStatus\r\n    })\r\n    this.disposers[23] = autorun(() => {\r\n      this._suggestions[EDUCATION_LEVEL_SUG].done = !!this._cStore.cert && !!this._cStore.cert.educationLevel\r\n    })\r\n    this.disposers[24] = autorun(() => {\r\n      this._suggestions[SOCIAL_STATUS_SUG].done = !!this._cStore.cert && !!this._cStore.cert.socialStatus\r\n    })\r\n    this.disposers[25] = autorun(() => {\r\n      this._suggestions[DEATH_KINDS_SUG].done = !!this._cStore.cert && !!this._cStore.cert.deathKind\r\n    })\r\n    this.disposers[26] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[KIND_DEATH_REASON_SUG].done =\r\n        (!!this._cStore.cert.deathKind && this._cStore.cert.deathKind === DISEASE_DEADTH_KIND) ||\r\n        (!!this._cStore.cert.extReasonTime && !!this._cStore.cert.extReasonDescription)\r\n    })\r\n    this.disposers[27] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[EST_MEDIC_SUG].done = !!this._cStore.cert.establishedMedic\r\n    })\r\n    this.disposers[28] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[BASIS_DERMINING_SUG].done = !!this._cStore.cert.basisDetermining\r\n    })\r\n    this.disposers[29] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[REASON_A_SUG].done = !!this._cStore.cert.reasonA?.diagnosis\r\n    })\r\n    this.disposers[30] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[REASON_A_TIME_SUG].done =\r\n        !!this._cStore.cert.reasonA?.effectiveTime ||\r\n        this._cStore.cert.reasonA?.nullFlavors.findIndex(\r\n          (item) => item.parent_attr === \"effective_time\" && !item._destroy\r\n        ) !== -1\r\n    })\r\n    this.disposers[31] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[REASON_B_SUG].done =\r\n        !!this._cStore.cert.reasonB?.diagnosis ||\r\n        this._cStore.cert.nullFlavors.findIndex((item) => item.parent_attr === \"b_reason\" && !item._destroy) !== -1\r\n    })\r\n    this.disposers[32] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[REASON_B_TIME_SUG].done =\r\n        !this._cStore.cert.reasonB ||\r\n        !!this._cStore.cert.reasonB.effectiveTime ||\r\n        this._cStore.cert.reasonB?.nullFlavors.findIndex(\r\n          (item) => item.parent_attr === \"effective_time\" && !item._destroy\r\n        ) !== -1\r\n    })\r\n    this.disposers[33] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[REASON_C_SUG].done =\r\n        !!this._cStore.cert.reasonC?.diagnosis ||\r\n        this._cStore.cert.nullFlavors.findIndex((item) => item.parent_attr === \"c_reason\" && !item._destroy) !== -1\r\n    })\r\n    this.disposers[34] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[REASON_C_TIME_SUG].done =\r\n        !this._cStore.cert.reasonC ||\r\n        !!this._cStore.cert.reasonC.effectiveTime ||\r\n        this._cStore.cert.reasonC?.nullFlavors.findIndex(\r\n          (item) => item.parent_attr === \"effective_time\" && !item._destroy\r\n        ) !== -1\r\n    })\r\n    this.disposers[35] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[REASON_D_SUG].done =\r\n        this._cStore.cert.reasonD?.diagnosis !== undefined ||\r\n        this._cStore.cert.nullFlavors.findIndex((item) => item.parent_attr === \"d_reason\" && !item._destroy) !== -1\r\n    })\r\n    this.disposers[36] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[REASON_D_TIME_SUG].done =\r\n        !this._cStore.cert.reasonD ||\r\n        !!this._cStore.cert.reasonD.effectiveTime ||\r\n        this._cStore.cert.reasonD?.nullFlavors.findIndex(\r\n          (item) => item.parent_attr === \"effective_time\" && !item._destroy\r\n        ) !== -1\r\n    })\r\n    this.disposers[37] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[TRAFFFIC_ACCIDENT_SUG].done =\r\n        !!this._cStore.cert.trafficAccident ||\r\n        this._cStore.cert.nullFlavors.findIndex((item) => item.parent_attr === \"traffic_accident\" && !item._destroy) !==\r\n          -1\r\n    })\r\n    this.disposers[38] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[PREGNANCY_CONNECTION_SUG].done =\r\n        !!this._cStore.cert.pregnancyConnection ||\r\n        this._cStore.cert.nullFlavors.findIndex(\r\n          (item) => item.parent_attr === \"pregnancy_connection\" && !item._destroy\r\n        ) !== -1\r\n    })\r\n    this.disposers[39] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[AUTHOR_SUG].done = !!this._cStore.cert.author\r\n    })\r\n    this.disposers[40] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[AUTHENTICATOR_SUG].done = !!this._cStore.cert.authenticator\r\n    })\r\n    this.disposers[41] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._suggestions[LEGAL_AUTHENTICATOR_SUG].done = !!this._cStore.cert.legalAuthenticator\r\n    })\r\n    this.disposers[42] = autorun(() => {\r\n      this._identified =\r\n        !!this._cStore.cert.patient.person ||\r\n        this._cStore.cert.patient.nullFlavors.findIndex((el) => el.parent_attr === \"person\" && !el._destroy) === -1\r\n    })\r\n    this.disposers[43] = autorun(() => {\r\n      if (!this._cStore.cert) return\r\n      this._fromRelatives = this._identified && this._cStore.cert.patient && !this._cStore.cert.patient.identity\r\n    })\r\n    this.disposers[44] = autorun(() => {\r\n      const person = this._cStore.cert.patient?.person\r\n      const fio = person?.fio\r\n      const isPersonNameSug =\r\n        (!person && this._identified) ||\r\n        (!!fio &&\r\n          (fio.family.trim().length === 0 ||\r\n            fio.given_1.trim().length === 0 ||\r\n            (!!fio.given_2 && fio.given_2.trim().length === 0)))\r\n      this._suggestions[PERSON_NAME_SUG].done = !isPersonNameSug\r\n    })\r\n  }\r\n  dispose() {\r\n    // So, to avoid subtle memory issues, always call the\r\n    // disposers when the reactions are no longer needed.\r\n    this.disposers.forEach((disposer) => disposer())\r\n  }\r\n  redSuggestionsCount() {\r\n    return this.suggestions.reduce((result, item, index) => {\r\n      if (\r\n        !(\r\n          item.done ||\r\n          index in\r\n            [\r\n              EXT_REASON_SUG,\r\n              EXT_REASON_TIME_SUG,\r\n              PARTIPICIPANT_FIO_SUG,\r\n              PARTIPICIPANT_DATE_SUG,\r\n              PARTIPICIPANT_IDENTITY_SUG,\r\n            ]\r\n        )\r\n      )\r\n        ++result\r\n      return result\r\n    }, 0)\r\n  }\r\n  get identified(): boolean {\r\n    return this._identified\r\n  }\r\n  set identified(value: boolean) {\r\n    this._identified = value\r\n  }\r\n  get fromRelatives(): boolean {\r\n    return this._fromRelatives\r\n  }\r\n  set fromRelatives(value: boolean) {\r\n    this._fromRelatives = value\r\n  }\r\n  get suggestions(): ISuggestions[] {\r\n    return this._suggestions\r\n  }\r\n}\r\n","export default class TemporaryIDStore {\r\n  private _lastCertificateID: number\r\n  private _lastDeathReasonID: number\r\n  private _lastProcedureID: number\r\n\r\n  constructor() {\r\n    this._lastCertificateID = -1\r\n    this._lastDeathReasonID = -1\r\n    this._lastProcedureID = -1\r\n  }\r\n  get lastCertificateID(): number {\r\n    return this._lastCertificateID--\r\n  }\r\n  get lastDeathReasonID(): number {\r\n    return this._lastDeathReasonID--\r\n  }\r\n  get lastProcedureID(): number {\r\n    return this._lastProcedureID--\r\n  }\r\n}\r\n","import $api from \"../http\"\r\nimport { AxiosResponse } from \"axios\"\r\nimport { AuthResponse } from \"../models/responses/AuthResponse\"\r\nimport { IRegistration } from \"../models/requests/IRegistration\"\r\nimport { IPassRenew } from \"../models/requests/IPassRenew\"\r\nexport default class AuthService {\r\n  static async login(email: string, password: string): Promise<AxiosResponse<AuthResponse>> {\r\n    return $api.post(\"auth/login\", { email, password })\r\n  }\r\n  static async registration(user: IRegistration): Promise<AxiosResponse<AuthResponse>> {\r\n    return $api.post(\"auth/registration\", { user })\r\n  }\r\n  static async renew_link(email: string): Promise<AxiosResponse<void>> {\r\n    return $api.post(\"auth/renew_link\", { email })\r\n  }\r\n  static async pwd_renew(user: IPassRenew): Promise<AxiosResponse<void>> {\r\n    return $api.post(\"auth/pwd_renew\", { ...user })\r\n  }\r\n  static async logout(): Promise<void> {\r\n    return $api.post(\"auth/logout\")\r\n  }\r\n}\r\n","import { createContext } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport AddressStore from './store/addressStore'\r\nimport CertificateStore from './store/certificateStore'\r\nimport LayoutStore from './store/layoutStore'\r\nimport SuggestionsStore from './store/suggestionsStore'\r\nimport TemporaryIDStore from './store/temporaryIDStore'\r\nimport UserStore from './store/userStore'\r\ninterface IState{\r\n  userStore: UserStore\r\n  layoutStore: LayoutStore\r\n  certificateStore: CertificateStore\r\n  suggestionsStore: SuggestionsStore\r\n  addressStore: AddressStore \r\n  temporaryIDStore: TemporaryIDStore \r\n}\r\nconst userStore = new UserStore()\r\nconst layoutStore = new LayoutStore()\r\nconst certificateStore = new CertificateStore()\r\nconst suggestionsStore = new SuggestionsStore(certificateStore)\r\nconst addressStore = new AddressStore()\r\nconst temporaryIDStore = new TemporaryIDStore()\r\naddressStore.fetchRegionOptions()\r\nexport const Context = createContext<IState>({userStore, layoutStore, addressStore, certificateStore, temporaryIDStore,suggestionsStore}) \r\nReactDOM.render(  \r\n  <Context.Provider value={{userStore, layoutStore, addressStore, certificateStore, temporaryIDStore, suggestionsStore}} >\r\n    <App />  \r\n  </Context.Provider> , \r\n  document.getElementById('root')\r\n)\r\n\r\n\r\n","import axios from \"axios\"\r\nimport { makeAutoObservable } from \"mobx\"\r\nimport { API_URL } from \"../http\"\r\nimport { IUser } from \"../models/IUser\"\r\nimport { IPassRenew } from \"../models/requests/IPassRenew\"\r\nimport { IRegistration } from \"../models/requests/IRegistration\"\r\nimport { AuthResponse } from \"../models/responses/AuthResponse\"\r\nimport { IUserInfo } from \"../models/responses/IUserInfo\"\r\nimport AuthService from \"../services/AuthService\"\r\nimport UsersService from \"../services/UsersService\"\r\nimport { HOME_ROUTE, LOGIN_ROUTE } from \"../utils/consts\"\r\n\r\nexport default class UserStore {\r\n  private _isAuth: boolean\r\n  private _user: IUser\r\n  private _isLoding: boolean\r\n  private _history: any\r\n  private _token: string\r\n  private _userInfo?: IUserInfo\r\n\r\n  constructor() {\r\n    this._user = {} as IUser\r\n    this._isLoding = false\r\n    this._token = localStorage.getItem(\"token\") || \"\"\r\n    this._isAuth = this._token !== \"\"\r\n    if (this._isAuth) this.checkAuth()\r\n    makeAutoObservable(this)\r\n  }\r\n\r\n  setAuth(isAuth: boolean) {\r\n    this._isAuth = isAuth\r\n  }\r\n  isAuth() {\r\n    return this._isAuth\r\n  }\r\n  setUser(user: IUser) {\r\n    this._user = user\r\n  }\r\n  user() {\r\n    return this._user\r\n  }\r\n  setLoading(isLoding: boolean) {\r\n    this._isLoding = isLoding\r\n  }\r\n  isLoading() {\r\n    return this._isLoding\r\n  }\r\n  setHistory(history: any) {\r\n    this._history = history\r\n  }\r\n\r\n  setToken(access_token: string) {\r\n    this._token = access_token\r\n  }\r\n  token() {\r\n    return this._token\r\n  }\r\n  async login(email: string, password: string) {\r\n    AuthService.login(email, password)\r\n      .then((response) => {\r\n        if (response.data) {\r\n          localStorage.setItem(\"token\", response.data.tokens.access)\r\n          this.setAuth(true)\r\n          this.setUser(response.data.user)\r\n          this._history.push(HOME_ROUTE)\r\n        } else {\r\n          this._history.push(\"/error/Ошибка авторизации: неверный ответ API-сервера\")\r\n        }\r\n      })\r\n      .catch((reason) => {\r\n        this._history.push(\"/error/Auth1:\" + reason.message)\r\n      })\r\n  }\r\n  async registration(user: IRegistration) {\r\n    try {\r\n      await AuthService.registration(user)\r\n      this._history.push(\r\n        \"/message/Ваша заявка направлена администратору ресурса для активации. Письмо с результатом, будет выслано на Ваш email\"\r\n      )\r\n    } catch (e: any) {\r\n      this._history.push(\"/error/\" + e.message)\r\n    }\r\n  }\r\n  async pwd_renew(user: IPassRenew) {\r\n    try {\r\n      await AuthService.pwd_renew(user)\r\n      this._history.push(\"/message/Пароль был успешно изменен\")\r\n    } catch (e: any) {\r\n      this._history.push(\"/error/\" + e.message)\r\n      return false\r\n    }\r\n  }\r\n  async renew_link(email: string) {\r\n    try {\r\n      await AuthService.renew_link(email)\r\n      this._history.push(\"/message/Вам в почту направлено письмо, со ссылкой на страницу изменения пароля\")\r\n    } catch (e: any) {\r\n      this._history.push(\"/error/\" + e.message)\r\n      return false\r\n    }\r\n  }\r\n  async logout() {\r\n    try {\r\n      await AuthService.logout()\r\n      this.setAuth(false)\r\n      localStorage.removeItem(\"token\")\r\n      this.setToken(\"\")\r\n      this.setUser({} as IUser)\r\n      this._userInfo = undefined\r\n      this._history.push(LOGIN_ROUTE)\r\n    } catch (e: any) {\r\n      this._history.push(\"/error/\" + e.message)\r\n    }\r\n  }\r\n  async checkAuth() {\r\n    try {\r\n      this.setLoading(true)\r\n      const response = await axios.get<AuthResponse>(`${API_URL}auth/refresh`, { withCredentials: true })\r\n      localStorage.setItem(\"token\", response.data.tokens.access)\r\n      this.setToken(response.data.tokens.access)\r\n      this.setAuth(true)\r\n      this.setUser(response.data.user)\r\n    } catch (e: any) {\r\n      if (e.message?.includes(\"401\")) {\r\n        this._isAuth = false\r\n        this._token = \"\"\r\n        localStorage.removeItem(\"token\")\r\n        this._user = {} as IUser\r\n        this._history.push(LOGIN_ROUTE)\r\n      } else this._history.push(\"/error/Auth2:\" + e.message)\r\n    } finally {\r\n      this.setLoading(false)\r\n    }\r\n  }\r\n  async getUserInfo(id: number) {\r\n    if (id === undefined) return false\r\n    try {\r\n      this.setLoading(true)\r\n      const response = await UsersService.getUser(id)\r\n      return response.data\r\n    } catch (e: any) {\r\n      this._history.push(\"/error/Auth3:\" + e.message)\r\n    } finally {\r\n      this.setLoading(false)\r\n    }\r\n  }\r\n  history() {\r\n    return this._history\r\n  }\r\n  get userInfo() {\r\n    if (this._userInfo) return this._userInfo\r\n    else if (this._user.id)\r\n      this.getUserInfo(this._user.id).then((response) => {\r\n        if (response) this._userInfo = response\r\n        else this._userInfo = undefined\r\n      })\r\n    return null\r\n  }\r\n}\r\n","var sax = require('sax');\r\nvar expat /*= require('node-expat');*/ = { on: function () { }, parse: function () { } };\r\nvar helper = require('./options-helper');\r\nvar isArray = require('./array-helper').isArray;\r\n\r\nvar options;\r\nvar pureJsParser = true;\r\nvar currentElement;\r\n\r\nfunction validateOptions(userOptions) {\r\n  options = helper.copyOptions(userOptions);\r\n  helper.ensureFlagExists('ignoreDeclaration', options);\r\n  helper.ensureFlagExists('ignoreInstruction', options);\r\n  helper.ensureFlagExists('ignoreAttributes', options);\r\n  helper.ensureFlagExists('ignoreText', options);\r\n  helper.ensureFlagExists('ignoreComment', options);\r\n  helper.ensureFlagExists('ignoreCdata', options);\r\n  helper.ensureFlagExists('ignoreDoctype', options);\r\n  helper.ensureFlagExists('compact', options);\r\n  helper.ensureFlagExists('alwaysChildren', options);\r\n  helper.ensureFlagExists('addParent', options);\r\n  helper.ensureFlagExists('trim', options);\r\n  helper.ensureFlagExists('nativeType', options);\r\n  helper.ensureFlagExists('nativeTypeAttributes', options);\r\n  helper.ensureFlagExists('sanitize', options);\r\n  helper.ensureFlagExists('instructionHasAttributes', options);\r\n  helper.ensureFlagExists('captureSpacesBetweenElements', options);\r\n  helper.ensureAlwaysArrayExists(options);\r\n  helper.ensureKeyExists('declaration', options);\r\n  helper.ensureKeyExists('instruction', options);\r\n  helper.ensureKeyExists('attributes', options);\r\n  helper.ensureKeyExists('text', options);\r\n  helper.ensureKeyExists('comment', options);\r\n  helper.ensureKeyExists('cdata', options);\r\n  helper.ensureKeyExists('doctype', options);\r\n  helper.ensureKeyExists('type', options);\r\n  helper.ensureKeyExists('name', options);\r\n  helper.ensureKeyExists('elements', options);\r\n  helper.ensureKeyExists('parent', options);\r\n  helper.checkFnExists('doctype', options);\r\n  helper.checkFnExists('instruction', options);\r\n  helper.checkFnExists('cdata', options);\r\n  helper.checkFnExists('comment', options);\r\n  helper.checkFnExists('text', options);\r\n  helper.checkFnExists('instructionName', options);\r\n  helper.checkFnExists('elementName', options);\r\n  helper.checkFnExists('attributeName', options);\r\n  helper.checkFnExists('attributeValue', options);\r\n  helper.checkFnExists('attributes', options);\r\n  return options;\r\n}\r\n\r\nfunction nativeType(value) {\r\n  var nValue = Number(value);\r\n  if (!isNaN(nValue)) {\r\n    return nValue;\r\n  }\r\n  var bValue = value.toLowerCase();\r\n  if (bValue === 'true') {\r\n    return true;\r\n  } else if (bValue === 'false') {\r\n    return false;\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction addField(type, value) {\r\n  var key;\r\n  if (options.compact) {\r\n    if (\r\n      !currentElement[options[type + 'Key']] &&\r\n      (isArray(options.alwaysArray) ? options.alwaysArray.indexOf(options[type + 'Key']) !== -1 : options.alwaysArray)\r\n    ) {\r\n      currentElement[options[type + 'Key']] = [];\r\n    }\r\n    if (currentElement[options[type + 'Key']] && !isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']] = [currentElement[options[type + 'Key']]];\r\n    }\r\n    if (type + 'Fn' in options && typeof value === 'string') {\r\n      value = options[type + 'Fn'](value, currentElement);\r\n    }\r\n    if (type === 'instruction' && ('instructionFn' in options || 'instructionNameFn' in options)) {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          if ('instructionFn' in options) {\r\n            value[key] = options.instructionFn(value[key], key, currentElement);\r\n          } else {\r\n            var temp = value[key];\r\n            delete value[key];\r\n            value[options.instructionNameFn(key, temp, currentElement)] = temp;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']].push(value);\r\n    } else {\r\n      currentElement[options[type + 'Key']] = value;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    var element = {};\r\n    element[options.typeKey] = type;\r\n    if (type === 'instruction') {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          break;\r\n        }\r\n      }\r\n      element[options.nameKey] = 'instructionNameFn' in options ? options.instructionNameFn(key, value, currentElement) : key;\r\n      if (options.instructionHasAttributes) {\r\n        element[options.attributesKey] = value[key][options.attributesKey];\r\n        if ('instructionFn' in options) {\r\n          element[options.attributesKey] = options.instructionFn(element[options.attributesKey], key, currentElement);\r\n        }\r\n      } else {\r\n        if ('instructionFn' in options) {\r\n          value[key] = options.instructionFn(value[key], key, currentElement);\r\n        }\r\n        element[options.instructionKey] = value[key];\r\n      }\r\n    } else {\r\n      if (type + 'Fn' in options) {\r\n        value = options[type + 'Fn'](value, currentElement);\r\n      }\r\n      element[options[type + 'Key']] = value;\r\n    }\r\n    if (options.addParent) {\r\n      element[options.parentKey] = currentElement;\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n}\r\n\r\nfunction manipulateAttributes(attributes) {\r\n  if ('attributesFn' in options && attributes) {\r\n    attributes = options.attributesFn(attributes, currentElement);\r\n  }\r\n  if ((options.trim || 'attributeValueFn' in options || 'attributeNameFn' in options || options.nativeTypeAttributes) && attributes) {\r\n    var key;\r\n    for (key in attributes) {\r\n      if (attributes.hasOwnProperty(key)) {\r\n        if (options.trim) attributes[key] = attributes[key].trim();\r\n        if (options.nativeTypeAttributes) {\r\n          attributes[key] = nativeType(attributes[key]);\r\n        }\r\n        if ('attributeValueFn' in options) attributes[key] = options.attributeValueFn(attributes[key], key, currentElement);\r\n        if ('attributeNameFn' in options) {\r\n          var temp = attributes[key];\r\n          delete attributes[key];\r\n          attributes[options.attributeNameFn(key, attributes[key], currentElement)] = temp;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return attributes;\r\n}\r\n\r\nfunction onInstruction(instruction) {\r\n  var attributes = {};\r\n  if (instruction.body && (instruction.name.toLowerCase() === 'xml' || options.instructionHasAttributes)) {\r\n    var attrsRegExp = /([\\w:-]+)\\s*=\\s*(?:\"([^\"]*)\"|'([^']*)'|(\\w+))\\s*/g;\r\n    var match;\r\n    while ((match = attrsRegExp.exec(instruction.body)) !== null) {\r\n      attributes[match[1]] = match[2] || match[3] || match[4];\r\n    }\r\n    attributes = manipulateAttributes(attributes);\r\n  }\r\n  if (instruction.name.toLowerCase() === 'xml') {\r\n    if (options.ignoreDeclaration) {\r\n      return;\r\n    }\r\n    currentElement[options.declarationKey] = {};\r\n    if (Object.keys(attributes).length) {\r\n      currentElement[options.declarationKey][options.attributesKey] = attributes;\r\n    }\r\n    if (options.addParent) {\r\n      currentElement[options.declarationKey][options.parentKey] = currentElement;\r\n    }\r\n  } else {\r\n    if (options.ignoreInstruction) {\r\n      return;\r\n    }\r\n    if (options.trim) {\r\n      instruction.body = instruction.body.trim();\r\n    }\r\n    var value = {};\r\n    if (options.instructionHasAttributes && Object.keys(attributes).length) {\r\n      value[instruction.name] = {};\r\n      value[instruction.name][options.attributesKey] = attributes;\r\n    } else {\r\n      value[instruction.name] = instruction.body;\r\n    }\r\n    addField('instruction', value);\r\n  }\r\n}\r\n\r\nfunction onStartElement(name, attributes) {\r\n  var element;\r\n  if (typeof name === 'object') {\r\n    attributes = name.attributes;\r\n    name = name.name;\r\n  }\r\n  attributes = manipulateAttributes(attributes);\r\n  if ('elementNameFn' in options) {\r\n    name = options.elementNameFn(name, currentElement);\r\n  }\r\n  if (options.compact) {\r\n    element = {};\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = {};\r\n      var key;\r\n      for (key in attributes) {\r\n        if (attributes.hasOwnProperty(key)) {\r\n          element[options.attributesKey][key] = attributes[key];\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      !(name in currentElement) &&\r\n      (isArray(options.alwaysArray) ? options.alwaysArray.indexOf(name) !== -1 : options.alwaysArray)\r\n    ) {\r\n      currentElement[name] = [];\r\n    }\r\n    if (currentElement[name] && !isArray(currentElement[name])) {\r\n      currentElement[name] = [currentElement[name]];\r\n    }\r\n    if (isArray(currentElement[name])) {\r\n      currentElement[name].push(element);\r\n    } else {\r\n      currentElement[name] = element;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    element = {};\r\n    element[options.typeKey] = 'element';\r\n    element[options.nameKey] = name;\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = attributes;\r\n    }\r\n    if (options.alwaysChildren) {\r\n      element[options.elementsKey] = [];\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n  element[options.parentKey] = currentElement; // will be deleted in onEndElement() if !options.addParent\r\n  currentElement = element;\r\n}\r\n\r\nfunction onText(text) {\r\n  if (options.ignoreText) {\r\n    return;\r\n  }\r\n  if (!text.trim() && !options.captureSpacesBetweenElements) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    text = text.trim();\r\n  }\r\n  if (options.nativeType) {\r\n    text = nativeType(text);\r\n  }\r\n  if (options.sanitize) {\r\n    text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n  }\r\n  addField('text', text);\r\n}\r\n\r\nfunction onComment(comment) {\r\n  if (options.ignoreComment) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    comment = comment.trim();\r\n  }\r\n  addField('comment', comment);\r\n}\r\n\r\nfunction onEndElement(name) {\r\n  var parentElement = currentElement[options.parentKey];\r\n  if (!options.addParent) {\r\n    delete currentElement[options.parentKey];\r\n  }\r\n  currentElement = parentElement;\r\n}\r\n\r\nfunction onCdata(cdata) {\r\n  if (options.ignoreCdata) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    cdata = cdata.trim();\r\n  }\r\n  addField('cdata', cdata);\r\n}\r\n\r\nfunction onDoctype(doctype) {\r\n  if (options.ignoreDoctype) {\r\n    return;\r\n  }\r\n  doctype = doctype.replace(/^ /, '');\r\n  if (options.trim) {\r\n    doctype = doctype.trim();\r\n  }\r\n  addField('doctype', doctype);\r\n}\r\n\r\nfunction onError(error) {\r\n  error.note = error; //console.error(error);\r\n}\r\n\r\nmodule.exports = function (xml, userOptions) {\r\n\r\n  var parser = pureJsParser ? sax.parser(true, {}) : parser = new expat.Parser('UTF-8');\r\n  var result = {};\r\n  currentElement = result;\r\n\r\n  options = validateOptions(userOptions);\r\n\r\n  if (pureJsParser) {\r\n    parser.opt = {strictEntities: true};\r\n    parser.onopentag = onStartElement;\r\n    parser.ontext = onText;\r\n    parser.oncomment = onComment;\r\n    parser.onclosetag = onEndElement;\r\n    parser.onerror = onError;\r\n    parser.oncdata = onCdata;\r\n    parser.ondoctype = onDoctype;\r\n    parser.onprocessinginstruction = onInstruction;\r\n  } else {\r\n    parser.on('startElement', onStartElement);\r\n    parser.on('text', onText);\r\n    parser.on('comment', onComment);\r\n    parser.on('endElement', onEndElement);\r\n    parser.on('error', onError);\r\n    //parser.on('startCdata', onStartCdata);\r\n    //parser.on('endCdata', onEndCdata);\r\n    //parser.on('entityDecl', onEntityDecl);\r\n  }\r\n\r\n  if (pureJsParser) {\r\n    parser.write(xml).close();\r\n  } else {\r\n    if (!parser.parse(xml)) {\r\n      throw new Error('XML parsing error: ' + parser.getError());\r\n    }\r\n  }\r\n\r\n  if (result[options.elementsKey]) {\r\n    var temp = result[options.elementsKey];\r\n    delete result[options.elementsKey];\r\n    result[options.elementsKey] = temp;\r\n    delete result.text;\r\n  }\r\n\r\n  return result;\r\n\r\n};\r\n",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n","module.exports = {\r\n\r\n  isArray: function(value) {\r\n    if (Array.isArray) {\r\n      return Array.isArray(value);\r\n    }\r\n    // fallback for older browsers like  IE 8\r\n    return Object.prototype.toString.call( value ) === '[object Array]';\r\n  }\r\n\r\n};\r\n","var isArray = require('./array-helper').isArray;\r\n\r\nmodule.exports = {\r\n\r\n  copyOptions: function (options) {\r\n    var key, copy = {};\r\n    for (key in options) {\r\n      if (options.hasOwnProperty(key)) {\r\n        copy[key] = options[key];\r\n      }\r\n    }\r\n    return copy;\r\n  },\r\n\r\n  ensureFlagExists: function (item, options) {\r\n    if (!(item in options) || typeof options[item] !== 'boolean') {\r\n      options[item] = false;\r\n    }\r\n  },\r\n\r\n  ensureSpacesExists: function (options) {\r\n    if (!('spaces' in options) || (typeof options.spaces !== 'number' && typeof options.spaces !== 'string')) {\r\n      options.spaces = 0;\r\n    }\r\n  },\r\n\r\n  ensureAlwaysArrayExists: function (options) {\r\n    if (!('alwaysArray' in options) || (typeof options.alwaysArray !== 'boolean' && !isArray(options.alwaysArray))) {\r\n      options.alwaysArray = false;\r\n    }\r\n  },\r\n\r\n  ensureKeyExists: function (key, options) {\r\n    if (!(key + 'Key' in options) || typeof options[key + 'Key'] !== 'string') {\r\n      options[key + 'Key'] = options.compact ? '_' + key : key;\r\n    }\r\n  },\r\n\r\n  checkFnExists: function (key, options) {\r\n    return key + 'Fn' in options;\r\n  }\r\n\r\n};\r\n","var helper = require('./options-helper');\r\nvar xml2js = require('./xml2js');\r\n\r\nfunction validateOptions (userOptions) {\r\n  var options = helper.copyOptions(userOptions);\r\n  helper.ensureSpacesExists(options);\r\n  return options;\r\n}\r\n\r\nmodule.exports = function(xml, userOptions) {\r\n  var options, js, json, parentKey;\r\n  options = validateOptions(userOptions);\r\n  js = xml2js(xml, options);\r\n  parentKey = 'compact' in options && options.compact ? '_parent' : 'parent';\r\n  // parentKey = ptions.compact ? '_parent' : 'parent'; // consider this\r\n  if ('addParent' in options && options.addParent) {\r\n    json = JSON.stringify(js, function (k, v) { return k === parentKey? '_' : v; }, options.spaces);\r\n  } else {\r\n    json = JSON.stringify(js, null, options.spaces);\r\n  }\r\n  return json.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CommentElement = ({ comment, theme, indentation }) => {\n    return (\n        <div style={{ color: theme.commentColor }}>\n            {`${indentation}<!-- ${comment} -->`}\n        </div>\n    );\n}\n\nCommentElement.propTypes = {\n    comment: PropTypes.string.isRequired,\n    theme: PropTypes.object.isRequired,\n    indentation: PropTypes.string.isRequired,\n}\n\nexport default CommentElement;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst InstructionElement = ({ name, instruction, theme, indentation }) => {\n    return (\n        <div>\n            <span style={{ color: theme.separatorColor }}>{`${indentation}<?`}</span>\n            <span style={{ color: theme.tagColor }}>{name}</span>\n            <span style={{ color: theme.attributeKeyColor }}>{` ${instruction}`}</span>\n            <span style={{ color: theme.separatorColor }}>{`?>`}</span>\n        </div>);\n}\n\nInstructionElement.propTypes = {\n    name: PropTypes.string.isRequired,\n    instruction: PropTypes.string.isRequired,\n    theme: PropTypes.object.isRequired,\n    indentation: PropTypes.string.isRequired,\n}\n\nexport default InstructionElement;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextElement = ({ text, theme }) => {\n    const overflow = theme.overflowBreak ? { overflowWrap: 'break-word', whiteSpace: 'normal' } : {} \n    return (\n        <span style={{ color: theme.textColor,  ...overflow }}>\n            {text}\n        </span>\n    );\n}\n\nTextElement.propTypes = {\n    text: PropTypes.string.isRequired,\n    theme: PropTypes.object.isRequired,\n}\n\nexport default TextElement;","import React, { memo, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Attributes from './attributes';\nimport CdataElement from './cdata-el';\nimport CommentElement from './comment-el';\nimport InstructionElement from './instruction-el';\nimport TextElement from './text-el';\n\nfunction getIndentationString(size) {\n    return new Array(size + 1).join(\" \");\n}\n\nfunction isTextElement(elements) {\n    return elements.length === 1 && elements[0].type === \"text\";\n}\n\nfunction getSelectedText() {\n    if (window.getSelection) {\n        return window.getSelection().toString();\n    } else if (document.selection) {\n        return document.selection.createRange().text;\n    }\n    return '';\n}\n\nfunction onSelectText(e) {\n    e.stopPropagation()\n}\n\nconst Element = memo(({ name, elements, attributes, theme, indentation, indentSize, collapsible }) => {\n    const [collapsed, toggleCollapse] = useState(false);\n\n    const cursor = (collapsible && elements) ? 'pointer' : 'text';\n\n    return (\n        <div\n            style={{ whiteSpace: 'pre', cursor }}\n            onClick={(event) => {\n                if(!collapsible || !elements) {\n                    return;\n                }\n                event.stopPropagation();\n                event.preventDefault();\n\n                if(getSelectedText() === '') {\n                    toggleCollapse(!collapsed);\n                }\n\n            }}\n        >\n            <span style={{ color: theme.separatorColor }}>{`${indentation}<`}</span>\n            <span style={{ color: theme.tagColor }}>{name}</span>\n            {!collapsed && <Attributes attributes={attributes} theme={theme} /> }\n            <span style={{ color: theme.separatorColor }}>{(elements ? '>' : '/>')}</span>\n            {elements && !collapsed && <span onClick={onSelectText}><Elements elements={elements} theme={theme} indentation={indentation + getIndentationString(indentSize)} indentSize={indentSize} collapsible={collapsible} /></span>}\n            {elements && <span style={{ color: theme.separatorColor }}>{`${(isTextElement(elements) || collapsed) ? \"\" : indentation}</`}</span>}\n            {elements && <span style={{ color: theme.tagColor }}>{name}</span>}\n            {elements && <span style={{ color: theme.separatorColor }}>{\">\"}</span>}\n        </div>\n    );\n});\n\nElement.propTypes = {\n    name: PropTypes.string.isRequired,\n    elements: PropTypes.arrayOf(PropTypes.object),\n    attributes: PropTypes.object,\n    theme: PropTypes.object.isRequired,\n    indentation: PropTypes.string.isRequired,\n    indentSize: PropTypes.number.isRequired,\n    collapsible: PropTypes.bool.isRequired,\n}\n\nconst getElement = (theme, indentation, indentSize, collapsible) => (element, index) => {\n    switch (element.type) {\n        case \"text\":\n            return <TextElement key={`el-${index}`} text={element.text} theme={theme} />;\n        case \"element\":\n            return <Element key={`el-${index}`} name={element.name} elements={element.elements} attributes={element.attributes} theme={theme} indentation={indentation} indentSize={indentSize} collapsible={collapsible} />\n        case \"comment\":\n            return <CommentElement key={`el-${index}`} comment={element.comment} theme={theme} indentation={indentation} />;\n        case \"cdata\":\n            return <CdataElement key={`el-${index}`} cdata={element.cdata} theme={theme} indentation={indentation} />;\n        case \"instruction\":\n            return <InstructionElement key={`el-${index}`} instruction={element.instruction} name={element.name} theme={theme} indentation={indentation} />;\n        default:\n            return null;\n    }\n}\n\nconst Elements = memo(({ elements, theme, indentation, indentSize, collapsible }) => {\n    return elements.map(getElement(theme, indentation, indentSize, collapsible));\n});\n\nElements.propTypes = {\n    elements: PropTypes.arrayOf(PropTypes.object),\n    theme: PropTypes.object.isRequired,\n    indentation: PropTypes.string.isRequired,\n    indentSize: PropTypes.number.isRequired,\n    collapsible: PropTypes.bool.isRequired,\n}\n\nexport default Elements;\n","import React from 'react';\nimport convert from 'xml-js';\nimport PropTypes from 'prop-types';\n\nimport DeclarationElement from './declaration-el';\nimport Elements from './elements';\n\nconst defaultIndentSize = 2;\nconst defaultTheme = {\n  tagColor: '#d43900',\n  textColor: '#333',\n  attributeKeyColor: '#2a7ab0',\n  attributeValueColor: '#008000',\n  separatorColor: '#333',\n  commentColor: '#aaa',\n  cdataColor: '#1d781d',\n  overflowBreak: false,\n};\n\nconst defaultInvalidXml = (<div>Invalid XML!</div>);\n\nconst XMLViewer = ({ xml, theme, indentSize, invalidXml, collapsible, ...props }) => {\n  let json = null;\n  const customTheme = { ...defaultTheme, ...theme };\n\n  try {\n    json = convert.xml2js(xml, { compact: false, spaces: 0 });\n    if (!Array.isArray(json.elements)) {\n      return invalidXml;\n    }\n  } catch (e) {\n    return invalidXml;\n  }\n\n  return (\n    <div {...props}>\n      {json.declaration && <DeclarationElement theme={customTheme} attributes={json.declaration.attributes} />}\n      <Elements elements={json.elements} theme={customTheme} indentSize={indentSize} indentation=\"\" collapsible={collapsible} />\n    </div>\n  );\n}\n\nXMLViewer.propTypes = {\n    xml: PropTypes.string.isRequired,\n    theme: PropTypes.object,\n    indentSize: PropTypes.number,\n    invalidXml: PropTypes.node,\n    collapsible: PropTypes.bool,\n}\n\nXMLViewer.defaultProps = {\n  theme: {},\n  indentSize: 2,\n  invalidXml: defaultInvalidXml,\n  collapsible: false,\n}\n\nexport default XMLViewer;\n\n"],"sourceRoot":""}